<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:33:21.143" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.739" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:21.748" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:22.942" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:21.738" endtime="20201110 08:33:22.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.945" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:22.944" endtime="20201110 08:33:22.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.736" endtime="20201110 08:33:22.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.948" endtime="20201110 08:33:23.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.947" endtime="20201110 08:33:23.204"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.217" endtime="20201110 08:33:23.231"></status>
</kw>
<msg timestamp="20201110 08:33:23.232" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.215" endtime="20201110 08:33:23.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.233" endtime="20201110 08:33:23.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.238" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:23.236" endtime="20201110 08:33:23.238"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:23.213" endtime="20201110 08:33:23.239"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:23.211" endtime="20201110 08:33:23.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.209" endtime="20201110 08:33:23.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:23.244" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:23.243" endtime="20201110 08:33:23.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.241" endtime="20201110 08:33:23.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.209" endtime="20201110 08:33:23.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.208" endtime="20201110 08:33:23.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.247" endtime="20201110 08:33:23.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.206" endtime="20201110 08:33:23.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.249" endtime="20201110 08:33:23.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.205" endtime="20201110 08:33:23.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.735" endtime="20201110 08:33:23.252"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.258" endtime="20201110 08:33:23.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.257" endtime="20201110 08:33:23.278"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.292" endtime="20201110 08:33:23.307"></status>
</kw>
<msg timestamp="20201110 08:33:23.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.291" endtime="20201110 08:33:23.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.310" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.308" endtime="20201110 08:33:23.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.313" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:23.311" endtime="20201110 08:33:23.313"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:23.288" endtime="20201110 08:33:23.314"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:23.285" endtime="20201110 08:33:23.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.283" endtime="20201110 08:33:23.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:23.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:23.318" endtime="20201110 08:33:23.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.316" endtime="20201110 08:33:23.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.282" endtime="20201110 08:33:23.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.282" endtime="20201110 08:33:23.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.320" endtime="20201110 08:33:23.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.280" endtime="20201110 08:33:23.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.279" endtime="20201110 08:33:23.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.255" endtime="20201110 08:33:23.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.331" endtime="20201110 08:33:23.341"></status>
</kw>
<msg timestamp="20201110 08:33:23.342" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.328" endtime="20201110 08:33:23.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.344" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.343" endtime="20201110 08:33:23.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.345" endtime="20201110 08:33:23.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.326" endtime="20201110 08:33:23.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.324" endtime="20201110 08:33:23.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.352" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:33:23.351" endtime="20201110 08:33:23.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.354" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:33:23.353" endtime="20201110 08:33:23.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.349" endtime="20201110 08:33:23.355"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:23.252" endtime="20201110 08:33:23.356" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:21.253" endtime="20201110 08:33:23.358"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.410" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:23.418" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:24.616" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:23.408" endtime="20201110 08:33:24.617"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.620" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:24.618" endtime="20201110 08:33:24.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.407" endtime="20201110 08:33:24.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.623" endtime="20201110 08:33:24.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.621" endtime="20201110 08:33:24.890"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.903" endtime="20201110 08:33:24.917"></status>
</kw>
<msg timestamp="20201110 08:33:24.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.901" endtime="20201110 08:33:24.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.919" endtime="20201110 08:33:24.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:24.922" endtime="20201110 08:33:24.924"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:24.899" endtime="20201110 08:33:24.925"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:24.897" endtime="20201110 08:33:24.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.895" endtime="20201110 08:33:24.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:24.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:24.929" endtime="20201110 08:33:24.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.927" endtime="20201110 08:33:24.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.894" endtime="20201110 08:33:24.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.894" endtime="20201110 08:33:24.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.931" endtime="20201110 08:33:24.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.893" endtime="20201110 08:33:24.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.934" endtime="20201110 08:33:24.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.891" endtime="20201110 08:33:24.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.406" endtime="20201110 08:33:24.937"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.943" endtime="20201110 08:33:24.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.941" endtime="20201110 08:33:24.963"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.977" endtime="20201110 08:33:24.991"></status>
</kw>
<msg timestamp="20201110 08:33:24.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.975" endtime="20201110 08:33:24.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.995" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.993" endtime="20201110 08:33:24.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.998" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:24.996" endtime="20201110 08:33:24.998"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:24.973" endtime="20201110 08:33:24.999"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:24.970" endtime="20201110 08:33:25.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.969" endtime="20201110 08:33:25.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:25.004" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:25.003" endtime="20201110 08:33:25.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.001" endtime="20201110 08:33:25.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.968" endtime="20201110 08:33:25.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.967" endtime="20201110 08:33:25.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.006" endtime="20201110 08:33:25.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.966" endtime="20201110 08:33:25.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.964" endtime="20201110 08:33:25.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.939" endtime="20201110 08:33:25.008"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:25.010" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.018" endtime="20201110 08:33:25.030"></status>
</kw>
<msg timestamp="20201110 08:33:25.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.017" endtime="20201110 08:33:25.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.035" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.032" endtime="20201110 08:33:25.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.037" endtime="20201110 08:33:25.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.014" endtime="20201110 08:33:25.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.012" endtime="20201110 08:33:25.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.055" endtime="20201110 08:33:25.327"></status>
</kw>
<msg timestamp="20201110 08:33:25.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066569375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066577472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.051" endtime="20201110 08:33:25.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066569375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066577472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.332" endtime="20201110 08:33:25.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.340" endtime="20201110 08:33:25.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.046" endtime="20201110 08:33:25.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.042" endtime="20201110 08:33:25.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.349" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:25.347" endtime="20201110 08:33:25.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.353" level="INFO">VALUE: [{'time': 0.066569375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066577472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.066582431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.066587528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000009455e-06, 'source_diff': 5.097000000009455e-06}, {'time': 0.066591556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999989262e-06, 'source_diff': 4.027999999989262e-06}, {'time': 0.066594778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.066604028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.066611681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.653000000010235e-06, 'source_diff': 7.653000000010235e-06}, {'time': 0.066613292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.066623097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.066629667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.066636917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.066646028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999992209e-06, 'source_diff': 9.110999999992209e-06}, {'time': 0.06664925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.066653944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.69400000001341e-06, 'source_diff': 4.69400000001341e-06}, {'time': 0.066663347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999991168e-06, 'source_diff': 9.402999999991168e-06}, {'time': 0.066671931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.58400000000592e-06, 'source_diff': 8.58400000000592e-06}, {'time': 0.066673944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0129999999951576e-06, 'source_diff': 2.0129999999951576e-06}, {'time': 0.066677444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.066686681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236999999995277e-06, 'source_diff': 9.236999999995277e-06}, {'time': 0.066692056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.066698764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.707999999994163e-06, 'source_diff': 6.707999999994163e-06}, {'time': 0.066700361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.066707625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2640000000068206e-06, 'source_diff': 7.2640000000068206e-06}, {'time': 0.066714181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5559999999909024e-06, 'source_diff': 6.5559999999909024e-06}, {'time': 0.066716611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4299999999977118e-06, 'source_diff': 2.4299999999977118e-06}, {'time': 0.066718208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.066723347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.066728819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999992483e-06, 'source_diff': 5.471999999992483e-06}, {'time': 0.066738736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.917000000012055e-06, 'source_diff': 9.917000000012055e-06}, {'time': 0.066746417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.066749, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.066757917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916999999997177e-06, 'source_diff': 8.916999999997177e-06}, {'time': 0.066759667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.066768653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.066776583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.066785958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000005906e-06, 'source_diff': 9.375000000005906e-06}, {'time': 0.06679, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999995771e-06, 'source_diff': 4.041999999995771e-06}, {'time': 0.066798847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999992389e-06, 'source_diff': 8.846999999992389e-06}, {'time': 0.066801792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9450000000041943e-06, 'source_diff': 2.9450000000041943e-06}, {'time': 0.066809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.915999999996703e-06, 'source_diff': 7.915999999996703e-06}, {'time': 0.066814542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.834000000009109e-06, 'source_diff': 4.834000000009109e-06}, {'time': 0.066818444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.066825403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.066834931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.066843681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.066850236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999991429e-06, 'source_diff': 6.554999999991429e-06}, {'time': 0.066854931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695000000012883e-06, 'source_diff': 4.695000000012883e-06}, {'time': 0.066860056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.124999999994717e-06, 'source_diff': 5.124999999994717e-06}, {'time': 0.066865653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:25.350" endtime="20201110 08:33:25.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.345" endtime="20201110 08:33:25.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:25.368" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:25.355" endtime="20201110 08:33:25.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.372" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:25.371" endtime="20201110 08:33:25.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.376" level="INFO">VALUE: {'eventsource_diff': [0, 8.096999999998578e-06, 4.9589999999988255e-06, 5.097000000009455e-06, 4.027999999989262e-06, 3.2219999999971716e-06, 9.250000000002312e-06, 7.653000000010235e-06, 1.6109999999985858e-06, 9.805000000001618e-06, 6.569999999997411e-06, 7.250000000000312e-06, 9.110999999992209e-06, 3.2219999999971716e-06, 4.69400000001341e-06, 9.402999999991168e-06, 8.58400000000592e-06, 2.0129999999951576e-06, 3.5000000000035003e-06, 9.236999999995277e-06, 5.375000000001906e-06, 6.707999999994163e-06, 1.5970000000059548e-06, 7.2640000000068206e-06, 6.5559999999909024e-06, 2.4299999999977118e-06, 1.5970000000059548e-06, 5.139000000001226e-06, 5.471999999992483e-06, 9.917000000012055e-06, 7.680999999995497e-06, 2.583000000000446e-06, 8.916999999997177e-06, 1.7499999999948113e-06, 8.986000000002492e-06, 7.930000000003212e-06, 9.375000000005906e-06, 4.041999999995771e-06, 8.846999999992389e-06, 2.9450000000041943e-06, 7.915999999996703e-06, 4.834000000009109e-06, 3.902000000000072e-06, 6.959000000000826e-06, 9.527999999994763e-06, 8.750000000001812e-06, 6.554999999991429e-06, 4.695000000012883e-06, 5.124999999994717e-06, 5.596999999996077e-06], 'diff': [0, 8.096999999998578e-06, 4.9589999999988255e-06, 5.097000000009455e-06, 4.027999999989262e-06, 3.2219999999971716e-06, 9.250000000002312e-06, 7.653000000010235e-06, 1.6109999999985858e-06, 9.805000000001618e-06, 6.569999999997411e-06, 7.250000000000312e-06, 9.110999999992209e-06, 3.2219999999971716e-06, 4.69400000001341e-06, 9.402999999991168e-06, 8.58400000000592e-06, 2.0129999999951576e-06, 3.5000000000035003e-06, 9.236999999995277e-06, 5.375000000001906e-06, 6.707999999994163e-06, 1.5970000000059548e-06, 7.2640000000068206e-06, 6.5559999999909024e-06, 2.4299999999977118e-06, 1.5970000000059548e-06, 5.139000000001226e-06, 5.471999999992483e-06, 9.917000000012055e-06, 7.680999999995497e-06, 2.583000000000446e-06, 8.916999999997177e-06, 1.7499999999948113e-06, 8.986000000002492e-06, 7.930000000003212e-06, 9.375000000005906e-06, 4.041999999995771e-06, 8.846999999992389e-06, 2.9450000000041943e-06, 7.915999999996703e-06, 4.834000000009109e-06, 3.902000000000072e-06, 6.959000000000826e-06, 9.527999999994763e-06, 8.750000000001812e-06, 6.554999999991429e-06, 4.695000000012883e-06, 5.124999999994717e-06, 5.596999999996077e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.066569375, 0.066577472, 0.066582431, 0.066587528, 0.066591556, 0.066594778, 0.066604028, 0.066611681, 0.066613292, 0.066623097, 0.066629667, 0.066636917, 0.066646028, 0.06664925, 0.066653944, 0.066663347, 0.066671931, 0.066673944, 0.066677444, 0.066686681, 0.066692056, 0.066698764, 0.066700361, 0.066707625, 0.066714181, 0.066716611, 0.066718208, 0.066723347, 0.066728819, 0.066738736, 0.066746417, 0.066749, 0.066757917, 0.066759667, 0.066768653, 0.066776583, 0.066785958, 0.06679, 0.066798847, 0.066801792, 0.066809708, 0.066814542, 0.066818444, 0.066825403, 0.066834931, 0.066843681, 0.066850236, 0.066854931, 0.066860056, 0.066865653]}</msg>
<status status="PASS" starttime="20201110 08:33:25.373" endtime="20201110 08:33:25.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.369" endtime="20201110 08:33:25.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.380" level="INFO">${RESULT} = [{'time': 0.066577472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.066587528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:25.378" endtime="20201110 08:33:25.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:25.389" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:25.381" endtime="20201110 08:33:25.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.393" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:25.392" endtime="20201110 08:33:25.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.396" level="INFO">VALUE: [8.096999999998578e-06, 5.097000000009455e-06, 3.2219999999971716e-06, 7.653000000010235e-06, 9.805000000001618e-06, 7.250000000000312e-06, 3.2219999999971716e-06, 9.402999999991168e-06, 2.0129999999951576e-06, 9.236999999995277e-06, 6.707999999994163e-06, 7.2640000000068206e-06, 2.4299999999977118e-06, 5.139000000001226e-06, 9.917000000012055e-06, 2.583000000000446e-06, 1.7499999999948113e-06, 7.930000000003212e-06, 4.041999999995771e-06, 2.9450000000041943e-06, 4.834000000009109e-06, 6.959000000000826e-06, 8.750000000001812e-06, 4.695000000012883e-06, 5.596999999996077e-06]</msg>
<status status="PASS" starttime="20201110 08:33:25.395" endtime="20201110 08:33:25.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.390" endtime="20201110 08:33:25.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.399" endtime="20201110 08:33:25.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.403" endtime="20201110 08:33:25.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.401" endtime="20201110 08:33:25.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.397" endtime="20201110 08:33:25.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.011" endtime="20201110 08:33:25.423"></status>
</kw>
<msg timestamp="20201110 08:33:25.424" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.433" endtime="20201110 08:33:25.443"></status>
</kw>
<msg timestamp="20201110 08:33:25.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.431" endtime="20201110 08:33:25.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.444" endtime="20201110 08:33:25.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.447" endtime="20201110 08:33:25.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.427" endtime="20201110 08:33:25.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.426" endtime="20201110 08:33:25.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.456" endtime="20201110 08:33:25.727"></status>
</kw>
<msg timestamp="20201110 08:33:25.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.455" endtime="20201110 08:33:25.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.730" endtime="20201110 08:33:25.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.735" endtime="20201110 08:33:25.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.452" endtime="20201110 08:33:25.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.450" endtime="20201110 08:33:25.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.742" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:25.741" endtime="20201110 08:33:25.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.746" level="INFO">VALUE: [{'time': 0.019706944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.019723569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019725319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019733514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019736708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.019738333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019743417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.019745569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1520000000017914e-06, 'source_diff': 2.1520000000017914e-06}, {'time': 0.019749847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.019759514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.019762458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.019768764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019776556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.019785556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.019793736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019796819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.019804458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.019808889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.019812236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.019818542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019826597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019828736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.019837486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.019839208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019849139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.019856917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.778000000003421e-06, 'source_diff': 7.778000000003421e-06}, {'time': 0.019858667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019860958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.019870736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.01987275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019876778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.019885361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019891528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.019893, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019901361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019903931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.019911319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.388000000000533e-06, 'source_diff': 7.388000000000533e-06}, {'time': 0.019921083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.019930486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.019937458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.019942278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019944403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.019951653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.019958514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019966278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.019968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.290999999998017e-06, 'source_diff': 2.290999999998017e-06}, {'time': 0.019977944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.019980361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.019989681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:25.743" endtime="20201110 08:33:25.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.739" endtime="20201110 08:33:25.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:25.760" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:25.747" endtime="20201110 08:33:25.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.765" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:25.763" endtime="20201110 08:33:25.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.768" level="INFO">VALUE: {'eventsource_diff': [0, 7.777999999999952e-06, 8.846999999999328e-06, 1.7500000000017502e-06, 8.194999999999036e-06, 3.1939999999980317e-06, 1.6250000000016251e-06, 5.0839999999989505e-06, 2.1520000000017914e-06, 4.277999999999921e-06, 9.666999999997927e-06, 2.944000000001251e-06, 6.306000000001061e-06, 7.791999999999522e-06, 8.999999999998592e-06, 8.179999999999993e-06, 3.083000000000946e-06, 7.639000000000257e-06, 4.430999999999186e-06, 3.347000000000766e-06, 6.306000000001061e-06, 8.054999999999868e-06, 2.1389999999982257e-06, 8.750000000001812e-06, 1.7219999999991409e-06, 9.930999999997747e-06, 7.778000000003421e-06, 1.7499999999982807e-06, 2.2910000000014863e-06, 9.777999999998482e-06, 2.01400000000157e-06, 4.027999999999671e-06, 8.582999999999508e-06, 6.166999999997896e-06, 1.4720000000023603e-06, 8.360999999998397e-06, 2.5700000000003498e-06, 7.388000000000533e-06, 9.763999999998912e-06, 9.403000000001577e-06, 6.972000000000922e-06, 4.8199999999991305e-06, 2.1249999999986557e-06, 7.250000000000312e-06, 6.861000000000367e-06, 7.764000000000382e-06, 2.290999999998017e-06, 9.375000000002437e-06, 2.4169999999976155e-06, 9.320000000000161e-06], 'diff': [0, 7.777999999999952e-06, 8.846999999999328e-06, 1.7500000000017502e-06, 8.194999999999036e-06, 3.1939999999980317e-06, 1.6250000000016251e-06, 5.0839999999989505e-06, 2.1520000000017914e-06, 4.277999999999921e-06, 9.666999999997927e-06, 2.944000000001251e-06, 6.306000000001061e-06, 7.791999999999522e-06, 8.999999999998592e-06, 8.179999999999993e-06, 3.083000000000946e-06, 7.639000000000257e-06, 4.430999999999186e-06, 3.347000000000766e-06, 6.306000000001061e-06, 8.054999999999868e-06, 2.1389999999982257e-06, 8.750000000001812e-06, 1.7219999999991409e-06, 9.930999999997747e-06, 7.778000000003421e-06, 1.7499999999982807e-06, 2.2910000000014863e-06, 9.777999999998482e-06, 2.01400000000157e-06, 4.027999999999671e-06, 8.582999999999508e-06, 6.166999999997896e-06, 1.4720000000023603e-06, 8.360999999998397e-06, 2.5700000000003498e-06, 7.388000000000533e-06, 9.763999999998912e-06, 9.403000000001577e-06, 6.972000000000922e-06, 4.8199999999991305e-06, 2.1249999999986557e-06, 7.250000000000312e-06, 6.861000000000367e-06, 7.764000000000382e-06, 2.290999999998017e-06, 9.375000000002437e-06, 2.4169999999976155e-06, 9.320000000000161e-06], 'sourcetime': [0.019706944, 0.019714722, 0.019723569, 0.019725319, 0.019733514, 0.019736708, 0.019738333, 0.019743417, 0.019745569, 0.019749847, 0.019759514, 0.019762458, 0.019768764, 0.019776556, 0.019785556, 0.019793736, 0.019796819, 0.019804458, 0.019808889, 0.019812236, 0.019818542, 0.019826597, 0.019828736, 0.019837486, 0.019839208, 0.019849139, 0.019856917, 0.019858667, 0.019860958, 0.019870736, 0.01987275, 0.019876778, 0.019885361, 0.019891528, 0.019893, 0.019901361, 0.019903931, 0.019911319, 0.019921083, 0.019930486, 0.019937458, 0.019942278, 0.019944403, 0.019951653, 0.019958514, 0.019966278, 0.019968569, 0.019977944, 0.019980361, 0.019989681]}</msg>
<status status="PASS" starttime="20201110 08:33:25.766" endtime="20201110 08:33:25.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.761" endtime="20201110 08:33:25.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.773" level="INFO">${RESULT} = [{'time': 0.019714722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.019725319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:25.770" endtime="20201110 08:33:25.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:25.781" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:25.774" endtime="20201110 08:33:25.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.785" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:25.784" endtime="20201110 08:33:25.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.788" level="INFO">VALUE: [7.777999999999952e-06, 1.7500000000017502e-06, 3.1939999999980317e-06, 5.0839999999989505e-06, 4.277999999999921e-06, 2.944000000001251e-06, 7.791999999999522e-06, 8.179999999999993e-06, 7.639000000000257e-06, 3.347000000000766e-06, 8.054999999999868e-06, 8.750000000001812e-06, 9.930999999997747e-06, 1.7499999999982807e-06, 9.777999999998482e-06, 4.027999999999671e-06, 6.166999999997896e-06, 8.360999999998397e-06, 7.388000000000533e-06, 9.403000000001577e-06, 4.8199999999991305e-06, 7.250000000000312e-06, 7.764000000000382e-06, 9.375000000002437e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201110 08:33:25.786" endtime="20201110 08:33:25.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.782" endtime="20201110 08:33:25.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.791" endtime="20201110 08:33:25.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.797" endtime="20201110 08:33:25.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.794" endtime="20201110 08:33:25.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.789" endtime="20201110 08:33:25.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.424" endtime="20201110 08:33:25.821"></status>
</kw>
<msg timestamp="20201110 08:33:25.822" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.836" endtime="20201110 08:33:25.848"></status>
</kw>
<msg timestamp="20201110 08:33:25.848" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.834" endtime="20201110 08:33:25.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.850" endtime="20201110 08:33:25.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.854" endtime="20201110 08:33:25.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.830" endtime="20201110 08:33:25.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.826" endtime="20201110 08:33:25.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.868" endtime="20201110 08:33:26.136"></status>
</kw>
<msg timestamp="20201110 08:33:26.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027400556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027407986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.866" endtime="20201110 08:33:26.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027400556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027407986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.139" endtime="20201110 08:33:26.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.144" endtime="20201110 08:33:26.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.862" endtime="20201110 08:33:26.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.859" endtime="20201110 08:33:26.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.151" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:26.150" endtime="20201110 08:33:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.154" level="INFO">VALUE: [{'time': 0.027400556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027407986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.027413083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.027418722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.027425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.027433486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.027437375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.027445444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.027446903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.027456847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.027459931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.027465028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.027473875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.02747925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.027482597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.027490667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.027493875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.027501181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.027503542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.027510903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.027518556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.027525528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.027531306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.027539, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.027547542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.027556931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.027562972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.027572236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.027576792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.027583361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.027587806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.027597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.027603236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.027605097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.027606708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.027610597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.027617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.027626847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.027634764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.027639986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.027646431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.027653139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.0276585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.027667486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.027673125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.027676333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.027680264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.027682389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.027692056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.027697125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:26.152" endtime="20201110 08:33:26.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.148" endtime="20201110 08:33:26.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:26.170" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:26.157" endtime="20201110 08:33:26.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.174" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:26.173" endtime="20201110 08:33:26.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.178" level="INFO">VALUE: {'eventsource_diff': [0, 7.429999999999243e-06, 5.097000000002516e-06, 5.6389999999982565e-06, 6.570000000000881e-06, 8.193999999999563e-06, 3.888999999999976e-06, 8.068999999999438e-06, 1.459000000002264e-06, 9.943999999997843e-06, 3.0840000000004197e-06, 5.096999999999047e-06, 8.846999999999328e-06, 5.375000000001906e-06, 3.347000000000766e-06, 8.069999999998911e-06, 3.208000000001071e-06, 7.305999999998591e-06, 2.360999999999336e-06, 7.361000000000867e-06, 7.652999999999827e-06, 6.972000000000922e-06, 5.7779999999979514e-06, 7.694000000002532e-06, 8.542000000000272e-06, 9.388999999998537e-06, 6.041000000001767e-06, 9.263999999998412e-06, 4.555999999999311e-06, 6.569000000001407e-06, 4.4449999999987555e-06, 9.194000000000563e-06, 6.235999999999742e-06, 1.8609999999988358e-06, 1.6110000000020552e-06, 3.888999999999976e-06, 6.445000000000756e-06, 9.804999999998149e-06, 7.916999999999647e-06, 5.221999999999172e-06, 6.445000000000756e-06, 6.708000000001102e-06, 5.360999999998867e-06, 8.986000000002492e-06, 5.6389999999982565e-06, 3.208000000001071e-06, 3.9309999999986855e-06, 2.125000000002125e-06, 9.666999999997927e-06, 5.068999999999907e-06], 'diff': [0, 7.429999999999243e-06, 5.097000000002516e-06, 5.6389999999982565e-06, 6.570000000000881e-06, 8.193999999999563e-06, 3.888999999999976e-06, 8.068999999999438e-06, 1.459000000002264e-06, 9.943999999997843e-06, 3.0840000000004197e-06, 5.096999999999047e-06, 8.846999999999328e-06, 5.375000000001906e-06, 3.347000000000766e-06, 8.069999999998911e-06, 3.208000000001071e-06, 7.305999999998591e-06, 2.360999999999336e-06, 7.361000000000867e-06, 7.652999999999827e-06, 6.972000000000922e-06, 5.7779999999979514e-06, 7.694000000002532e-06, 8.542000000000272e-06, 9.388999999998537e-06, 6.041000000001767e-06, 9.263999999998412e-06, 4.555999999999311e-06, 6.569000000001407e-06, 4.4449999999987555e-06, 9.194000000000563e-06, 6.235999999999742e-06, 1.8609999999988358e-06, 1.6110000000020552e-06, 3.888999999999976e-06, 6.445000000000756e-06, 9.804999999998149e-06, 7.916999999999647e-06, 5.221999999999172e-06, 6.445000000000756e-06, 6.708000000001102e-06, 5.360999999998867e-06, 8.986000000002492e-06, 5.6389999999982565e-06, 3.208000000001071e-06, 3.9309999999986855e-06, 2.125000000002125e-06, 9.666999999997927e-06, 5.068999999999907e-06], 'sourcetime': [0.027400556, 0.027407986, 0.027413083, 0.027418722, 0.027425292, 0.027433486, 0.027437375, 0.027445444, 0.027446903, 0.027456847, 0.027459931, 0.027465028, 0.027473875, 0.02747925, 0.027482597, 0.027490667, 0.027493875, 0.027501181, 0.027503542, 0.027510903, 0.027518556, 0.027525528, 0.027531306, 0.027539, 0.027547542, 0.027556931, 0.027562972, 0.027572236, 0.027576792, 0.027583361, 0.027587806, 0.027597, 0.027603236, 0.027605097, 0.027606708, 0.027610597, 0.027617042, 0.027626847, 0.027634764, 0.027639986, 0.027646431, 0.027653139, 0.0276585, 0.027667486, 0.027673125, 0.027676333, 0.027680264, 0.027682389, 0.027692056, 0.027697125]}</msg>
<status status="PASS" starttime="20201110 08:33:26.175" endtime="20201110 08:33:26.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.171" endtime="20201110 08:33:26.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.188" level="INFO">${RESULT} = [{'time': 0.027407986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999999243e-06, 'source_diff': 7.429999999999243e-06}, {'time': 0.027418722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.182" endtime="20201110 08:33:26.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:26.206" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:26.190" endtime="20201110 08:33:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.214" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:26.212" endtime="20201110 08:33:26.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.219" level="INFO">VALUE: [7.429999999999243e-06, 5.6389999999982565e-06, 8.193999999999563e-06, 8.068999999999438e-06, 9.943999999997843e-06, 5.096999999999047e-06, 5.375000000001906e-06, 8.069999999998911e-06, 7.305999999998591e-06, 7.361000000000867e-06, 6.972000000000922e-06, 7.694000000002532e-06, 9.388999999998537e-06, 9.263999999998412e-06, 6.569000000001407e-06, 9.194000000000563e-06, 1.8609999999988358e-06, 3.888999999999976e-06, 9.804999999998149e-06, 5.221999999999172e-06, 6.708000000001102e-06, 8.986000000002492e-06, 3.208000000001071e-06, 2.125000000002125e-06, 5.068999999999907e-06]</msg>
<status status="PASS" starttime="20201110 08:33:26.217" endtime="20201110 08:33:26.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.208" endtime="20201110 08:33:26.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.226" endtime="20201110 08:33:26.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.233" endtime="20201110 08:33:26.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.230" endtime="20201110 08:33:26.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.223" endtime="20201110 08:33:26.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.823" endtime="20201110 08:33:26.257"></status>
</kw>
<msg timestamp="20201110 08:33:26.258" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.274" endtime="20201110 08:33:26.286"></status>
</kw>
<msg timestamp="20201110 08:33:26.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.271" endtime="20201110 08:33:26.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.289" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.287" endtime="20201110 08:33:26.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.290" endtime="20201110 08:33:26.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.266" endtime="20201110 08:33:26.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.262" endtime="20201110 08:33:26.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.299" endtime="20201110 08:33:26.565"></status>
</kw>
<msg timestamp="20201110 08:33:26.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032049014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032054889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.297" endtime="20201110 08:33:26.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032049014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032054889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.568" endtime="20201110 08:33:26.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.573" endtime="20201110 08:33:26.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.294" endtime="20201110 08:33:26.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.293" endtime="20201110 08:33:26.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.581" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:26.579" endtime="20201110 08:33:26.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.584" level="INFO">VALUE: [{'time': 0.032049014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032054889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.03205825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.032067931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.032071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.032080111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.032089375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.032095014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.032104819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.032108167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.032114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.032116472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.032126403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.032133014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.032135528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.032142819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.291000000006487e-06, 'source_diff': 7.291000000006487e-06}, {'time': 0.032145458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.032153375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.032163167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.032170028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.032172958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.032182222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.032189347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.032198458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.032206403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.945000000002256e-06, 'source_diff': 7.945000000002256e-06}, {'time': 0.03221175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999995827e-06, 'source_diff': 5.346999999995827e-06}, {'time': 0.032214056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.032215764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.032220722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.032225069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.032229097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999996201e-06, 'source_diff': 4.027999999996201e-06}, {'time': 0.032238569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.032245542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.032247167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.032250111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.032253181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.032261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.032270903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.032276528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.032279097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.032286458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.032292903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.032301222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.032304097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.032309264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.032317722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.032320417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.032328597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.032334903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.032336764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:26.582" endtime="20201110 08:33:26.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.577" endtime="20201110 08:33:26.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:26.601" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:26.587" endtime="20201110 08:33:26.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.605" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:26.604" endtime="20201110 08:33:26.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.610" level="INFO">VALUE: {'eventsource_diff': [0, 5.875000000002406e-06, 3.361000000000336e-06, 9.680999999997497e-06, 3.861000000000836e-06, 8.318999999999688e-06, 9.264000000001882e-06, 5.638999999994787e-06, 9.805000000001618e-06, 3.3480000000002397e-06, 5.916000000001642e-06, 2.3889999999984757e-06, 9.930999999997747e-06, 6.611000000003586e-06, 2.5139999999951312e-06, 7.291000000006487e-06, 2.6389999999987257e-06, 7.916999999996177e-06, 9.792000000001522e-06, 6.861000000003836e-06, 2.929999999998212e-06, 9.264000000001882e-06, 7.124999999996717e-06, 9.110999999999148e-06, 7.945000000002256e-06, 5.346999999995827e-06, 2.30600000000053e-06, 1.7080000000030404e-06, 4.957999999999352e-06, 4.347000000001766e-06, 4.027999999996201e-06, 9.472000000003422e-06, 6.9730000000003955e-06, 1.6249999999981557e-06, 2.9439999999977817e-06, 3.07000000000085e-06, 8.624999999998217e-06, 9.096999999999578e-06, 5.625000000002156e-06, 2.569000000000876e-06, 7.360999999997397e-06, 6.445000000000756e-06, 8.318999999999688e-06, 2.874999999999406e-06, 5.167000000000366e-06, 8.458000000002852e-06, 2.6949999999970053e-06, 8.180000000003462e-06, 6.305999999997591e-06, 1.8609999999988358e-06], 'diff': [0, 5.875000000002406e-06, 3.361000000000336e-06, 9.680999999997497e-06, 3.861000000000836e-06, 8.318999999999688e-06, 9.264000000001882e-06, 5.638999999994787e-06, 9.805000000001618e-06, 3.3480000000002397e-06, 5.916000000001642e-06, 2.3889999999984757e-06, 9.930999999997747e-06, 6.611000000003586e-06, 2.5139999999951312e-06, 7.291000000006487e-06, 2.6389999999987257e-06, 7.916999999996177e-06, 9.792000000001522e-06, 6.861000000003836e-06, 2.929999999998212e-06, 9.264000000001882e-06, 7.124999999996717e-06, 9.110999999999148e-06, 7.945000000002256e-06, 5.346999999995827e-06, 2.30600000000053e-06, 1.7080000000030404e-06, 4.957999999999352e-06, 4.347000000001766e-06, 4.027999999996201e-06, 9.472000000003422e-06, 6.9730000000003955e-06, 1.6249999999981557e-06, 2.9439999999977817e-06, 3.07000000000085e-06, 8.624999999998217e-06, 9.096999999999578e-06, 5.625000000002156e-06, 2.569000000000876e-06, 7.360999999997397e-06, 6.445000000000756e-06, 8.318999999999688e-06, 2.874999999999406e-06, 5.167000000000366e-06, 8.458000000002852e-06, 2.6949999999970053e-06, 8.180000000003462e-06, 6.305999999997591e-06, 1.8609999999988358e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.032049014, 0.032054889, 0.03205825, 0.032067931, 0.032071792, 0.032080111, 0.032089375, 0.032095014, 0.032104819, 0.032108167, 0.032114083, 0.032116472, 0.032126403, 0.032133014, 0.032135528, 0.032142819, 0.032145458, 0.032153375, 0.032163167, 0.032170028, 0.032172958, 0.032182222, 0.032189347, 0.032198458, 0.032206403, 0.03221175, 0.032214056, 0.032215764, 0.032220722, 0.032225069, 0.032229097, 0.032238569, 0.032245542, 0.032247167, 0.032250111, 0.032253181, 0.032261806, 0.032270903, 0.032276528, 0.032279097, 0.032286458, 0.032292903, 0.032301222, 0.032304097, 0.032309264, 0.032317722, 0.032320417, 0.032328597, 0.032334903, 0.032336764]}</msg>
<status status="PASS" starttime="20201110 08:33:26.607" endtime="20201110 08:33:26.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.601" endtime="20201110 08:33:26.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.615" level="INFO">${RESULT} = [{'time': 0.032054889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.032067931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.613" endtime="20201110 08:33:26.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:26.625" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:26.616" endtime="20201110 08:33:26.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.631" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:26.629" endtime="20201110 08:33:26.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.635" level="INFO">VALUE: [5.875000000002406e-06, 9.680999999997497e-06, 8.318999999999688e-06, 5.638999999994787e-06, 3.3480000000002397e-06, 2.3889999999984757e-06, 6.611000000003586e-06, 7.291000000006487e-06, 7.916999999996177e-06, 6.861000000003836e-06, 9.264000000001882e-06, 9.110999999999148e-06, 5.346999999995827e-06, 1.7080000000030404e-06, 4.347000000001766e-06, 9.472000000003422e-06, 1.6249999999981557e-06, 3.07000000000085e-06, 9.096999999999578e-06, 2.569000000000876e-06, 6.445000000000756e-06, 2.874999999999406e-06, 8.458000000002852e-06, 8.180000000003462e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201110 08:33:26.633" endtime="20201110 08:33:26.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.626" endtime="20201110 08:33:26.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.640" endtime="20201110 08:33:26.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.646" endtime="20201110 08:33:26.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.643" endtime="20201110 08:33:26.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.638" endtime="20201110 08:33:26.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.259" endtime="20201110 08:33:26.667"></status>
</kw>
<msg timestamp="20201110 08:33:26.667" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.674" endtime="20201110 08:33:26.684"></status>
</kw>
<msg timestamp="20201110 08:33:26.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.673" endtime="20201110 08:33:26.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.687" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.686" endtime="20201110 08:33:26.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.689" endtime="20201110 08:33:26.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.671" endtime="20201110 08:33:26.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.669" endtime="20201110 08:33:26.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.697" endtime="20201110 08:33:26.962"></status>
</kw>
<msg timestamp="20201110 08:33:26.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.696" endtime="20201110 08:33:26.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.965" endtime="20201110 08:33:26.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.971" endtime="20201110 08:33:26.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.693" endtime="20201110 08:33:26.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.692" endtime="20201110 08:33:26.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.977" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:26.976" endtime="20201110 08:33:26.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.981" level="INFO">VALUE: [{'time': 0.018225847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018234681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09799999999852e-06, 'source_diff': 5.09799999999852e-06}, {'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.018247014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018256319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018263125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.806000000001561e-06, 'source_diff': 6.806000000001561e-06}, {'time': 0.018266139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.018267681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018275861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.018278139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.018286208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069000000002907e-06, 'source_diff': 8.069000000002907e-06}, {'time': 0.018293444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.235999999997272e-06, 'source_diff': 7.235999999997272e-06}, {'time': 0.018301361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018305917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.018310347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018314417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.018320944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.018326986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018335569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.018338514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.018345889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.01834925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018353667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018357444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.018359569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1249999999986557e-06, 'source_diff': 2.1249999999986557e-06}, {'time': 0.018367764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.018373389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018378764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018386944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.018390292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018399014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.018404917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.018408542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.01841525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018423972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018433792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.018437792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.0184445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.018446653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018449472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.018452542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0699999999973804e-06, 'source_diff': 3.0699999999973804e-06}, {'time': 0.018457639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018466417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999997482e-06, 'source_diff': 8.777999999997482e-06}, {'time': 0.018470667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018479514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018486542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.018488653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.018494542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018500986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:26.978" endtime="20201110 08:33:26.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.974" endtime="20201110 08:33:26.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:26.996" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:26.983" endtime="20201110 08:33:26.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.000" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:26.999" endtime="20201110 08:33:27.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.003" level="INFO">VALUE: {'eventsource_diff': [0, 3.736000000000711e-06, 5.09799999999852e-06, 7.125000000000187e-06, 5.207999999999602e-06, 9.305000000001118e-06, 6.806000000001561e-06, 3.0139999999991007e-06, 1.5420000000002099e-06, 8.179999999999993e-06, 2.2779999999979206e-06, 8.069000000002907e-06, 7.235999999997272e-06, 7.916999999999647e-06, 4.55600000000278e-06, 4.429999999999712e-06, 4.0699999999983805e-06, 6.526999999999228e-06, 6.042000000001241e-06, 8.582999999999508e-06, 2.945000000000725e-06, 7.375000000000437e-06, 3.361000000000336e-06, 4.416999999999616e-06, 3.776999999999947e-06, 2.1249999999986557e-06, 8.195000000002506e-06, 5.624999999998687e-06, 5.374999999998437e-06, 8.179999999999993e-06, 3.3480000000002397e-06, 8.722000000002672e-06, 5.9029999999980765e-06, 3.625000000000156e-06, 6.708000000001102e-06, 8.721999999999203e-06, 9.820000000000662e-06, 4.000000000000531e-06, 6.7079999999976325e-06, 2.153000000001265e-06, 2.819000000001126e-06, 3.0699999999973804e-06, 5.097000000002516e-06, 8.777999999997482e-06, 4.250000000000781e-06, 8.846999999999328e-06, 7.028000000002671e-06, 2.110999999999086e-06, 5.8889999999985065e-06, 6.444000000001282e-06], 'diff': [0, 3.736000000000711e-06, 5.09799999999852e-06, 7.125000000000187e-06, 5.207999999999602e-06, 9.305000000001118e-06, 6.806000000001561e-06, 3.0139999999991007e-06, 1.5420000000002099e-06, 8.179999999999993e-06, 2.2779999999979206e-06, 8.069000000002907e-06, 7.235999999997272e-06, 7.916999999999647e-06, 4.55600000000278e-06, 4.429999999999712e-06, 4.0699999999983805e-06, 6.526999999999228e-06, 6.042000000001241e-06, 8.582999999999508e-06, 2.945000000000725e-06, 7.375000000000437e-06, 3.361000000000336e-06, 4.416999999999616e-06, 3.776999999999947e-06, 2.1249999999986557e-06, 8.195000000002506e-06, 5.624999999998687e-06, 5.374999999998437e-06, 8.179999999999993e-06, 3.3480000000002397e-06, 8.722000000002672e-06, 5.9029999999980765e-06, 3.625000000000156e-06, 6.708000000001102e-06, 8.721999999999203e-06, 9.820000000000662e-06, 4.000000000000531e-06, 6.7079999999976325e-06, 2.153000000001265e-06, 2.819000000001126e-06, 3.0699999999973804e-06, 5.097000000002516e-06, 8.777999999997482e-06, 4.250000000000781e-06, 8.846999999999328e-06, 7.028000000002671e-06, 2.110999999999086e-06, 5.8889999999985065e-06, 6.444000000001282e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018225847, 0.018229583, 0.018234681, 0.018241806, 0.018247014, 0.018256319, 0.018263125, 0.018266139, 0.018267681, 0.018275861, 0.018278139, 0.018286208, 0.018293444, 0.018301361, 0.018305917, 0.018310347, 0.018314417, 0.018320944, 0.018326986, 0.018335569, 0.018338514, 0.018345889, 0.01834925, 0.018353667, 0.018357444, 0.018359569, 0.018367764, 0.018373389, 0.018378764, 0.018386944, 0.018390292, 0.018399014, 0.018404917, 0.018408542, 0.01841525, 0.018423972, 0.018433792, 0.018437792, 0.0184445, 0.018446653, 0.018449472, 0.018452542, 0.018457639, 0.018466417, 0.018470667, 0.018479514, 0.018486542, 0.018488653, 0.018494542, 0.018500986]}</msg>
<status status="PASS" starttime="20201110 08:33:27.001" endtime="20201110 08:33:27.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.997" endtime="20201110 08:33:27.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.008" level="INFO">${RESULT} = [{'time': 0.018229583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.005" endtime="20201110 08:33:27.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:27.015" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:27.008" endtime="20201110 08:33:27.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.020" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:27.019" endtime="20201110 08:33:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.022" level="INFO">VALUE: [3.736000000000711e-06, 7.125000000000187e-06, 9.305000000001118e-06, 3.0139999999991007e-06, 8.179999999999993e-06, 8.069000000002907e-06, 7.916999999999647e-06, 4.429999999999712e-06, 6.526999999999228e-06, 8.582999999999508e-06, 7.375000000000437e-06, 4.416999999999616e-06, 2.1249999999986557e-06, 5.624999999998687e-06, 8.179999999999993e-06, 8.722000000002672e-06, 3.625000000000156e-06, 8.721999999999203e-06, 4.000000000000531e-06, 2.153000000001265e-06, 3.0699999999973804e-06, 8.777999999997482e-06, 8.846999999999328e-06, 2.110999999999086e-06, 6.444000000001282e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.021" endtime="20201110 08:33:27.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.016" endtime="20201110 08:33:27.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.025" endtime="20201110 08:33:27.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.029" endtime="20201110 08:33:27.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.027" endtime="20201110 08:33:27.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.023" endtime="20201110 08:33:27.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.668" endtime="20201110 08:33:27.049"></status>
</kw>
<msg timestamp="20201110 08:33:27.049" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.057" endtime="20201110 08:33:27.067"></status>
</kw>
<msg timestamp="20201110 08:33:27.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.055" endtime="20201110 08:33:27.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.069" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.068" endtime="20201110 08:33:27.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.071" endtime="20201110 08:33:27.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.053" endtime="20201110 08:33:27.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.051" endtime="20201110 08:33:27.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.080" endtime="20201110 08:33:27.346"></status>
</kw>
<msg timestamp="20201110 08:33:27.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018109306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.079" endtime="20201110 08:33:27.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018109306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.349" endtime="20201110 08:33:27.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.355" endtime="20201110 08:33:27.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.076" endtime="20201110 08:33:27.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.074" endtime="20201110 08:33:27.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.361" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:27.360" endtime="20201110 08:33:27.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.365" level="INFO">VALUE: [{'time': 0.018106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018109306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.018113194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.018119639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.018122056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.01812875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.018131569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.018133444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018136139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.018141764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018148736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018150764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018156111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.0181635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.018170903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018177319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.416000000002142e-06, 'source_diff': 6.416000000002142e-06}, {'time': 0.018182278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.018190333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.018199333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.018203222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018207111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018215819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018225083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.018234361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.018244139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.018249236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018251792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.018257278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018265208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930000000003212e-06, 'source_diff': 7.930000000003212e-06}, {'time': 0.018266958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018274722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.018279958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018287736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.018297264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.018300889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018304236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018309083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018318333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.018324542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.018328389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018337389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.018339139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018348917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018350806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018353222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415999999998142e-06, 'source_diff': 2.415999999998142e-06}, {'time': 0.018359236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018365819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.018368097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.018371583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:27.362" endtime="20201110 08:33:27.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.358" endtime="20201110 08:33:27.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:27.380" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:27.367" endtime="20201110 08:33:27.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.384" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:27.383" endtime="20201110 08:33:27.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.387" level="INFO">VALUE: {'eventsource_diff': [0, 2.6529999999982956e-06, 3.888000000000502e-06, 6.445000000000756e-06, 2.417000000001085e-06, 6.693999999998063e-06, 2.819000000001126e-06, 1.8749999999984057e-06, 2.695000000000475e-06, 5.625000000002156e-06, 6.9719999999974525e-06, 2.02800000000114e-06, 5.346999999999297e-06, 7.389000000000007e-06, 7.402999999999577e-06, 6.416000000002142e-06, 4.9589999999988255e-06, 8.054999999999868e-06, 9.000000000002062e-06, 3.888999999999976e-06, 3.888999999999976e-06, 8.707999999999633e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.777999999998482e-06, 5.096999999999047e-06, 2.55600000000078e-06, 5.485999999998992e-06, 7.930000000003212e-06, 1.7499999999982807e-06, 7.764000000000382e-06, 5.235999999998742e-06, 7.777999999999952e-06, 9.528000000001702e-06, 3.625000000000156e-06, 3.347000000000766e-06, 4.846999999998797e-06, 9.249999999998842e-06, 6.2090000000000756e-06, 3.847000000001266e-06, 8.999999999998592e-06, 1.7500000000017502e-06, 4.139000000000226e-06, 5.6389999999982565e-06, 1.889000000001445e-06, 2.415999999998142e-06, 6.014000000002101e-06, 6.5829999999975075e-06, 2.27800000000139e-06, 3.486000000000461e-06], 'diff': [0, 2.6529999999982956e-06, 3.888000000000502e-06, 6.445000000000756e-06, 2.417000000001085e-06, 6.693999999998063e-06, 2.819000000001126e-06, 1.8749999999984057e-06, 2.695000000000475e-06, 5.625000000002156e-06, 6.9719999999974525e-06, 2.02800000000114e-06, 5.346999999999297e-06, 7.389000000000007e-06, 7.402999999999577e-06, 6.416000000002142e-06, 4.9589999999988255e-06, 8.054999999999868e-06, 9.000000000002062e-06, 3.888999999999976e-06, 3.888999999999976e-06, 8.707999999999633e-06, 9.263999999998412e-06, 9.278000000001452e-06, 9.777999999998482e-06, 5.096999999999047e-06, 2.55600000000078e-06, 5.485999999998992e-06, 7.930000000003212e-06, 1.7499999999982807e-06, 7.764000000000382e-06, 5.235999999998742e-06, 7.777999999999952e-06, 9.528000000001702e-06, 3.625000000000156e-06, 3.347000000000766e-06, 4.846999999998797e-06, 9.249999999998842e-06, 6.2090000000000756e-06, 3.847000000001266e-06, 8.999999999998592e-06, 1.7500000000017502e-06, 4.139000000000226e-06, 5.6389999999982565e-06, 1.889000000001445e-06, 2.415999999998142e-06, 6.014000000002101e-06, 6.5829999999975075e-06, 2.27800000000139e-06, 3.486000000000461e-06], 'sourcetime': [0.018106653, 0.018109306, 0.018113194, 0.018119639, 0.018122056, 0.01812875, 0.018131569, 0.018133444, 0.018136139, 0.018141764, 0.018148736, 0.018150764, 0.018156111, 0.0181635, 0.018170903, 0.018177319, 0.018182278, 0.018190333, 0.018199333, 0.018203222, 0.018207111, 0.018215819, 0.018225083, 0.018234361, 0.018244139, 0.018249236, 0.018251792, 0.018257278, 0.018265208, 0.018266958, 0.018274722, 0.018279958, 0.018287736, 0.018297264, 0.018300889, 0.018304236, 0.018309083, 0.018318333, 0.018324542, 0.018328389, 0.018337389, 0.018339139, 0.018343278, 0.018348917, 0.018350806, 0.018353222, 0.018359236, 0.018365819, 0.018368097, 0.018371583]}</msg>
<status status="PASS" starttime="20201110 08:33:27.385" endtime="20201110 08:33:27.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.381" endtime="20201110 08:33:27.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.391" level="INFO">${RESULT} = [{'time': 0.018109306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.018119639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:27.389" endtime="20201110 08:33:27.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:27.399" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:27.392" endtime="20201110 08:33:27.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.403" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:27.402" endtime="20201110 08:33:27.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.406" level="INFO">VALUE: [2.6529999999982956e-06, 6.445000000000756e-06, 6.693999999998063e-06, 1.8749999999984057e-06, 5.625000000002156e-06, 2.02800000000114e-06, 7.389000000000007e-06, 6.416000000002142e-06, 8.054999999999868e-06, 3.888999999999976e-06, 8.707999999999633e-06, 9.278000000001452e-06, 5.096999999999047e-06, 5.485999999998992e-06, 1.7499999999982807e-06, 5.235999999998742e-06, 9.528000000001702e-06, 3.347000000000766e-06, 9.249999999998842e-06, 3.847000000001266e-06, 1.7500000000017502e-06, 5.6389999999982565e-06, 2.415999999998142e-06, 6.5829999999975075e-06, 3.486000000000461e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.404" endtime="20201110 08:33:27.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.400" endtime="20201110 08:33:27.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.409" endtime="20201110 08:33:27.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.412" endtime="20201110 08:33:27.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.411" endtime="20201110 08:33:27.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.407" endtime="20201110 08:33:27.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.050" endtime="20201110 08:33:27.433"></status>
</kw>
<msg timestamp="20201110 08:33:27.433" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.441" endtime="20201110 08:33:27.452"></status>
</kw>
<msg timestamp="20201110 08:33:27.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.439" endtime="20201110 08:33:27.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.454" endtime="20201110 08:33:27.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.456" endtime="20201110 08:33:27.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.437" endtime="20201110 08:33:27.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.435" endtime="20201110 08:33:27.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.465" endtime="20201110 08:33:27.732"></status>
</kw>
<msg timestamp="20201110 08:33:27.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018897847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.463" endtime="20201110 08:33:27.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018887806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018897847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.735" endtime="20201110 08:33:27.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.740" endtime="20201110 08:33:27.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.461" endtime="20201110 08:33:27.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.459" endtime="20201110 08:33:27.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.747" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:27.746" endtime="20201110 08:33:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.750" level="INFO">VALUE: [{'time': 0.018887806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018897847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.018902958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018906972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018914514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018916236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018923889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018930042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018937417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018943722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.018947764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018949486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018952722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018957264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018962931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018969208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.018971486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.018979278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.018987194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.018990764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.019000472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019009597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.019016194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.019024792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.019031069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.277000000002447e-06, 'source_diff': 6.277000000002447e-06}, {'time': 0.019038069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019047375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305999999997122e-06, 'source_diff': 9.305999999997122e-06}, {'time': 0.019052847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.019058972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.019061653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019067167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019073069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.019081, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.019082722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019084222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019090514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.019095083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.019099903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8200000000026e-06, 'source_diff': 4.8200000000026e-06}, {'time': 0.019104861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.019112389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019118014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.019125389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019131028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.019136792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019143111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.019144861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019150611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.019160153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.019166181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019174236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:27.748" endtime="20201110 08:33:27.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.744" endtime="20201110 08:33:27.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:27.765" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:27.753" endtime="20201110 08:33:27.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.769" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:27.768" endtime="20201110 08:33:27.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.772" level="INFO">VALUE: {'eventsource_diff': [0, 1.0040999999998829e-05, 5.111000000002086e-06, 4.014000000000101e-06, 7.5419999999992715e-06, 1.7219999999991409e-06, 7.652999999999827e-06, 6.153000000001796e-06, 7.375000000000437e-06, 6.304999999998118e-06, 4.041999999999241e-06, 1.7220000000026103e-06, 3.236000000000211e-06, 4.541999999999741e-06, 5.666999999997396e-06, 6.277000000002447e-06, 2.2779999999979206e-06, 7.791999999999522e-06, 7.916000000000173e-06, 3.57000000000135e-06, 9.708000000000633e-06, 9.124999999998717e-06, 6.597000000000547e-06, 8.597999999998551e-06, 6.277000000002447e-06, 7.000000000000062e-06, 9.305999999997122e-06, 5.472000000002891e-06, 6.124999999999187e-06, 2.681000000000905e-06, 5.5139999999981315e-06, 5.902000000002072e-06, 7.930999999999216e-06, 1.7219999999991409e-06, 1.5000000000015001e-06, 6.291999999998021e-06, 4.568999999999407e-06, 4.8200000000026e-06, 4.957999999999352e-06, 7.527999999999702e-06, 5.624999999998687e-06, 7.375000000000437e-06, 5.639000000001726e-06, 5.7639999999983815e-06, 6.319000000001157e-06, 1.7499999999982807e-06, 5.750000000002281e-06, 9.541999999997802e-06, 6.028000000001671e-06, 8.054999999999868e-06], 'diff': [0, 1.0040999999998829e-05, 5.111000000002086e-06, 4.014000000000101e-06, 7.5419999999992715e-06, 1.7219999999991409e-06, 7.652999999999827e-06, 6.153000000001796e-06, 7.375000000000437e-06, 6.304999999998118e-06, 4.041999999999241e-06, 1.7220000000026103e-06, 3.236000000000211e-06, 4.541999999999741e-06, 5.666999999997396e-06, 6.277000000002447e-06, 2.2779999999979206e-06, 7.791999999999522e-06, 7.916000000000173e-06, 3.57000000000135e-06, 9.708000000000633e-06, 9.124999999998717e-06, 6.597000000000547e-06, 8.597999999998551e-06, 6.277000000002447e-06, 7.000000000000062e-06, 9.305999999997122e-06, 5.472000000002891e-06, 6.124999999999187e-06, 2.681000000000905e-06, 5.5139999999981315e-06, 5.902000000002072e-06, 7.930999999999216e-06, 1.7219999999991409e-06, 1.5000000000015001e-06, 6.291999999998021e-06, 4.568999999999407e-06, 4.8200000000026e-06, 4.957999999999352e-06, 7.527999999999702e-06, 5.624999999998687e-06, 7.375000000000437e-06, 5.639000000001726e-06, 5.7639999999983815e-06, 6.319000000001157e-06, 1.7499999999982807e-06, 5.750000000002281e-06, 9.541999999997802e-06, 6.028000000001671e-06, 8.054999999999868e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018887806, 0.018897847, 0.018902958, 0.018906972, 0.018914514, 0.018916236, 0.018923889, 0.018930042, 0.018937417, 0.018943722, 0.018947764, 0.018949486, 0.018952722, 0.018957264, 0.018962931, 0.018969208, 0.018971486, 0.018979278, 0.018987194, 0.018990764, 0.019000472, 0.019009597, 0.019016194, 0.019024792, 0.019031069, 0.019038069, 0.019047375, 0.019052847, 0.019058972, 0.019061653, 0.019067167, 0.019073069, 0.019081, 0.019082722, 0.019084222, 0.019090514, 0.019095083, 0.019099903, 0.019104861, 0.019112389, 0.019118014, 0.019125389, 0.019131028, 0.019136792, 0.019143111, 0.019144861, 0.019150611, 0.019160153, 0.019166181, 0.019174236]}</msg>
<status status="PASS" starttime="20201110 08:33:27.770" endtime="20201110 08:33:27.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.766" endtime="20201110 08:33:27.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.777" level="INFO">${RESULT} = [{'time': 0.018897847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.018906972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:27.774" endtime="20201110 08:33:27.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:27.785" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:27.778" endtime="20201110 08:33:27.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.789" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:27.788" endtime="20201110 08:33:27.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.791" level="INFO">VALUE: [1.0040999999998829e-05, 4.014000000000101e-06, 1.7219999999991409e-06, 6.153000000001796e-06, 6.304999999998118e-06, 1.7220000000026103e-06, 4.541999999999741e-06, 6.277000000002447e-06, 7.791999999999522e-06, 3.57000000000135e-06, 9.124999999998717e-06, 8.597999999998551e-06, 7.000000000000062e-06, 5.472000000002891e-06, 2.681000000000905e-06, 5.902000000002072e-06, 1.7219999999991409e-06, 6.291999999998021e-06, 4.8200000000026e-06, 7.527999999999702e-06, 7.375000000000437e-06, 5.7639999999983815e-06, 1.7499999999982807e-06, 9.541999999997802e-06, 8.054999999999868e-06]</msg>
<status status="PASS" starttime="20201110 08:33:27.790" endtime="20201110 08:33:27.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.786" endtime="20201110 08:33:27.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.794" endtime="20201110 08:33:27.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.798" endtime="20201110 08:33:27.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.796" endtime="20201110 08:33:27.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.793" endtime="20201110 08:33:27.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.434" endtime="20201110 08:33:27.818"></status>
</kw>
<msg timestamp="20201110 08:33:27.819" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.827" endtime="20201110 08:33:27.838"></status>
</kw>
<msg timestamp="20201110 08:33:27.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.825" endtime="20201110 08:33:27.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.840" endtime="20201110 08:33:27.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.843" endtime="20201110 08:33:27.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.822" endtime="20201110 08:33:27.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.820" endtime="20201110 08:33:27.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.855" endtime="20201110 08:33:28.122"></status>
</kw>
<msg timestamp="20201110 08:33:28.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.853" endtime="20201110 08:33:28.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.125" endtime="20201110 08:33:28.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.130" endtime="20201110 08:33:28.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.850" endtime="20201110 08:33:28.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.847" endtime="20201110 08:33:28.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.137" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:28.136" endtime="20201110 08:33:28.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.140" level="INFO">VALUE: [{'time': 0.019312042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019316847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.019322347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019332278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019336861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.019341542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.019343431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019350125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019359778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.019367167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019372667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019380403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.019384472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.019394278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0689999999979067e-06, 'source_diff': 3.0689999999979067e-06}, {'time': 0.019399625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.019402194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.019405139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.019408653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.019412639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.019417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.019427056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.019428875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019433833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.019442819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.019450208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019458125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.019462292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019464153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019473681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.019482958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277000000001978e-06, 'source_diff': 9.277000000001978e-06}, {'time': 0.019489389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.430999999997716e-06, 'source_diff': 6.430999999997716e-06}, {'time': 0.019493139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.019495958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.019498639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019505083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.443999999997813e-06, 'source_diff': 6.443999999997813e-06}, {'time': 0.019514125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.019516625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.019524681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.019533917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.019542375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019548819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.443999999997813e-06, 'source_diff': 6.443999999997813e-06}, {'time': 0.019556389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.570000000001881e-06, 'source_diff': 7.570000000001881e-06}, {'time': 0.019559681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.019565458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.777000000001947e-06, 'source_diff': 5.777000000001947e-06}, {'time': 0.019575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.019579819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019586792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.019588806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019598208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:28.138" endtime="20201110 08:33:28.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.133" endtime="20201110 08:33:28.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:28.156" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:28.143" endtime="20201110 08:33:28.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.160" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:28.159" endtime="20201110 08:33:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.163" level="INFO">VALUE: {'eventsource_diff': [0, 4.805000000000087e-06, 5.499999999998562e-06, 9.931000000001217e-06, 4.582999999998977e-06, 4.680999999999436e-06, 1.889000000001445e-06, 6.693999999998063e-06, 9.653000000001827e-06, 7.389000000000007e-06, 5.499999999998562e-06, 7.736000000001242e-06, 4.068999999998907e-06, 9.806000000001092e-06, 3.0689999999979067e-06, 2.27800000000139e-06, 2.569000000000876e-06, 2.9449999999972554e-06, 3.5140000000030702e-06, 3.9859999999974915e-06, 5.097000000002516e-06, 9.320000000000161e-06, 1.819000000000126e-06, 4.957999999999352e-06, 8.985999999999023e-06, 7.389000000000007e-06, 7.916999999999647e-06, 4.166999999999366e-06, 1.8610000000023053e-06, 9.527999999998232e-06, 9.277000000001978e-06, 6.430999999997716e-06, 3.750000000000281e-06, 2.819000000001126e-06, 2.681000000000905e-06, 6.443999999997813e-06, 9.042000000000772e-06, 2.4999999999990308e-06, 8.055999999999341e-06, 9.236000000002742e-06, 8.457999999999383e-06, 6.443999999997813e-06, 7.570000000001881e-06, 3.2919999999984906e-06, 5.777000000001947e-06, 9.541999999997802e-06, 4.818999999999657e-06, 6.9730000000003955e-06, 2.01400000000157e-06, 9.401999999998634e-06], 'diff': [0, 4.805000000000087e-06, 5.499999999998562e-06, 9.931000000001217e-06, 4.582999999998977e-06, 4.680999999999436e-06, 1.889000000001445e-06, 6.693999999998063e-06, 9.653000000001827e-06, 7.389000000000007e-06, 5.499999999998562e-06, 7.736000000001242e-06, 4.068999999998907e-06, 9.806000000001092e-06, 3.0689999999979067e-06, 2.27800000000139e-06, 2.569000000000876e-06, 2.9449999999972554e-06, 3.5140000000030702e-06, 3.9859999999974915e-06, 5.097000000002516e-06, 9.320000000000161e-06, 1.819000000000126e-06, 4.957999999999352e-06, 8.985999999999023e-06, 7.389000000000007e-06, 7.916999999999647e-06, 4.166999999999366e-06, 1.8610000000023053e-06, 9.527999999998232e-06, 9.277000000001978e-06, 6.430999999997716e-06, 3.750000000000281e-06, 2.819000000001126e-06, 2.681000000000905e-06, 6.443999999997813e-06, 9.042000000000772e-06, 2.4999999999990308e-06, 8.055999999999341e-06, 9.236000000002742e-06, 8.457999999999383e-06, 6.443999999997813e-06, 7.570000000001881e-06, 3.2919999999984906e-06, 5.777000000001947e-06, 9.541999999997802e-06, 4.818999999999657e-06, 6.9730000000003955e-06, 2.01400000000157e-06, 9.401999999998634e-06], 'sourcetime': [0.019312042, 0.019316847, 0.019322347, 0.019332278, 0.019336861, 0.019341542, 0.019343431, 0.019350125, 0.019359778, 0.019367167, 0.019372667, 0.019380403, 0.019384472, 0.019394278, 0.019397347, 0.019399625, 0.019402194, 0.019405139, 0.019408653, 0.019412639, 0.019417736, 0.019427056, 0.019428875, 0.019433833, 0.019442819, 0.019450208, 0.019458125, 0.019462292, 0.019464153, 0.019473681, 0.019482958, 0.019489389, 0.019493139, 0.019495958, 0.019498639, 0.019505083, 0.019514125, 0.019516625, 0.019524681, 0.019533917, 0.019542375, 0.019548819, 0.019556389, 0.019559681, 0.019565458, 0.019575, 0.019579819, 0.019586792, 0.019588806, 0.019598208]}</msg>
<status status="PASS" starttime="20201110 08:33:28.161" endtime="20201110 08:33:28.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.157" endtime="20201110 08:33:28.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.167" level="INFO">${RESULT} = [{'time': 0.019316847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.019332278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.165" endtime="20201110 08:33:28.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:28.175" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:28.168" endtime="20201110 08:33:28.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.179" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:28.178" endtime="20201110 08:33:28.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.182" level="INFO">VALUE: [4.805000000000087e-06, 9.931000000001217e-06, 4.680999999999436e-06, 6.693999999998063e-06, 7.389000000000007e-06, 7.736000000001242e-06, 9.806000000001092e-06, 2.27800000000139e-06, 2.9449999999972554e-06, 3.9859999999974915e-06, 9.320000000000161e-06, 4.957999999999352e-06, 7.389000000000007e-06, 4.166999999999366e-06, 9.527999999998232e-06, 6.430999999997716e-06, 2.819000000001126e-06, 6.443999999997813e-06, 2.4999999999990308e-06, 9.236000000002742e-06, 6.443999999997813e-06, 3.2919999999984906e-06, 9.541999999997802e-06, 6.9730000000003955e-06, 9.401999999998634e-06]</msg>
<status status="PASS" starttime="20201110 08:33:28.180" endtime="20201110 08:33:28.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.176" endtime="20201110 08:33:28.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.185" endtime="20201110 08:33:28.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.188" endtime="20201110 08:33:28.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.187" endtime="20201110 08:33:28.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.183" endtime="20201110 08:33:28.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.819" endtime="20201110 08:33:28.210"></status>
</kw>
<msg timestamp="20201110 08:33:28.210" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.217" endtime="20201110 08:33:28.227"></status>
</kw>
<msg timestamp="20201110 08:33:28.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.216" endtime="20201110 08:33:28.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.229" endtime="20201110 08:33:28.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.231" endtime="20201110 08:33:28.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.213" endtime="20201110 08:33:28.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.212" endtime="20201110 08:33:28.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.240" endtime="20201110 08:33:28.504"></status>
</kw>
<msg timestamp="20201110 08:33:28.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.238" endtime="20201110 08:33:28.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.507" endtime="20201110 08:33:28.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.512" endtime="20201110 08:33:28.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.236" endtime="20201110 08:33:28.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.234" endtime="20201110 08:33:28.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.519" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:28.518" endtime="20201110 08:33:28.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.522" level="INFO">VALUE: [{'time': 0.018257875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018269542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.018273208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.018280819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.018287028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.018292083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.018300806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722999999998676e-06, 'source_diff': 8.722999999998676e-06}, {'time': 0.018310194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.387999999999064e-06, 'source_diff': 9.387999999999064e-06}, {'time': 0.018318917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.018321472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5549999999978368e-06, 'source_diff': 2.5549999999978368e-06}, {'time': 0.018324556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.018330319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.763000000002377e-06, 'source_diff': 5.763000000002377e-06}, {'time': 0.018333139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8199999999971304e-06, 'source_diff': 2.8199999999971304e-06}, {'time': 0.018340931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.792000000002991e-06, 'source_diff': 7.792000000002991e-06}, {'time': 0.018344958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.018352861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018360778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999999647e-06, 'source_diff': 7.916999999999647e-06}, {'time': 0.018362389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018369361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018376736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018379417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.018381972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.018384653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.018389208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.018394042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.018397667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018399139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018407611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.018409889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.018419153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.018427611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018437542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.018446111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.018455639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.018458181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018460472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.290999999998017e-06, 'source_diff': 2.290999999998017e-06}, {'time': 0.018466903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.018469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.018471333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.151999999998322e-06, 'source_diff': 2.151999999998322e-06}, {'time': 0.018474569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018480181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61199999999859e-06, 'source_diff': 5.61199999999859e-06}, {'time': 0.018489042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018493736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018496278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018501778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018505806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.018512792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018518681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018522708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:28.520" endtime="20201110 08:33:28.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.515" endtime="20201110 08:33:28.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:28.538" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:28.525" endtime="20201110 08:33:28.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.541" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:28.540" endtime="20201110 08:33:28.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.545" level="INFO">VALUE: {'eventsource_diff': [0, 1.5969999999990159e-06, 1.0070000000000912e-05, 3.665999999999392e-06, 7.611000000001117e-06, 6.2090000000000756e-06, 5.055000000000337e-06, 8.722999999998676e-06, 9.387999999999064e-06, 8.723000000002146e-06, 2.5549999999978368e-06, 3.0840000000004197e-06, 5.763000000002377e-06, 2.8199999999971304e-06, 7.792000000002991e-06, 4.027000000000197e-06, 7.903000000000077e-06, 7.916999999999647e-06, 1.6109999999985858e-06, 6.972000000000922e-06, 7.375000000000437e-06, 2.6809999999974354e-06, 2.5550000000013062e-06, 2.681000000000905e-06, 4.554999999999837e-06, 4.8339999999987004e-06, 3.625000000000156e-06, 1.4719999999988909e-06, 8.472000000002422e-06, 2.2779999999979206e-06, 9.264000000001882e-06, 8.457999999999383e-06, 9.931000000001217e-06, 8.568999999999938e-06, 9.527999999998232e-06, 2.54200000000121e-06, 2.290999999998017e-06, 6.431000000001186e-06, 2.27800000000139e-06, 2.151999999998322e-06, 3.236000000000211e-06, 5.61199999999859e-06, 8.861000000002367e-06, 4.693999999999532e-06, 2.54200000000121e-06, 5.499999999998562e-06, 4.027999999999671e-06, 6.986000000000492e-06, 5.8889999999985065e-06, 4.027000000000197e-06], 'diff': [0, 1.5969999999990159e-06, 1.0070000000000912e-05, 3.665999999999392e-06, 7.611000000001117e-06, 6.2090000000000756e-06, 5.055000000000337e-06, 8.722999999998676e-06, 9.387999999999064e-06, 8.723000000002146e-06, 2.5549999999978368e-06, 3.0840000000004197e-06, 5.763000000002377e-06, 2.8199999999971304e-06, 7.792000000002991e-06, 4.027000000000197e-06, 7.903000000000077e-06, 7.916999999999647e-06, 1.6109999999985858e-06, 6.972000000000922e-06, 7.375000000000437e-06, 2.6809999999974354e-06, 2.5550000000013062e-06, 2.681000000000905e-06, 4.554999999999837e-06, 4.8339999999987004e-06, 3.625000000000156e-06, 1.4719999999988909e-06, 8.472000000002422e-06, 2.2779999999979206e-06, 9.264000000001882e-06, 8.457999999999383e-06, 9.931000000001217e-06, 8.568999999999938e-06, 9.527999999998232e-06, 2.54200000000121e-06, 2.290999999998017e-06, 6.431000000001186e-06, 2.27800000000139e-06, 2.151999999998322e-06, 3.236000000000211e-06, 5.61199999999859e-06, 8.861000000002367e-06, 4.693999999999532e-06, 2.54200000000121e-06, 5.499999999998562e-06, 4.027999999999671e-06, 6.986000000000492e-06, 5.8889999999985065e-06, 4.027000000000197e-06], 'sourcetime': [0.018257875, 0.018259472, 0.018269542, 0.018273208, 0.018280819, 0.018287028, 0.018292083, 0.018300806, 0.018310194, 0.018318917, 0.018321472, 0.018324556, 0.018330319, 0.018333139, 0.018340931, 0.018344958, 0.018352861, 0.018360778, 0.018362389, 0.018369361, 0.018376736, 0.018379417, 0.018381972, 0.018384653, 0.018389208, 0.018394042, 0.018397667, 0.018399139, 0.018407611, 0.018409889, 0.018419153, 0.018427611, 0.018437542, 0.018446111, 0.018455639, 0.018458181, 0.018460472, 0.018466903, 0.018469181, 0.018471333, 0.018474569, 0.018480181, 0.018489042, 0.018493736, 0.018496278, 0.018501778, 0.018505806, 0.018512792, 0.018518681, 0.018522708]}</msg>
<status status="PASS" starttime="20201110 08:33:28.543" endtime="20201110 08:33:28.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.539" endtime="20201110 08:33:28.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.549" level="INFO">${RESULT} = [{'time': 0.018259472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018273208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:28.546" endtime="20201110 08:33:28.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:28.557" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:28.550" endtime="20201110 08:33:28.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.561" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:28.560" endtime="20201110 08:33:28.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.564" level="INFO">VALUE: [1.5969999999990159e-06, 3.665999999999392e-06, 6.2090000000000756e-06, 8.722999999998676e-06, 8.723000000002146e-06, 3.0840000000004197e-06, 2.8199999999971304e-06, 4.027000000000197e-06, 7.916999999999647e-06, 6.972000000000922e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 4.8339999999987004e-06, 1.4719999999988909e-06, 2.2779999999979206e-06, 8.457999999999383e-06, 8.568999999999938e-06, 2.54200000000121e-06, 6.431000000001186e-06, 2.151999999998322e-06, 5.61199999999859e-06, 4.693999999999532e-06, 5.499999999998562e-06, 6.986000000000492e-06, 4.027000000000197e-06]</msg>
<status status="PASS" starttime="20201110 08:33:28.562" endtime="20201110 08:33:28.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.558" endtime="20201110 08:33:28.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.567" endtime="20201110 08:33:28.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.570" endtime="20201110 08:33:28.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.569" endtime="20201110 08:33:28.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.565" endtime="20201110 08:33:28.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.210" endtime="20201110 08:33:28.591"></status>
</kw>
<msg timestamp="20201110 08:33:28.591" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.599" endtime="20201110 08:33:28.612"></status>
</kw>
<msg timestamp="20201110 08:33:28.613" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.597" endtime="20201110 08:33:28.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.614" endtime="20201110 08:33:28.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.617" endtime="20201110 08:33:28.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.595" endtime="20201110 08:33:28.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.593" endtime="20201110 08:33:28.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.631" endtime="20201110 08:33:28.902"></status>
</kw>
<msg timestamp="20201110 08:33:28.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018761431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.629" endtime="20201110 08:33:28.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018761431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.905" endtime="20201110 08:33:28.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.910" endtime="20201110 08:33:28.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.625" endtime="20201110 08:33:28.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.622" endtime="20201110 08:33:28.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.917" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:28.916" endtime="20201110 08:33:28.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.921" level="INFO">VALUE: [{'time': 0.018758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018761431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018766389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.018770819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018776056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236999999998215e-06, 'source_diff': 5.236999999998215e-06}, {'time': 0.018778458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4020000000020414e-06, 'source_diff': 2.4020000000020414e-06}, {'time': 0.018785833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.018789875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.018795764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018814167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.018820458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018822861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.018828778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018830236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018834431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.018837764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018842597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018848222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018856014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.018865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018867028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018875472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018882181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018890361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.018893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6949999999970053e-06, 'source_diff': 2.6949999999970053e-06}, {'time': 0.018896583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.018899639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.018901486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018906444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.018915847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018922833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018930208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018938278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.018942153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018946569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018950583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.01896025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.667000000001397e-06, 'source_diff': 9.667000000001397e-06}, {'time': 0.018968708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018975819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018977306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4869999999979344e-06, 'source_diff': 1.4869999999979344e-06}, {'time': 0.018978639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.018986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.018994889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019003472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019010319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019013528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2089999999970753e-06, 'source_diff': 3.2089999999970753e-06}, {'time': 0.019019694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:28.918" endtime="20201110 08:33:28.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.914" endtime="20201110 08:33:28.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:28.937" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:28.923" endtime="20201110 08:33:28.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.941" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:28.940" endtime="20201110 08:33:28.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.944" level="INFO">VALUE: {'eventsource_diff': [0, 2.7779999999984206e-06, 4.958000000002821e-06, 4.429999999999712e-06, 5.236999999998215e-06, 2.4020000000020414e-06, 7.374999999996967e-06, 4.04200000000271e-06, 5.8889999999985065e-06, 6.235999999999742e-06, 9.874999999999468e-06, 2.29200000000096e-06, 6.291000000002017e-06, 2.4029999999980456e-06, 5.917000000001116e-06, 1.457999999999321e-06, 4.1949999999985055e-06, 3.333000000001196e-06, 4.832999999999227e-06, 5.625000000002156e-06, 7.791999999999522e-06, 8.985999999999023e-06, 2.02800000000114e-06, 8.443999999999813e-06, 6.709000000000576e-06, 8.179999999999993e-06, 2.6949999999970053e-06, 3.5270000000031665e-06, 3.0559999999978105e-06, 1.846999999999266e-06, 4.958000000002821e-06, 9.402999999998107e-06, 3.750000000000281e-06, 3.236000000000211e-06, 7.375000000000437e-06, 8.069999999998911e-06, 3.875000000000406e-06, 4.416000000000142e-06, 4.014000000000101e-06, 9.667000000001397e-06, 8.457999999999383e-06, 7.111000000000617e-06, 1.4869999999979344e-06, 1.332999999999196e-06, 7.403000000003046e-06, 8.846999999999328e-06, 8.582999999999508e-06, 6.847000000000797e-06, 3.2089999999970753e-06, 6.166000000001892e-06], 'diff': [0, 2.7779999999984206e-06, 4.958000000002821e-06, 4.429999999999712e-06, 5.236999999998215e-06, 2.4020000000020414e-06, 7.374999999996967e-06, 4.04200000000271e-06, 5.8889999999985065e-06, 6.235999999999742e-06, 9.874999999999468e-06, 2.29200000000096e-06, 6.291000000002017e-06, 2.4029999999980456e-06, 5.917000000001116e-06, 1.457999999999321e-06, 4.1949999999985055e-06, 3.333000000001196e-06, 4.832999999999227e-06, 5.625000000002156e-06, 7.791999999999522e-06, 8.985999999999023e-06, 2.02800000000114e-06, 8.443999999999813e-06, 6.709000000000576e-06, 8.179999999999993e-06, 2.6949999999970053e-06, 3.5270000000031665e-06, 3.0559999999978105e-06, 1.846999999999266e-06, 4.958000000002821e-06, 9.402999999998107e-06, 3.750000000000281e-06, 3.236000000000211e-06, 7.375000000000437e-06, 8.069999999998911e-06, 3.875000000000406e-06, 4.416000000000142e-06, 4.014000000000101e-06, 9.667000000001397e-06, 8.457999999999383e-06, 7.111000000000617e-06, 1.4869999999979344e-06, 1.332999999999196e-06, 7.403000000003046e-06, 8.846999999999328e-06, 8.582999999999508e-06, 6.847000000000797e-06, 3.2089999999970753e-06, 6.166000000001892e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018758653, 0.018761431, 0.018766389, 0.018770819, 0.018776056, 0.018778458, 0.018785833, 0.018789875, 0.018795764, 0.018802, 0.018811875, 0.018814167, 0.018820458, 0.018822861, 0.018828778, 0.018830236, 0.018834431, 0.018837764, 0.018842597, 0.018848222, 0.018856014, 0.018865, 0.018867028, 0.018875472, 0.018882181, 0.018890361, 0.018893056, 0.018896583, 0.018899639, 0.018901486, 0.018906444, 0.018915847, 0.018919597, 0.018922833, 0.018930208, 0.018938278, 0.018942153, 0.018946569, 0.018950583, 0.01896025, 0.018968708, 0.018975819, 0.018977306, 0.018978639, 0.018986042, 0.018994889, 0.019003472, 0.019010319, 0.019013528, 0.019019694]}</msg>
<status status="PASS" starttime="20201110 08:33:28.942" endtime="20201110 08:33:28.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.938" endtime="20201110 08:33:28.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.949" level="INFO">${RESULT} = [{'time': 0.018761431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018770819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:28.946" endtime="20201110 08:33:28.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:28.957" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:28.950" endtime="20201110 08:33:28.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:28.960" endtime="20201110 08:33:28.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.964" level="INFO">VALUE: [2.7779999999984206e-06, 4.429999999999712e-06, 2.4020000000020414e-06, 4.04200000000271e-06, 6.235999999999742e-06, 2.29200000000096e-06, 2.4029999999980456e-06, 1.457999999999321e-06, 3.333000000001196e-06, 5.625000000002156e-06, 8.985999999999023e-06, 8.443999999999813e-06, 8.179999999999993e-06, 3.5270000000031665e-06, 1.846999999999266e-06, 9.402999999998107e-06, 3.236000000000211e-06, 8.069999999998911e-06, 4.416000000000142e-06, 9.667000000001397e-06, 7.111000000000617e-06, 1.332999999999196e-06, 8.846999999999328e-06, 6.847000000000797e-06, 6.166000000001892e-06]</msg>
<status status="PASS" starttime="20201110 08:33:28.963" endtime="20201110 08:33:28.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.958" endtime="20201110 08:33:28.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.967" endtime="20201110 08:33:28.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.971" endtime="20201110 08:33:28.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.969" endtime="20201110 08:33:28.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.966" endtime="20201110 08:33:28.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.592" endtime="20201110 08:33:28.992"></status>
</kw>
<msg timestamp="20201110 08:33:28.992" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.000" endtime="20201110 08:33:29.010"></status>
</kw>
<msg timestamp="20201110 08:33:29.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.998" endtime="20201110 08:33:29.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.011" endtime="20201110 08:33:29.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.014" endtime="20201110 08:33:29.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.996" endtime="20201110 08:33:29.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.994" endtime="20201110 08:33:29.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.023" endtime="20201110 08:33:29.308"></status>
</kw>
<msg timestamp="20201110 08:33:29.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018898292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.022" endtime="20201110 08:33:29.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018898292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.311" endtime="20201110 08:33:29.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.317" endtime="20201110 08:33:29.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.019" endtime="20201110 08:33:29.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.017" endtime="20201110 08:33:29.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.324" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:29.323" endtime="20201110 08:33:29.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.327" level="INFO">VALUE: [{'time': 0.018889458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018898292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.018905125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.018908208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.018911014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018915583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018919875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.01892875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018937736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.018940278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018944431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018950597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018955833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018959986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.153000000003265e-06, 'source_diff': 4.153000000003265e-06}, {'time': 0.018961903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018964403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.018968444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018976208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.018984556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.018992861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.018995958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018999958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.019007083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.019013778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.019018472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.694000000003001e-06, 'source_diff': 4.694000000003001e-06}, {'time': 0.019027333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019029736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.019039681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.945000000000787e-06, 'source_diff': 9.945000000000787e-06}, {'time': 0.019048528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019053097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.019057792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019065986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.019067597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.01907175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019076444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.694000000003001e-06, 'source_diff': 4.694000000003001e-06}, {'time': 0.019077917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.019086236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.019093653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4169999999991465e-06, 'source_diff': 7.4169999999991465e-06}, {'time': 0.019096167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.019104083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916000000000173e-06, 'source_diff': 7.916000000000173e-06}, {'time': 0.019112542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.019119403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.01912125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019128097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019135208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.01914475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.019149972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.019154528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.019159889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:29.325" endtime="20201110 08:33:29.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.320" endtime="20201110 08:33:29.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:29.344" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:29.330" endtime="20201110 08:33:29.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.348" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:29.347" endtime="20201110 08:33:29.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.351" level="INFO">VALUE: {'eventsource_diff': [0, 8.833999999999231e-06, 6.8329999999977575e-06, 3.083000000000946e-06, 2.80600000000103e-06, 4.568999999999407e-06, 4.291999999999491e-06, 8.875000000001937e-06, 8.985999999999023e-06, 2.54200000000121e-06, 4.152999999999796e-06, 6.165999999998423e-06, 5.235999999998742e-06, 4.153000000003265e-06, 1.9169999999971155e-06, 2.5000000000025002e-06, 4.040999999999767e-06, 7.764000000000382e-06, 8.347999999998301e-06, 8.305000000000118e-06, 3.097000000000516e-06, 4.000000000000531e-06, 2.9729999999998646e-06, 4.152000000000322e-06, 6.694999999997536e-06, 4.694000000003001e-06, 8.860999999998898e-06, 2.4029999999980456e-06, 9.945000000000787e-06, 8.846999999999328e-06, 4.569000000002876e-06, 4.6949999999990055e-06, 8.193999999999563e-06, 1.6109999999985858e-06, 4.152999999999796e-06, 4.694000000003001e-06, 1.4729999999983645e-06, 8.318999999999688e-06, 7.4169999999991465e-06, 2.51400000000207e-06, 7.916000000000173e-06, 8.458999999998856e-06, 6.861000000000367e-06, 1.846999999999266e-06, 6.847000000000797e-06, 7.111000000000617e-06, 9.541999999997802e-06, 5.222000000002641e-06, 4.555999999999311e-06, 5.360999999998867e-06], 'diff': [0, 8.833999999999231e-06, 6.8329999999977575e-06, 3.083000000000946e-06, 2.80600000000103e-06, 4.568999999999407e-06, 4.291999999999491e-06, 8.875000000001937e-06, 8.985999999999023e-06, 2.54200000000121e-06, 4.152999999999796e-06, 6.165999999998423e-06, 5.235999999998742e-06, 4.153000000003265e-06, 1.9169999999971155e-06, 2.5000000000025002e-06, 4.040999999999767e-06, 7.764000000000382e-06, 8.347999999998301e-06, 8.305000000000118e-06, 3.097000000000516e-06, 4.000000000000531e-06, 2.9729999999998646e-06, 4.152000000000322e-06, 6.694999999997536e-06, 4.694000000003001e-06, 8.860999999998898e-06, 2.4029999999980456e-06, 9.945000000000787e-06, 8.846999999999328e-06, 4.569000000002876e-06, 4.6949999999990055e-06, 8.193999999999563e-06, 1.6109999999985858e-06, 4.152999999999796e-06, 4.694000000003001e-06, 1.4729999999983645e-06, 8.318999999999688e-06, 7.4169999999991465e-06, 2.51400000000207e-06, 7.916000000000173e-06, 8.458999999998856e-06, 6.861000000000367e-06, 1.846999999999266e-06, 6.847000000000797e-06, 7.111000000000617e-06, 9.541999999997802e-06, 5.222000000002641e-06, 4.555999999999311e-06, 5.360999999998867e-06], 'sourcetime': [0.018889458, 0.018898292, 0.018905125, 0.018908208, 0.018911014, 0.018915583, 0.018919875, 0.01892875, 0.018937736, 0.018940278, 0.018944431, 0.018950597, 0.018955833, 0.018959986, 0.018961903, 0.018964403, 0.018968444, 0.018976208, 0.018984556, 0.018992861, 0.018995958, 0.018999958, 0.019002931, 0.019007083, 0.019013778, 0.019018472, 0.019027333, 0.019029736, 0.019039681, 0.019048528, 0.019053097, 0.019057792, 0.019065986, 0.019067597, 0.01907175, 0.019076444, 0.019077917, 0.019086236, 0.019093653, 0.019096167, 0.019104083, 0.019112542, 0.019119403, 0.01912125, 0.019128097, 0.019135208, 0.01914475, 0.019149972, 0.019154528, 0.019159889]}</msg>
<status status="PASS" starttime="20201110 08:33:29.349" endtime="20201110 08:33:29.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.345" endtime="20201110 08:33:29.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.355" level="INFO">${RESULT} = [{'time': 0.018898292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.018908208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.353" endtime="20201110 08:33:29.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:29.364" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:29.357" endtime="20201110 08:33:29.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.368" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:29.367" endtime="20201110 08:33:29.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.371" level="INFO">VALUE: [8.833999999999231e-06, 3.083000000000946e-06, 4.568999999999407e-06, 8.875000000001937e-06, 2.54200000000121e-06, 6.165999999998423e-06, 4.153000000003265e-06, 2.5000000000025002e-06, 7.764000000000382e-06, 8.305000000000118e-06, 4.000000000000531e-06, 4.152000000000322e-06, 4.694000000003001e-06, 2.4029999999980456e-06, 8.846999999999328e-06, 4.6949999999990055e-06, 1.6109999999985858e-06, 4.694000000003001e-06, 8.318999999999688e-06, 2.51400000000207e-06, 8.458999999998856e-06, 1.846999999999266e-06, 7.111000000000617e-06, 5.222000000002641e-06, 5.360999999998867e-06]</msg>
<status status="PASS" starttime="20201110 08:33:29.369" endtime="20201110 08:33:29.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.365" endtime="20201110 08:33:29.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.374" endtime="20201110 08:33:29.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.378" endtime="20201110 08:33:29.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.376" endtime="20201110 08:33:29.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.372" endtime="20201110 08:33:29.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.992" endtime="20201110 08:33:29.398"></status>
</kw>
<msg timestamp="20201110 08:33:29.399" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.406" endtime="20201110 08:33:29.416"></status>
</kw>
<msg timestamp="20201110 08:33:29.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.405" endtime="20201110 08:33:29.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.418" endtime="20201110 08:33:29.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.420" endtime="20201110 08:33:29.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.402" endtime="20201110 08:33:29.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.400" endtime="20201110 08:33:29.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.431" endtime="20201110 08:33:29.701"></status>
</kw>
<msg timestamp="20201110 08:33:29.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018686806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.429" endtime="20201110 08:33:29.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018679583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018686806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.704" endtime="20201110 08:33:29.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.710" endtime="20201110 08:33:29.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.425" endtime="20201110 08:33:29.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.423" endtime="20201110 08:33:29.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.717" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:29.716" endtime="20201110 08:33:29.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.721" level="INFO">VALUE: [{'time': 0.018679583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018686806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.018694042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.018701833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.018709361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018713375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018723319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999997843e-06, 'source_diff': 9.943999999997843e-06}, {'time': 0.018728819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.018732694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018740625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.01874625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018752431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018756167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018765833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.018775236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.018783694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.018787708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018792944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018795208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.018797625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018802472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018811847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.018814681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.018821639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.018825667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.018829417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018835861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.443999999997813e-06, 'source_diff': 6.443999999997813e-06}, {'time': 0.018842875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.01884625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.018851569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018857069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.018861764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.018865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018868056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018871944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.018879319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.018886569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018892597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018897028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018906167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.018911653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018916347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018921986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018925736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018935542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.018945194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.018949486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018956736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.249999999996842e-06, 'source_diff': 7.249999999996842e-06}, {'time': 0.018958347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018961028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:29.718" endtime="20201110 08:33:29.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.713" endtime="20201110 08:33:29.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:29.736" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:29.723" endtime="20201110 08:33:29.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.740" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:29.739" endtime="20201110 08:33:29.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.743" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 7.2230000000006456e-06, 7.236000000000742e-06, 7.791000000000048e-06, 7.527999999999702e-06, 4.014000000000101e-06, 9.943999999997843e-06, 5.500000000002031e-06, 3.875000000000406e-06, 7.930999999999216e-06, 5.624999999998687e-06, 6.181000000000936e-06, 3.736000000000711e-06, 9.665999999998454e-06, 9.403000000001577e-06, 8.457999999999383e-06, 4.014000000000101e-06, 5.235999999998742e-06, 2.26400000000182e-06, 2.4169999999976155e-06, 4.847000000002266e-06, 9.374999999998967e-06, 2.8340000000001697e-06, 6.958000000001352e-06, 4.027999999999671e-06, 3.750000000000281e-06, 6.443999999997813e-06, 7.013999999999632e-06, 3.374999999999906e-06, 5.319000000000157e-06, 5.500000000002031e-06, 4.6949999999990055e-06, 3.750000000000281e-06, 2.54200000000121e-06, 3.888000000000502e-06, 7.374999999996967e-06, 7.250000000000312e-06, 6.028000000001671e-06, 4.430999999999186e-06, 9.139000000001757e-06, 5.485999999998992e-06, 4.693999999999532e-06, 5.6389999999982565e-06, 3.750000000000281e-06, 9.806000000001092e-06, 9.651999999998884e-06, 4.29200000000296e-06, 7.249999999996842e-06, 1.6110000000020552e-06, 2.681000000000905e-06], 'diff': [0, 7.2230000000006456e-06, 7.236000000000742e-06, 7.791000000000048e-06, 7.527999999999702e-06, 4.014000000000101e-06, 9.943999999997843e-06, 5.500000000002031e-06, 3.875000000000406e-06, 7.930999999999216e-06, 5.624999999998687e-06, 6.181000000000936e-06, 3.736000000000711e-06, 9.665999999998454e-06, 9.403000000001577e-06, 8.457999999999383e-06, 4.014000000000101e-06, 5.235999999998742e-06, 2.26400000000182e-06, 2.4169999999976155e-06, 4.847000000002266e-06, 9.374999999998967e-06, 2.8340000000001697e-06, 6.958000000001352e-06, 4.027999999999671e-06, 3.750000000000281e-06, 6.443999999997813e-06, 7.013999999999632e-06, 3.374999999999906e-06, 5.319000000000157e-06, 5.500000000002031e-06, 4.6949999999990055e-06, 3.750000000000281e-06, 2.54200000000121e-06, 3.888000000000502e-06, 7.374999999996967e-06, 7.250000000000312e-06, 6.028000000001671e-06, 4.430999999999186e-06, 9.139000000001757e-06, 5.485999999998992e-06, 4.693999999999532e-06, 5.6389999999982565e-06, 3.750000000000281e-06, 9.806000000001092e-06, 9.651999999998884e-06, 4.29200000000296e-06, 7.249999999996842e-06, 1.6110000000020552e-06, 2.681000000000905e-06], 'sourcetime': [0.018679583, 0.018686806, 0.018694042, 0.018701833, 0.018709361, 0.018713375, 0.018723319, 0.018728819, 0.018732694, 0.018740625, 0.01874625, 0.018752431, 0.018756167, 0.018765833, 0.018775236, 0.018783694, 0.018787708, 0.018792944, 0.018795208, 0.018797625, 0.018802472, 0.018811847, 0.018814681, 0.018821639, 0.018825667, 0.018829417, 0.018835861, 0.018842875, 0.01884625, 0.018851569, 0.018857069, 0.018861764, 0.018865514, 0.018868056, 0.018871944, 0.018879319, 0.018886569, 0.018892597, 0.018897028, 0.018906167, 0.018911653, 0.018916347, 0.018921986, 0.018925736, 0.018935542, 0.018945194, 0.018949486, 0.018956736, 0.018958347, 0.018961028]}</msg>
<status status="PASS" starttime="20201110 08:33:29.741" endtime="20201110 08:33:29.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.737" endtime="20201110 08:33:29.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.748" level="INFO">${RESULT} = [{'time': 0.018686806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.018701833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:29.745" endtime="20201110 08:33:29.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:29.756" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:29.749" endtime="20201110 08:33:29.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.761" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:29.760" endtime="20201110 08:33:29.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.763" level="INFO">VALUE: [7.2230000000006456e-06, 7.791000000000048e-06, 4.014000000000101e-06, 5.500000000002031e-06, 7.930999999999216e-06, 6.181000000000936e-06, 9.665999999998454e-06, 8.457999999999383e-06, 5.235999999998742e-06, 2.4169999999976155e-06, 9.374999999998967e-06, 6.958000000001352e-06, 3.750000000000281e-06, 7.013999999999632e-06, 5.319000000000157e-06, 4.6949999999990055e-06, 2.54200000000121e-06, 7.374999999996967e-06, 6.028000000001671e-06, 9.139000000001757e-06, 4.693999999999532e-06, 3.750000000000281e-06, 9.651999999998884e-06, 7.249999999996842e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201110 08:33:29.762" endtime="20201110 08:33:29.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.757" endtime="20201110 08:33:29.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.767" endtime="20201110 08:33:29.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.770" endtime="20201110 08:33:29.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.769" endtime="20201110 08:33:29.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.765" endtime="20201110 08:33:29.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.399" endtime="20201110 08:33:29.791"></status>
</kw>
<msg timestamp="20201110 08:33:29.791" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.799" endtime="20201110 08:33:29.810"></status>
</kw>
<msg timestamp="20201110 08:33:29.810" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.798" endtime="20201110 08:33:29.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.811" endtime="20201110 08:33:29.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.814" endtime="20201110 08:33:29.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.795" endtime="20201110 08:33:29.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.793" endtime="20201110 08:33:29.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.823" endtime="20201110 08:33:30.092"></status>
</kw>
<msg timestamp="20201110 08:33:30.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:29.822" endtime="20201110 08:33:30.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:30.095" endtime="20201110 08:33:30.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.101" endtime="20201110 08:33:30.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.819" endtime="20201110 08:33:30.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.817" endtime="20201110 08:33:30.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.108" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:30.107" endtime="20201110 08:33:30.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.111" level="INFO">VALUE: [{'time': 0.01962825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.019636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.019639361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.01964525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.019654639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.019659083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.019661347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.019664028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019668861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019675167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019684958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.019691, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.019693278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.019700403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.019708306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.019713806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.019723056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.019730458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402000000000103e-06, 'source_diff': 7.402000000000103e-06}, {'time': 0.019737014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.019740903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019746542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.019750917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019757153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.019762514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019764292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019770556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.019773361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.019776333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.019781542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.0197845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.019791347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019796569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019800194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.019809597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.403000000001577e-06, 'source_diff': 9.403000000001577e-06}, {'time': 0.019817792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019823139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019832278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.019838444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.019846278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.019855486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019860056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.019869167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.019871847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019879222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.019887306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.08400000000195e-06, 'source_diff': 8.08400000000195e-06}, {'time': 0.019889819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512999999999127e-06, 'source_diff': 2.512999999999127e-06}, {'time': 0.019897333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019906458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.019911153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:30.109" endtime="20201110 08:33:30.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.104" endtime="20201110 08:33:30.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:30.127" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:30.114" endtime="20201110 08:33:30.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.131" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:30.130" endtime="20201110 08:33:30.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.134" level="INFO">VALUE: {'eventsource_diff': [0, 2.5139999999986007e-06, 5.903000000001546e-06, 2.694000000001001e-06, 5.8889999999985065e-06, 9.389000000002007e-06, 4.443999999999282e-06, 2.2639999999983507e-06, 2.681000000000905e-06, 4.832999999999227e-06, 6.306000000001061e-06, 9.790999999998579e-06, 6.042000000001241e-06, 2.27800000000139e-06, 7.124999999996717e-06, 7.903000000000077e-06, 5.500000000002031e-06, 9.249999999998842e-06, 7.402000000000103e-06, 6.556000000001311e-06, 3.888999999999976e-06, 5.6389999999982565e-06, 4.375000000000906e-06, 6.235999999999742e-06, 5.360999999998867e-06, 1.77800000000089e-06, 6.264000000002351e-06, 2.804999999998087e-06, 2.972000000000391e-06, 5.2089999999990755e-06, 2.958000000000821e-06, 6.847000000000797e-06, 5.221999999999172e-06, 3.625000000000156e-06, 9.403000000001577e-06, 8.194999999999036e-06, 5.346999999999297e-06, 9.138999999998287e-06, 6.166000000001892e-06, 7.833999999998231e-06, 9.208000000000133e-06, 4.57000000000235e-06, 9.110999999999148e-06, 2.6800000000014312e-06, 7.374999999996967e-06, 8.08400000000195e-06, 2.512999999999127e-06, 7.514000000000132e-06, 9.124999999998717e-06, 4.695000000002475e-06], 'diff': [0, 2.5139999999986007e-06, 5.903000000001546e-06, 2.694000000001001e-06, 5.8889999999985065e-06, 9.389000000002007e-06, 4.443999999999282e-06, 2.2639999999983507e-06, 2.681000000000905e-06, 4.832999999999227e-06, 6.306000000001061e-06, 9.790999999998579e-06, 6.042000000001241e-06, 2.27800000000139e-06, 7.124999999996717e-06, 7.903000000000077e-06, 5.500000000002031e-06, 9.249999999998842e-06, 7.402000000000103e-06, 6.556000000001311e-06, 3.888999999999976e-06, 5.6389999999982565e-06, 4.375000000000906e-06, 6.235999999999742e-06, 5.360999999998867e-06, 1.77800000000089e-06, 6.264000000002351e-06, 2.804999999998087e-06, 2.972000000000391e-06, 5.2089999999990755e-06, 2.958000000000821e-06, 6.847000000000797e-06, 5.221999999999172e-06, 3.625000000000156e-06, 9.403000000001577e-06, 8.194999999999036e-06, 5.346999999999297e-06, 9.138999999998287e-06, 6.166000000001892e-06, 7.833999999998231e-06, 9.208000000000133e-06, 4.57000000000235e-06, 9.110999999999148e-06, 2.6800000000014312e-06, 7.374999999996967e-06, 8.08400000000195e-06, 2.512999999999127e-06, 7.514000000000132e-06, 9.124999999998717e-06, 4.695000000002475e-06], 'sourcetime': [0.01962825, 0.019630764, 0.019636667, 0.019639361, 0.01964525, 0.019654639, 0.019659083, 0.019661347, 0.019664028, 0.019668861, 0.019675167, 0.019684958, 0.019691, 0.019693278, 0.019700403, 0.019708306, 0.019713806, 0.019723056, 0.019730458, 0.019737014, 0.019740903, 0.019746542, 0.019750917, 0.019757153, 0.019762514, 0.019764292, 0.019770556, 0.019773361, 0.019776333, 0.019781542, 0.0197845, 0.019791347, 0.019796569, 0.019800194, 0.019809597, 0.019817792, 0.019823139, 0.019832278, 0.019838444, 0.019846278, 0.019855486, 0.019860056, 0.019869167, 0.019871847, 0.019879222, 0.019887306, 0.019889819, 0.019897333, 0.019906458, 0.019911153]}</msg>
<status status="PASS" starttime="20201110 08:33:30.132" endtime="20201110 08:33:30.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.128" endtime="20201110 08:33:30.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.139" level="INFO">${RESULT} = [{'time': 0.019630764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.019639361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:30.136" endtime="20201110 08:33:30.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:30.147" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:30.140" endtime="20201110 08:33:30.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:30.151" endtime="20201110 08:33:30.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.154" level="INFO">VALUE: [2.5139999999986007e-06, 2.694000000001001e-06, 9.389000000002007e-06, 2.2639999999983507e-06, 4.832999999999227e-06, 9.790999999998579e-06, 2.27800000000139e-06, 7.903000000000077e-06, 9.249999999998842e-06, 6.556000000001311e-06, 5.6389999999982565e-06, 6.235999999999742e-06, 1.77800000000089e-06, 2.804999999998087e-06, 5.2089999999990755e-06, 6.847000000000797e-06, 3.625000000000156e-06, 8.194999999999036e-06, 9.138999999998287e-06, 7.833999999998231e-06, 4.57000000000235e-06, 2.6800000000014312e-06, 8.08400000000195e-06, 7.514000000000132e-06, 4.695000000002475e-06]</msg>
<status status="PASS" starttime="20201110 08:33:30.153" endtime="20201110 08:33:30.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.148" endtime="20201110 08:33:30.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.158" endtime="20201110 08:33:30.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.161" endtime="20201110 08:33:30.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.160" endtime="20201110 08:33:30.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.156" endtime="20201110 08:33:30.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.792" endtime="20201110 08:33:30.182"></status>
</kw>
<msg timestamp="20201110 08:33:30.182" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.191" endtime="20201110 08:33:30.201"></status>
</kw>
<msg timestamp="20201110 08:33:30.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.189" endtime="20201110 08:33:30.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.202" endtime="20201110 08:33:30.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.205" endtime="20201110 08:33:30.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.186" endtime="20201110 08:33:30.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.184" endtime="20201110 08:33:30.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.214" endtime="20201110 08:33:30.484"></status>
</kw>
<msg timestamp="20201110 08:33:30.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.213" endtime="20201110 08:33:30.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.487" endtime="20201110 08:33:30.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.492" endtime="20201110 08:33:30.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.210" endtime="20201110 08:33:30.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.208" endtime="20201110 08:33:30.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.499" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:30.498" endtime="20201110 08:33:30.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.503" level="INFO">VALUE: [{'time': 0.019599847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.019612736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.019619153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.019622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.019632431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597999999999551e-06, 'source_diff': 9.597999999999551e-06}, {'time': 0.019639556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000000187e-06, 'source_diff': 7.125000000000187e-06}, {'time': 0.019647194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.638000000000783e-06, 'source_diff': 7.638000000000783e-06}, {'time': 0.01965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.019653833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.019661819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.019665569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.019667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.019676708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402000000002103e-06, 'source_diff': 9.402000000002103e-06}, {'time': 0.019680125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.019689986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019699917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.019707292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.019722375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.019731194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.019735764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.019738556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.019742319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763000000000377e-06, 'source_diff': 3.763000000000377e-06}, {'time': 0.019743833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019748639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.019750236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019757083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019763514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430999999997716e-06, 'source_diff': 6.430999999997716e-06}, {'time': 0.019770625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.01977975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.019785528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.019789542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.019796125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.019805153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.019809597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.444000000002751e-06, 'source_diff': 4.444000000002751e-06}, {'time': 0.019817208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.019823764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556000000001311e-06, 'source_diff': 6.556000000001311e-06}, {'time': 0.019831944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019836917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.01984375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.019852208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.019862028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019866847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.019881347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.019889653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.019893292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.019898639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.0199075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:30.500" endtime="20201110 08:33:30.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.496" endtime="20201110 08:33:30.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:30.519" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:30.505" endtime="20201110 08:33:30.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.523" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:30.522" endtime="20201110 08:33:30.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.527" level="INFO">VALUE: {'eventsource_diff': [0, 8.083999999998481e-06, 4.805000000000087e-06, 6.417000000001616e-06, 3.679999999998962e-06, 9.597999999999551e-06, 7.125000000000187e-06, 7.638000000000783e-06, 2.80600000000103e-06, 3.832999999998227e-06, 7.986000000001492e-06, 3.750000000000281e-06, 1.7369999999981844e-06, 9.402000000002103e-06, 3.4169999999986156e-06, 9.860999999999898e-06, 9.931000000001217e-06, 7.375000000000437e-06, 5.235999999998742e-06, 9.847000000000328e-06, 8.819000000000188e-06, 4.5699999999988805e-06, 2.79200000000146e-06, 3.763000000000377e-06, 1.5139999999976006e-06, 4.805999999999561e-06, 1.5970000000024853e-06, 6.847000000000797e-06, 6.430999999997716e-06, 7.111000000000617e-06, 9.124999999998717e-06, 5.778000000001421e-06, 4.014000000000101e-06, 6.583000000000977e-06, 9.027999999997732e-06, 4.444000000002751e-06, 7.6109999999976474e-06, 6.556000000001311e-06, 8.179999999999993e-06, 4.972999999998395e-06, 6.833000000001227e-06, 8.457999999999383e-06, 9.820000000000662e-06, 4.818999999999657e-06, 4.680999999999436e-06, 9.819000000001188e-06, 8.305999999999591e-06, 3.6389999999997258e-06, 5.346999999999297e-06, 8.861000000002367e-06], 'diff': [0, 8.083999999998481e-06, 4.805000000000087e-06, 6.417000000001616e-06, 3.679999999998962e-06, 9.597999999999551e-06, 7.125000000000187e-06, 7.638000000000783e-06, 2.80600000000103e-06, 3.832999999998227e-06, 7.986000000001492e-06, 3.750000000000281e-06, 1.7369999999981844e-06, 9.402000000002103e-06, 3.4169999999986156e-06, 9.860999999999898e-06, 9.931000000001217e-06, 7.375000000000437e-06, 5.235999999998742e-06, 9.847000000000328e-06, 8.819000000000188e-06, 4.5699999999988805e-06, 2.79200000000146e-06, 3.763000000000377e-06, 1.5139999999976006e-06, 4.805999999999561e-06, 1.5970000000024853e-06, 6.847000000000797e-06, 6.430999999997716e-06, 7.111000000000617e-06, 9.124999999998717e-06, 5.778000000001421e-06, 4.014000000000101e-06, 6.583000000000977e-06, 9.027999999997732e-06, 4.444000000002751e-06, 7.6109999999976474e-06, 6.556000000001311e-06, 8.179999999999993e-06, 4.972999999998395e-06, 6.833000000001227e-06, 8.457999999999383e-06, 9.820000000000662e-06, 4.818999999999657e-06, 4.680999999999436e-06, 9.819000000001188e-06, 8.305999999999591e-06, 3.6389999999997258e-06, 5.346999999999297e-06, 8.861000000002367e-06], 'sourcetime': [0.019599847, 0.019607931, 0.019612736, 0.019619153, 0.019622833, 0.019632431, 0.019639556, 0.019647194, 0.01965, 0.019653833, 0.019661819, 0.019665569, 0.019667306, 0.019676708, 0.019680125, 0.019689986, 0.019699917, 0.019707292, 0.019712528, 0.019722375, 0.019731194, 0.019735764, 0.019738556, 0.019742319, 0.019743833, 0.019748639, 0.019750236, 0.019757083, 0.019763514, 0.019770625, 0.01977975, 0.019785528, 0.019789542, 0.019796125, 0.019805153, 0.019809597, 0.019817208, 0.019823764, 0.019831944, 0.019836917, 0.01984375, 0.019852208, 0.019862028, 0.019866847, 0.019871528, 0.019881347, 0.019889653, 0.019893292, 0.019898639, 0.0199075]}</msg>
<status status="PASS" starttime="20201110 08:33:30.525" endtime="20201110 08:33:30.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.520" endtime="20201110 08:33:30.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.531" level="INFO">${RESULT} = [{'time': 0.019607931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.019619153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.529" endtime="20201110 08:33:30.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:30.540" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:30.532" endtime="20201110 08:33:30.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.544" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:30.543" endtime="20201110 08:33:30.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.546" level="INFO">VALUE: [8.083999999998481e-06, 6.417000000001616e-06, 9.597999999999551e-06, 7.638000000000783e-06, 3.832999999998227e-06, 3.750000000000281e-06, 9.402000000002103e-06, 9.860999999999898e-06, 7.375000000000437e-06, 9.847000000000328e-06, 4.5699999999988805e-06, 3.763000000000377e-06, 4.805999999999561e-06, 6.847000000000797e-06, 7.111000000000617e-06, 5.778000000001421e-06, 6.583000000000977e-06, 4.444000000002751e-06, 6.556000000001311e-06, 4.972999999998395e-06, 8.457999999999383e-06, 4.818999999999657e-06, 9.819000000001188e-06, 3.6389999999997258e-06, 8.861000000002367e-06]</msg>
<status status="PASS" starttime="20201110 08:33:30.545" endtime="20201110 08:33:30.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.540" endtime="20201110 08:33:30.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.550" endtime="20201110 08:33:30.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.553" endtime="20201110 08:33:30.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.552" endtime="20201110 08:33:30.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.548" endtime="20201110 08:33:30.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.183" endtime="20201110 08:33:30.575"></status>
</kw>
<msg timestamp="20201110 08:33:30.575" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.583" endtime="20201110 08:33:30.593"></status>
</kw>
<msg timestamp="20201110 08:33:30.593" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.581" endtime="20201110 08:33:30.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.596" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.594" endtime="20201110 08:33:30.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.597" endtime="20201110 08:33:30.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.579" endtime="20201110 08:33:30.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.577" endtime="20201110 08:33:30.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.606" endtime="20201110 08:33:30.876"></status>
</kw>
<msg timestamp="20201110 08:33:30.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018746528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.605" endtime="20201110 08:33:30.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018746528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.879" endtime="20201110 08:33:30.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.884" endtime="20201110 08:33:30.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.602" endtime="20201110 08:33:30.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.600" endtime="20201110 08:33:30.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.891" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:30.890" endtime="20201110 08:33:30.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.894" level="INFO">VALUE: [{'time': 0.018742667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018746528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018753236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.018758069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018763292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8200000000006e-06, 'source_diff': 2.8200000000006e-06}, {'time': 0.018767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018773625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.018783417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.0187865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.018796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.018802736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.018809181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.018815222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.018821792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.570000000000881e-06, 'source_diff': 6.570000000000881e-06}, {'time': 0.018826889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018832792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.018841653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018849167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.01885575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583000000000977e-06, 'source_diff': 6.583000000000977e-06}, {'time': 0.018865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.018869958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.01887225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.018882181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.931000000001217e-06, 'source_diff': 9.931000000001217e-06}, {'time': 0.018884444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.262999999998877e-06, 'source_diff': 2.262999999998877e-06}, {'time': 0.018893306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861999999998371e-06, 'source_diff': 8.861999999998371e-06}, {'time': 0.018898958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.018901222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.018903625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018912097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018923625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018932625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.018942139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018951167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.01895275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018957028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018963736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.018968306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.018974611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.018982931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.32000000000263e-06, 'source_diff': 8.32000000000263e-06}, {'time': 0.018992069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.019001583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.019005069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.019008431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3619999999998096e-06, 'source_diff': 3.3619999999998096e-06}, {'time': 0.019015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.019021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9029999999990765e-06, 'source_diff': 6.9029999999990765e-06}, {'time': 0.019023583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019029347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.019037264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:30.892" endtime="20201110 08:33:30.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.887" endtime="20201110 08:33:30.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:30.910" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:30.897" endtime="20201110 08:33:30.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.914" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:30.913" endtime="20201110 08:33:30.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.918" level="INFO">VALUE: {'eventsource_diff': [0, 3.8609999999973665e-06, 6.708000000001102e-06, 4.832999999999227e-06, 2.403000000001515e-06, 2.8200000000006e-06, 4.429999999999712e-06, 5.9029999999980765e-06, 9.792000000001522e-06, 3.083000000000946e-06, 9.666999999997927e-06, 6.569000000001407e-06, 6.445000000000756e-06, 6.040999999998298e-06, 6.570000000000881e-06, 5.096999999999047e-06, 5.903000000001546e-06, 8.860999999998898e-06, 7.514000000000132e-06, 6.583000000000977e-06, 9.249999999998842e-06, 4.957999999999352e-06, 2.29200000000096e-06, 9.931000000001217e-06, 2.262999999998877e-06, 8.861999999998371e-06, 5.652000000001822e-06, 2.2639999999983507e-06, 2.403000000001515e-06, 8.471999999998953e-06, 4.277999999999921e-06, 7.250000000000312e-06, 9.000000000002062e-06, 9.513999999998662e-06, 9.028000000001202e-06, 1.582999999999446e-06, 4.277999999999921e-06, 6.7079999999976325e-06, 4.57000000000235e-06, 6.304999999998118e-06, 8.32000000000263e-06, 9.137999999998814e-06, 9.513999999998662e-06, 3.486000000000461e-06, 3.3619999999998096e-06, 6.569000000001407e-06, 6.9029999999990765e-06, 1.6800000000004311e-06, 5.7639999999983815e-06, 7.917000000003116e-06], 'diff': [0, 3.8609999999973665e-06, 6.708000000001102e-06, 4.832999999999227e-06, 2.403000000001515e-06, 2.8200000000006e-06, 4.429999999999712e-06, 5.9029999999980765e-06, 9.792000000001522e-06, 3.083000000000946e-06, 9.666999999997927e-06, 6.569000000001407e-06, 6.445000000000756e-06, 6.040999999998298e-06, 6.570000000000881e-06, 5.096999999999047e-06, 5.903000000001546e-06, 8.860999999998898e-06, 7.514000000000132e-06, 6.583000000000977e-06, 9.249999999998842e-06, 4.957999999999352e-06, 2.29200000000096e-06, 9.931000000001217e-06, 2.262999999998877e-06, 8.861999999998371e-06, 5.652000000001822e-06, 2.2639999999983507e-06, 2.403000000001515e-06, 8.471999999998953e-06, 4.277999999999921e-06, 7.250000000000312e-06, 9.000000000002062e-06, 9.513999999998662e-06, 9.028000000001202e-06, 1.582999999999446e-06, 4.277999999999921e-06, 6.7079999999976325e-06, 4.57000000000235e-06, 6.304999999998118e-06, 8.32000000000263e-06, 9.137999999998814e-06, 9.513999999998662e-06, 3.486000000000461e-06, 3.3619999999998096e-06, 6.569000000001407e-06, 6.9029999999990765e-06, 1.6800000000004311e-06, 5.7639999999983815e-06, 7.917000000003116e-06], 'sourcetime': [0.018742667, 0.018746528, 0.018753236, 0.018758069, 0.018760472, 0.018763292, 0.018767722, 0.018773625, 0.018783417, 0.0187865, 0.018796167, 0.018802736, 0.018809181, 0.018815222, 0.018821792, 0.018826889, 0.018832792, 0.018841653, 0.018849167, 0.01885575, 0.018865, 0.018869958, 0.01887225, 0.018882181, 0.018884444, 0.018893306, 0.018898958, 0.018901222, 0.018903625, 0.018912097, 0.018916375, 0.018923625, 0.018932625, 0.018942139, 0.018951167, 0.01895275, 0.018957028, 0.018963736, 0.018968306, 0.018974611, 0.018982931, 0.018992069, 0.019001583, 0.019005069, 0.019008431, 0.019015, 0.019021903, 0.019023583, 0.019029347, 0.019037264]}</msg>
<status status="PASS" starttime="20201110 08:33:30.916" endtime="20201110 08:33:30.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.911" endtime="20201110 08:33:30.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.922" level="INFO">${RESULT} = [{'time': 0.018746528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.018758069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:30.919" endtime="20201110 08:33:30.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:30.931" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:30.923" endtime="20201110 08:33:30.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.935" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:30.934" endtime="20201110 08:33:30.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.938" level="INFO">VALUE: [3.8609999999973665e-06, 4.832999999999227e-06, 2.8200000000006e-06, 5.9029999999980765e-06, 3.083000000000946e-06, 6.569000000001407e-06, 6.040999999998298e-06, 5.096999999999047e-06, 8.860999999998898e-06, 6.583000000000977e-06, 4.957999999999352e-06, 9.931000000001217e-06, 8.861999999998371e-06, 2.2639999999983507e-06, 8.471999999998953e-06, 7.250000000000312e-06, 9.513999999998662e-06, 1.582999999999446e-06, 6.7079999999976325e-06, 6.304999999998118e-06, 9.137999999998814e-06, 3.486000000000461e-06, 6.569000000001407e-06, 1.6800000000004311e-06, 7.917000000003116e-06]</msg>
<status status="PASS" starttime="20201110 08:33:30.936" endtime="20201110 08:33:30.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.932" endtime="20201110 08:33:30.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.941" endtime="20201110 08:33:30.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.945" endtime="20201110 08:33:30.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.943" endtime="20201110 08:33:30.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.939" endtime="20201110 08:33:30.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.576" endtime="20201110 08:33:30.965"></status>
</kw>
<msg timestamp="20201110 08:33:30.966" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.974" endtime="20201110 08:33:30.984"></status>
</kw>
<msg timestamp="20201110 08:33:30.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.972" endtime="20201110 08:33:30.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.985" endtime="20201110 08:33:30.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.988" endtime="20201110 08:33:30.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.969" endtime="20201110 08:33:30.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.968" endtime="20201110 08:33:30.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.997" endtime="20201110 08:33:31.267"></status>
</kw>
<msg timestamp="20201110 08:33:31.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018715069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.995" endtime="20201110 08:33:31.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018715069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.270" endtime="20201110 08:33:31.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.275" endtime="20201110 08:33:31.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.993" endtime="20201110 08:33:31.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.991" endtime="20201110 08:33:31.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.282" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:31.281" endtime="20201110 08:33:31.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.286" level="INFO">VALUE: [{'time': 0.018715069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.167000000000835e-06, 'source_diff': 2.167000000000835e-06}, {'time': 0.018723069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.018731542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.018739583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.018744681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.09799999999852e-06, 'source_diff': 5.09799999999852e-06}, {'time': 0.018751792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018757694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.901999999998603e-06, 'source_diff': 5.901999999998603e-06}, {'time': 0.018764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.018774056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.018777708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.018783722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018786292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.018789889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018795444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.018798069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018799681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}, {'time': 0.018803306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018807472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018811875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018816611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018821806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018825556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018835389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.018836847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018843208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222999999999176e-06, 'source_diff': 9.222999999999176e-06}, {'time': 0.018859264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.833000000001227e-06, 'source_diff': 6.833000000001227e-06}, {'time': 0.018867306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018872417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018876431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018878708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2770000000019164e-06, 'source_diff': 2.2770000000019164e-06}, {'time': 0.018887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.018891847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018898694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018904861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018910514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018915472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018923, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018930236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.018934806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.018939208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.018944347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018947403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018956806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.018963903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.01897275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018977722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018982028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.018989389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:31.283" endtime="20201110 08:33:31.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.278" endtime="20201110 08:33:31.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:31.302" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:31.288" endtime="20201110 08:33:31.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.306" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:31.305" endtime="20201110 08:33:31.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.309" level="INFO">VALUE: {'eventsource_diff': [0, 2.167000000000835e-06, 5.8329999999967574e-06, 8.473000000001896e-06, 8.041000000000298e-06, 5.09799999999852e-06, 7.111000000000617e-06, 5.901999999998603e-06, 6.8480000000002705e-06, 9.514000000002132e-06, 3.651999999999822e-06, 6.0139999999986316e-06, 2.5700000000003498e-06, 3.597000000001016e-06, 5.555000000000837e-06, 2.6249999999991558e-06, 1.6119999999980594e-06, 3.625000000000156e-06, 4.165999999999892e-06, 4.403000000000046e-06, 4.736000000001711e-06, 5.1949999999995056e-06, 3.750000000000281e-06, 9.833000000000758e-06, 1.457999999999321e-06, 6.360999999999867e-06, 9.222999999999176e-06, 6.833000000001227e-06, 8.041999999999772e-06, 5.110999999998617e-06, 4.014000000000101e-06, 2.2770000000019164e-06, 9.249999999998842e-06, 3.888999999999976e-06, 6.847000000000797e-06, 6.166999999997896e-06, 5.653000000001296e-06, 4.957999999999352e-06, 7.527999999999702e-06, 7.236000000000742e-06, 4.5699999999988805e-06, 4.402000000000572e-06, 5.139000000001226e-06, 3.05600000000128e-06, 9.402999999998107e-06, 7.097000000001047e-06, 8.846999999999328e-06, 4.971999999998922e-06, 4.30600000000253e-06, 7.360999999997397e-06], 'diff': [0, 2.167000000000835e-06, 5.8329999999967574e-06, 8.473000000001896e-06, 8.041000000000298e-06, 5.09799999999852e-06, 7.111000000000617e-06, 5.901999999998603e-06, 6.8480000000002705e-06, 9.514000000002132e-06, 3.651999999999822e-06, 6.0139999999986316e-06, 2.5700000000003498e-06, 3.597000000001016e-06, 5.555000000000837e-06, 2.6249999999991558e-06, 1.6119999999980594e-06, 3.625000000000156e-06, 4.165999999999892e-06, 4.403000000000046e-06, 4.736000000001711e-06, 5.1949999999995056e-06, 3.750000000000281e-06, 9.833000000000758e-06, 1.457999999999321e-06, 6.360999999999867e-06, 9.222999999999176e-06, 6.833000000001227e-06, 8.041999999999772e-06, 5.110999999998617e-06, 4.014000000000101e-06, 2.2770000000019164e-06, 9.249999999998842e-06, 3.888999999999976e-06, 6.847000000000797e-06, 6.166999999997896e-06, 5.653000000001296e-06, 4.957999999999352e-06, 7.527999999999702e-06, 7.236000000000742e-06, 4.5699999999988805e-06, 4.402000000000572e-06, 5.139000000001226e-06, 3.05600000000128e-06, 9.402999999998107e-06, 7.097000000001047e-06, 8.846999999999328e-06, 4.971999999998922e-06, 4.30600000000253e-06, 7.360999999997397e-06], 'sourcetime': [0.018715069, 0.018717236, 0.018723069, 0.018731542, 0.018739583, 0.018744681, 0.018751792, 0.018757694, 0.018764542, 0.018774056, 0.018777708, 0.018783722, 0.018786292, 0.018789889, 0.018795444, 0.018798069, 0.018799681, 0.018803306, 0.018807472, 0.018811875, 0.018816611, 0.018821806, 0.018825556, 0.018835389, 0.018836847, 0.018843208, 0.018852431, 0.018859264, 0.018867306, 0.018872417, 0.018876431, 0.018878708, 0.018887958, 0.018891847, 0.018898694, 0.018904861, 0.018910514, 0.018915472, 0.018923, 0.018930236, 0.018934806, 0.018939208, 0.018944347, 0.018947403, 0.018956806, 0.018963903, 0.01897275, 0.018977722, 0.018982028, 0.018989389]}</msg>
<status status="PASS" starttime="20201110 08:33:31.307" endtime="20201110 08:33:31.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.303" endtime="20201110 08:33:31.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.314" level="INFO">${RESULT} = [{'time': 0.018717236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.167000000000835e-06, 'source_diff': 2.167000000000835e-06}, {'time': 0.018731542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.311" endtime="20201110 08:33:31.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:31.322" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:31.315" endtime="20201110 08:33:31.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:31.325" endtime="20201110 08:33:31.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.329" level="INFO">VALUE: [2.167000000000835e-06, 8.473000000001896e-06, 5.09799999999852e-06, 5.901999999998603e-06, 9.514000000002132e-06, 6.0139999999986316e-06, 3.597000000001016e-06, 2.6249999999991558e-06, 3.625000000000156e-06, 4.403000000000046e-06, 5.1949999999995056e-06, 9.833000000000758e-06, 6.360999999999867e-06, 6.833000000001227e-06, 5.110999999998617e-06, 2.2770000000019164e-06, 3.888999999999976e-06, 6.166999999997896e-06, 4.957999999999352e-06, 7.236000000000742e-06, 4.402000000000572e-06, 3.05600000000128e-06, 7.097000000001047e-06, 4.971999999998922e-06, 7.360999999997397e-06]</msg>
<status status="PASS" starttime="20201110 08:33:31.328" endtime="20201110 08:33:31.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.323" endtime="20201110 08:33:31.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.332" endtime="20201110 08:33:31.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.336" endtime="20201110 08:33:31.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.334" endtime="20201110 08:33:31.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.331" endtime="20201110 08:33:31.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.966" endtime="20201110 08:33:31.357"></status>
</kw>
<msg timestamp="20201110 08:33:31.357" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.365" endtime="20201110 08:33:31.375"></status>
</kw>
<msg timestamp="20201110 08:33:31.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.363" endtime="20201110 08:33:31.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.376" endtime="20201110 08:33:31.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.379" endtime="20201110 08:33:31.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.361" endtime="20201110 08:33:31.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.359" endtime="20201110 08:33:31.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.388" endtime="20201110 08:33:31.657"></status>
</kw>
<msg timestamp="20201110 08:33:31.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018848417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.387" endtime="20201110 08:33:31.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018848417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.660" endtime="20201110 08:33:31.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.666" endtime="20201110 08:33:31.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.384" endtime="20201110 08:33:31.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.382" endtime="20201110 08:33:31.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.672" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:31.671" endtime="20201110 08:33:31.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.676" level="INFO">VALUE: [{'time': 0.018843014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018848417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018858028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.018863653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018869028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018876958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929999999999743e-06, 'source_diff': 7.929999999999743e-06}, {'time': 0.018879889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018887139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.018891569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018893847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.018898819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018907389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.018914236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018919194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018923889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.018928722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018938028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.018943236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018952889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.018959056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018966167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.018975014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018977694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.018982042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018991139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.018994875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.019003583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.019010583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019016194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.019022778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.584000000000451e-06, 'source_diff': 6.584000000000451e-06}, {'time': 0.019026931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019034583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652000000000353e-06, 'source_diff': 7.652000000000353e-06}, {'time': 0.019038611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.0190405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019047597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019055264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.019062347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.083000000001477e-06, 'source_diff': 7.083000000001477e-06}, {'time': 0.019068653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019073486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.019076431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.019078319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.019086375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.019092806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.019096431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.019100597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019103264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019112792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019120306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019123125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:31.673" endtime="20201110 08:33:31.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.669" endtime="20201110 08:33:31.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:31.692" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:31.679" endtime="20201110 08:33:31.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.696" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:31.695" endtime="20201110 08:33:31.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.699" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.402999999997576e-06, 9.610999999999648e-06, 5.625000000002156e-06, 5.374999999998437e-06, 7.929999999999743e-06, 2.931000000001155e-06, 7.250000000000312e-06, 4.429999999999712e-06, 2.2779999999979206e-06, 4.972000000002391e-06, 8.569999999999411e-06, 6.847000000000797e-06, 4.957999999999352e-06, 4.6949999999990055e-06, 4.832999999999227e-06, 9.306000000000592e-06, 5.207999999999602e-06, 9.653000000001827e-06, 6.166999999997896e-06, 7.111000000000617e-06, 8.846999999999328e-06, 2.6800000000014312e-06, 4.34800000000124e-06, 9.096999999999578e-06, 3.736000000000711e-06, 1.7919999999969904e-06, 6.916000000002642e-06, 7.000000000000062e-06, 5.610999999999117e-06, 6.584000000000451e-06, 4.152999999999796e-06, 7.652000000000353e-06, 4.027999999999671e-06, 1.8889999999979756e-06, 7.097000000001047e-06, 7.666999999999397e-06, 7.083000000001477e-06, 6.306000000001061e-06, 4.832999999999227e-06, 2.945000000000725e-06, 1.887999999998502e-06, 8.055999999999341e-06, 6.431000000001186e-06, 3.625000000000156e-06, 4.165999999999892e-06, 2.6669999999978655e-06, 9.528000000001702e-06, 7.514000000000132e-06, 2.819000000001126e-06], 'diff': [0, 5.402999999997576e-06, 9.610999999999648e-06, 5.625000000002156e-06, 5.374999999998437e-06, 7.929999999999743e-06, 2.931000000001155e-06, 7.250000000000312e-06, 4.429999999999712e-06, 2.2779999999979206e-06, 4.972000000002391e-06, 8.569999999999411e-06, 6.847000000000797e-06, 4.957999999999352e-06, 4.6949999999990055e-06, 4.832999999999227e-06, 9.306000000000592e-06, 5.207999999999602e-06, 9.653000000001827e-06, 6.166999999997896e-06, 7.111000000000617e-06, 8.846999999999328e-06, 2.6800000000014312e-06, 4.34800000000124e-06, 9.096999999999578e-06, 3.736000000000711e-06, 1.7919999999969904e-06, 6.916000000002642e-06, 7.000000000000062e-06, 5.610999999999117e-06, 6.584000000000451e-06, 4.152999999999796e-06, 7.652000000000353e-06, 4.027999999999671e-06, 1.8889999999979756e-06, 7.097000000001047e-06, 7.666999999999397e-06, 7.083000000001477e-06, 6.306000000001061e-06, 4.832999999999227e-06, 2.945000000000725e-06, 1.887999999998502e-06, 8.055999999999341e-06, 6.431000000001186e-06, 3.625000000000156e-06, 4.165999999999892e-06, 2.6669999999978655e-06, 9.528000000001702e-06, 7.514000000000132e-06, 2.819000000001126e-06], 'sourcetime': [0.018843014, 0.018848417, 0.018858028, 0.018863653, 0.018869028, 0.018876958, 0.018879889, 0.018887139, 0.018891569, 0.018893847, 0.018898819, 0.018907389, 0.018914236, 0.018919194, 0.018923889, 0.018928722, 0.018938028, 0.018943236, 0.018952889, 0.018959056, 0.018966167, 0.018975014, 0.018977694, 0.018982042, 0.018991139, 0.018994875, 0.018996667, 0.019003583, 0.019010583, 0.019016194, 0.019022778, 0.019026931, 0.019034583, 0.019038611, 0.0190405, 0.019047597, 0.019055264, 0.019062347, 0.019068653, 0.019073486, 0.019076431, 0.019078319, 0.019086375, 0.019092806, 0.019096431, 0.019100597, 0.019103264, 0.019112792, 0.019120306, 0.019123125]}</msg>
<status status="PASS" starttime="20201110 08:33:31.697" endtime="20201110 08:33:31.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.693" endtime="20201110 08:33:31.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.704" level="INFO">${RESULT} = [{'time': 0.018848417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018863653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.701" endtime="20201110 08:33:31.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:31.712" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:31.705" endtime="20201110 08:33:31.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.716" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:31.715" endtime="20201110 08:33:31.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.719" level="INFO">VALUE: [5.402999999997576e-06, 5.625000000002156e-06, 7.929999999999743e-06, 7.250000000000312e-06, 2.2779999999979206e-06, 8.569999999999411e-06, 4.957999999999352e-06, 4.832999999999227e-06, 5.207999999999602e-06, 6.166999999997896e-06, 8.846999999999328e-06, 4.34800000000124e-06, 3.736000000000711e-06, 6.916000000002642e-06, 5.610999999999117e-06, 4.152999999999796e-06, 4.027999999999671e-06, 7.097000000001047e-06, 7.083000000001477e-06, 4.832999999999227e-06, 1.887999999998502e-06, 6.431000000001186e-06, 4.165999999999892e-06, 9.528000000001702e-06, 2.819000000001126e-06]</msg>
<status status="PASS" starttime="20201110 08:33:31.717" endtime="20201110 08:33:31.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.713" endtime="20201110 08:33:31.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.722" endtime="20201110 08:33:31.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.726" endtime="20201110 08:33:31.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.724" endtime="20201110 08:33:31.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.721" endtime="20201110 08:33:31.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.357" endtime="20201110 08:33:31.747"></status>
</kw>
<msg timestamp="20201110 08:33:31.747" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.755" endtime="20201110 08:33:31.765"></status>
</kw>
<msg timestamp="20201110 08:33:31.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.753" endtime="20201110 08:33:31.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.766" endtime="20201110 08:33:31.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.769" endtime="20201110 08:33:31.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.751" endtime="20201110 08:33:31.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.749" endtime="20201110 08:33:31.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.779" endtime="20201110 08:33:32.049"></status>
</kw>
<msg timestamp="20201110 08:33:32.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018794347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.778" endtime="20201110 08:33:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018794347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.052" endtime="20201110 08:33:32.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.058" endtime="20201110 08:33:32.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.774" endtime="20201110 08:33:32.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.772" endtime="20201110 08:33:32.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.064" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:32.063" endtime="20201110 08:33:32.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.068" level="INFO">VALUE: [{'time': 0.018789681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018794347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018800417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.070000000000381e-06, 'source_diff': 6.070000000000381e-06}, {'time': 0.018809, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.01881425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018823472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999999703e-06, 'source_diff': 9.221999999999703e-06}, {'time': 0.018829097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018834861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018837806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.018843042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018849889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018853236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018858889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018864778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018868264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018874833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.018876861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018882347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018890806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458999999998856e-06, 'source_diff': 8.458999999998856e-06}, {'time': 0.018898847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.01890625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018911861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018920583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.018926097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018929736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018934139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.0189375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018945014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018949708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018952653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.01895425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018961903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018967681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018976125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443999999999813e-06, 'source_diff': 8.443999999999813e-06}, {'time': 0.018983778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018989431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018991333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.01899625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.019006222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.019009819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.019011681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.019013153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019018264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.019025778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019031958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.019033556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019035431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019043917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.019046556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.019054611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:32.065" endtime="20201110 08:33:32.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.061" endtime="20201110 08:33:32.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:32.084" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:32.070" endtime="20201110 08:33:32.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.088" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:32.087" endtime="20201110 08:33:32.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.091" level="INFO">VALUE: {'eventsource_diff': [0, 4.666000000000392e-06, 6.070000000000381e-06, 8.582999999999508e-06, 5.250000000001781e-06, 9.221999999999703e-06, 5.624999999998687e-06, 5.764000000001851e-06, 2.9449999999972554e-06, 5.236000000002211e-06, 6.847000000000797e-06, 3.3469999999972966e-06, 5.653000000001296e-06, 5.8889999999985065e-06, 3.486000000000461e-06, 6.569000000001407e-06, 2.02800000000114e-06, 5.485999999998992e-06, 8.458999999998856e-06, 8.041000000000298e-06, 7.402999999999577e-06, 5.610999999999117e-06, 8.722000000002672e-06, 5.5139999999981315e-06, 3.6389999999997258e-06, 4.403000000000046e-06, 3.361000000000336e-06, 7.514000000000132e-06, 4.693999999999532e-06, 2.945000000000725e-06, 1.5969999999990159e-06, 7.652999999999827e-06, 5.778000000001421e-06, 8.443999999999813e-06, 7.652999999999827e-06, 5.653000000001296e-06, 1.901999999998072e-06, 4.917000000000116e-06, 9.972000000000453e-06, 3.597000000001016e-06, 1.8619999999983095e-06, 1.4720000000023603e-06, 5.110999999998617e-06, 7.514000000000132e-06, 6.180000000001462e-06, 1.5979999999984895e-06, 1.8749999999984057e-06, 8.486000000001992e-06, 2.6389999999987257e-06, 8.054999999999868e-06], 'diff': [0, 4.666000000000392e-06, 6.070000000000381e-06, 8.582999999999508e-06, 5.250000000001781e-06, 9.221999999999703e-06, 5.624999999998687e-06, 5.764000000001851e-06, 2.9449999999972554e-06, 5.236000000002211e-06, 6.847000000000797e-06, 3.3469999999972966e-06, 5.653000000001296e-06, 5.8889999999985065e-06, 3.486000000000461e-06, 6.569000000001407e-06, 2.02800000000114e-06, 5.485999999998992e-06, 8.458999999998856e-06, 8.041000000000298e-06, 7.402999999999577e-06, 5.610999999999117e-06, 8.722000000002672e-06, 5.5139999999981315e-06, 3.6389999999997258e-06, 4.403000000000046e-06, 3.361000000000336e-06, 7.514000000000132e-06, 4.693999999999532e-06, 2.945000000000725e-06, 1.5969999999990159e-06, 7.652999999999827e-06, 5.778000000001421e-06, 8.443999999999813e-06, 7.652999999999827e-06, 5.653000000001296e-06, 1.901999999998072e-06, 4.917000000000116e-06, 9.972000000000453e-06, 3.597000000001016e-06, 1.8619999999983095e-06, 1.4720000000023603e-06, 5.110999999998617e-06, 7.514000000000132e-06, 6.180000000001462e-06, 1.5979999999984895e-06, 1.8749999999984057e-06, 8.486000000001992e-06, 2.6389999999987257e-06, 8.054999999999868e-06], 'sourcetime': [0.018789681, 0.018794347, 0.018800417, 0.018809, 0.01881425, 0.018823472, 0.018829097, 0.018834861, 0.018837806, 0.018843042, 0.018849889, 0.018853236, 0.018858889, 0.018864778, 0.018868264, 0.018874833, 0.018876861, 0.018882347, 0.018890806, 0.018898847, 0.01890625, 0.018911861, 0.018920583, 0.018926097, 0.018929736, 0.018934139, 0.0189375, 0.018945014, 0.018949708, 0.018952653, 0.01895425, 0.018961903, 0.018967681, 0.018976125, 0.018983778, 0.018989431, 0.018991333, 0.01899625, 0.019006222, 0.019009819, 0.019011681, 0.019013153, 0.019018264, 0.019025778, 0.019031958, 0.019033556, 0.019035431, 0.019043917, 0.019046556, 0.019054611]}</msg>
<status status="PASS" starttime="20201110 08:33:32.089" endtime="20201110 08:33:32.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.085" endtime="20201110 08:33:32.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.095" level="INFO">${RESULT} = [{'time': 0.018794347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018809, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:32.093" endtime="20201110 08:33:32.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:32.104" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:32.096" endtime="20201110 08:33:32.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.108" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:32.107" endtime="20201110 08:33:32.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.110" level="INFO">VALUE: [4.666000000000392e-06, 8.582999999999508e-06, 9.221999999999703e-06, 5.764000000001851e-06, 5.236000000002211e-06, 3.3469999999972966e-06, 5.8889999999985065e-06, 6.569000000001407e-06, 5.485999999998992e-06, 8.041000000000298e-06, 5.610999999999117e-06, 5.5139999999981315e-06, 4.403000000000046e-06, 7.514000000000132e-06, 2.945000000000725e-06, 7.652999999999827e-06, 8.443999999999813e-06, 5.653000000001296e-06, 4.917000000000116e-06, 3.597000000001016e-06, 1.4720000000023603e-06, 7.514000000000132e-06, 1.5979999999984895e-06, 8.486000000001992e-06, 8.054999999999868e-06]</msg>
<status status="PASS" starttime="20201110 08:33:32.109" endtime="20201110 08:33:32.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.104" endtime="20201110 08:33:32.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.114" endtime="20201110 08:33:32.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.118" endtime="20201110 08:33:32.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.116" endtime="20201110 08:33:32.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.112" endtime="20201110 08:33:32.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.747" endtime="20201110 08:33:32.138"></status>
</kw>
<msg timestamp="20201110 08:33:32.139" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.147" endtime="20201110 08:33:32.157"></status>
</kw>
<msg timestamp="20201110 08:33:32.158" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.145" endtime="20201110 08:33:32.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.159" endtime="20201110 08:33:32.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.161" endtime="20201110 08:33:32.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.142" endtime="20201110 08:33:32.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.141" endtime="20201110 08:33:32.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.171" endtime="20201110 08:33:32.439"></status>
</kw>
<msg timestamp="20201110 08:33:32.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.169" endtime="20201110 08:33:32.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.443" endtime="20201110 08:33:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.448" endtime="20201110 08:33:32.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.167" endtime="20201110 08:33:32.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.165" endtime="20201110 08:33:32.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.455" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:32.454" endtime="20201110 08:33:32.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.459" level="INFO">VALUE: [{'time': 0.019409306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.776999999999009e-06, 'source_diff': 9.776999999999009e-06}, {'time': 0.019426472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019436431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.019442431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019447986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.019457722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999999773e-06, 'source_diff': 9.735999999999773e-06}, {'time': 0.019463917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.019467389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.019469139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019480389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.019483347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.019490319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.019498778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.459000000002326e-06, 'source_diff': 8.459000000002326e-06}, {'time': 0.019501056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.019508028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.019512875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.019521889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.019531653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.019541597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.019551375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777999999998482e-06, 'source_diff': 9.777999999998482e-06}, {'time': 0.019559847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.019565069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019570292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.019579028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999998773e-06, 'source_diff': 8.735999999998773e-06}, {'time': 0.019587083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.055000000003337e-06, 'source_diff': 8.055000000003337e-06}, {'time': 0.019594458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.019603167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.019609097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.929999999997743e-06, 'source_diff': 5.929999999997743e-06}, {'time': 0.0196135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.019617528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.019624764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.019630403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.019636306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.019637778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019639667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019641681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019644639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.019653889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.019658333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019668653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.019674944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.019676556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.019678111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019687306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.019695889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.019701597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.019706236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:32.457" endtime="20201110 08:33:32.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.452" endtime="20201110 08:33:32.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:32.475" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:32.462" endtime="20201110 08:33:32.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:32.478" endtime="20201110 08:33:32.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.483" level="INFO">VALUE: {'eventsource_diff': [0, 9.776999999999009e-06, 7.389000000000007e-06, 9.959000000000356e-06, 5.999999999999062e-06, 5.555000000000837e-06, 9.735999999999773e-06, 6.195000000000506e-06, 3.472000000000891e-06, 1.7499999999982807e-06, 5.485999999998992e-06, 5.764000000001851e-06, 2.958000000000821e-06, 6.9719999999974525e-06, 8.459000000002326e-06, 2.2779999999979206e-06, 6.972000000000922e-06, 4.846999999998797e-06, 9.014000000001632e-06, 9.763999999998912e-06, 9.944000000001313e-06, 9.777999999998482e-06, 8.472000000002422e-06, 5.221999999999172e-06, 5.222999999998645e-06, 8.735999999998773e-06, 8.055000000003337e-06, 7.374999999996967e-06, 8.709000000002576e-06, 5.929999999997743e-06, 4.403000000000046e-06, 4.027999999999671e-06, 7.236000000000742e-06, 5.639000000001726e-06, 5.9029999999980765e-06, 1.4720000000023603e-06, 1.8889999999979756e-06, 2.01400000000157e-06, 2.9579999999973516e-06, 9.250000000002312e-06, 4.443999999999282e-06, 1.5979999999984895e-06, 8.722000000002672e-06, 6.290999999998548e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 9.195000000000036e-06, 8.582999999999508e-06, 5.708000000000102e-06, 4.6389999999972564e-06], 'diff': [0, 9.776999999999009e-06, 7.389000000000007e-06, 9.959000000000356e-06, 5.999999999999062e-06, 5.555000000000837e-06, 9.735999999999773e-06, 6.195000000000506e-06, 3.472000000000891e-06, 1.7499999999982807e-06, 5.485999999998992e-06, 5.764000000001851e-06, 2.958000000000821e-06, 6.9719999999974525e-06, 8.459000000002326e-06, 2.2779999999979206e-06, 6.972000000000922e-06, 4.846999999998797e-06, 9.014000000001632e-06, 9.763999999998912e-06, 9.944000000001313e-06, 9.777999999998482e-06, 8.472000000002422e-06, 5.221999999999172e-06, 5.222999999998645e-06, 8.735999999998773e-06, 8.055000000003337e-06, 7.374999999996967e-06, 8.709000000002576e-06, 5.929999999997743e-06, 4.403000000000046e-06, 4.027999999999671e-06, 7.236000000000742e-06, 5.639000000001726e-06, 5.9029999999980765e-06, 1.4720000000023603e-06, 1.8889999999979756e-06, 2.01400000000157e-06, 2.9579999999973516e-06, 9.250000000002312e-06, 4.443999999999282e-06, 1.5979999999984895e-06, 8.722000000002672e-06, 6.290999999998548e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 9.195000000000036e-06, 8.582999999999508e-06, 5.708000000000102e-06, 4.6389999999972564e-06], 'sourcetime': [0.019409306, 0.019419083, 0.019426472, 0.019436431, 0.019442431, 0.019447986, 0.019457722, 0.019463917, 0.019467389, 0.019469139, 0.019474625, 0.019480389, 0.019483347, 0.019490319, 0.019498778, 0.019501056, 0.019508028, 0.019512875, 0.019521889, 0.019531653, 0.019541597, 0.019551375, 0.019559847, 0.019565069, 0.019570292, 0.019579028, 0.019587083, 0.019594458, 0.019603167, 0.019609097, 0.0196135, 0.019617528, 0.019624764, 0.019630403, 0.019636306, 0.019637778, 0.019639667, 0.019641681, 0.019644639, 0.019653889, 0.019658333, 0.019659931, 0.019668653, 0.019674944, 0.019676556, 0.019678111, 0.019687306, 0.019695889, 0.019701597, 0.019706236]}</msg>
<status status="PASS" starttime="20201110 08:33:32.481" endtime="20201110 08:33:32.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.476" endtime="20201110 08:33:32.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.487" level="INFO">${RESULT} = [{'time': 0.019419083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.776999999999009e-06, 'source_diff': 9.776999999999009e-06}, {'time': 0.019436431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.484" endtime="20201110 08:33:32.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:32.496" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:32.488" endtime="20201110 08:33:32.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.500" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:32.499" endtime="20201110 08:33:32.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.503" level="INFO">VALUE: [9.776999999999009e-06, 9.959000000000356e-06, 5.555000000000837e-06, 6.195000000000506e-06, 1.7499999999982807e-06, 5.764000000001851e-06, 6.9719999999974525e-06, 2.2779999999979206e-06, 4.846999999998797e-06, 9.763999999998912e-06, 9.777999999998482e-06, 5.221999999999172e-06, 8.735999999998773e-06, 7.374999999996967e-06, 5.929999999997743e-06, 4.027999999999671e-06, 5.639000000001726e-06, 1.4720000000023603e-06, 2.01400000000157e-06, 9.250000000002312e-06, 1.5979999999984895e-06, 6.290999999998548e-06, 1.5550000000003061e-06, 8.582999999999508e-06, 4.6389999999972564e-06]</msg>
<status status="PASS" starttime="20201110 08:33:32.501" endtime="20201110 08:33:32.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.497" endtime="20201110 08:33:32.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.507" endtime="20201110 08:33:32.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.510" endtime="20201110 08:33:32.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.509" endtime="20201110 08:33:32.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.505" endtime="20201110 08:33:32.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.139" endtime="20201110 08:33:32.531"></status>
</kw>
<msg timestamp="20201110 08:33:32.532" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.541" endtime="20201110 08:33:32.552"></status>
</kw>
<msg timestamp="20201110 08:33:32.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.540" endtime="20201110 08:33:32.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.554" endtime="20201110 08:33:32.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.556" endtime="20201110 08:33:32.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.535" endtime="20201110 08:33:32.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.534" endtime="20201110 08:33:32.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.566" endtime="20201110 08:33:32.833"></status>
</kw>
<msg timestamp="20201110 08:33:32.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.564" endtime="20201110 08:33:32.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.836" endtime="20201110 08:33:32.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.842" endtime="20201110 08:33:32.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.562" endtime="20201110 08:33:32.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.560" endtime="20201110 08:33:32.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.849" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:33:32.848" endtime="20201110 08:33:32.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.853" level="INFO">VALUE: [{'time': 0.020774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020781347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.020790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.020797708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.020803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.020806958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.020816222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.020825889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.667000000001397e-06, 'source_diff': 9.667000000001397e-06}, {'time': 0.020829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.020830833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.020833792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.020843056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.020846958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.020855264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.020860375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.020863847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.020866792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.020868403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.020873222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.020878722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.020882903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.020892694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.790999999998579e-06, 'source_diff': 9.790999999998579e-06}, {'time': 0.020894153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.020901167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020902764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.020911764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.020913889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.125000000002125e-06, 'source_diff': 2.125000000002125e-06}, {'time': 0.020921542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.020924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.020926764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.020936028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.020938167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.020943667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.020950653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.020952792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.020954931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1389999999982257e-06, 'source_diff': 2.1389999999982257e-06}, {'time': 0.020963389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999999383e-06, 'source_diff': 8.457999999999383e-06}, {'time': 0.020965444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.020971986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.020981097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.020984847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.020990931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.02099625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.021000542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.021004972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.021010347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.021015028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.681000000002905e-06, 'source_diff': 4.681000000002905e-06}, {'time': 0.021023097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.021027778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.021031556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}]</msg>
<status status="PASS" starttime="20201110 08:33:32.850" endtime="20201110 08:33:32.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.845" endtime="20201110 08:33:32.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:33:32.868" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:33:32.855" endtime="20201110 08:33:32.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.872" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:33:32.871" endtime="20201110 08:33:32.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.876" level="INFO">VALUE: {'eventsource_diff': [0, 6.9719999999974525e-06, 8.972000000002922e-06, 7.389000000000007e-06, 5.624999999998687e-06, 3.625000000000156e-06, 9.263999999998412e-06, 9.667000000001397e-06, 3.222000000000641e-06, 1.7219999999991409e-06, 2.9590000000002947e-06, 9.263999999998412e-06, 3.902000000000072e-06, 8.305999999999591e-06, 5.111000000002086e-06, 3.472000000000891e-06, 2.9449999999972554e-06, 1.6110000000020552e-06, 4.818999999999657e-06, 5.499999999998562e-06, 4.181000000002405e-06, 9.790999999998579e-06, 1.4589999999987946e-06, 7.013999999999632e-06, 1.5970000000024853e-06, 8.999999999998592e-06, 2.125000000002125e-06, 7.652999999999827e-06, 3.3889999999994758e-06, 1.832999999999696e-06, 9.263999999998412e-06, 2.139000000001695e-06, 5.499999999998562e-06, 6.986000000000492e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 8.457999999999383e-06, 2.055000000000806e-06, 6.542000000001741e-06, 9.110999999999148e-06, 3.750000000000281e-06, 6.0839999999999506e-06, 5.319000000000157e-06, 4.291999999999491e-06, 4.429999999999712e-06, 5.374999999998437e-06, 4.681000000002905e-06, 8.068999999999438e-06, 4.680999999999436e-06, 3.7779999999994207e-06], 'diff': [0, 6.9719999999974525e-06, 8.972000000002922e-06, 7.389000000000007e-06, 5.624999999998687e-06, 3.625000000000156e-06, 9.263999999998412e-06, 9.667000000001397e-06, 3.222000000000641e-06, 1.7219999999991409e-06, 2.9590000000002947e-06, 9.263999999998412e-06, 3.902000000000072e-06, 8.305999999999591e-06, 5.111000000002086e-06, 3.472000000000891e-06, 2.9449999999972554e-06, 1.6110000000020552e-06, 4.818999999999657e-06, 5.499999999998562e-06, 4.181000000002405e-06, 9.790999999998579e-06, 1.4589999999987946e-06, 7.013999999999632e-06, 1.5970000000024853e-06, 8.999999999998592e-06, 2.125000000002125e-06, 7.652999999999827e-06, 3.3889999999994758e-06, 1.832999999999696e-06, 9.263999999998412e-06, 2.139000000001695e-06, 5.499999999998562e-06, 6.986000000000492e-06, 2.139000000001695e-06, 2.1389999999982257e-06, 8.457999999999383e-06, 2.055000000000806e-06, 6.542000000001741e-06, 9.110999999999148e-06, 3.750000000000281e-06, 6.0839999999999506e-06, 5.319000000000157e-06, 4.291999999999491e-06, 4.429999999999712e-06, 5.374999999998437e-06, 4.681000000002905e-06, 8.068999999999438e-06, 4.680999999999436e-06, 3.7779999999994207e-06], 'sourcetime': [0.020774375, 0.020781347, 0.020790319, 0.020797708, 0.020803333, 0.020806958, 0.020816222, 0.020825889, 0.020829111, 0.020830833, 0.020833792, 0.020843056, 0.020846958, 0.020855264, 0.020860375, 0.020863847, 0.020866792, 0.020868403, 0.020873222, 0.020878722, 0.020882903, 0.020892694, 0.020894153, 0.020901167, 0.020902764, 0.020911764, 0.020913889, 0.020921542, 0.020924931, 0.020926764, 0.020936028, 0.020938167, 0.020943667, 0.020950653, 0.020952792, 0.020954931, 0.020963389, 0.020965444, 0.020971986, 0.020981097, 0.020984847, 0.020990931, 0.02099625, 0.021000542, 0.021004972, 0.021010347, 0.021015028, 0.021023097, 0.021027778, 0.021031556]}</msg>
<status status="PASS" starttime="20201110 08:33:32.874" endtime="20201110 08:33:32.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.869" endtime="20201110 08:33:32.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.880" level="INFO">${RESULT} = [{'time': 0.020781347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.020797708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:32.878" endtime="20201110 08:33:32.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:32.889" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:32.881" endtime="20201110 08:33:32.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:33:32.892" endtime="20201110 08:33:32.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.896" level="INFO">VALUE: [6.9719999999974525e-06, 7.389000000000007e-06, 3.625000000000156e-06, 9.667000000001397e-06, 1.7219999999991409e-06, 9.263999999998412e-06, 8.305999999999591e-06, 3.472000000000891e-06, 1.6110000000020552e-06, 5.499999999998562e-06, 9.790999999998579e-06, 7.013999999999632e-06, 8.999999999998592e-06, 7.652999999999827e-06, 1.832999999999696e-06, 2.139000000001695e-06, 6.986000000000492e-06, 2.1389999999982257e-06, 2.055000000000806e-06, 9.110999999999148e-06, 6.0839999999999506e-06, 4.291999999999491e-06, 5.374999999998437e-06, 8.068999999999438e-06, 3.7779999999994207e-06]</msg>
<status status="PASS" starttime="20201110 08:33:32.894" endtime="20201110 08:33:32.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.890" endtime="20201110 08:33:32.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.899" endtime="20201110 08:33:32.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.903" endtime="20201110 08:33:32.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.901" endtime="20201110 08:33:32.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.898" endtime="20201110 08:33:32.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.532" endtime="20201110 08:33:32.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.009" endtime="20201110 08:33:32.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.928" endtime="20201110 08:33:32.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.927" endtime="20201110 08:33:32.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.925" endtime="20201110 08:33:32.948"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:24.937" endtime="20201110 08:33:32.949" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.956" endtime="20201110 08:33:32.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.954" endtime="20201110 08:33:32.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.990" endtime="20201110 08:33:33.004"></status>
</kw>
<msg timestamp="20201110 08:33:33.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.988" endtime="20201110 08:33:33.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.005" endtime="20201110 08:33:33.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.010" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:33.008" endtime="20201110 08:33:33.010"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:32.986" endtime="20201110 08:33:33.011"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:32.983" endtime="20201110 08:33:33.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.982" endtime="20201110 08:33:33.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:33.016" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:33.015" endtime="20201110 08:33:33.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.012" endtime="20201110 08:33:33.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.981" endtime="20201110 08:33:33.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.981" endtime="20201110 08:33:33.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.017" endtime="20201110 08:33:33.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.979" endtime="20201110 08:33:33.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.977" endtime="20201110 08:33:33.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.953" endtime="20201110 08:33:33.020"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:33:33.022" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.030" endtime="20201110 08:33:33.043"></status>
</kw>
<msg timestamp="20201110 08:33:33.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.028" endtime="20201110 08:33:33.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.045" endtime="20201110 08:33:33.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.048" endtime="20201110 08:33:33.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.026" endtime="20201110 08:33:33.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.024" endtime="20201110 08:33:33.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.057" endtime="20201110 08:33:33.346"></status>
</kw>
<msg timestamp="20201110 08:33:33.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066076625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.055" endtime="20201110 08:33:33.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066076625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.351" endtime="20201110 08:33:33.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.359" endtime="20201110 08:33:33.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.053" endtime="20201110 08:33:33.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.051" endtime="20201110 08:33:33.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.366" level="INFO">${RESULT} = [{'time': 0.066078014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3890000000044145e-06, 'source_diff': 1.3890000000044145e-06}, {'time': 0.066080931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:33.363" endtime="20201110 08:33:33.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:33.380" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:33.367" endtime="20201110 08:33:33.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.384" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:33.383" endtime="20201110 08:33:33.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.387" level="INFO">VALUE: [1.3890000000044145e-06, 1.0839999999984196e-06, 1.1250000000045945e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1799999999895228e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.082999999998946e-06, 1.1940000000099094e-06, 1.1110000000119635e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.0980000000049284e-06, 1.1390000000111034e-06, 1.1529999999898566e-06, 1.0980000000049284e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.137999999997752e-06, 1.1250000000045945e-06, 1.1800000000034006e-06, 1.1119999999975594e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1669999999963654e-06, 1.096999999991577e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1390000000111034e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.0970000000054547e-06, 1.1109999999980857e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201110 08:33:33.385" endtime="20201110 08:33:33.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.381" endtime="20201110 08:33:33.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.390" endtime="20201110 08:33:33.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.394" endtime="20201110 08:33:33.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.392" endtime="20201110 08:33:33.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.388" endtime="20201110 08:33:33.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.022" endtime="20201110 08:33:33.414"></status>
</kw>
<msg timestamp="20201110 08:33:33.415" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.423" endtime="20201110 08:33:33.436"></status>
</kw>
<msg timestamp="20201110 08:33:33.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.421" endtime="20201110 08:33:33.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.437" endtime="20201110 08:33:33.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.440" endtime="20201110 08:33:33.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.419" endtime="20201110 08:33:33.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.417" endtime="20201110 08:33:33.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.451" endtime="20201110 08:33:33.741"></status>
</kw>
<msg timestamp="20201110 08:33:33.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.449" endtime="20201110 08:33:33.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.745" endtime="20201110 08:33:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.754" endtime="20201110 08:33:33.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.445" endtime="20201110 08:33:33.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.443" endtime="20201110 08:33:33.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.761" level="INFO">${RESULT} = [{'time': 0.020403069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.020411931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:33.757" endtime="20201110 08:33:33.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:33.774" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:33.762" endtime="20201110 08:33:33.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:33.778" endtime="20201110 08:33:33.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.782" level="INFO">VALUE: [1.3609999999983358e-06, 1.1810000000028742e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.0560000000027492e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1120000000010288e-06]</msg>
<status status="PASS" starttime="20201110 08:33:33.780" endtime="20201110 08:33:33.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.776" endtime="20201110 08:33:33.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.785" endtime="20201110 08:33:33.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.795" endtime="20201110 08:33:33.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.793" endtime="20201110 08:33:33.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.783" endtime="20201110 08:33:33.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.416" endtime="20201110 08:33:33.816"></status>
</kw>
<msg timestamp="20201110 08:33:33.816" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.826" endtime="20201110 08:33:33.839"></status>
</kw>
<msg timestamp="20201110 08:33:33.840" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.824" endtime="20201110 08:33:33.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.841" endtime="20201110 08:33:33.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.845" endtime="20201110 08:33:33.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.820" endtime="20201110 08:33:33.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.818" endtime="20201110 08:33:33.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.859" endtime="20201110 08:33:34.147"></status>
</kw>
<msg timestamp="20201110 08:33:34.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.857" endtime="20201110 08:33:34.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.152" endtime="20201110 08:33:34.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.162" endtime="20201110 08:33:34.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.854" endtime="20201110 08:33:34.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.852" endtime="20201110 08:33:34.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.171" level="INFO">${RESULT} = [{'time': 0.023061333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.023071875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.166" endtime="20201110 08:33:34.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:34.196" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:34.173" endtime="20201110 08:33:34.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.204" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:34.200" endtime="20201110 08:33:34.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.207" level="INFO">VALUE: [1.443999999999751e-06, 1.1249999999976557e-06, 1.1120000000010288e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.1249999999976557e-06, 1.1120000000010288e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.153000000000265e-06, 1.1120000000010288e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.1529999999967955e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:34.205" endtime="20201110 08:33:34.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.197" endtime="20201110 08:33:34.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.210" endtime="20201110 08:33:34.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.213" endtime="20201110 08:33:34.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.212" endtime="20201110 08:33:34.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.209" endtime="20201110 08:33:34.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.817" endtime="20201110 08:33:34.234"></status>
</kw>
<msg timestamp="20201110 08:33:34.234" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.242" endtime="20201110 08:33:34.253"></status>
</kw>
<msg timestamp="20201110 08:33:34.254" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.240" endtime="20201110 08:33:34.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.256" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.255" endtime="20201110 08:33:34.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.258" endtime="20201110 08:33:34.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.238" endtime="20201110 08:33:34.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.236" endtime="20201110 08:33:34.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.266" endtime="20201110 08:33:34.558"></status>
</kw>
<msg timestamp="20201110 08:33:34.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:34.265" endtime="20201110 08:33:34.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:34.562" endtime="20201110 08:33:34.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.573" endtime="20201110 08:33:34.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.262" endtime="20201110 08:33:34.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.261" endtime="20201110 08:33:34.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.584" level="INFO">${RESULT} = [{'time': 0.019317486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019319944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:34.581" endtime="20201110 08:33:34.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:34.603" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:34.585" endtime="20201110 08:33:34.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.607" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:34.606" endtime="20201110 08:33:34.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.610" level="INFO">VALUE: [1.4859999999984608e-06, 1.1519999999973218e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.0419999999997098e-06, 1.153000000000265e-06, 1.098000000001459e-06, 1.139000000000695e-06, 1.084000000001889e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.070000000002319e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1119999999975594e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:34.608" endtime="20201110 08:33:34.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.604" endtime="20201110 08:33:34.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.613" endtime="20201110 08:33:34.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.617" endtime="20201110 08:33:34.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.615" endtime="20201110 08:33:34.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.611" endtime="20201110 08:33:34.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.235" endtime="20201110 08:33:34.637"></status>
</kw>
<msg timestamp="20201110 08:33:34.638" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.645" endtime="20201110 08:33:34.657"></status>
</kw>
<msg timestamp="20201110 08:33:34.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.643" endtime="20201110 08:33:34.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.658" endtime="20201110 08:33:34.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.660" endtime="20201110 08:33:34.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.641" endtime="20201110 08:33:34.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.639" endtime="20201110 08:33:34.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.669" endtime="20201110 08:33:34.957"></status>
</kw>
<msg timestamp="20201110 08:33:34.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.668" endtime="20201110 08:33:34.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.961" endtime="20201110 08:33:34.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.969" endtime="20201110 08:33:34.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.665" endtime="20201110 08:33:34.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.664" endtime="20201110 08:33:34.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.976" level="INFO">${RESULT} = [{'time': 0.019368597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019373917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:34.973" endtime="20201110 08:33:34.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:34.989" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:34.977" endtime="20201110 08:33:34.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:34.992" endtime="20201110 08:33:34.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.996" level="INFO">VALUE: [1.4300000000001811e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1120000000010288e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1519999999973218e-06]</msg>
<status status="PASS" starttime="20201110 08:33:34.994" endtime="20201110 08:33:34.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.990" endtime="20201110 08:33:34.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.999" endtime="20201110 08:33:35.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.003" endtime="20201110 08:33:35.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.001" endtime="20201110 08:33:35.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.998" endtime="20201110 08:33:35.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.638" endtime="20201110 08:33:35.023"></status>
</kw>
<msg timestamp="20201110 08:33:35.024" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.031" endtime="20201110 08:33:35.043"></status>
</kw>
<msg timestamp="20201110 08:33:35.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.030" endtime="20201110 08:33:35.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.046" endtime="20201110 08:33:35.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.049" endtime="20201110 08:33:35.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.027" endtime="20201110 08:33:35.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.026" endtime="20201110 08:33:35.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.062" endtime="20201110 08:33:35.346"></status>
</kw>
<msg timestamp="20201110 08:33:35.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019187583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019189, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:35.060" endtime="20201110 08:33:35.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019187583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019189, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:35.350" endtime="20201110 08:33:35.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.358" endtime="20201110 08:33:35.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.056" endtime="20201110 08:33:35.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.054" endtime="20201110 08:33:35.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.364" level="INFO">${RESULT} = [{'time': 0.019189, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019198208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:35.361" endtime="20201110 08:33:35.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:35.378" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:35.366" endtime="20201110 08:33:35.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.382" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:35.381" endtime="20201110 08:33:35.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.384" level="INFO">VALUE: [1.4170000000000849e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.137999999997752e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.0839999999984196e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.0560000000027492e-06, 1.1669999999998348e-06, 1.054999999999806e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201110 08:33:35.383" endtime="20201110 08:33:35.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.379" endtime="20201110 08:33:35.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.388" endtime="20201110 08:33:35.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.391" endtime="20201110 08:33:35.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.390" endtime="20201110 08:33:35.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.386" endtime="20201110 08:33:35.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.024" endtime="20201110 08:33:35.412"></status>
</kw>
<msg timestamp="20201110 08:33:35.412" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.420" endtime="20201110 08:33:35.431"></status>
</kw>
<msg timestamp="20201110 08:33:35.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.418" endtime="20201110 08:33:35.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.434" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.433" endtime="20201110 08:33:35.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.435" endtime="20201110 08:33:35.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.416" endtime="20201110 08:33:35.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.414" endtime="20201110 08:33:35.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.444" endtime="20201110 08:33:35.733"></status>
</kw>
<msg timestamp="20201110 08:33:35.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019418681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.442" endtime="20201110 08:33:35.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019418681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.737" endtime="20201110 08:33:35.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.745" endtime="20201110 08:33:35.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.440" endtime="20201110 08:33:35.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.438" endtime="20201110 08:33:35.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.752" level="INFO">${RESULT} = [{'time': 0.019418681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019421333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:35.748" endtime="20201110 08:33:35.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:35.766" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:35.753" endtime="20201110 08:33:35.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:35.769" endtime="20201110 08:33:35.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.773" level="INFO">VALUE: [1.4170000000000849e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.179999999999931e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:33:35.771" endtime="20201110 08:33:35.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.767" endtime="20201110 08:33:35.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.776" endtime="20201110 08:33:35.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.780" endtime="20201110 08:33:35.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.778" endtime="20201110 08:33:35.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.775" endtime="20201110 08:33:35.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.413" endtime="20201110 08:33:35.800"></status>
</kw>
<msg timestamp="20201110 08:33:35.800" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.808" endtime="20201110 08:33:35.820"></status>
</kw>
<msg timestamp="20201110 08:33:35.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.806" endtime="20201110 08:33:35.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.821" endtime="20201110 08:33:35.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.824" endtime="20201110 08:33:35.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.804" endtime="20201110 08:33:35.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.802" endtime="20201110 08:33:35.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.832" endtime="20201110 08:33:36.114"></status>
</kw>
<msg timestamp="20201110 08:33:36.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019145056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019146444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.831" endtime="20201110 08:33:36.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019145056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019146444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.118" endtime="20201110 08:33:36.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.127" endtime="20201110 08:33:36.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.828" endtime="20201110 08:33:36.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.827" endtime="20201110 08:33:36.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.133" level="INFO">${RESULT} = [{'time': 0.019146444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.387999999998002e-06, 'source_diff': 1.387999999998002e-06}, {'time': 0.019149472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.130" endtime="20201110 08:33:36.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:36.146" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:36.134" endtime="20201110 08:33:36.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.151" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:36.150" endtime="20201110 08:33:36.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.153" level="INFO">VALUE: [1.387999999998002e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1800000000034006e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.068999999999376e-06, 1.1380000000012214e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1110000000015552e-06, 1.137999999997752e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1249999999976557e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201110 08:33:36.152" endtime="20201110 08:33:36.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.147" endtime="20201110 08:33:36.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.157" endtime="20201110 08:33:36.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.160" endtime="20201110 08:33:36.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.158" endtime="20201110 08:33:36.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.155" endtime="20201110 08:33:36.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.801" endtime="20201110 08:33:36.180"></status>
</kw>
<msg timestamp="20201110 08:33:36.181" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.188" endtime="20201110 08:33:36.200"></status>
</kw>
<msg timestamp="20201110 08:33:36.200" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.187" endtime="20201110 08:33:36.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.202" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.201" endtime="20201110 08:33:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.203" endtime="20201110 08:33:36.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.184" endtime="20201110 08:33:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.182" endtime="20201110 08:33:36.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.212" endtime="20201110 08:33:36.494"></status>
</kw>
<msg timestamp="20201110 08:33:36.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019223028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.211" endtime="20201110 08:33:36.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019223028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.499" endtime="20201110 08:33:36.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.507" endtime="20201110 08:33:36.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.208" endtime="20201110 08:33:36.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.207" endtime="20201110 08:33:36.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.513" level="INFO">${RESULT} = [{'time': 0.019223028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019227806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:36.510" endtime="20201110 08:33:36.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:36.527" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:36.514" endtime="20201110 08:33:36.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.531" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:36.530" endtime="20201110 08:33:36.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.533" level="INFO">VALUE: [1.4170000000000849e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.0830000000024154e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.0970000000019853e-06, 1.1119999999975594e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:33:36.532" endtime="20201110 08:33:36.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.528" endtime="20201110 08:33:36.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.537" endtime="20201110 08:33:36.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.540" endtime="20201110 08:33:36.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.539" endtime="20201110 08:33:36.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.535" endtime="20201110 08:33:36.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.181" endtime="20201110 08:33:36.561"></status>
</kw>
<msg timestamp="20201110 08:33:36.561" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.569" endtime="20201110 08:33:36.580"></status>
</kw>
<msg timestamp="20201110 08:33:36.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.567" endtime="20201110 08:33:36.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.581" endtime="20201110 08:33:36.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.583" endtime="20201110 08:33:36.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.564" endtime="20201110 08:33:36.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.563" endtime="20201110 08:33:36.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.592" endtime="20201110 08:33:36.877"></status>
</kw>
<msg timestamp="20201110 08:33:36.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:36.591" endtime="20201110 08:33:36.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019318431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:36.882" endtime="20201110 08:33:36.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.890" endtime="20201110 08:33:36.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.588" endtime="20201110 08:33:36.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.587" endtime="20201110 08:33:36.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.897" level="INFO">${RESULT} = [{'time': 0.019318431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019321875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:36.893" endtime="20201110 08:33:36.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:36.910" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:36.898" endtime="20201110 08:33:36.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.914" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:36.913" endtime="20201110 08:33:36.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.916" level="INFO">VALUE: [1.4309999999996548e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1519999999973218e-06, 1.125000000001125e-06, 1.1119999999975594e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.084000000001889e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:33:36.915" endtime="20201110 08:33:36.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.911" endtime="20201110 08:33:36.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.920" endtime="20201110 08:33:36.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.923" endtime="20201110 08:33:36.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.922" endtime="20201110 08:33:36.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.918" endtime="20201110 08:33:36.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.561" endtime="20201110 08:33:36.944"></status>
</kw>
<msg timestamp="20201110 08:33:36.944" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.952" endtime="20201110 08:33:36.963"></status>
</kw>
<msg timestamp="20201110 08:33:36.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.950" endtime="20201110 08:33:36.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.966" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.965" endtime="20201110 08:33:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.967" endtime="20201110 08:33:36.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.948" endtime="20201110 08:33:36.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.946" endtime="20201110 08:33:36.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.976" endtime="20201110 08:33:37.262"></status>
</kw>
<msg timestamp="20201110 08:33:37.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.974" endtime="20201110 08:33:37.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019283139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.266" endtime="20201110 08:33:37.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.274" endtime="20201110 08:33:37.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.972" endtime="20201110 08:33:37.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.970" endtime="20201110 08:33:37.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.281" level="INFO">${RESULT} = [{'time': 0.019283139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.019288486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.278" endtime="20201110 08:33:37.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:37.296" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:37.282" endtime="20201110 08:33:37.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.300" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:37.299" endtime="20201110 08:33:37.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.302" level="INFO">VALUE: [1.403000000000515e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1120000000010288e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1380000000012214e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1249999999976557e-06]</msg>
<status status="PASS" starttime="20201110 08:33:37.301" endtime="20201110 08:33:37.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.296" endtime="20201110 08:33:37.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.306" endtime="20201110 08:33:37.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.309" endtime="20201110 08:33:37.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.308" endtime="20201110 08:33:37.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.304" endtime="20201110 08:33:37.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.945" endtime="20201110 08:33:37.330"></status>
</kw>
<msg timestamp="20201110 08:33:37.330" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.337" endtime="20201110 08:33:37.349"></status>
</kw>
<msg timestamp="20201110 08:33:37.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.336" endtime="20201110 08:33:37.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.351" endtime="20201110 08:33:37.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.353" endtime="20201110 08:33:37.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.333" endtime="20201110 08:33:37.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.332" endtime="20201110 08:33:37.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.362" endtime="20201110 08:33:37.649"></status>
</kw>
<msg timestamp="20201110 08:33:37.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.360" endtime="20201110 08:33:37.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.653" endtime="20201110 08:33:37.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.661" endtime="20201110 08:33:37.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.358" endtime="20201110 08:33:37.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.356" endtime="20201110 08:33:37.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.668" level="INFO">${RESULT} = [{'time': 0.019389861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019398417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:37.665" endtime="20201110 08:33:37.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:37.681" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:37.669" endtime="20201110 08:33:37.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.685" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:37.684" endtime="20201110 08:33:37.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.688" level="INFO">VALUE: [1.4170000000000849e-06, 1.139000000000695e-06, 1.137999999997752e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.098000000001459e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1120000000010288e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:33:37.687" endtime="20201110 08:33:37.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.682" endtime="20201110 08:33:37.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.691" endtime="20201110 08:33:37.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.695" endtime="20201110 08:33:37.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.693" endtime="20201110 08:33:37.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.690" endtime="20201110 08:33:37.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.330" endtime="20201110 08:33:37.715"></status>
</kw>
<msg timestamp="20201110 08:33:37.716" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.723" endtime="20201110 08:33:37.735"></status>
</kw>
<msg timestamp="20201110 08:33:37.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.722" endtime="20201110 08:33:37.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.737" endtime="20201110 08:33:37.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.740" endtime="20201110 08:33:37.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.719" endtime="20201110 08:33:37.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.717" endtime="20201110 08:33:37.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.749" endtime="20201110 08:33:38.036"></status>
</kw>
<msg timestamp="20201110 08:33:38.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.748" endtime="20201110 08:33:38.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019353583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.040" endtime="20201110 08:33:38.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.049" endtime="20201110 08:33:38.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.745" endtime="20201110 08:33:38.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.743" endtime="20201110 08:33:38.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.055" level="INFO">${RESULT} = [{'time': 0.019353583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019357292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:38.052" endtime="20201110 08:33:38.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:38.068" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:38.056" endtime="20201110 08:33:38.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.073" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:38.072" endtime="20201110 08:33:38.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.075" level="INFO">VALUE: [1.4160000000006112e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1380000000012214e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06]</msg>
<status status="PASS" starttime="20201110 08:33:38.074" endtime="20201110 08:33:38.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.069" endtime="20201110 08:33:38.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.079" endtime="20201110 08:33:38.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.082" endtime="20201110 08:33:38.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.080" endtime="20201110 08:33:38.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.077" endtime="20201110 08:33:38.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.716" endtime="20201110 08:33:38.102"></status>
</kw>
<msg timestamp="20201110 08:33:38.103" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.110" endtime="20201110 08:33:38.121"></status>
</kw>
<msg timestamp="20201110 08:33:38.122" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.109" endtime="20201110 08:33:38.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.123" endtime="20201110 08:33:38.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.125" endtime="20201110 08:33:38.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.106" endtime="20201110 08:33:38.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.104" endtime="20201110 08:33:38.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.134" endtime="20201110 08:33:38.419"></status>
</kw>
<msg timestamp="20201110 08:33:38.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.132" endtime="20201110 08:33:38.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.423" endtime="20201110 08:33:38.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.431" endtime="20201110 08:33:38.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.130" endtime="20201110 08:33:38.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.128" endtime="20201110 08:33:38.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.438" level="INFO">${RESULT} = [{'time': 0.019275069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4019999999975719e-06, 'source_diff': 1.4019999999975719e-06}, {'time': 0.019277569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:38.434" endtime="20201110 08:33:38.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:38.451" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:38.439" endtime="20201110 08:33:38.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.455" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:38.454" endtime="20201110 08:33:38.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.458" level="INFO">VALUE: [1.4019999999975719e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0839999999984196e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.098000000001459e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1119999999975594e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.153000000000265e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201110 08:33:38.456" endtime="20201110 08:33:38.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.452" endtime="20201110 08:33:38.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.461" endtime="20201110 08:33:38.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.464" endtime="20201110 08:33:38.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.463" endtime="20201110 08:33:38.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.459" endtime="20201110 08:33:38.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.103" endtime="20201110 08:33:38.485"></status>
</kw>
<msg timestamp="20201110 08:33:38.485" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.493" endtime="20201110 08:33:38.505"></status>
</kw>
<msg timestamp="20201110 08:33:38.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.491" endtime="20201110 08:33:38.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.508" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.506" endtime="20201110 08:33:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.509" endtime="20201110 08:33:38.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.489" endtime="20201110 08:33:38.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.487" endtime="20201110 08:33:38.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.518" endtime="20201110 08:33:38.807"></status>
</kw>
<msg timestamp="20201110 08:33:38.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.516" endtime="20201110 08:33:38.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.811" endtime="20201110 08:33:38.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.820" endtime="20201110 08:33:38.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.514" endtime="20201110 08:33:38.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.512" endtime="20201110 08:33:38.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.826" level="INFO">${RESULT} = [{'time': 0.019421042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019429708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:38.823" endtime="20201110 08:33:38.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:38.841" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:38.827" endtime="20201110 08:33:38.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.846" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:38.845" endtime="20201110 08:33:38.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.848" level="INFO">VALUE: [1.389000000000945e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1810000000028742e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1380000000012214e-06]</msg>
<status status="PASS" starttime="20201110 08:33:38.847" endtime="20201110 08:33:38.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.842" endtime="20201110 08:33:38.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.855" endtime="20201110 08:33:38.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.859" endtime="20201110 08:33:38.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.857" endtime="20201110 08:33:38.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.854" endtime="20201110 08:33:38.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.486" endtime="20201110 08:33:38.879"></status>
</kw>
<msg timestamp="20201110 08:33:38.880" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.887" endtime="20201110 08:33:38.898"></status>
</kw>
<msg timestamp="20201110 08:33:38.899" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.885" endtime="20201110 08:33:38.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.900" endtime="20201110 08:33:38.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.902" endtime="20201110 08:33:38.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.883" endtime="20201110 08:33:38.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.881" endtime="20201110 08:33:38.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.911" endtime="20201110 08:33:39.198"></status>
</kw>
<msg timestamp="20201110 08:33:39.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.910" endtime="20201110 08:33:39.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019273806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019275236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.203" endtime="20201110 08:33:39.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.211" endtime="20201110 08:33:39.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.907" endtime="20201110 08:33:39.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.905" endtime="20201110 08:33:39.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.218" level="INFO">${RESULT} = [{'time': 0.019275236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019281097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:39.215" endtime="20201110 08:33:39.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:39.232" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:39.219" endtime="20201110 08:33:39.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.237" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:39.236" endtime="20201110 08:33:39.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.239" level="INFO">VALUE: [1.4300000000001811e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1660000000003612e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.0699999999988496e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.193999999999501e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201110 08:33:39.238" endtime="20201110 08:33:39.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.233" endtime="20201110 08:33:39.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.243" endtime="20201110 08:33:39.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.247" endtime="20201110 08:33:39.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.245" endtime="20201110 08:33:39.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.241" endtime="20201110 08:33:39.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.880" endtime="20201110 08:33:39.267"></status>
</kw>
<msg timestamp="20201110 08:33:39.268" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.276" endtime="20201110 08:33:39.287"></status>
</kw>
<msg timestamp="20201110 08:33:39.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.274" endtime="20201110 08:33:39.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.289" endtime="20201110 08:33:39.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.291" endtime="20201110 08:33:39.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.271" endtime="20201110 08:33:39.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.269" endtime="20201110 08:33:39.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.301" endtime="20201110 08:33:39.585"></status>
</kw>
<msg timestamp="20201110 08:33:39.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.299" endtime="20201110 08:33:39.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.590" endtime="20201110 08:33:39.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.598" endtime="20201110 08:33:39.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.296" endtime="20201110 08:33:39.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.295" endtime="20201110 08:33:39.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.605" level="INFO">${RESULT} = [{'time': 0.019864764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019868486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:39.602" endtime="20201110 08:33:39.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:39.619" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:39.606" endtime="20201110 08:33:39.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.623" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:39.622" endtime="20201110 08:33:39.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.626" level="INFO">VALUE: [1.4170000000000849e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.0410000000002362e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1120000000010288e-06, 1.179999999999931e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1659999999968917e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1520000000007913e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:39.625" endtime="20201110 08:33:39.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.620" endtime="20201110 08:33:39.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.630" endtime="20201110 08:33:39.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.633" endtime="20201110 08:33:39.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.632" endtime="20201110 08:33:39.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.628" endtime="20201110 08:33:39.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.268" endtime="20201110 08:33:39.654"></status>
</kw>
<msg timestamp="20201110 08:33:39.654" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.662" endtime="20201110 08:33:39.674"></status>
</kw>
<msg timestamp="20201110 08:33:39.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.661" endtime="20201110 08:33:39.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.675" endtime="20201110 08:33:39.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.678" endtime="20201110 08:33:39.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.658" endtime="20201110 08:33:39.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.656" endtime="20201110 08:33:39.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.687" endtime="20201110 08:33:39.974"></status>
</kw>
<msg timestamp="20201110 08:33:39.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.686" endtime="20201110 08:33:39.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.978" endtime="20201110 08:33:39.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.987" endtime="20201110 08:33:39.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.683" endtime="20201110 08:33:39.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.681" endtime="20201110 08:33:39.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.994" level="INFO">${RESULT} = [{'time': 0.019823833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019829556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:39.990" endtime="20201110 08:33:39.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:40.007" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:39.995" endtime="20201110 08:33:40.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.012" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:40.011" endtime="20201110 08:33:40.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.014" level="INFO">VALUE: [1.4719999999988909e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.1949999999989747e-06, 1.0970000000019853e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:40.013" endtime="20201110 08:33:40.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.008" endtime="20201110 08:33:40.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.018" endtime="20201110 08:33:40.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.022" endtime="20201110 08:33:40.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.020" endtime="20201110 08:33:40.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.017" endtime="20201110 08:33:40.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.655" endtime="20201110 08:33:40.043"></status>
</kw>
<msg timestamp="20201110 08:33:40.043" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.051" endtime="20201110 08:33:40.063"></status>
</kw>
<msg timestamp="20201110 08:33:40.063" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.049" endtime="20201110 08:33:40.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.066" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.064" endtime="20201110 08:33:40.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.067" endtime="20201110 08:33:40.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.047" endtime="20201110 08:33:40.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.045" endtime="20201110 08:33:40.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.076" endtime="20201110 08:33:40.359"></status>
</kw>
<msg timestamp="20201110 08:33:40.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.075" endtime="20201110 08:33:40.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.364" endtime="20201110 08:33:40.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.373" endtime="20201110 08:33:40.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.072" endtime="20201110 08:33:40.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.070" endtime="20201110 08:33:40.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.380" level="INFO">${RESULT} = [{'time': 0.020090569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.020096833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.376" endtime="20201110 08:33:40.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:40.397" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:40.381" endtime="20201110 08:33:40.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.403" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:40.402" endtime="20201110 08:33:40.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.408" level="INFO">VALUE: [1.4160000000006112e-06, 1.0410000000002362e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:33:40.406" endtime="20201110 08:33:40.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.399" endtime="20201110 08:33:40.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.414" endtime="20201110 08:33:40.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.420" endtime="20201110 08:33:40.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.418" endtime="20201110 08:33:40.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.410" endtime="20201110 08:33:40.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.043" endtime="20201110 08:33:40.441"></status>
</kw>
<msg timestamp="20201110 08:33:40.441" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.449" endtime="20201110 08:33:40.460"></status>
</kw>
<msg timestamp="20201110 08:33:40.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.447" endtime="20201110 08:33:40.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.462" endtime="20201110 08:33:40.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.464" endtime="20201110 08:33:40.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.444" endtime="20201110 08:33:40.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.443" endtime="20201110 08:33:40.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.474" endtime="20201110 08:33:40.755"></status>
</kw>
<msg timestamp="20201110 08:33:40.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.472" endtime="20201110 08:33:40.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.760" endtime="20201110 08:33:40.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.768" endtime="20201110 08:33:40.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.469" endtime="20201110 08:33:40.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.468" endtime="20201110 08:33:40.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.776" level="INFO">${RESULT} = [{'time': 0.020004903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.020012208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.772" endtime="20201110 08:33:40.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:40.790" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:40.777" endtime="20201110 08:33:40.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.794" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:40.793" endtime="20201110 08:33:40.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.797" level="INFO">VALUE: [1.4450000000026941e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.137999999997752e-06, 1.0969999999985158e-06, 1.1380000000012214e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.084000000001889e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.1249999999976557e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:33:40.796" endtime="20201110 08:33:40.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.791" endtime="20201110 08:33:40.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.801" endtime="20201110 08:33:40.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.804" endtime="20201110 08:33:40.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.803" endtime="20201110 08:33:40.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.799" endtime="20201110 08:33:40.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.441" endtime="20201110 08:33:40.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.021" endtime="20201110 08:33:40.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.830" endtime="20201110 08:33:40.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.828" endtime="20201110 08:33:40.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.827" endtime="20201110 08:33:40.850"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:32.950" endtime="20201110 08:33:40.850" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.859" endtime="20201110 08:33:40.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.857" endtime="20201110 08:33:40.879"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.892" endtime="20201110 08:33:40.907"></status>
</kw>
<msg timestamp="20201110 08:33:40.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.890" endtime="20201110 08:33:40.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.910" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.908" endtime="20201110 08:33:40.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.913" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:40.911" endtime="20201110 08:33:40.913"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:40.888" endtime="20201110 08:33:40.914"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:40.885" endtime="20201110 08:33:40.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.884" endtime="20201110 08:33:40.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:40.919" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:40.918" endtime="20201110 08:33:40.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.916" endtime="20201110 08:33:40.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.883" endtime="20201110 08:33:40.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.882" endtime="20201110 08:33:40.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.920" endtime="20201110 08:33:40.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.881" endtime="20201110 08:33:40.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.879" endtime="20201110 08:33:40.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.855" endtime="20201110 08:33:40.923"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.932" endtime="20201110 08:33:40.951"></status>
</kw>
<msg timestamp="20201110 08:33:40.951" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.930" endtime="20201110 08:33:40.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.954" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.952" endtime="20201110 08:33:40.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.955" endtime="20201110 08:33:40.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.928" endtime="20201110 08:33:40.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.925" endtime="20201110 08:33:40.958"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.960" endtime="20201110 08:33:40.962"></status>
</kw>
<msg timestamp="20201110 08:33:40.962" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:40.958" endtime="20201110 08:33:40.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.966" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:40.965" endtime="20201110 08:33:40.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.968" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:40.967" endtime="20201110 08:33:40.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.963" endtime="20201110 08:33:40.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.973" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:40.972" endtime="20201110 08:33:40.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.975" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:40.974" endtime="20201110 08:33:40.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.970" endtime="20201110 08:33:40.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.983" endtime="20201110 08:33:41.274"></status>
</kw>
<msg timestamp="20201110 08:33:41.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065990278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065994083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.981" endtime="20201110 08:33:41.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065990278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065994083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.278" endtime="20201110 08:33:41.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.287" endtime="20201110 08:33:41.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.979" endtime="20201110 08:33:41.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.977" endtime="20201110 08:33:41.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.294" level="INFO">${RESULT} = [{'time': 0.065994083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8049999999956174e-06, 'source_diff': 3.8049999999956174e-06}, {'time': 0.066005639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.290" endtime="20201110 08:33:41.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:41.308" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:41.295" endtime="20201110 08:33:41.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.312" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:41.311" endtime="20201110 08:33:41.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.315" level="INFO">VALUE: [3.8049999999956174e-06, 2.9029999999985456e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.8479999999997396e-06, 2.8200000000006e-06, 2.8200000000006e-06, 2.805999999994091e-06, 2.778000000008829e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.8060000000079688e-06, 2.8200000000006e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.819000000001126e-06, 2.7639999999884424e-06, 2.833000000007635e-06, 2.7910000000019863e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.805999999994091e-06, 2.8060000000079688e-06, 2.833000000007635e-06, 2.8200000000006e-06, 2.8200000000006e-06, 2.888999999992037e-06, 2.819000000001126e-06, 2.8060000000079688e-06, 2.805999999994091e-06, 2.805999999994091e-06, 2.777999999994951e-06, 2.805999999994091e-06, 2.8200000000006e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.778000000008829e-06, 2.8049999999946174e-06, 2.777999999994951e-06, 2.833000000007635e-06, 2.819000000001126e-06, 2.8049999999946174e-06, 2.832999999993757e-06, 2.8060000000079688e-06, 2.832999999993757e-06, 2.7909999999881085e-06, 2.805999999994091e-06, 2.79200000000146e-06, 2.8049999999946174e-06]</msg>
<status status="PASS" starttime="20201110 08:33:41.314" endtime="20201110 08:33:41.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.308" endtime="20201110 08:33:41.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.319" endtime="20201110 08:33:41.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.322" endtime="20201110 08:33:41.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.321" endtime="20201110 08:33:41.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.317" endtime="20201110 08:33:41.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.924" endtime="20201110 08:33:41.343"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:40.852" endtime="20201110 08:33:41.343" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.350" endtime="20201110 08:33:41.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.349" endtime="20201110 08:33:41.370"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.385" endtime="20201110 08:33:41.398"></status>
</kw>
<msg timestamp="20201110 08:33:41.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.382" endtime="20201110 08:33:41.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.400" endtime="20201110 08:33:41.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.404" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:41.402" endtime="20201110 08:33:41.405"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:41.380" endtime="20201110 08:33:41.405"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:41.377" endtime="20201110 08:33:41.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.376" endtime="20201110 08:33:41.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:41.410" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:41.409" endtime="20201110 08:33:41.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.407" endtime="20201110 08:33:41.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.375" endtime="20201110 08:33:41.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.374" endtime="20201110 08:33:41.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.412" endtime="20201110 08:33:41.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.373" endtime="20201110 08:33:41.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.371" endtime="20201110 08:33:41.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.348" endtime="20201110 08:33:41.415"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.424" endtime="20201110 08:33:41.463"></status>
</kw>
<msg timestamp="20201110 08:33:41.463" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.422" endtime="20201110 08:33:41.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.466" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.464" endtime="20201110 08:33:41.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.467" endtime="20201110 08:33:41.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.420" endtime="20201110 08:33:41.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.417" endtime="20201110 08:33:41.470"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.472" endtime="20201110 08:33:41.474"></status>
</kw>
<msg timestamp="20201110 08:33:41.474" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:41.471" endtime="20201110 08:33:41.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.478" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:41.477" endtime="20201110 08:33:41.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.480" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:41.479" endtime="20201110 08:33:41.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.475" endtime="20201110 08:33:41.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.485" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:41.484" endtime="20201110 08:33:41.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.488" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:41.487" endtime="20201110 08:33:41.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.482" endtime="20201110 08:33:41.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.496" endtime="20201110 08:33:41.782"></status>
</kw>
<msg timestamp="20201110 08:33:41.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066504069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066518431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.493" endtime="20201110 08:33:41.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066504069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066518431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.786" endtime="20201110 08:33:41.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.795" endtime="20201110 08:33:41.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.491" endtime="20201110 08:33:41.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.489" endtime="20201110 08:33:41.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.802" level="INFO">${RESULT} = [{'time': 0.066518431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4362000000003872e-05, 'source_diff': 1.4362000000003872e-05}, {'time': 0.066929194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.798" endtime="20201110 08:33:41.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:41.818" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:41.803" endtime="20201110 08:33:41.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.824" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:41.822" endtime="20201110 08:33:41.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.826" level="INFO">VALUE: [1.4362000000003872e-05, 1.380499999999174e-05, 1.381899999999825e-05, 1.3847999999996863e-05, 1.3805000000005618e-05, 1.3819000000012127e-05, 1.384699999999739e-05, 1.384699999999739e-05, 1.3805999999991214e-05, 1.381899999999825e-05, 1.3833000000004758e-05, 1.381899999999825e-05, 1.3819999999997723e-05, 1.3833000000004758e-05, 1.3819999999997723e-05, 1.3819000000012127e-05, 1.381899999999825e-05, 1.3763999999999443e-05, 1.386099999999002e-05, 1.3819000000012127e-05, 1.381899999999825e-05, 1.3819999999997723e-05, 1.384699999999739e-05, 1.383299999999088e-05, 1.3833000000004758e-05, 1.381899999999825e-05, 1.3833000000004758e-05, 1.379099999999911e-05, 1.3819999999997723e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.3833000000004758e-05, 1.381899999999825e-05, 1.381899999999825e-05, 1.381899999999825e-05, 1.3819999999997723e-05, 1.383299999999088e-05, 1.3805000000005618e-05, 1.3819999999997723e-05, 1.383299999999088e-05, 1.3862000000003372e-05, 1.3805000000005618e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.3847000000011267e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.383299999999088e-05, 1.3806000000005092e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.825" endtime="20201110 08:33:41.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.820" endtime="20201110 08:33:41.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.829" endtime="20201110 08:33:41.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.833" endtime="20201110 08:33:41.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.831" endtime="20201110 08:33:41.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.828" endtime="20201110 08:33:41.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.415" endtime="20201110 08:33:41.854"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:41.345" endtime="20201110 08:33:41.854" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.861" endtime="20201110 08:33:41.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.860" endtime="20201110 08:33:41.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.895" endtime="20201110 08:33:41.909"></status>
</kw>
<msg timestamp="20201110 08:33:41.910" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.893" endtime="20201110 08:33:41.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.911" endtime="20201110 08:33:41.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.916" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:41.914" endtime="20201110 08:33:41.916"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:41.890" endtime="20201110 08:33:41.917"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:41.888" endtime="20201110 08:33:41.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.886" endtime="20201110 08:33:41.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:41.921" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:41.921" endtime="20201110 08:33:41.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.918" endtime="20201110 08:33:41.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.885" endtime="20201110 08:33:41.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.885" endtime="20201110 08:33:41.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.923" endtime="20201110 08:33:41.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.883" endtime="20201110 08:33:41.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.882" endtime="20201110 08:33:41.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.858" endtime="20201110 08:33:41.926"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.935" endtime="20201110 08:33:42.024"></status>
</kw>
<msg timestamp="20201110 08:33:42.025" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.934" endtime="20201110 08:33:42.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.028" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.026" endtime="20201110 08:33:42.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.029" endtime="20201110 08:33:42.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.931" endtime="20201110 08:33:42.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.929" endtime="20201110 08:33:42.031"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.034" endtime="20201110 08:33:42.035"></status>
</kw>
<msg timestamp="20201110 08:33:42.036" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:42.032" endtime="20201110 08:33:42.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.040" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:42.039" endtime="20201110 08:33:42.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.042" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:42.041" endtime="20201110 08:33:42.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.037" endtime="20201110 08:33:42.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.047" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:42.046" endtime="20201110 08:33:42.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.049" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:42.048" endtime="20201110 08:33:42.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.044" endtime="20201110 08:33:42.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.057" endtime="20201110 08:33:42.351"></status>
</kw>
<msg timestamp="20201110 08:33:42.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067228181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067254556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.055" endtime="20201110 08:33:42.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067228181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067254556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.356" endtime="20201110 08:33:42.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.364" endtime="20201110 08:33:42.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.052" endtime="20201110 08:33:42.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.051" endtime="20201110 08:33:42.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.370" level="INFO">${RESULT} = [{'time': 0.067254556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6374999999995152e-05, 'source_diff': 2.6374999999995152e-05}, {'time': 0.068681778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:42.367" endtime="20201110 08:33:42.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:42.384" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:42.372" endtime="20201110 08:33:42.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.389" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:42.388" endtime="20201110 08:33:42.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.391" level="INFO">VALUE: [2.6374999999995152e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.583300000000288e-05, 2.586100000000202e-05, 2.586100000000202e-05, 2.5832999999989004e-05, 2.5847999999994986e-05, 2.584700000000939e-05, 2.587500000000853e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.5834000000002355e-05, 2.586100000000202e-05, 2.5819999999995846e-05, 2.5848000000008864e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.5804999999989864e-05, 2.5846999999995512e-05, 2.581900000001025e-05, 2.5862000000001495e-05, 2.586100000000202e-05, 2.583300000000288e-05, 2.5818999999996373e-05, 2.5874999999994652e-05, 2.5819999999995846e-05, 2.588900000000116e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.586100000000202e-05, 2.588900000000116e-05, 2.5848000000008864e-05, 2.5820000000009724e-05, 2.586100000000202e-05, 2.5846999999995512e-05, 2.5846999999995512e-05, 2.583300000000288e-05, 2.5847999999994986e-05, 2.5846999999995512e-05, 2.58610000000159e-05, 2.5847000000023268e-05, 2.5847000000023268e-05, 2.5860999999988143e-05, 2.5818999999982495e-05, 2.588900000000116e-05, 2.5847999999994986e-05, 2.5846999999995512e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.390" endtime="20201110 08:33:42.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.385" endtime="20201110 08:33:42.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.394" endtime="20201110 08:33:42.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.398" endtime="20201110 08:33:42.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.396" endtime="20201110 08:33:42.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.393" endtime="20201110 08:33:42.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.927" endtime="20201110 08:33:42.418"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:41.856" endtime="20201110 08:33:42.419" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.426" endtime="20201110 08:33:42.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.424" endtime="20201110 08:33:42.446"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.458" endtime="20201110 08:33:42.473"></status>
</kw>
<msg timestamp="20201110 08:33:42.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.457" endtime="20201110 08:33:42.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.476" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.475" endtime="20201110 08:33:42.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.479" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:42.477" endtime="20201110 08:33:42.480"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:42.454" endtime="20201110 08:33:42.480"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:42.452" endtime="20201110 08:33:42.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.451" endtime="20201110 08:33:42.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:42.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:42.484" endtime="20201110 08:33:42.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.482" endtime="20201110 08:33:42.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.450" endtime="20201110 08:33:42.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.449" endtime="20201110 08:33:42.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.487" endtime="20201110 08:33:42.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.448" endtime="20201110 08:33:42.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.446" endtime="20201110 08:33:42.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.423" endtime="20201110 08:33:42.490"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.498" endtime="20201110 08:33:42.517"></status>
</kw>
<msg timestamp="20201110 08:33:42.517" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.496" endtime="20201110 08:33:42.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.520" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.518" endtime="20201110 08:33:42.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.521" endtime="20201110 08:33:42.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.494" endtime="20201110 08:33:42.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.492" endtime="20201110 08:33:42.523"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.525" endtime="20201110 08:33:42.527"></status>
</kw>
<msg timestamp="20201110 08:33:42.527" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:42.524" endtime="20201110 08:33:42.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.531" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:42.530" endtime="20201110 08:33:42.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.533" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:42.532" endtime="20201110 08:33:42.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.528" endtime="20201110 08:33:42.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.538" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:42.537" endtime="20201110 08:33:42.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.540" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:42.539" endtime="20201110 08:33:42.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.535" endtime="20201110 08:33:42.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.547" endtime="20201110 08:33:42.850"></status>
</kw>
<msg timestamp="20201110 08:33:42.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065069056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065070208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.546" endtime="20201110 08:33:42.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065069056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065070208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.854" endtime="20201110 08:33:42.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.862" endtime="20201110 08:33:42.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.543" endtime="20201110 08:33:42.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.541" endtime="20201110 08:33:42.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.870" level="INFO">${RESULT} = [{'time': 0.065070208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000042607e-06, 'source_diff': 1.1520000000042607e-06}, {'time': 0.065077333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:42.866" endtime="20201110 08:33:42.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:42.883" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:42.870" endtime="20201110 08:33:42.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.889" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:42.888" endtime="20201110 08:33:42.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.893" level="INFO">VALUE: [1.1520000000042607e-06, 1.041000000007175e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0980000000049284e-06, 1.02800000000014e-06, 1.014000000007509e-06, 1.02800000000014e-06, 1.0139999999936311e-06, 1.0409999999932973e-06, 1.02800000000014e-06, 1.0689999999924371e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0129999999941575e-06, 1.0139999999936311e-06, 1.0270000000006663e-06, 1.0689999999924371e-06, 1.041999999992771e-06, 1.02800000000014e-06, 1.0130000000080353e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0139999999936311e-06, 9.720000000018603e-07, 1.02800000000014e-06, 1.0139999999936311e-06, 1.0139999999936311e-06, 1.041999999992771e-06, 1.054999999999806e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.0139999999936311e-06, 1.0270000000006663e-06, 1.014000000007509e-06, 1.0420000000066487e-06, 9.73000000001334e-07, 9.720000000018603e-07, 1.0270000000006663e-06, 1.0129999999941575e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0420000000066487e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201110 08:33:42.891" endtime="20201110 08:33:42.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.884" endtime="20201110 08:33:42.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.898" endtime="20201110 08:33:42.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.904" endtime="20201110 08:33:42.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.901" endtime="20201110 08:33:42.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.896" endtime="20201110 08:33:42.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.490" endtime="20201110 08:33:42.925"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:42.420" endtime="20201110 08:33:42.925" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.932" endtime="20201110 08:33:42.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.931" endtime="20201110 08:33:42.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.966" endtime="20201110 08:33:42.980"></status>
</kw>
<msg timestamp="20201110 08:33:42.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.963" endtime="20201110 08:33:42.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.982" endtime="20201110 08:33:42.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.986" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:42.984" endtime="20201110 08:33:42.986"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:42.961" endtime="20201110 08:33:42.987"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:42.958" endtime="20201110 08:33:42.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.957" endtime="20201110 08:33:42.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:42.992" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:42.991" endtime="20201110 08:33:42.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.989" endtime="20201110 08:33:42.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.956" endtime="20201110 08:33:42.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.956" endtime="20201110 08:33:42.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.994" endtime="20201110 08:33:42.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.954" endtime="20201110 08:33:42.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.953" endtime="20201110 08:33:42.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.929" endtime="20201110 08:33:42.996"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.005" endtime="20201110 08:33:43.044"></status>
</kw>
<msg timestamp="20201110 08:33:43.045" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.003" endtime="20201110 08:33:43.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.047" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.046" endtime="20201110 08:33:43.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.048" endtime="20201110 08:33:43.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.001" endtime="20201110 08:33:43.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.999" endtime="20201110 08:33:43.051"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.053" endtime="20201110 08:33:43.054"></status>
</kw>
<msg timestamp="20201110 08:33:43.055" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:43.052" endtime="20201110 08:33:43.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.059" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:43.058" endtime="20201110 08:33:43.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.061" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:43.060" endtime="20201110 08:33:43.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.056" endtime="20201110 08:33:43.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.066" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:43.065" endtime="20201110 08:33:43.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.068" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:43.067" endtime="20201110 08:33:43.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.062" endtime="20201110 08:33:43.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.076" endtime="20201110 08:33:43.362"></status>
</kw>
<msg timestamp="20201110 08:33:43.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066193278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066195514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.073" endtime="20201110 08:33:43.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066193278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066195514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.366" endtime="20201110 08:33:43.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.375" endtime="20201110 08:33:43.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.071" endtime="20201110 08:33:43.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.069" endtime="20201110 08:33:43.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.382" level="INFO">${RESULT} = [{'time': 0.066195514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2360000000026803e-06, 'source_diff': 2.2360000000026803e-06}, {'time': 0.066602861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.378" endtime="20201110 08:33:43.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:43.397" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:43.383" endtime="20201110 08:33:43.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.402" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:43.401" endtime="20201110 08:33:43.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.404" level="INFO">VALUE: [2.2360000000026803e-06, 2.1250000000055946e-06, 2.1529999999908567e-06, 2.137999999998752e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.165999999997892e-06, 2.1669999999973655e-06, 2.1389999999982257e-06, 2.1529999999908567e-06, 2.165999999997892e-06, 2.1810000000038743e-06, 2.1389999999982257e-06, 2.1250000000055946e-06, 2.097000000006455e-06, 2.1389999999982257e-06, 2.124999999991717e-06, 2.1949999999965053e-06, 2.1530000000047345e-06, 2.124999999991717e-06, 2.165999999997892e-06, 2.1389999999982257e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.1389999999982257e-06, 2.2219999999961715e-06, 2.1389999999982257e-06, 2.1530000000047345e-06, 2.082999999999946e-06, 2.0700000000067886e-06, 2.1250000000055946e-06, 2.068999999993437e-06, 2.1250000000055946e-06, 2.1250000000055946e-06, 2.1530000000047345e-06, 2.1389999999982257e-06, 2.165999999997892e-06, 2.1810000000038743e-06, 2.124999999991717e-06, 2.124999999991717e-06, 2.13800000001263e-06, 2.1949999999965053e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.2079999999896627e-06, 2.110999999999086e-06, 2.1530000000047345e-06, 2.222999999995645e-06, 2.1389999999982257e-06, 2.151999999991383e-06]</msg>
<status status="PASS" starttime="20201110 08:33:43.403" endtime="20201110 08:33:43.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.398" endtime="20201110 08:33:43.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.407" endtime="20201110 08:33:43.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.411" endtime="20201110 08:33:43.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.409" endtime="20201110 08:33:43.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.406" endtime="20201110 08:33:43.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.997" endtime="20201110 08:33:43.435"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:42.927" endtime="20201110 08:33:43.436" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.450" endtime="20201110 08:33:43.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.447" endtime="20201110 08:33:43.472"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.503" endtime="20201110 08:33:43.519"></status>
</kw>
<msg timestamp="20201110 08:33:43.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.498" endtime="20201110 08:33:43.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.523" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.521" endtime="20201110 08:33:43.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.527" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:43.524" endtime="20201110 08:33:43.527"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.492" endtime="20201110 08:33:43.528"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:43.487" endtime="20201110 08:33:43.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.484" endtime="20201110 08:33:43.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:43.533" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:43.532" endtime="20201110 08:33:43.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.530" endtime="20201110 08:33:43.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.482" endtime="20201110 08:33:43.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.481" endtime="20201110 08:33:43.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.535" endtime="20201110 08:33:43.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.478" endtime="20201110 08:33:43.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.473" endtime="20201110 08:33:43.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.444" endtime="20201110 08:33:43.538"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.551" endtime="20201110 08:33:43.641"></status>
</kw>
<msg timestamp="20201110 08:33:43.642" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.549" endtime="20201110 08:33:43.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.644" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.643" endtime="20201110 08:33:43.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.645" endtime="20201110 08:33:43.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.545" endtime="20201110 08:33:43.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.540" endtime="20201110 08:33:43.648"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.650" endtime="20201110 08:33:43.652"></status>
</kw>
<msg timestamp="20201110 08:33:43.652" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:33:43.649" endtime="20201110 08:33:43.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.656" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:43.655" endtime="20201110 08:33:43.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.658" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:43.657" endtime="20201110 08:33:43.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.653" endtime="20201110 08:33:43.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.663" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:43.662" endtime="20201110 08:33:43.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.665" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:43.664" endtime="20201110 08:33:43.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.660" endtime="20201110 08:33:43.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.672" endtime="20201110 08:33:43.968"></status>
</kw>
<msg timestamp="20201110 08:33:43.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09384575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.093848917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:43.671" endtime="20201110 08:33:43.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09384575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.093848917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:43.972" endtime="20201110 08:33:43.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.981" endtime="20201110 08:33:43.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.668" endtime="20201110 08:33:43.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.666" endtime="20201110 08:33:43.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.988" level="INFO">${RESULT} = [{'time': 0.093848917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.095280708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.984" endtime="20201110 08:33:43.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:44.002" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:43.989" endtime="20201110 08:33:44.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.007" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:44.006" endtime="20201110 08:33:44.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.009" level="INFO">VALUE: [3.1669999999983656e-06, 3.0550000000018063e-06, 3.0689999999944373e-06, 3.069000000008315e-06, 3.0689999999944373e-06, 3.041999999994771e-06, 3.0840000000004197e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.0549999999879285e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.069999999993911e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0139999999956313e-06, 3.069999999993911e-06, 3.124999999992717e-06, 3.097000000007455e-06, 3.0410000000091753e-06, 3.111000000000086e-06, 3.069999999993911e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0689999999944373e-06, 3.05600000000128e-06, 3.0689999999944373e-06, 3.069000000022193e-06, 3.0410000000091753e-06, 3.0409999999814197e-06, 3.05600000000128e-06, 3.1119999999995596e-06, 3.0550000000018063e-06, 3.069999999993911e-06, 3.069000000022193e-06, 3.1119999999995596e-06, 3.083999999986542e-06, 3.0829999999870683e-06, 3.05600000000128e-06, 3.0279999999882623e-06, 3.0410000000091753e-06, 3.05600000000128e-06, 3.069999999993911e-06, 3.0410000000091753e-06, 3.0550000000018063e-06]</msg>
<status status="PASS" starttime="20201110 08:33:44.008" endtime="20201110 08:33:44.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.003" endtime="20201110 08:33:44.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.013" endtime="20201110 08:33:44.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.016" endtime="20201110 08:33:44.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.015" endtime="20201110 08:33:44.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.011" endtime="20201110 08:33:44.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.538" endtime="20201110 08:33:44.037"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:43.439" endtime="20201110 08:33:44.037" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:23.363" endtime="20201110 08:33:44.045"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.111" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:44.120" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:45.325" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:44.110" endtime="20201110 08:33:45.325"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.328" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:45.326" endtime="20201110 08:33:45.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.109" endtime="20201110 08:33:45.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.331" endtime="20201110 08:33:45.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.329" endtime="20201110 08:33:45.517"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.530" endtime="20201110 08:33:45.545"></status>
</kw>
<msg timestamp="20201110 08:33:45.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.529" endtime="20201110 08:33:45.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.548" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.546" endtime="20201110 08:33:45.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.551" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:45.549" endtime="20201110 08:33:45.551"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.526" endtime="20201110 08:33:45.552"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.524" endtime="20201110 08:33:45.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.522" endtime="20201110 08:33:45.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:45.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:45.556" endtime="20201110 08:33:45.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.554" endtime="20201110 08:33:45.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.522" endtime="20201110 08:33:45.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.521" endtime="20201110 08:33:45.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.560" endtime="20201110 08:33:45.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.520" endtime="20201110 08:33:45.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.563" endtime="20201110 08:33:45.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.518" endtime="20201110 08:33:45.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.108" endtime="20201110 08:33:45.565"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.571" endtime="20201110 08:33:45.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.570" endtime="20201110 08:33:45.591"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.605" endtime="20201110 08:33:45.619"></status>
</kw>
<msg timestamp="20201110 08:33:45.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.603" endtime="20201110 08:33:45.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.620" endtime="20201110 08:33:45.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.625" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:45.623" endtime="20201110 08:33:45.625"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.600" endtime="20201110 08:33:45.626"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:45.598" endtime="20201110 08:33:45.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.597" endtime="20201110 08:33:45.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:45.631" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:45.630" endtime="20201110 08:33:45.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.628" endtime="20201110 08:33:45.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.596" endtime="20201110 08:33:45.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.595" endtime="20201110 08:33:45.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.633" endtime="20201110 08:33:45.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.594" endtime="20201110 08:33:45.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.592" endtime="20201110 08:33:45.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.568" endtime="20201110 08:33:45.639"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.653" endtime="20201110 08:33:45.675"></status>
</kw>
<msg timestamp="20201110 08:33:45.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.650" endtime="20201110 08:33:45.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.680" endtime="20201110 08:33:45.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.689" endtime="20201110 08:33:45.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.646" endtime="20201110 08:33:45.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.644" endtime="20201110 08:33:45.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.711" endtime="20201110 08:33:46.007"></status>
</kw>
<msg timestamp="20201110 08:33:46.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075454486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.708" endtime="20201110 08:33:46.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075454486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.011" endtime="20201110 08:33:46.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.020" endtime="20201110 08:33:46.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.702" endtime="20201110 08:33:46.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.696" endtime="20201110 08:33:46.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.026" level="INFO">${RESULT} = [{'time': 0.075457333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.075465333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.023" endtime="20201110 08:33:46.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.040" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:46.027" endtime="20201110 08:33:46.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.044" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.043" endtime="20201110 08:33:46.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.047" level="INFO">VALUE: [2.847000000000266e-06, 2.068999999993437e-06, 2.9170000000050544e-06, 2.097000000006455e-06, 2.3890000000054146e-06, 1.9579999999963515e-06, 1.958999999995825e-06, 2.388000000005941e-06, 2.3610000000062747e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 1.9439999999898427e-06, 2.4029999999980456e-06, 2.3889999999915368e-06, 1.9580000000102293e-06, 1.9440000000037205e-06, 2.3749999999989058e-06, 1.958999999995825e-06, 2.3750000000127836e-06, 2.9169999999911767e-06, 2.2360000000026803e-06, 2.000000000002e-06, 1.9309999999966854e-06, 2.3749999999989058e-06, 1.945000000003194e-06, 1.8890000000049145e-06, 2.3749999999989058e-06, 2.9309999999976855e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.05600000000028e-06, 2.9300000000120896e-06, 2.5409999999947974e-06, 2.583000000000446e-06, 2.082999999999946e-06, 2.346999999999766e-06, 2.9309999999976855e-06, 2.709000000003514e-06, 2.55600000000078e-06, 2.6939999999975317e-06, 2.5409999999947974e-06, 2.7079999999901627e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.069999999992911e-06, 2.4029999999980456e-06, 2.915999999991703e-06, 2.0700000000067886e-06, 2.3619999999918706e-06, 3.0000000000030003e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.045" endtime="20201110 08:33:46.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.041" endtime="20201110 08:33:46.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.050" endtime="20201110 08:33:46.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.054" endtime="20201110 08:33:46.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.052" endtime="20201110 08:33:46.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.049" endtime="20201110 08:33:46.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.641" endtime="20201110 08:33:46.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.640" endtime="20201110 08:33:46.074"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.083" endtime="20201110 08:33:46.099"></status>
</kw>
<msg timestamp="20201110 08:33:46.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.082" endtime="20201110 08:33:46.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.100" endtime="20201110 08:33:46.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.103" endtime="20201110 08:33:46.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.079" endtime="20201110 08:33:46.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.077" endtime="20201110 08:33:46.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.111" endtime="20201110 08:33:46.394"></status>
</kw>
<msg timestamp="20201110 08:33:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.110" endtime="20201110 08:33:46.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.398" endtime="20201110 08:33:46.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.406" endtime="20201110 08:33:46.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.107" endtime="20201110 08:33:46.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.106" endtime="20201110 08:33:46.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.413" level="INFO">${RESULT} = [{'time': 0.022739167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.022751181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:46.410" endtime="20201110 08:33:46.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.427" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:46.414" endtime="20201110 08:33:46.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.432" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.431" endtime="20201110 08:33:46.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.434" level="INFO">VALUE: [3.3340000000006698e-06, 3.5419999999987406e-06, 3.6120000000000596e-06, 3.4730000000003647e-06, 3.139000000002695e-06, 3.6389999999997258e-06, 3.6389999999997258e-06, 3.458000000001321e-06, 2.985999999999961e-06, 3.4729999999968952e-06, 3.4729999999968952e-06, 3.4439999999982818e-06, 3.0139999999991007e-06, 3.625000000000156e-06, 2.694000000001001e-06, 3.040999999998767e-06, 3.625000000000156e-06, 3.0139999999991007e-06, 3.903000000003015e-06, 3.6389999999997258e-06, 3.5139999999996008e-06, 3.165999999998892e-06, 3.611000000000586e-06, 3.0139999999991007e-06, 2.708000000000571e-06, 3.4029999999990457e-06, 3.0279999999986706e-06, 3.1529999999987957e-06, 3.1529999999987957e-06, 3.1669999999983656e-06, 3.2090000000005448e-06, 3.6389999999997258e-06, 3.625000000000156e-06, 3.5279999999991707e-06, 3.445000000001225e-06, 3.458000000001321e-06, 3.1660000000023614e-06, 2.6939999999975317e-06, 3.500000000000031e-06, 3.01400000000257e-06, 3.486000000000461e-06, 3.1529999999987957e-06, 3.181000000001405e-06, 3.500000000000031e-06, 3.486000000000461e-06, 2.999999999999531e-06, 3.4730000000003647e-06, 3.1660000000023614e-06, 3.486000000000461e-06, 2.972000000000391e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.433" endtime="20201110 08:33:46.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.428" endtime="20201110 08:33:46.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.438" endtime="20201110 08:33:46.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.441" endtime="20201110 08:33:46.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.440" endtime="20201110 08:33:46.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.436" endtime="20201110 08:33:46.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.075" endtime="20201110 08:33:46.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.075" endtime="20201110 08:33:46.462"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.477" endtime="20201110 08:33:46.494"></status>
</kw>
<msg timestamp="20201110 08:33:46.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.474" endtime="20201110 08:33:46.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.497" endtime="20201110 08:33:46.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.502" endtime="20201110 08:33:46.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.468" endtime="20201110 08:33:46.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.465" endtime="20201110 08:33:46.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.523" endtime="20201110 08:33:46.815"></status>
</kw>
<msg timestamp="20201110 08:33:46.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029258722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029263208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.520" endtime="20201110 08:33:46.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029258722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029263208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.819" endtime="20201110 08:33:46.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.827" endtime="20201110 08:33:46.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.514" endtime="20201110 08:33:46.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.511" endtime="20201110 08:33:46.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.834" level="INFO">${RESULT} = [{'time': 0.029263208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.029274139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.831" endtime="20201110 08:33:46.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.848" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:46.835" endtime="20201110 08:33:46.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.852" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.851" endtime="20201110 08:33:46.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.855" level="INFO">VALUE: [4.485999999997992e-06, 3.931000000002155e-06, 4.375000000000906e-06, 4.554999999999837e-06, 3.958999999997825e-06, 4.388999999997006e-06, 4.528000000000171e-06, 4.86199999999784e-06, 3.943999999998782e-06, 4.541999999999741e-06, 4.09799999999752e-06, 4.555999999999311e-06, 4.541999999999741e-06, 4.541999999999741e-06, 4.527999999996701e-06, 4.445000000002225e-06, 4.416000000000142e-06, 3.9309999999986855e-06, 4.097000000001516e-06, 4.541999999999741e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.541999999999741e-06, 4.541000000000267e-06, 3.973000000000865e-06, 4.429999999999712e-06, 4.083000000001946e-06, 4.528000000000171e-06, 3.945000000001725e-06, 4.541999999999741e-06, 3.943999999998782e-06, 4.541999999999741e-06, 4.541999999999741e-06, 3.9449999999982555e-06, 4.528000000000171e-06, 4.388999999997006e-06, 4.08400000000142e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.097000000001516e-06, 3.945000000001725e-06, 4.082999999998477e-06, 4.416999999999616e-06, 4.08400000000142e-06, 4.0699999999983805e-06, 3.943999999998782e-06, 4.068999999998907e-06, 4.403000000000046e-06, 4.082999999998477e-06, 4.568999999999407e-06]</msg>
<status status="PASS" starttime="20201110 08:33:46.853" endtime="20201110 08:33:46.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.849" endtime="20201110 08:33:46.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.858" endtime="20201110 08:33:46.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.862" endtime="20201110 08:33:46.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.860" endtime="20201110 08:33:46.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.857" endtime="20201110 08:33:46.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.463" endtime="20201110 08:33:46.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.462" endtime="20201110 08:33:46.883"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.892" endtime="20201110 08:33:46.906"></status>
</kw>
<msg timestamp="20201110 08:33:46.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.890" endtime="20201110 08:33:46.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.907" endtime="20201110 08:33:46.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.910" endtime="20201110 08:33:46.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.888" endtime="20201110 08:33:46.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.885" endtime="20201110 08:33:46.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.919" endtime="20201110 08:33:47.203"></status>
</kw>
<msg timestamp="20201110 08:33:47.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.918" endtime="20201110 08:33:47.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.208" endtime="20201110 08:33:47.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.217" endtime="20201110 08:33:47.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.915" endtime="20201110 08:33:47.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.914" endtime="20201110 08:33:47.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.224" level="INFO">${RESULT} = [{'time': 0.021813153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.021827903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.220" endtime="20201110 08:33:47.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.238" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:47.225" endtime="20201110 08:33:47.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.243" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.241" endtime="20201110 08:33:47.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.245" level="INFO">VALUE: [5.499999999998562e-06, 5.444999999999756e-06, 5.055999999999811e-06, 5.792000000000991e-06, 5.860999999999367e-06, 4.861000000001836e-06, 5.778000000001421e-06, 5.332999999999727e-06, 5.278000000000921e-06, 5.805000000001087e-06, 4.84799999999827e-06, 5.790999999998048e-06, 5.014000000001101e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.360999999998867e-06, 5.014000000001101e-06, 5.708000000000102e-06, 5.791000000001517e-06, 4.861000000001836e-06, 4.861000000001836e-06, 5.485999999998992e-06, 5.34799999999877e-06, 5.431000000000186e-06, 4.847000000002266e-06, 5.471999999999422e-06, 5.346999999999297e-06, 4.84799999999827e-06, 5.806000000000561e-06, 5.471999999999422e-06, 5.3339999999992005e-06, 4.847000000002266e-06, 5.485999999998992e-06, 5.472999999998895e-06, 4.875000000001406e-06, 5.34800000000224e-06, 5.791999999997521e-06, 5.403000000001046e-06, 5.4589999999993255e-06, 5.014000000001101e-06, 5.332999999999727e-06, 4.9999999999980616e-06, 5.8479999999992704e-06, 5.3339999999992005e-06, 5.36200000000181e-06, 4.875000000001406e-06, 5.778000000001421e-06, 5.444999999999756e-06, 5.764000000001851e-06, 4.8749999999979365e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.244" endtime="20201110 08:33:47.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.239" endtime="20201110 08:33:47.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.249" endtime="20201110 08:33:47.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.252" endtime="20201110 08:33:47.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.251" endtime="20201110 08:33:47.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.247" endtime="20201110 08:33:47.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.884" endtime="20201110 08:33:47.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.883" endtime="20201110 08:33:47.276"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.296" endtime="20201110 08:33:47.313"></status>
</kw>
<msg timestamp="20201110 08:33:47.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.292" endtime="20201110 08:33:47.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.317" endtime="20201110 08:33:47.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.322" endtime="20201110 08:33:47.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.286" endtime="20201110 08:33:47.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.281" endtime="20201110 08:33:47.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.344" endtime="20201110 08:33:47.634"></status>
</kw>
<msg timestamp="20201110 08:33:47.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037053597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.341" endtime="20201110 08:33:47.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037053597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.638" endtime="20201110 08:33:47.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.647" endtime="20201110 08:33:47.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.335" endtime="20201110 08:33:47.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.331" endtime="20201110 08:33:47.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.654" level="INFO">${RESULT} = [{'time': 0.037059764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.037075653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.651" endtime="20201110 08:33:47.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.668" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:47.655" endtime="20201110 08:33:47.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.673" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.672" endtime="20201110 08:33:47.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.675" level="INFO">VALUE: [6.167000000001366e-06, 6.375000000002906e-06, 5.721999999999672e-06, 6.374999999995967e-06, 6.389000000002476e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.235999999999742e-06, 6.666999999994927e-06, 5.931000000000686e-06, 6.290999999998548e-06, 6.708000000001102e-06, 6.403000000002046e-06, 6.416999999994677e-06, 6.707999999994163e-06, 5.917000000001116e-06, 6.722000000000672e-06, 6.416000000002142e-06, 5.930000000001212e-06, 6.2779999999984515e-06, 6.403000000002046e-06, 6.346999999996827e-06, 6.402999999995107e-06, 6.291999999998021e-06, 6.389000000002476e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.708000000001102e-06, 6.249999999999312e-06, 6.2640000000058205e-06, 5.903000000001546e-06, 6.722000000000672e-06, 6.374999999995967e-06, 6.2639999999988816e-06, 6.7779999999989515e-06, 6.2639999999988816e-06, 6.2779999999984515e-06, 5.917000000001116e-06, 6.695000000001006e-06, 5.80600000000403e-06, 6.402999999995107e-06, 6.2640000000058205e-06, 6.7369999999997154e-06, 5.708000000000102e-06, 6.401999999995633e-06, 6.417000000001616e-06, 6.708000000001102e-06, 6.2639999999988816e-06, 6.291999999998021e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201110 08:33:47.674" endtime="20201110 08:33:47.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.669" endtime="20201110 08:33:47.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.679" endtime="20201110 08:33:47.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.683" endtime="20201110 08:33:47.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.681" endtime="20201110 08:33:47.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.677" endtime="20201110 08:33:47.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.278" endtime="20201110 08:33:47.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.277" endtime="20201110 08:33:47.703"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.718" endtime="20201110 08:33:47.737"></status>
</kw>
<msg timestamp="20201110 08:33:47.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.715" endtime="20201110 08:33:47.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.740" endtime="20201110 08:33:47.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.746" endtime="20201110 08:33:47.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.712" endtime="20201110 08:33:47.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.707" endtime="20201110 08:33:47.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.756" endtime="20201110 08:33:48.069"></status>
</kw>
<msg timestamp="20201110 08:33:48.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029692083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.755" endtime="20201110 08:33:48.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029692083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.074" endtime="20201110 08:33:48.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.082" endtime="20201110 08:33:48.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.752" endtime="20201110 08:33:48.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.751" endtime="20201110 08:33:48.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.092" level="INFO">${RESULT} = [{'time': 0.029699903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.029716889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.085" endtime="20201110 08:33:48.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.124" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:48.094" endtime="20201110 08:33:48.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.133" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.131" endtime="20201110 08:33:48.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.138" level="INFO">VALUE: [7.819999999998661e-06, 7.180999999998466e-06, 7.667000000002866e-06, 6.874999999999937e-06, 6.861000000000367e-06, 7.861000000001367e-06, 6.874999999999937e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.195000000001506e-06, 7.320000000001631e-06, 7.194999999998036e-06, 7.652999999999827e-06, 7.180999999998466e-06, 6.874999999999937e-06, 6.861000000000367e-06, 7.0980000000005206e-06, 7.818999999999188e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.334000000001201e-06, 7.2779999999994516e-06, 6.8619999999998404e-06, 7.333000000001727e-06, 7.652999999999827e-06, 7.165999999999423e-06, 7.1669999999988965e-06, 7.2919999999990215e-06, 7.181000000001936e-06, 7.194000000002032e-06, 7.348000000000771e-06, 6.847000000000797e-06, 7.319000000002157e-06, 7.180999999998466e-06, 7.639000000000257e-06, 7.304999999999118e-06, 7.777000000000478e-06, 6.888999999999507e-06, 7.195000000001506e-06, 7.652999999999827e-06, 7.639000000000257e-06, 6.861000000000367e-06, 7.777000000000478e-06, 7.1669999999988965e-06, 7.638000000000783e-06, 7.333000000001727e-06, 7.319000000002157e-06, 6.874999999999937e-06, 7.236000000000742e-06, 7.320000000001631e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.136" endtime="20201110 08:33:48.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.126" endtime="20201110 08:33:48.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.146" endtime="20201110 08:33:48.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.153" endtime="20201110 08:33:48.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.150" endtime="20201110 08:33:48.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.142" endtime="20201110 08:33:48.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.704" endtime="20201110 08:33:48.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.704" endtime="20201110 08:33:48.177"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.191" endtime="20201110 08:33:48.205"></status>
</kw>
<msg timestamp="20201110 08:33:48.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.189" endtime="20201110 08:33:48.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.207" endtime="20201110 08:33:48.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.209" endtime="20201110 08:33:48.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.187" endtime="20201110 08:33:48.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.182" endtime="20201110 08:33:48.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.219" endtime="20201110 08:33:48.502"></status>
</kw>
<msg timestamp="20201110 08:33:48.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029823417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029832264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.217" endtime="20201110 08:33:48.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029823417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029832264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.507" endtime="20201110 08:33:48.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.515" endtime="20201110 08:33:48.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.215" endtime="20201110 08:33:48.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.213" endtime="20201110 08:33:48.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.522" level="INFO">${RESULT} = [{'time': 0.029832264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.029843222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.519" endtime="20201110 08:33:48.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.536" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:48.523" endtime="20201110 08:33:48.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.541" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.540" endtime="20201110 08:33:48.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.543" level="INFO">VALUE: [8.846999999999328e-06, 8.166000000000423e-06, 7.805999999999091e-06, 8.250000000001312e-06, 8.624999999998217e-06, 8.721999999999203e-06, 7.777999999999952e-06, 8.236000000001742e-06, 8.721999999999203e-06, 8.09800000000152e-06, 8.264000000000882e-06, 8.555000000000368e-06, 8.235999999998272e-06, 8.263999999997412e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.111000000001617e-06, 8.096999999998578e-06, 8.582999999999508e-06, 7.791999999999522e-06, 8.625000000001687e-06, 8.166999999999897e-06, 8.555999999999842e-06, 8.125000000001187e-06, 8.235999999998272e-06, 8.597000000002547e-06, 8.235999999998272e-06, 8.555999999999842e-06, 8.680999999999967e-06, 8.235999999998272e-06, 7.847999999997801e-06, 8.262999999997939e-06, 8.153000000000327e-06, 8.235999999998272e-06, 8.707999999999633e-06, 7.777999999999952e-06, 8.08400000000195e-06, 7.722000000001672e-06, 7.764000000000382e-06, 8.653000000000827e-06, 8.249999999997842e-06, 8.110999999998147e-06, 8.568999999999938e-06, 8.597000000002547e-06, 7.777000000000478e-06, 8.124999999997717e-06, 8.570000000002881e-06, 8.125000000001187e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.542" endtime="20201110 08:33:48.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.537" endtime="20201110 08:33:48.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.547" endtime="20201110 08:33:48.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.551" endtime="20201110 08:33:48.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.549" endtime="20201110 08:33:48.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.546" endtime="20201110 08:33:48.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.179" endtime="20201110 08:33:48.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.178" endtime="20201110 08:33:48.572"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.581" endtime="20201110 08:33:48.595"></status>
</kw>
<msg timestamp="20201110 08:33:48.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.579" endtime="20201110 08:33:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.597" endtime="20201110 08:33:48.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.599" endtime="20201110 08:33:48.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.577" endtime="20201110 08:33:48.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.574" endtime="20201110 08:33:48.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.610" endtime="20201110 08:33:48.898"></status>
</kw>
<msg timestamp="20201110 08:33:48.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:48.608" endtime="20201110 08:33:48.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:48.909" endtime="20201110 08:33:48.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.929" endtime="20201110 08:33:48.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.606" endtime="20201110 08:33:48.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.604" endtime="20201110 08:33:48.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.944" level="INFO">${RESULT} = [{'time': 0.022398611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.022414639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:48.937" endtime="20201110 08:33:48.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.977" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:48.947" endtime="20201110 08:33:48.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.987" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.984" endtime="20201110 08:33:48.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.992" level="INFO">VALUE: [9.360999999999398e-06, 9.028000000001202e-06, 9.181000000000467e-06, 9.152999999997857e-06, 9.180000000000993e-06, 9.153000000001327e-06, 8.722000000002672e-06, 9.181000000000467e-06, 9.514000000002132e-06, 9.042000000000772e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.181000000000467e-06, 9.056000000000342e-06, 9.499999999999093e-06, 9.194000000000563e-06, 9.014000000001632e-06, 9.208000000000133e-06, 9.014000000001632e-06, 9.652999999998357e-06, 9.027999999997732e-06, 9.597000000000078e-06, 9.513999999998662e-06, 9.250000000002312e-06, 9.028000000001202e-06, 9.055000000000868e-06, 9.651999999998884e-06, 9.514000000002132e-06, 9.028000000001202e-06, 9.041000000001298e-06, 9.471999999999953e-06, 9.028000000001202e-06, 9.499999999999093e-06, 9.028000000001202e-06, 8.722999999998676e-06, 9.096999999999578e-06, 9.639000000002257e-06, 9.471999999999953e-06, 9.638999999998787e-06, 9.513999999998662e-06, 9.485999999999523e-06, 9.473000000002896e-06, 9.555000000001368e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.083999999999481e-06, 9.667000000001397e-06, 8.721999999999203e-06, 9.583999999999981e-06, 9.542000000001272e-06]</msg>
<status status="PASS" starttime="20201110 08:33:48.989" endtime="20201110 08:33:49.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.979" endtime="20201110 08:33:49.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.007" endtime="20201110 08:33:49.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.011" endtime="20201110 08:33:49.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.010" endtime="20201110 08:33:49.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.006" endtime="20201110 08:33:49.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.573" endtime="20201110 08:33:49.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.572" endtime="20201110 08:33:49.032"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.041" endtime="20201110 08:33:49.056"></status>
</kw>
<msg timestamp="20201110 08:33:49.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.039" endtime="20201110 08:33:49.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.058" endtime="20201110 08:33:49.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.060" endtime="20201110 08:33:49.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.037" endtime="20201110 08:33:49.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.035" endtime="20201110 08:33:49.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.071" endtime="20201110 08:33:49.360"></status>
</kw>
<msg timestamp="20201110 08:33:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.069" endtime="20201110 08:33:49.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.364" endtime="20201110 08:33:49.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.373" endtime="20201110 08:33:49.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.066" endtime="20201110 08:33:49.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.064" endtime="20201110 08:33:49.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.380" level="INFO">${RESULT} = [{'time': 0.022464014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0556000000001842e-05, 'source_diff': 1.0556000000001842e-05}, {'time': 0.022482111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.376" endtime="20201110 08:33:49.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.394" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:49.381" endtime="20201110 08:33:49.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.399" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.398" endtime="20201110 08:33:49.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.401" level="INFO">VALUE: [1.0556000000001842e-05, 1.0374999999999968e-05, 1.0416000000002673e-05, 1.0500000000000093e-05, 1.0415999999999204e-05, 1.0568999999998469e-05, 1.0570000000001412e-05, 1.0167000000001897e-05, 9.972000000000453e-06, 1.0430999999998247e-05, 1.0111000000000148e-05, 1.0569999999997942e-05, 9.986000000000023e-06, 1.0555999999998372e-05, 1.0415999999999204e-05, 9.889000000002507e-06, 9.945000000000787e-06, 1.0097000000000578e-05, 1.0569999999997942e-05, 1.0570000000001412e-05, 1.0111000000000148e-05, 1.0027999999998732e-05, 1.0431000000001717e-05, 1.0111999999999621e-05, 1.0902000000000134e-05, 1.0568999999998469e-05, 1.0097000000000578e-05, 1.0082999999997538e-05, 1.0458000000001383e-05, 1.0374999999999968e-05, 9.943999999997843e-06, 1.0111000000000148e-05, 1.0875000000000468e-05, 1.0416999999998677e-05, 1.0348000000000301e-05, 1.0444000000001813e-05, 9.931000000001217e-06, 1.0111000000000148e-05, 1.0084000000000481e-05, 1.0570000000001412e-05, 1.0472000000000953e-05, 1.0889000000000038e-05, 1.0082999999997538e-05, 1.0568999999998469e-05, 9.972000000000453e-06, 9.972000000000453e-06, 1.0098000000000051e-05, 1.0582999999998038e-05, 1.0083000000001008e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.400" endtime="20201110 08:33:49.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.395" endtime="20201110 08:33:49.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.405" endtime="20201110 08:33:49.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.408" endtime="20201110 08:33:49.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.407" endtime="20201110 08:33:49.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.403" endtime="20201110 08:33:49.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.033" endtime="20201110 08:33:49.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.032" endtime="20201110 08:33:49.429"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.438" endtime="20201110 08:33:49.452"></status>
</kw>
<msg timestamp="20201110 08:33:49.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.437" endtime="20201110 08:33:49.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.454" endtime="20201110 08:33:49.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.457" endtime="20201110 08:33:49.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.434" endtime="20201110 08:33:49.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.432" endtime="20201110 08:33:49.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.467" endtime="20201110 08:33:49.753"></status>
</kw>
<msg timestamp="20201110 08:33:49.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.465" endtime="20201110 08:33:49.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.757" endtime="20201110 08:33:49.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.766" endtime="20201110 08:33:49.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.463" endtime="20201110 08:33:49.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.461" endtime="20201110 08:33:49.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.773" level="INFO">${RESULT} = [{'time': 0.022289639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.022307583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.769" endtime="20201110 08:33:49.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.788" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:49.774" endtime="20201110 08:33:49.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.792" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.791" endtime="20201110 08:33:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.795" level="INFO">VALUE: [1.1971999999998983e-05, 1.1485999999998053e-05, 1.1820000000002662e-05, 1.1500000000001093e-05, 1.102699999999679e-05, 1.1485999999998053e-05, 1.1318999999999219e-05, 1.1500000000001093e-05, 1.1486000000001523e-05, 1.1332999999998788e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.0973000000000926e-05, 1.1346999999998358e-05, 1.1374999999997498e-05, 1.1347000000001828e-05, 1.1485999999998053e-05, 1.1346999999998358e-05, 1.1500000000001093e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.0875000000000468e-05, 1.1361000000001398e-05, 1.0971999999997983e-05, 1.1361000000001398e-05, 1.1014000000000163e-05, 1.1347000000001828e-05, 1.1348000000001301e-05, 1.1360999999997928e-05, 1.0805999999998622e-05, 1.1457999999998913e-05, 1.1361000000001398e-05, 1.1332999999998788e-05, 1.0887999999997094e-05, 1.1333999999998262e-05, 1.1485999999998053e-05, 1.1819999999999192e-05, 1.0888000000000564e-05, 1.1805999999999622e-05, 1.0861000000000898e-05, 1.1334000000001732e-05, 1.1805999999999622e-05, 1.1485999999998053e-05, 1.1347999999997832e-05, 1.1361000000001398e-05, 1.1013999999996693e-05, 1.1347000000001828e-05, 1.1500000000001093e-05, 1.1014000000000163e-05, 1.1027999999999732e-05]</msg>
<status status="PASS" starttime="20201110 08:33:49.794" endtime="20201110 08:33:49.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.789" endtime="20201110 08:33:49.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.799" endtime="20201110 08:33:49.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.802" endtime="20201110 08:33:49.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.801" endtime="20201110 08:33:49.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.797" endtime="20201110 08:33:49.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.430" endtime="20201110 08:33:49.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.430" endtime="20201110 08:33:49.823"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.832" endtime="20201110 08:33:49.847"></status>
</kw>
<msg timestamp="20201110 08:33:49.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.831" endtime="20201110 08:33:49.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.848" endtime="20201110 08:33:49.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.851" endtime="20201110 08:33:49.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.828" endtime="20201110 08:33:49.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.826" endtime="20201110 08:33:49.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.861" endtime="20201110 08:33:50.149"></status>
</kw>
<msg timestamp="20201110 08:33:50.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:49.860" endtime="20201110 08:33:50.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:50.154" endtime="20201110 08:33:50.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.162" endtime="20201110 08:33:50.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.857" endtime="20201110 08:33:50.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.855" endtime="20201110 08:33:50.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.170" level="INFO">${RESULT} = [{'time': 0.022277806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3056000000000872e-05, 'source_diff': 1.3056000000000872e-05}, {'time': 0.022299708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.166" endtime="20201110 08:33:50.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:50.171" endtime="20201110 08:33:50.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.188" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.187" endtime="20201110 08:33:50.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.190" level="INFO">VALUE: [1.3056000000000872e-05, 1.1943999999999844e-05, 1.2277999999997513e-05, 1.2735999999999303e-05, 1.1818999999999719e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.1943999999999844e-05, 1.2431000000000247e-05, 1.1943999999999844e-05, 1.1792000000000052e-05, 1.1945000000002787e-05, 1.1805999999999622e-05, 1.2416000000001204e-05, 1.2735999999999303e-05, 1.2278000000000983e-05, 1.2431000000000247e-05, 1.2444999999999817e-05, 1.227699999999804e-05, 1.2429999999997304e-05, 1.2431000000000247e-05, 1.2277999999997513e-05, 1.2263999999997943e-05, 1.2291999999997083e-05, 1.1806000000003092e-05, 1.2736000000002773e-05, 1.2264000000001413e-05, 1.1930000000000274e-05, 1.2417000000000677e-05, 1.1930999999999747e-05, 1.2430000000000774e-05, 1.1818999999999719e-05, 1.1943999999999844e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2416000000001204e-05, 1.2402000000001634e-05, 1.2735999999999303e-05, 1.2417000000000677e-05, 1.1930999999999747e-05, 1.1818999999999719e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2334000000002732e-05, 1.1957999999999414e-05, 1.2416000000001204e-05, 1.2263999999997943e-05, 1.1943999999999844e-05, 1.2721999999999734e-05, 1.2291000000001079e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.189" endtime="20201110 08:33:50.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.184" endtime="20201110 08:33:50.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.194" endtime="20201110 08:33:50.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.197" endtime="20201110 08:33:50.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.196" endtime="20201110 08:33:50.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.192" endtime="20201110 08:33:50.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.824" endtime="20201110 08:33:50.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.824" endtime="20201110 08:33:50.218"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.226" endtime="20201110 08:33:50.241"></status>
</kw>
<msg timestamp="20201110 08:33:50.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.225" endtime="20201110 08:33:50.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.242" endtime="20201110 08:33:50.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.245" endtime="20201110 08:33:50.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.222" endtime="20201110 08:33:50.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.220" endtime="20201110 08:33:50.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.255" endtime="20201110 08:33:50.554"></status>
</kw>
<msg timestamp="20201110 08:33:50.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.253" endtime="20201110 08:33:50.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021527208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.558" endtime="20201110 08:33:50.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.568" endtime="20201110 08:33:50.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.251" endtime="20201110 08:33:50.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.249" endtime="20201110 08:33:50.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.574" level="INFO">${RESULT} = [{'time': 0.021527208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.021548125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.571" endtime="20201110 08:33:50.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.588" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:50.575" endtime="20201110 08:33:50.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.592" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.591" endtime="20201110 08:33:50.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.595" level="INFO">VALUE: [1.4000000000000123e-05, 1.2861000000002898e-05, 1.2874999999998998e-05, 1.2917000000001178e-05, 1.2874999999998998e-05, 1.3347000000000359e-05, 1.2888999999998568e-05, 1.3653000000002358e-05, 1.2889000000002038e-05, 1.2874999999998998e-05, 1.3666999999998458e-05, 1.3209000000000137e-05, 1.3180999999997528e-05, 1.3208000000000664e-05, 1.3222000000000234e-05, 1.3638999999999318e-05, 1.2888000000002564e-05, 1.3235999999999803e-05, 1.331899999999775e-05, 1.2903000000001608e-05, 1.2847999999999332e-05, 1.3347999999999832e-05, 1.3193999999997624e-05, 1.3207999999997194e-05, 1.3638999999999318e-05, 1.3610999999996709e-05, 1.3222999999999707e-05, 1.3666999999998458e-05, 1.2888999999998568e-05, 1.2874999999998998e-05, 1.2874999999998998e-05, 1.3347000000000359e-05, 1.3652999999998888e-05, 1.3222000000000234e-05, 1.3319000000001219e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.380499999999868e-05, 1.3680999999998028e-05, 1.3374999999999498e-05, 1.3666999999998458e-05, 1.333299999999732e-05, 1.3194000000001094e-05, 1.3665999999998985e-05, 1.3333000000000789e-05, 1.2861000000002898e-05, 1.3194000000001094e-05, 1.3374999999999498e-05, 1.3360999999999928e-05, 1.3333000000000789e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.593" endtime="20201110 08:33:50.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.589" endtime="20201110 08:33:50.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.598" endtime="20201110 08:33:50.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.602" endtime="20201110 08:33:50.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.600" endtime="20201110 08:33:50.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.597" endtime="20201110 08:33:50.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.219" endtime="20201110 08:33:50.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.218" endtime="20201110 08:33:50.622"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.631" endtime="20201110 08:33:50.645"></status>
</kw>
<msg timestamp="20201110 08:33:50.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.629" endtime="20201110 08:33:50.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.647" endtime="20201110 08:33:50.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.649" endtime="20201110 08:33:50.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.627" endtime="20201110 08:33:50.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.625" endtime="20201110 08:33:50.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.659" endtime="20201110 08:33:50.944"></status>
</kw>
<msg timestamp="20201110 08:33:50.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021636181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.658" endtime="20201110 08:33:50.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021621722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021636181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.949" endtime="20201110 08:33:50.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.958" endtime="20201110 08:33:50.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.655" endtime="20201110 08:33:50.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.653" endtime="20201110 08:33:50.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.964" level="INFO">${RESULT} = [{'time': 0.021636181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4459000000001387e-05, 'source_diff': 1.4459000000001387e-05}, {'time': 0.021655069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.961" endtime="20201110 08:33:50.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.979" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:50.966" endtime="20201110 08:33:50.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.983" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.982" endtime="20201110 08:33:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.986" level="INFO">VALUE: [1.4459000000001387e-05, 1.458299999999857e-05, 1.3860999999996959e-05, 1.427700000000004e-05, 1.4639000000000318e-05, 1.409699999999764e-05, 1.4568999999999e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.381899999999825e-05, 1.40689999999985e-05, 1.4263999999999943e-05, 1.4125000000000248e-05, 1.4277999999999513e-05, 1.4597000000001609e-05, 1.4722000000001734e-05, 1.4263999999999943e-05, 1.4125000000000248e-05, 1.4125000000000248e-05, 1.3805000000002149e-05, 1.4570000000001943e-05, 1.434699999999789e-05, 1.452700000000029e-05, 1.4597000000001609e-05, 1.4583000000002039e-05, 1.3792000000002053e-05, 1.4306000000002123e-05, 1.4250000000000373e-05, 1.4111000000000679e-05, 1.4263999999999943e-05, 1.380499999999868e-05, 1.4277999999999513e-05, 1.3861000000000429e-05, 1.4735999999997834e-05, 1.459699999999814e-05, 1.3889000000003038e-05, 1.4250000000000373e-05, 1.4597000000001609e-05, 1.3806000000001623e-05, 1.431899999999875e-05, 1.4138999999999818e-05, 1.4722999999997738e-05, 1.429099999999961e-05, 1.3806000000001623e-05, 1.4263999999999943e-05, 1.4597000000001609e-05, 1.4138999999999818e-05, 1.4166999999998958e-05, 1.4041999999998833e-05, 1.4166999999998958e-05]</msg>
<status status="PASS" starttime="20201110 08:33:50.984" endtime="20201110 08:33:50.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.980" endtime="20201110 08:33:50.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.989" endtime="20201110 08:33:50.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.993" endtime="20201110 08:33:51.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.991" endtime="20201110 08:33:51.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.988" endtime="20201110 08:33:51.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.623" endtime="20201110 08:33:51.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.623" endtime="20201110 08:33:51.013"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.022" endtime="20201110 08:33:51.037"></status>
</kw>
<msg timestamp="20201110 08:33:51.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.021" endtime="20201110 08:33:51.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.039" endtime="20201110 08:33:51.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.041" endtime="20201110 08:33:51.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.018" endtime="20201110 08:33:51.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.016" endtime="20201110 08:33:51.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.051" endtime="20201110 08:33:51.336"></status>
</kw>
<msg timestamp="20201110 08:33:51.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.050" endtime="20201110 08:33:51.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.340" endtime="20201110 08:33:51.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.349" endtime="20201110 08:33:51.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.047" endtime="20201110 08:33:51.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.045" endtime="20201110 08:33:51.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.356" level="INFO">${RESULT} = [{'time': 0.022071431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5819999999999723e-05, 'source_diff': 1.5819999999999723e-05}, {'time': 0.022090458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.352" endtime="20201110 08:33:51.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.371" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:51.356" endtime="20201110 08:33:51.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.376" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.375" endtime="20201110 08:33:51.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.378" level="INFO">VALUE: [1.5819999999999723e-05, 1.5652000000001415e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.5528000000000763e-05, 1.5180999999999528e-05, 1.5193999999999624e-05, 1.50689999999995e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.4957999999998944e-05, 1.5652000000001415e-05, 1.5694000000000125e-05, 1.5513999999997724e-05, 1.4805999999999153e-05, 1.480499999999968e-05, 1.5055999999999403e-05, 1.4735999999997834e-05, 1.565300000000089e-05, 1.5235999999998334e-05, 1.4735999999997834e-05, 1.5055999999999403e-05, 1.565300000000089e-05, 1.5528000000000763e-05, 1.5166999999999958e-05, 1.5499999999998154e-05, 1.562499999999828e-05, 1.563900000000132e-05, 1.508299999999907e-05, 1.5069000000002969e-05, 1.565300000000089e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.5514000000001194e-05, 1.5486000000002054e-05, 1.5513999999997724e-05, 1.566700000000046e-05, 1.5193999999999624e-05, 1.5514000000001194e-05, 1.5542000000000333e-05, 1.5514000000001194e-05, 1.565299999999742e-05, 1.5513999999997724e-05, 1.5528000000000763e-05, 1.504100000000036e-05, 1.554100000000086e-05, 1.50689999999995e-05, 1.565299999999742e-05, 1.5514000000001194e-05, 1.5707999999999694e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.377" endtime="20201110 08:33:51.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.372" endtime="20201110 08:33:51.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.382" endtime="20201110 08:33:51.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.386" endtime="20201110 08:33:51.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.384" endtime="20201110 08:33:51.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.380" endtime="20201110 08:33:51.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.014" endtime="20201110 08:33:51.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.014" endtime="20201110 08:33:51.407"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.415" endtime="20201110 08:33:51.430"></status>
</kw>
<msg timestamp="20201110 08:33:51.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.414" endtime="20201110 08:33:51.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.431" endtime="20201110 08:33:51.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.434" endtime="20201110 08:33:51.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.411" endtime="20201110 08:33:51.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.409" endtime="20201110 08:33:51.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.444" endtime="20201110 08:33:51.731"></status>
</kw>
<msg timestamp="20201110 08:33:51.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.443" endtime="20201110 08:33:51.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.735" endtime="20201110 08:33:51.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.744" endtime="20201110 08:33:51.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.440" endtime="20201110 08:33:51.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.438" endtime="20201110 08:33:51.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.751" level="INFO">${RESULT} = [{'time': 0.022318444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.0223375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.747" endtime="20201110 08:33:51.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.765" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:51.752" endtime="20201110 08:33:51.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.770" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.769" endtime="20201110 08:33:51.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.772" level="INFO">VALUE: [1.6249999999998904e-05, 1.6513999999998724e-05, 1.609699999999964e-05, 1.6444000000000875e-05, 1.662499999999928e-05, 1.611100000000268e-05, 1.5971999999999514e-05, 1.6445000000000348e-05, 1.612499999999878e-05, 1.687499999999953e-05, 1.5665999999997515e-05, 1.663899999999885e-05, 1.5930000000000805e-05, 1.6444000000000875e-05, 1.612499999999878e-05, 1.658300000000057e-05, 1.611099999999921e-05, 1.6457999999996975e-05, 1.5986000000002554e-05, 1.5958999999999418e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.613899999999835e-05, 1.591700000000071e-05, 1.690299999999867e-05, 1.6443999999997405e-05, 1.5971999999999514e-05, 1.6445000000000348e-05, 1.659700000000014e-05, 1.616700000000096e-05, 1.659700000000014e-05, 1.690299999999867e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.613899999999835e-05, 1.644499999999688e-05, 1.5944999999999848e-05, 1.5986000000002554e-05, 1.641700000000121e-05, 1.6083999999999543e-05, 1.6472000000000014e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.613900000000182e-05, 1.658300000000057e-05, 1.6972000000000514e-05, 1.612499999999878e-05, 1.6458000000000444e-05, 1.6472000000000014e-05, 1.5985999999999084e-05]</msg>
<status status="PASS" starttime="20201110 08:33:51.771" endtime="20201110 08:33:51.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.766" endtime="20201110 08:33:51.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.776" endtime="20201110 08:33:51.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.779" endtime="20201110 08:33:51.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.778" endtime="20201110 08:33:51.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.774" endtime="20201110 08:33:51.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.407" endtime="20201110 08:33:51.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.407" endtime="20201110 08:33:51.800"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.809" endtime="20201110 08:33:51.824"></status>
</kw>
<msg timestamp="20201110 08:33:51.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.808" endtime="20201110 08:33:51.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.826" endtime="20201110 08:33:51.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.828" endtime="20201110 08:33:51.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.805" endtime="20201110 08:33:51.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.803" endtime="20201110 08:33:51.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.839" endtime="20201110 08:33:52.143"></status>
</kw>
<msg timestamp="20201110 08:33:52.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.837" endtime="20201110 08:33:52.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.148" endtime="20201110 08:33:52.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.156" endtime="20201110 08:33:52.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.834" endtime="20201110 08:33:52.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.832" endtime="20201110 08:33:52.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.163" level="INFO">${RESULT} = [{'time': 0.022165611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.762500000000028e-05, 'source_diff': 1.762500000000028e-05}, {'time': 0.022185681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.160" endtime="20201110 08:33:52.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.177" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:52.164" endtime="20201110 08:33:52.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.182" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.181" endtime="20201110 08:33:52.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.184" level="INFO">VALUE: [1.762500000000028e-05, 1.7111999999999683e-05, 1.73889999999996e-05, 1.7486000000000584e-05, 1.7070000000000973e-05, 1.754100000000286e-05, 1.7541999999998864e-05, 1.737500000000003e-05, 1.751300000000025e-05, 1.687499999999953e-05, 1.7070000000000973e-05, 1.7820000000001723e-05, 1.73889999999996e-05, 1.691700000000171e-05, 1.7513999999999724e-05, 1.7388000000000126e-05, 1.705500000000193e-05, 1.705500000000193e-05, 1.7486000000000584e-05, 1.7820000000001723e-05, 1.734699999999742e-05, 1.7041999999998364e-05, 1.70690000000015e-05, 1.7513999999999724e-05, 1.705499999999846e-05, 1.783299999999835e-05, 1.7513999999999724e-05, 1.7486000000000584e-05, 1.7500000000000154e-05, 1.781900000000225e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.752699999999982e-05, 1.7513999999999724e-05, 1.738900000000307e-05, 1.7277999999999044e-05, 1.705499999999846e-05, 1.7070000000000973e-05, 1.734699999999742e-05, 1.7541999999998864e-05, 1.694499999999738e-05, 1.737500000000003e-05, 1.7348000000000363e-05, 1.68889999999991e-05, 1.7513999999999724e-05, 1.691700000000171e-05, 1.737500000000003e-05, 1.704099999999889e-05, 1.737500000000003e-05, 1.691699999999824e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.183" endtime="20201110 08:33:52.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.178" endtime="20201110 08:33:52.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.188" endtime="20201110 08:33:52.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.191" endtime="20201110 08:33:52.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.190" endtime="20201110 08:33:52.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.186" endtime="20201110 08:33:52.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.801" endtime="20201110 08:33:52.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.801" endtime="20201110 08:33:52.212"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.221" endtime="20201110 08:33:52.237"></status>
</kw>
<msg timestamp="20201110 08:33:52.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.220" endtime="20201110 08:33:52.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.238" endtime="20201110 08:33:52.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.241" endtime="20201110 08:33:52.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.217" endtime="20201110 08:33:52.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.215" endtime="20201110 08:33:52.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.251" endtime="20201110 08:33:52.537"></status>
</kw>
<msg timestamp="20201110 08:33:52.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.249" endtime="20201110 08:33:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.544" endtime="20201110 08:33:52.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.556" endtime="20201110 08:33:52.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.247" endtime="20201110 08:33:52.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.245" endtime="20201110 08:33:52.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.563" level="INFO">${RESULT} = [{'time': 0.022679653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.022700583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.559" endtime="20201110 08:33:52.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.576" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:52.564" endtime="20201110 08:33:52.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.581" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.580" endtime="20201110 08:33:52.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.584" level="INFO">VALUE: [1.813900000000035e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8278000000000044e-05, 1.7971999999998045e-05, 1.8429999999999835e-05, 1.829100000000014e-05, 1.833299999999885e-05, 1.8750000000001404e-05, 1.8485999999998115e-05, 1.8749999999997935e-05, 1.844499999999888e-05, 1.883299999999935e-05, 1.830500000000318e-05, 1.7985999999997615e-05, 1.8749999999997935e-05, 1.8443999999999405e-05, 1.844500000000235e-05, 1.844499999999888e-05, 1.8750000000001404e-05, 1.8443999999999405e-05, 1.783299999999835e-05, 1.844499999999888e-05, 1.7986000000001084e-05, 1.844500000000235e-05, 1.873699999999784e-05, 1.8471999999998545e-05, 1.843099999999931e-05, 1.7959000000001418e-05, 1.843099999999931e-05, 1.8291999999999614e-05, 1.8819999999999254e-05, 1.841699999999974e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.8291999999999614e-05, 1.845899999999845e-05, 1.8750000000001404e-05, 1.8291999999999614e-05, 1.8000000000000654e-05, 1.8736000000001835e-05, 1.8443999999999405e-05, 1.8764000000000974e-05, 1.8291999999999614e-05, 1.8416000000000265e-05, 1.797299999999752e-05, 1.8457999999998975e-05, 1.833299999999885e-05, 1.7972000000001515e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.582" endtime="20201110 08:33:52.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.577" endtime="20201110 08:33:52.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.587" endtime="20201110 08:33:52.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.591" endtime="20201110 08:33:52.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.589" endtime="20201110 08:33:52.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.586" endtime="20201110 08:33:52.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.213" endtime="20201110 08:33:52.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.213" endtime="20201110 08:33:52.612"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.621" endtime="20201110 08:33:52.635"></status>
</kw>
<msg timestamp="20201110 08:33:52.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.619" endtime="20201110 08:33:52.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.637" endtime="20201110 08:33:52.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.640" endtime="20201110 08:33:52.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.617" endtime="20201110 08:33:52.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.614" endtime="20201110 08:33:52.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.650" endtime="20201110 08:33:52.938"></status>
</kw>
<msg timestamp="20201110 08:33:52.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.649" endtime="20201110 08:33:52.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.942" endtime="20201110 08:33:52.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.951" endtime="20201110 08:33:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.646" endtime="20201110 08:33:52.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.644" endtime="20201110 08:33:52.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.958" level="INFO">${RESULT} = [{'time': 0.022416347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.906900000000003e-05, 'source_diff': 1.906900000000003e-05}, {'time': 0.022438347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.954" endtime="20201110 08:33:52.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.973" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:52.959" endtime="20201110 08:33:52.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.977" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.976" endtime="20201110 08:33:52.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.980" level="INFO">VALUE: [1.906900000000003e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.936099999999899e-05, 1.8916000000000766e-05, 1.8930000000000335e-05, 1.916700000000049e-05, 1.8764000000000974e-05, 1.934699999999942e-05, 1.937499999999856e-05, 1.887499999999806e-05, 1.940300000000117e-05, 1.988899999999863e-05, 1.937499999999856e-05, 1.890300000000067e-05, 1.9194000000000155e-05, 1.891700000000024e-05, 1.93890000000016e-05, 1.9249999999998435e-05, 1.936099999999899e-05, 1.9750000000002405e-05, 1.9207999999999725e-05, 1.937500000000203e-05, 1.981900000000078e-05, 1.886099999999849e-05, 1.9235999999998865e-05, 1.936100000000246e-05, 1.9680000000001086e-05, 1.986100000000296e-05, 1.937500000000203e-05, 1.9693999999997186e-05, 1.940300000000117e-05, 1.9708000000000225e-05, 1.891700000000024e-05, 1.962499999999881e-05, 1.890300000000067e-05, 1.937499999999856e-05, 1.9680000000001086e-05, 1.934700000000289e-05, 1.887499999999806e-05, 1.9221999999999295e-05, 1.8902000000001196e-05, 1.890300000000067e-05, 1.890300000000067e-05, 1.968100000000056e-05, 1.920900000000267e-05, 1.969500000000013e-05, 1.9235999999998865e-05, 1.968099999999709e-05, 1.919499999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.979" endtime="20201110 08:33:52.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.974" endtime="20201110 08:33:52.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.984" endtime="20201110 08:33:52.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.987" endtime="20201110 08:33:53.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.986" endtime="20201110 08:33:53.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.982" endtime="20201110 08:33:53.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.613" endtime="20201110 08:33:53.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.612" endtime="20201110 08:33:53.008"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.017" endtime="20201110 08:33:53.033"></status>
</kw>
<msg timestamp="20201110 08:33:53.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.016" endtime="20201110 08:33:53.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.034" endtime="20201110 08:33:53.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.037" endtime="20201110 08:33:53.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.013" endtime="20201110 08:33:53.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.011" endtime="20201110 08:33:53.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.047" endtime="20201110 08:33:53.334"></status>
</kw>
<msg timestamp="20201110 08:33:53.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.046" endtime="20201110 08:33:53.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.338" endtime="20201110 08:33:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.347" endtime="20201110 08:33:53.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.043" endtime="20201110 08:33:53.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.041" endtime="20201110 08:33:53.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.354" level="INFO">${RESULT} = [{'time': 0.022454833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.022480833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:53.350" endtime="20201110 08:33:53.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.368" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:53.355" endtime="20201110 08:33:53.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.373" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.372" endtime="20201110 08:33:53.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.375" level="INFO">VALUE: [2.0486000000000115e-05, 1.983300000000035e-05, 1.984699999999992e-05, 2.030500000000171e-05, 2.062499999999981e-05, 1.987499999999906e-05, 2.0736000000000365e-05, 1.9833999999999824e-05, 2.015299999999845e-05, 2.069500000000113e-05, 2.062499999999981e-05, 2.0278000000002044e-05, 2.015299999999845e-05, 2.0278000000002044e-05, 2.059700000000067e-05, 2.061100000000024e-05, 2.0278000000002044e-05, 2.0749999999999935e-05, 2.076300000000003e-05, 2.059700000000067e-05, 2.076300000000003e-05, 2.0292000000001614e-05, 2.0598000000000144e-05, 2.037499999999956e-05, 2.0278000000002044e-05, 2.0291999999998145e-05, 2.061100000000024e-05, 2.015300000000192e-05, 2.0292000000001614e-05, 1.984699999999992e-05, 2.061100000000024e-05, 2.0556000000001434e-05, 2.062499999999981e-05, 2.0777999999999075e-05, 2.013900000000235e-05, 1.9820000000000254e-05, 2.012500000000278e-05, 2.016699999999802e-05, 2.02769999999991e-05, 2.0277999999998575e-05, 2.030500000000171e-05, 2.0764000000002975e-05, 1.983300000000035e-05, 2.015299999999845e-05, 2.030500000000171e-05, 2.015300000000192e-05, 2.0736000000000365e-05, 2.013900000000235e-05, 2.030500000000171e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.374" endtime="20201110 08:33:53.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.369" endtime="20201110 08:33:53.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.379" endtime="20201110 08:33:53.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.382" endtime="20201110 08:33:53.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.381" endtime="20201110 08:33:53.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.377" endtime="20201110 08:33:53.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.009" endtime="20201110 08:33:53.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.009" endtime="20201110 08:33:53.403"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.412" endtime="20201110 08:33:53.428"></status>
</kw>
<msg timestamp="20201110 08:33:53.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.411" endtime="20201110 08:33:53.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.429" endtime="20201110 08:33:53.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.432" endtime="20201110 08:33:53.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.408" endtime="20201110 08:33:53.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.406" endtime="20201110 08:33:53.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.442" endtime="20201110 08:33:53.728"></status>
</kw>
<msg timestamp="20201110 08:33:53.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:53.441" endtime="20201110 08:33:53.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:53.732" endtime="20201110 08:33:53.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.741" endtime="20201110 08:33:53.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.438" endtime="20201110 08:33:53.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.436" endtime="20201110 08:33:53.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.748" level="INFO">${RESULT} = [{'time': 0.022218, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.184700000000192e-05, 'source_diff': 2.184700000000192e-05}, {'time': 0.022241986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:53.744" endtime="20201110 08:33:53.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.762" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:53.749" endtime="20201110 08:33:53.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.767" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.766" endtime="20201110 08:33:53.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.769" level="INFO">VALUE: [2.184700000000192e-05, 2.0763999999999505e-05, 2.168099999999909e-05, 2.1528000000003295e-05, 2.0778000000002544e-05, 2.10830000000016e-05, 2.1250000000000435e-05, 2.0722000000000795e-05, 2.122300000000077e-05, 2.1165999999999546e-05, 2.169499999999866e-05, 2.1694000000002656e-05, 2.1541999999999395e-05, 2.122300000000077e-05, 2.1541999999999395e-05, 2.0735999999996896e-05, 2.0749999999999935e-05, 2.12090000000012e-05, 2.109700000000117e-05, 2.105500000000246e-05, 2.154099999999992e-05, 2.106899999999856e-05, 2.1693999999999186e-05, 2.1527999999999825e-05, 2.1707999999998756e-05, 2.154099999999992e-05, 2.1666000000000046e-05, 2.1070000000001504e-05, 2.1041999999998895e-05, 2.0736000000000365e-05, 2.1569999999998535e-05, 2.0777999999999075e-05, 2.1222000000001295e-05, 2.0750000000003405e-05, 2.1165999999999546e-05, 2.0749999999999935e-05, 2.1222000000001295e-05, 2.1083999999997605e-05, 2.104099999999942e-05, 2.166699999999952e-05, 2.123700000000034e-05, 2.120899999999773e-05, 2.1222000000001295e-05, 2.155500000000296e-05, 2.169499999999866e-05, 2.081900000000178e-05, 2.1235999999997396e-05, 2.109700000000117e-05, 2.1541999999999395e-05, 2.1514000000000255e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.768" endtime="20201110 08:33:53.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.763" endtime="20201110 08:33:53.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.773" endtime="20201110 08:33:53.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.777" endtime="20201110 08:33:53.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.775" endtime="20201110 08:33:53.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.771" endtime="20201110 08:33:53.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.404" endtime="20201110 08:33:53.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.404" endtime="20201110 08:33:53.798"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.807" endtime="20201110 08:33:53.822"></status>
</kw>
<msg timestamp="20201110 08:33:53.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.805" endtime="20201110 08:33:53.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.823" endtime="20201110 08:33:53.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.826" endtime="20201110 08:33:53.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.802" endtime="20201110 08:33:53.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.800" endtime="20201110 08:33:53.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.836" endtime="20201110 08:33:54.125"></status>
</kw>
<msg timestamp="20201110 08:33:54.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.835" endtime="20201110 08:33:54.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.132" endtime="20201110 08:33:54.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.141" endtime="20201110 08:33:54.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.832" endtime="20201110 08:33:54.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.830" endtime="20201110 08:33:54.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.148" level="INFO">${RESULT} = [{'time': 0.022459944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2776999999998132e-05, 'source_diff': 2.2776999999998132e-05}, {'time': 0.022492083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:54.144" endtime="20201110 08:33:54.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.162" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:54.149" endtime="20201110 08:33:54.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.167" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.166" endtime="20201110 08:33:54.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.169" level="INFO">VALUE: [2.2776999999998132e-05, 2.258299999999963e-05, 2.262499999999834e-05, 2.2457999999999506e-05, 2.2471999999999076e-05, 2.2430000000000366e-05, 2.202700000000085e-05, 2.216700000000002e-05, 2.247299999999855e-05, 2.216700000000002e-05, 2.2583999999999105e-05, 2.2457999999999506e-05, 2.2443999999999936e-05, 2.2944000000000436e-05, 2.2471999999999076e-05, 2.255500000000049e-05, 2.2583999999999105e-05, 2.2457999999999506e-05, 2.17090000000017e-05, 2.2471999999999076e-05, 2.258299999999963e-05, 2.2028000000000325e-05, 2.2083999999998605e-05, 2.1999999999997716e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.2680000000000616e-05, 2.2014000000000755e-05, 2.261099999999877e-05, 2.2000000000001185e-05, 2.261099999999877e-05, 2.2499999999998216e-05, 2.2471999999999076e-05, 2.211099999999827e-05, 2.2166000000000546e-05, 2.2457999999999506e-05, 2.259700000000267e-05, 2.1652000000000476e-05, 2.1679999999999616e-05, 2.219499999999916e-05, 2.2000000000001185e-05, 2.2458000000002976e-05, 2.215300000000045e-05, 2.262499999999834e-05, 2.1708000000002226e-05, 2.2180000000000116e-05, 2.259700000000267e-05, 2.265300000000095e-05, 2.2457999999999506e-05, 2.212500000000131e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.168" endtime="20201110 08:33:54.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.163" endtime="20201110 08:33:54.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.173" endtime="20201110 08:33:54.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.177" endtime="20201110 08:33:54.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.175" endtime="20201110 08:33:54.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.171" endtime="20201110 08:33:54.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.799" endtime="20201110 08:33:54.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.798" endtime="20201110 08:33:54.198"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.207" endtime="20201110 08:33:54.222"></status>
</kw>
<msg timestamp="20201110 08:33:54.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.205" endtime="20201110 08:33:54.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.224" endtime="20201110 08:33:54.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.227" endtime="20201110 08:33:54.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.202" endtime="20201110 08:33:54.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.200" endtime="20201110 08:33:54.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.237" endtime="20201110 08:33:54.522"></status>
</kw>
<msg timestamp="20201110 08:33:54.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:54.235" endtime="20201110 08:33:54.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02277225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:54.526" endtime="20201110 08:33:54.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.535" endtime="20201110 08:33:54.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.233" endtime="20201110 08:33:54.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.231" endtime="20201110 08:33:54.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.542" level="INFO">${RESULT} = [{'time': 0.02277225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3694000000001186e-05, 'source_diff': 2.3694000000001186e-05}, {'time': 0.022804361, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:54.538" endtime="20201110 08:33:54.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.556" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:54.543" endtime="20201110 08:33:54.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.561" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.560" endtime="20201110 08:33:54.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.564" level="INFO">VALUE: [2.3694000000001186e-05, 2.30969999999997e-05, 2.3070000000000035e-05, 2.290299999999773e-05, 2.308300000000013e-05, 2.3070000000000035e-05, 2.2916000000001296e-05, 2.337499999999909e-05, 2.338900000000213e-05, 2.3083999999999605e-05, 2.2915999999997827e-05, 2.2985999999999146e-05, 2.338900000000213e-05, 2.291700000000077e-05, 2.388899999999916e-05, 2.312499999999884e-05, 2.311100000000274e-05, 2.287500000000206e-05, 2.2999999999998716e-05, 2.308300000000013e-05, 2.3070000000000035e-05, 2.3443999999997467e-05, 2.3485999999999646e-05, 2.3429999999997897e-05, 2.337499999999909e-05, 2.2944000000000436e-05, 2.3832999999997412e-05, 2.337499999999909e-05, 2.384700000000045e-05, 2.3056000000000465e-05, 2.39030000000022e-05, 2.338899999999866e-05, 2.29169999999973e-05, 2.2901999999998257e-05, 2.340299999999823e-05, 2.2944000000000436e-05, 2.3527999999998356e-05, 2.3070000000000035e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.388899999999916e-05, 2.338900000000213e-05, 2.3056000000000465e-05, 2.2915999999997827e-05, 2.3070000000000035e-05, 2.308300000000013e-05, 2.3500000000002685e-05, 2.3013999999998286e-05, 2.384700000000045e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.562" endtime="20201110 08:33:54.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.557" endtime="20201110 08:33:54.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.567" endtime="20201110 08:33:54.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.571" endtime="20201110 08:33:54.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.569" endtime="20201110 08:33:54.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.566" endtime="20201110 08:33:54.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.199" endtime="20201110 08:33:54.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.198" endtime="20201110 08:33:54.592"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.601" endtime="20201110 08:33:54.616"></status>
</kw>
<msg timestamp="20201110 08:33:54.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.599" endtime="20201110 08:33:54.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.618" endtime="20201110 08:33:54.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.620" endtime="20201110 08:33:54.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.597" endtime="20201110 08:33:54.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.594" endtime="20201110 08:33:54.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.631" endtime="20201110 08:33:54.917"></status>
</kw>
<msg timestamp="20201110 08:33:54.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.629" endtime="20201110 08:33:54.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.921" endtime="20201110 08:33:54.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.930" endtime="20201110 08:33:54.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.626" endtime="20201110 08:33:54.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.625" endtime="20201110 08:33:54.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.937" level="INFO">${RESULT} = [{'time': 0.022296972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5014000000000286e-05, 'source_diff': 2.5014000000000286e-05}, {'time': 0.02232875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:54.933" endtime="20201110 08:33:54.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.951" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:54.938" endtime="20201110 08:33:54.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.955" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.954" endtime="20201110 08:33:54.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.958" level="INFO">VALUE: [2.5014000000000286e-05, 2.4458000000001506e-05, 2.4458000000001506e-05, 2.3986000000000146e-05, 2.4735999999997427e-05, 2.4819999999998316e-05, 2.4458000000001506e-05, 2.4458000000001506e-05, 2.443100000000184e-05, 2.4860999999997552e-05, 2.4471999999997607e-05, 2.4014000000002755e-05, 2.4320000000001285e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4013999999999286e-05, 2.431900000000181e-05, 2.4319999999997816e-05, 2.4750000000000466e-05, 2.4777000000000132e-05, 2.4290999999999202e-05, 2.3986000000000146e-05, 2.4305999999998246e-05, 2.431900000000181e-05, 2.4750000000000466e-05, 2.3971999999997107e-05, 2.4458000000001506e-05, 2.3986000000000146e-05, 2.4777999999999606e-05, 2.3999999999999716e-05, 2.4540999999999452e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.438899999999966e-05, 2.386100000000002e-05, 2.4306000000001715e-05, 2.4818999999998842e-05, 2.4291999999998676e-05, 2.4750000000000466e-05, 2.4055999999997996e-05, 2.4290999999999202e-05, 2.429100000000267e-05, 2.3847999999999925e-05, 2.4500000000000216e-05, 2.4292000000002145e-05, 2.447300000000055e-05, 2.4722000000001326e-05, 2.4444000000001936e-05, 2.384700000000045e-05, 2.4500000000000216e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.957" endtime="20201110 08:33:54.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.952" endtime="20201110 08:33:54.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.962" endtime="20201110 08:33:54.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.965" endtime="20201110 08:33:54.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.964" endtime="20201110 08:33:54.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.960" endtime="20201110 08:33:54.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.593" endtime="20201110 08:33:54.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.592" endtime="20201110 08:33:54.986"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.995" endtime="20201110 08:33:55.011"></status>
</kw>
<msg timestamp="20201110 08:33:55.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.994" endtime="20201110 08:33:55.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.012" endtime="20201110 08:33:55.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.015" endtime="20201110 08:33:55.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.991" endtime="20201110 08:33:55.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.989" endtime="20201110 08:33:55.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.026" endtime="20201110 08:33:55.312"></status>
</kw>
<msg timestamp="20201110 08:33:55.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.024" endtime="20201110 08:33:55.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.317" endtime="20201110 08:33:55.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.325" endtime="20201110 08:33:55.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.021" endtime="20201110 08:33:55.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.019" endtime="20201110 08:33:55.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.332" level="INFO">${RESULT} = [{'time': 0.022444014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.586100000000202e-05, 'source_diff': 2.586100000000202e-05}, {'time': 0.022475014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.329" endtime="20201110 08:33:55.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.346" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:55.333" endtime="20201110 08:33:55.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.351" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.350" endtime="20201110 08:33:55.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.353" level="INFO">VALUE: [2.586100000000202e-05, 2.5236000000001396e-05, 2.5680000000000147e-05, 2.569499999999919e-05, 2.5250000000000966e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.537500000000109e-05, 2.484700000000145e-05, 2.569499999999919e-05, 2.4915999999999827e-05, 2.4902000000000257e-05, 2.5680000000000147e-05, 2.5236000000001396e-05, 2.4902000000000257e-05, 2.520900000000173e-05, 2.569499999999919e-05, 2.569499999999919e-05, 2.537499999999762e-05, 2.5693999999999717e-05, 2.5708000000002756e-05, 2.5236000000001396e-05, 2.5721999999998857e-05, 2.4944000000002436e-05, 2.488900000000016e-05, 2.537499999999762e-05, 2.537499999999762e-05, 2.5235999999997927e-05, 2.5179999999999647e-05, 2.5708000000002756e-05, 2.5236000000001396e-05, 2.57230000000018e-05, 2.491700000000277e-05, 2.491700000000277e-05, 2.569499999999919e-05, 2.5207999999998787e-05, 2.490299999999973e-05, 2.493099999999887e-05, 2.488900000000016e-05, 2.570899999999876e-05, 2.5250000000000966e-05, 2.5249999999997497e-05, 2.538900000000066e-05, 2.4805999999998746e-05, 2.493099999999887e-05, 2.5693999999999717e-05, 2.538899999999719e-05, 2.490299999999973e-05, 2.5707999999999287e-05, 2.490299999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.352" endtime="20201110 08:33:55.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.347" endtime="20201110 08:33:55.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.357" endtime="20201110 08:33:55.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.361" endtime="20201110 08:33:55.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.359" endtime="20201110 08:33:55.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.355" endtime="20201110 08:33:55.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.987" endtime="20201110 08:33:55.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.987" endtime="20201110 08:33:55.382"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.391" endtime="20201110 08:33:55.406"></status>
</kw>
<msg timestamp="20201110 08:33:55.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.389" endtime="20201110 08:33:55.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.407" endtime="20201110 08:33:55.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.410" endtime="20201110 08:33:55.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.386" endtime="20201110 08:33:55.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.384" endtime="20201110 08:33:55.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.420" endtime="20201110 08:33:55.707"></status>
</kw>
<msg timestamp="20201110 08:33:55.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.419" endtime="20201110 08:33:55.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.711" endtime="20201110 08:33:55.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.720" endtime="20201110 08:33:55.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.416" endtime="20201110 08:33:55.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.414" endtime="20201110 08:33:55.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.727" level="INFO">${RESULT} = [{'time': 0.022356694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6332999999999912e-05, 'source_diff': 2.6332999999999912e-05}, {'time': 0.022387583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.723" endtime="20201110 08:33:55.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.740" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:55.728" endtime="20201110 08:33:55.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.745" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.744" endtime="20201110 08:33:55.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.748" level="INFO">VALUE: [2.6332999999999912e-05, 2.6332999999999912e-05, 2.6638999999998442e-05, 2.60970000000027e-05, 2.586100000000202e-05, 2.6333999999999386e-05, 2.6763999999998567e-05, 2.587500000000159e-05, 2.5834000000002355e-05, 2.6221999999999357e-05, 2.5846999999998982e-05, 2.662500000000234e-05, 2.6624999999998872e-05, 2.663900000000191e-05, 2.6332999999999912e-05, 2.6778000000001606e-05, 2.5832999999999412e-05, 2.615300000000098e-05, 2.6332999999999912e-05, 2.6305000000000772e-05, 2.6110999999998802e-05, 2.5833999999998886e-05, 2.6166000000001077e-05, 2.6638999999998442e-05, 2.613900000000141e-05, 2.584700000000245e-05, 2.663900000000191e-05, 2.6652000000002007e-05, 2.6651999999998538e-05, 2.6319999999999816e-05, 2.6166000000001077e-05, 2.615299999999751e-05, 2.583300000000288e-05, 2.6333999999999386e-05, 2.6610999999999302e-05, 2.6306000000000246e-05, 2.5862000000001495e-05, 2.6319000000000342e-05, 2.618100000000012e-05, 2.6334000000002855e-05, 2.5848000000001925e-05, 2.5846999999998982e-05, 2.5832999999999412e-05, 2.6319000000000342e-05, 2.6624999999998872e-05, 2.6332999999999912e-05, 2.5832999999999412e-05, 2.5847999999998456e-05, 2.5874999999998122e-05, 2.665300000000148e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.746" endtime="20201110 08:33:55.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.741" endtime="20201110 08:33:55.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.751" endtime="20201110 08:33:55.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.755" endtime="20201110 08:33:55.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.753" endtime="20201110 08:33:55.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.750" endtime="20201110 08:33:55.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.382" endtime="20201110 08:33:55.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.382" endtime="20201110 08:33:55.776"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.785" endtime="20201110 08:33:55.800"></status>
</kw>
<msg timestamp="20201110 08:33:55.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.783" endtime="20201110 08:33:55.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.802" endtime="20201110 08:33:55.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.804" endtime="20201110 08:33:55.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.781" endtime="20201110 08:33:55.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.779" endtime="20201110 08:33:55.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.815" endtime="20201110 08:33:56.102"></status>
</kw>
<msg timestamp="20201110 08:33:56.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.813" endtime="20201110 08:33:56.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.107" endtime="20201110 08:33:56.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.115" endtime="20201110 08:33:56.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.810" endtime="20201110 08:33:56.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.809" endtime="20201110 08:33:56.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.122" level="INFO">${RESULT} = [{'time': 0.022234431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.022270472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.119" endtime="20201110 08:33:56.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:56.123" endtime="20201110 08:33:56.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.142" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.141" endtime="20201110 08:33:56.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.144" level="INFO">VALUE: [2.7875000000000122e-05, 2.7499999999999747e-05, 2.7693999999998248e-05, 2.7250000000002966e-05, 2.673700000000237e-05, 2.7680000000002147e-05, 2.7554999999998553e-05, 2.7499999999999747e-05, 2.7554999999998553e-05, 2.7556000000001496e-05, 2.7097000000000232e-05, 2.6777999999998137e-05, 2.6790999999998233e-05, 2.6764000000002036e-05, 2.769499999999772e-05, 2.7235999999999927e-05, 2.6820000000000316e-05, 2.7235999999999927e-05, 2.7055000000001522e-05, 2.7235999999999927e-05, 2.72369999999994e-05, 2.7582999999997693e-05, 2.7110999999999802e-05, 2.711100000000327e-05, 2.7526999999999413e-05, 2.7097000000000232e-05, 2.7541999999998457e-05, 2.6763999999998567e-05, 2.768099999999815e-05, 2.7570000000001066e-05, 2.769500000000119e-05, 2.769499999999772e-05, 2.7235999999999927e-05, 2.7555999999998027e-05, 2.6777999999998137e-05, 2.6790999999998233e-05, 2.769500000000119e-05, 2.7249999999999497e-05, 2.7056000000000996e-05, 2.7694000000001717e-05, 2.7208000000000787e-05, 2.7541000000002452e-05, 2.7540999999998983e-05, 2.769499999999772e-05, 2.7097000000000232e-05, 2.747300000000008e-05, 2.7513999999999317e-05, 2.7222000000000357e-05, 2.7070000000000566e-05, 2.6819000000000842e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.143" endtime="20201110 08:33:56.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.138" endtime="20201110 08:33:56.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.148" endtime="20201110 08:33:56.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.152" endtime="20201110 08:33:56.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.150" endtime="20201110 08:33:56.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.147" endtime="20201110 08:33:56.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.777" endtime="20201110 08:33:56.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.776" endtime="20201110 08:33:56.173"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.182" endtime="20201110 08:33:56.198"></status>
</kw>
<msg timestamp="20201110 08:33:56.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.180" endtime="20201110 08:33:56.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.200" endtime="20201110 08:33:56.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.202" endtime="20201110 08:33:56.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.177" endtime="20201110 08:33:56.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.175" endtime="20201110 08:33:56.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.212" endtime="20201110 08:33:56.499"></status>
</kw>
<msg timestamp="20201110 08:33:56.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.211" endtime="20201110 08:33:56.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.503" endtime="20201110 08:33:56.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.512" endtime="20201110 08:33:56.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.208" endtime="20201110 08:33:56.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.206" endtime="20201110 08:33:56.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.519" level="INFO">${RESULT} = [{'time': 0.022282764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8805999999999277e-05, 'source_diff': 2.8805999999999277e-05}, {'time': 0.022315708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.515" endtime="20201110 08:33:56.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.533" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:56.520" endtime="20201110 08:33:56.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.538" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.536" endtime="20201110 08:33:56.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.540" level="INFO">VALUE: [2.8805999999999277e-05, 2.8611000000001302e-05, 2.8138999999999942e-05, 2.8041999999998957e-05, 2.8402999999999762e-05, 2.8625000000000872e-05, 2.8193999999998748e-05, 2.847300000000108e-05, 2.8138999999999942e-05, 2.8693999999999248e-05, 2.8027999999999387e-05, 2.8610999999997833e-05, 2.8013999999999817e-05, 2.870900000000176e-05, 2.8611000000001302e-05, 2.8443999999998998e-05, 2.8486000000001177e-05, 2.769500000000119e-05, 2.8111000000000802e-05, 2.8152999999999512e-05, 2.847299999999761e-05, 2.769499999999772e-05, 2.8000000000000247e-05, 2.8610999999997833e-05, 2.8639000000000442e-05, 2.8624999999997403e-05, 2.8500000000000747e-05, 2.765300000000248e-05, 2.8457999999998568e-05, 2.8096999999997763e-05, 2.8472000000001607e-05, 2.8152999999999512e-05, 2.7791999999998707e-05, 2.8152999999999512e-05, 2.8124999999996902e-05, 2.8026999999999913e-05, 2.8541999999999457e-05, 2.7708000000001287e-05, 2.818099999999865e-05, 2.8152999999999512e-05, 2.8625000000000872e-05, 2.8471999999998138e-05, 2.8597000000001732e-05, 2.86379999999975e-05, 2.8096999999997763e-05, 2.818100000000212e-05, 2.8013999999999817e-05, 2.8639000000000442e-05, 2.816700000000255e-05, 2.816699999999908e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.539" endtime="20201110 08:33:56.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.534" endtime="20201110 08:33:56.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.544" endtime="20201110 08:33:56.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.548" endtime="20201110 08:33:56.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.546" endtime="20201110 08:33:56.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.542" endtime="20201110 08:33:56.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.174" endtime="20201110 08:33:56.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.173" endtime="20201110 08:33:56.568"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.577" endtime="20201110 08:33:56.593"></status>
</kw>
<msg timestamp="20201110 08:33:56.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.576" endtime="20201110 08:33:56.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.594" endtime="20201110 08:33:56.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.597" endtime="20201110 08:33:56.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.573" endtime="20201110 08:33:56.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.571" endtime="20201110 08:33:56.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.607" endtime="20201110 08:33:56.893"></status>
</kw>
<msg timestamp="20201110 08:33:56.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.606" endtime="20201110 08:33:56.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.897" endtime="20201110 08:33:56.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.906" endtime="20201110 08:33:56.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.603" endtime="20201110 08:33:56.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.601" endtime="20201110 08:33:56.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.913" level="INFO">${RESULT} = [{'time': 0.022275208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9777000000001663e-05, 'source_diff': 2.9777000000001663e-05}, {'time': 0.022314222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.909" endtime="20201110 08:33:56.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.927" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:56.914" endtime="20201110 08:33:56.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.931" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.930" endtime="20201110 08:33:56.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.934" level="INFO">VALUE: [2.9777000000001663e-05, 2.9097000000002232e-05, 2.9403000000000762e-05, 2.9389000000001192e-05, 2.9888999999998223e-05, 2.9098000000001706e-05, 2.9528000000000887e-05, 2.9569000000000123e-05, 2.9082999999999193e-05, 2.9860999999999083e-05, 2.9000000000001247e-05, 2.940199999999782e-05, 2.8916999999999832e-05, 2.9541000000000983e-05, 2.9097999999998236e-05, 2.894499999999897e-05, 2.9874999999998653e-05, 2.8943999999999498e-05, 2.9402000000001288e-05, 2.9082999999999193e-05, 2.942999999999696e-05, 2.8957999999999068e-05, 2.8957999999999068e-05, 2.9417000000000332e-05, 2.9583000000003162e-05, 2.9069999999999097e-05, 2.9556000000000027e-05, 2.8986000000001677e-05, 2.9417000000000332e-05, 2.895900000000201e-05, 2.89309999999994e-05, 2.9403000000000762e-05, 2.8916999999999832e-05, 2.9096999999998763e-05, 2.9875000000002122e-05, 2.9096999999998763e-05, 2.9542000000000457e-05, 2.9083999999998666e-05, 2.9082999999999193e-05, 2.9110999999998333e-05, 2.89309999999994e-05, 2.9111000000001802e-05, 2.9125000000001372e-05, 2.9486000000002177e-05, 2.9542000000000457e-05, 2.9402999999997292e-05, 2.9348000000001956e-05, 2.9084000000002136e-05, 2.9888999999998223e-05, 2.9526999999997944e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.932" endtime="20201110 08:33:56.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.928" endtime="20201110 08:33:56.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.938" endtime="20201110 08:33:56.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.941" endtime="20201110 08:33:56.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.940" endtime="20201110 08:33:56.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.936" endtime="20201110 08:33:56.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.569" endtime="20201110 08:33:56.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.569" endtime="20201110 08:33:56.962"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.971" endtime="20201110 08:33:56.987"></status>
</kw>
<msg timestamp="20201110 08:33:56.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.970" endtime="20201110 08:33:56.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.989" endtime="20201110 08:33:56.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.991" endtime="20201110 08:33:56.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.967" endtime="20201110 08:33:56.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.965" endtime="20201110 08:33:56.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.002" endtime="20201110 08:33:57.288"></status>
</kw>
<msg timestamp="20201110 08:33:57.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.000" endtime="20201110 08:33:57.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.292" endtime="20201110 08:33:57.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.301" endtime="20201110 08:33:57.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.998" endtime="20201110 08:33:57.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.996" endtime="20201110 08:33:57.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.308" level="INFO">${RESULT} = [{'time': 0.022875472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0125000000002372e-05, 'source_diff': 3.0125000000002372e-05}, {'time': 0.022909403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:57.304" endtime="20201110 08:33:57.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.322" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:57.309" endtime="20201110 08:33:57.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.327" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.326" endtime="20201110 08:33:57.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.329" level="INFO">VALUE: [3.0125000000002372e-05, 2.9999999999998778e-05, 3.0347000000000013e-05, 3.0458000000000568e-05, 3.0347000000000013e-05, 2.9875000000002122e-05, 3.0485999999999708e-05, 3.0291999999997737e-05, 2.9860999999999083e-05, 3.0818999999997904e-05, 3.048699999999918e-05, 3.0472000000000138e-05, 3.0333000000000443e-05, 3.077800000000214e-05, 2.9999999999998778e-05, 3.0472000000000138e-05, 3.0333000000000443e-05, 3.042999999999796e-05, 3.0013999999998348e-05, 3.080600000000128e-05, 3.0485999999999708e-05, 3.0360999999999583e-05, 3.0027000000001913e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0028000000001387e-05, 3.047299999999961e-05, 3.0014000000001817e-05, 3.0264000000002067e-05, 3.0000000000002247e-05, 3.0485999999999708e-05, 2.9888999999998223e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.080599999999781e-05, 3.0402999999998293e-05, 3.0790999999998764e-05, 3.0028000000001387e-05, 3.0472000000000138e-05, 3.0472000000000138e-05, 3.0333000000000443e-05, 3.0014000000001817e-05, 3.0026999999998444e-05, 2.9874999999998653e-05, 3.0403000000001762e-05, 3.080600000000128e-05, 3.0333000000000443e-05, 3.079200000000171e-05, 3.0013999999998348e-05, 3.0333999999999917e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.328" endtime="20201110 08:33:57.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.323" endtime="20201110 08:33:57.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.333" endtime="20201110 08:33:57.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.336" endtime="20201110 08:33:57.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.335" endtime="20201110 08:33:57.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.331" endtime="20201110 08:33:57.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.963" endtime="20201110 08:33:57.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.962" endtime="20201110 08:33:57.357"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.366" endtime="20201110 08:33:57.382"></status>
</kw>
<msg timestamp="20201110 08:33:57.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.365" endtime="20201110 08:33:57.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.384" endtime="20201110 08:33:57.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.387" endtime="20201110 08:33:57.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.362" endtime="20201110 08:33:57.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.360" endtime="20201110 08:33:57.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.397" endtime="20201110 08:33:57.684"></status>
</kw>
<msg timestamp="20201110 08:33:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.395" endtime="20201110 08:33:57.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.688" endtime="20201110 08:33:57.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.697" endtime="20201110 08:33:57.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.393" endtime="20201110 08:33:57.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.391" endtime="20201110 08:33:57.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.704" level="INFO">${RESULT} = [{'time': 0.022263569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.363799999999903e-05, 'source_diff': 3.363799999999903e-05}, {'time': 0.022304625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.700" endtime="20201110 08:33:57.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.719" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:57.705" endtime="20201110 08:33:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.723" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.722" endtime="20201110 08:33:57.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.726" level="INFO">VALUE: [3.363799999999903e-05, 3.340300000000129e-05, 3.397200000000017e-05, 3.340299999999782e-05, 3.3445e-05, 3.330600000000031e-05, 3.420800000000085e-05, 3.3568999999997184e-05, 3.3388999999998253e-05, 3.388900000000222e-05, 3.379200000000124e-05, 3.405600000000106e-05, 3.39580000000006e-05, 3.35839999999997e-05, 3.3624999999998934e-05, 3.343100000000043e-05, 3.4347000000000544e-05, 3.391699999999789e-05, 3.409799999999977e-05, 3.330600000000031e-05, 3.423599999999999e-05, 3.391699999999789e-05, 3.424999999999956e-05, 3.3610999999999364e-05, 3.3319000000000404e-05, 3.380600000000081e-05, 3.374999999999906e-05, 3.4069000000001154e-05, 3.3818999999997434e-05, 3.4013000000002874e-05, 3.349999999999881e-05, 3.399999999999931e-05, 3.3332999999999974e-05, 3.3847000000000044e-05, 3.363900000000197e-05, 3.3833000000000474e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.401399999999888e-05, 3.369399999999731e-05, 3.411200000000281e-05, 3.4054999999998115e-05, 3.423599999999999e-05, 3.401399999999888e-05, 3.37640000000021e-05, 3.397200000000017e-05, 3.402800000000192e-05, 3.352799999999795e-05, 3.401399999999888e-05, 3.370800000000035e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.724" endtime="20201110 08:33:57.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.720" endtime="20201110 08:33:57.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.730" endtime="20201110 08:33:57.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.733" endtime="20201110 08:33:57.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.732" endtime="20201110 08:33:57.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.728" endtime="20201110 08:33:57.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.358" endtime="20201110 08:33:57.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.358" endtime="20201110 08:33:57.754"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.763" endtime="20201110 08:33:57.779"></status>
</kw>
<msg timestamp="20201110 08:33:57.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.761" endtime="20201110 08:33:57.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.781" endtime="20201110 08:33:57.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.783" endtime="20201110 08:33:57.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.759" endtime="20201110 08:33:57.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.757" endtime="20201110 08:33:57.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.793" endtime="20201110 08:33:58.080"></status>
</kw>
<msg timestamp="20201110 08:33:58.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.792" endtime="20201110 08:33:58.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.085" endtime="20201110 08:33:58.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.093" endtime="20201110 08:33:58.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.789" endtime="20201110 08:33:58.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.787" endtime="20201110 08:33:58.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.100" level="INFO">${RESULT} = [{'time': 0.022593556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4388999999999253e-05, 'source_diff': 3.4388999999999253e-05}, {'time': 0.022637597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.097" endtime="20201110 08:33:58.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.114" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:58.101" endtime="20201110 08:33:58.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.119" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.118" endtime="20201110 08:33:58.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.121" level="INFO">VALUE: [3.4388999999999253e-05, 3.451399999999938e-05, 3.4652999999999073e-05, 3.4652999999999073e-05, 3.472199999999745e-05, 3.4888999999999754e-05, 3.5097000000001294e-05, 3.469400000000178e-05, 3.5125000000000434e-05, 3.4888999999999754e-05, 3.497200000000117e-05, 3.468100000000168e-05, 3.42779999999987e-05, 3.469500000000125e-05, 3.4611000000000364e-05, 3.505600000000206e-05, 3.473600000000049e-05, 3.47779999999992e-05, 3.526400000000013e-05, 3.519500000000175e-05, 3.4611000000000364e-05, 3.438900000000272e-05, 3.482000000000138e-05, 3.4388999999999253e-05, 3.4888999999999754e-05, 3.466699999999864e-05, 3.481999999999791e-05, 3.5097000000001294e-05, 3.4388999999999253e-05, 3.4541000000002514e-05, 3.5290999999999795e-05, 3.498600000000074e-05, 3.4333000000000974e-05, 3.49580000000016e-05, 3.4790999999999295e-05, 3.4902999999999323e-05, 3.4555000000002084e-05, 3.4847000000001044e-05, 3.4333000000000974e-05, 3.438900000000272e-05, 3.467999999999874e-05, 3.473600000000049e-05, 3.448600000000024e-05, 3.4347000000000544e-05, 3.475000000000006e-05, 3.4347000000000544e-05, 3.470800000000135e-05, 3.4361000000000114e-05, 3.4875000000000184e-05, 3.4847000000001044e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.120" endtime="20201110 08:33:58.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.115" endtime="20201110 08:33:58.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.125" endtime="20201110 08:33:58.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.129" endtime="20201110 08:33:58.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.127" endtime="20201110 08:33:58.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.123" endtime="20201110 08:33:58.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.755" endtime="20201110 08:33:58.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.754" endtime="20201110 08:33:58.150"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.159" endtime="20201110 08:33:58.174"></status>
</kw>
<msg timestamp="20201110 08:33:58.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.157" endtime="20201110 08:33:58.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.176" endtime="20201110 08:33:58.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.179" endtime="20201110 08:33:58.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.154" endtime="20201110 08:33:58.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.152" endtime="20201110 08:33:58.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.189" endtime="20201110 08:33:58.475"></status>
</kw>
<msg timestamp="20201110 08:33:58.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:58.187" endtime="20201110 08:33:58.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:58.480" endtime="20201110 08:33:58.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.488" endtime="20201110 08:33:58.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.185" endtime="20201110 08:33:58.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.183" endtime="20201110 08:33:58.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.495" level="INFO">${RESULT} = [{'time': 0.022336, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6153000000000574e-05, 'source_diff': 3.6153000000000574e-05}, {'time': 0.022383014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:58.492" endtime="20201110 08:33:58.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.509" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:58.496" endtime="20201110 08:33:58.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.514" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.513" endtime="20201110 08:33:58.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.516" level="INFO">VALUE: [3.6153000000000574e-05, 3.5903000000000324e-05, 3.619500000000275e-05, 3.601400000000088e-05, 3.623599999999852e-05, 3.555600000000256e-05, 3.5347000000001544e-05, 3.5347000000001544e-05, 3.602799999999698e-05, 3.538800000000078e-05, 3.595900000000207e-05, 3.626400000000113e-05, 3.60979999999983e-05, 3.623599999999852e-05, 3.563800000000103e-05, 3.5916999999999893e-05, 3.5596999999998324e-05, 3.536200000000059e-05, 3.591600000000042e-05, 3.5889000000000754e-05, 3.575000000000106e-05, 3.575000000000106e-05, 3.5554999999999615e-05, 3.626400000000113e-05, 3.6180999999999713e-05, 3.576400000000063e-05, 3.619399999999981e-05, 3.5847000000002044e-05, 3.572200000000192e-05, 3.5653000000000074e-05, 3.5361000000001114e-05, 3.569399999999931e-05, 3.5374999999997214e-05, 3.5625000000000934e-05, 3.6096999999998824e-05, 3.595799999999913e-05, 3.5319000000002404e-05, 3.595799999999913e-05, 3.552799999999995e-05, 3.5347000000001544e-05, 3.5666999999999643e-05, 3.529199999999927e-05, 3.5875000000001184e-05, 3.595900000000207e-05, 3.576400000000063e-05, 3.6125000000001434e-05, 3.5916999999999893e-05, 3.551400000000038e-05, 3.536200000000059e-05, 3.62780000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.515" endtime="20201110 08:33:58.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.510" endtime="20201110 08:33:58.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.520" endtime="20201110 08:33:58.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.524" endtime="20201110 08:33:58.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.522" endtime="20201110 08:33:58.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.518" endtime="20201110 08:33:58.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.151" endtime="20201110 08:33:58.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.150" endtime="20201110 08:33:58.544"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.553" endtime="20201110 08:33:58.569"></status>
</kw>
<msg timestamp="20201110 08:33:58.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.552" endtime="20201110 08:33:58.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.570" endtime="20201110 08:33:58.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.573" endtime="20201110 08:33:58.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.549" endtime="20201110 08:33:58.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.547" endtime="20201110 08:33:58.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.583" endtime="20201110 08:33:58.870"></status>
</kw>
<msg timestamp="20201110 08:33:58.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.582" endtime="20201110 08:33:58.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.874" endtime="20201110 08:33:58.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.883" endtime="20201110 08:33:58.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.579" endtime="20201110 08:33:58.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.577" endtime="20201110 08:33:58.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.892" level="INFO">${RESULT} = [{'time': 0.022373903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6610999999998894e-05, 'source_diff': 3.6610999999998894e-05}, {'time': 0.022418944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.888" endtime="20201110 08:33:58.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.906" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:58.893" endtime="20201110 08:33:58.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.910" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.909" endtime="20201110 08:33:58.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.913" level="INFO">VALUE: [3.6610999999998894e-05, 3.713799999999906e-05, 3.697299999999917e-05, 3.697200000000317e-05, 3.698599999999927e-05, 3.6860999999999144e-05, 3.6639000000001504e-05, 3.71659999999982e-05, 3.6305000000000365e-05, 3.719400000000081e-05, 3.6639000000001504e-05, 3.6790999999997825e-05, 3.6403000000000824e-05, 3.6903000000001324e-05, 3.7110999999999394e-05, 3.67780000000012e-05, 3.69719999999997e-05, 3.62780000000007e-05, 3.698599999999927e-05, 3.672199999999945e-05, 3.6846999999999575e-05, 3.6569000000000185e-05, 3.6819000000000435e-05, 3.6375000000001684e-05, 3.720800000000038e-05, 3.630599999999984e-05, 3.6360999999998644e-05, 3.6527000000001475e-05, 3.6527000000001475e-05, 3.6374999999998214e-05, 3.704200000000102e-05, 3.6653000000001074e-05, 3.650000000000181e-05, 3.669499999999978e-05, 3.7041000000001545e-05, 3.705600000000059e-05, 3.726400000000213e-05, 3.631999999999941e-05, 3.690199999999838e-05, 3.647300000000214e-05, 3.72780000000017e-05, 3.638799999999831e-05, 3.64719999999992e-05, 3.6874999999998714e-05, 3.6347000000002544e-05, 3.676400000000163e-05, 3.6541000000001045e-05, 3.701399999999841e-05, 3.7027000000001975e-05, 3.6611000000002364e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.912" endtime="20201110 08:33:58.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.907" endtime="20201110 08:33:58.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.917" endtime="20201110 08:33:58.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.920" endtime="20201110 08:33:58.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.919" endtime="20201110 08:33:58.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.915" endtime="20201110 08:33:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.545" endtime="20201110 08:33:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.545" endtime="20201110 08:33:58.941"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.950" endtime="20201110 08:33:58.966"></status>
</kw>
<msg timestamp="20201110 08:33:58.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.949" endtime="20201110 08:33:58.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.968" endtime="20201110 08:33:58.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.970" endtime="20201110 08:33:58.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.946" endtime="20201110 08:33:58.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.944" endtime="20201110 08:33:58.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.981" endtime="20201110 08:33:59.267"></status>
</kw>
<msg timestamp="20201110 08:33:59.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.979" endtime="20201110 08:33:59.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.275" endtime="20201110 08:33:59.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.287" endtime="20201110 08:33:59.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.976" endtime="20201110 08:33:59.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.975" endtime="20201110 08:33:59.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.298" level="INFO">${RESULT} = [{'time': 0.022448736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.769400000000131e-05, 'source_diff': 3.769400000000131e-05}, {'time': 0.022497792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.294" endtime="20201110 08:33:59.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.316" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:59.299" endtime="20201110 08:33:59.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.321" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.320" endtime="20201110 08:33:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.323" level="INFO">VALUE: [3.769400000000131e-05, 3.75979999999998e-05, 3.731999999999694e-05, 3.802799999999898e-05, 3.776399999999916e-05, 3.782000000000091e-05, 3.770800000000088e-05, 3.7681000000001214e-05, 3.7597000000000325e-05, 3.77919999999983e-05, 3.776399999999916e-05, 3.8097000000000825e-05, 3.7945000000001033e-05, 3.788799999999981e-05, 3.788800000000328e-05, 3.8040999999999076e-05, 3.7888999999999284e-05, 3.7583000000000755e-05, 3.790199999999938e-05, 3.774999999999959e-05, 3.823599999999705e-05, 3.7874999999999714e-05, 3.8082999999997785e-05, 3.7333000000000505e-05, 3.7902999999998854e-05, 3.822300000000042e-05, 3.7833000000001005e-05, 3.7846999999997105e-05, 3.798600000000027e-05, 3.7917000000001894e-05, 3.7917000000001894e-05, 3.7388999999998784e-05, 3.798700000000321e-05, 3.8097000000000825e-05, 3.79720000000007e-05, 3.7360999999999644e-05, 3.8181000000001714e-05, 3.755599999999762e-05, 3.7610999999999895e-05, 3.797300000000017e-05, 3.752800000000195e-05, 3.747299999999967e-05, 3.8181000000001714e-05, 3.8152999999999104e-05, 3.758400000000023e-05, 3.7694999999997314e-05, 3.7583000000000755e-05, 3.827799999999923e-05, 3.7804999999998395e-05, 3.7847000000000575e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.322" endtime="20201110 08:33:59.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.317" endtime="20201110 08:33:59.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.336" endtime="20201110 08:33:59.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.340" endtime="20201110 08:33:59.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.338" endtime="20201110 08:33:59.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.334" endtime="20201110 08:33:59.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.942" endtime="20201110 08:33:59.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.942" endtime="20201110 08:33:59.361"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.370" endtime="20201110 08:33:59.385"></status>
</kw>
<msg timestamp="20201110 08:33:59.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.368" endtime="20201110 08:33:59.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.387" endtime="20201110 08:33:59.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.390" endtime="20201110 08:33:59.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.365" endtime="20201110 08:33:59.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.363" endtime="20201110 08:33:59.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.400" endtime="20201110 08:33:59.686"></status>
</kw>
<msg timestamp="20201110 08:33:59.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.398" endtime="20201110 08:33:59.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.691" endtime="20201110 08:33:59.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.699" endtime="20201110 08:33:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.396" endtime="20201110 08:33:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.394" endtime="20201110 08:33:59.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.706" level="INFO">${RESULT} = [{'time': 0.022416917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8709000000001353e-05, 'source_diff': 3.8709000000001353e-05}, {'time': 0.022464944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:59.703" endtime="20201110 08:33:59.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.720" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:33:59.707" endtime="20201110 08:33:59.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.725" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.724" endtime="20201110 08:33:59.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.727" level="INFO">VALUE: [3.8709000000001353e-05, 3.850000000000034e-05, 3.842999999999902e-05, 3.873600000000102e-05, 3.8527000000000006e-05, 3.925000000000109e-05, 3.920799999999891e-05, 3.922200000000195e-05, 3.8305000000002365e-05, 3.8582999999998285e-05, 3.8416999999998924e-05, 3.830600000000184e-05, 3.8652999999999604e-05, 3.850000000000034e-05, 3.9082999999998785e-05, 3.8416999999998924e-05, 3.901400000000041e-05, 3.84720000000012e-05, 3.8695000000001784e-05, 3.8652999999999604e-05, 3.92919999999998e-05, 3.8695000000001784e-05, 3.877799999999973e-05, 3.850000000000034e-05, 3.927800000000023e-05, 3.925000000000109e-05, 3.908399999999826e-05, 3.8625000000000465e-05, 3.8652999999999604e-05, 3.925000000000109e-05, 3.8875000000000715e-05, 3.9332999999999035e-05, 3.875000000000059e-05, 3.877799999999973e-05, 3.8639000000000034e-05, 3.8639000000000034e-05, 3.926400000000066e-05, 3.8527000000000006e-05, 3.869399999999884e-05, 3.870800000000188e-05, 3.9139000000000534e-05, 3.9096999999998355e-05, 3.850000000000034e-05, 3.8361000000000645e-05, 3.9139000000000534e-05, 3.8667000000002644e-05, 3.8846999999998105e-05, 3.891599999999995e-05, 3.876400000000016e-05, 3.927800000000023e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.726" endtime="20201110 08:33:59.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.721" endtime="20201110 08:33:59.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.731" endtime="20201110 08:33:59.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.735" endtime="20201110 08:33:59.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.733" endtime="20201110 08:33:59.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.729" endtime="20201110 08:33:59.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.362" endtime="20201110 08:33:59.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.361" endtime="20201110 08:33:59.756"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.765" endtime="20201110 08:33:59.781"></status>
</kw>
<msg timestamp="20201110 08:33:59.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.763" endtime="20201110 08:33:59.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.783" endtime="20201110 08:33:59.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.785" endtime="20201110 08:33:59.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.760" endtime="20201110 08:33:59.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.758" endtime="20201110 08:33:59.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.796" endtime="20201110 08:34:00.081"></status>
</kw>
<msg timestamp="20201110 08:34:00.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.794" endtime="20201110 08:34:00.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.086" endtime="20201110 08:34:00.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.095" endtime="20201110 08:34:00.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.791" endtime="20201110 08:34:00.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.790" endtime="20201110 08:34:00.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.102" level="INFO">${RESULT} = [{'time': 0.022612306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.009799999999883e-05, 'source_diff': 4.009799999999883e-05}, {'time': 0.022664347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.099" endtime="20201110 08:34:00.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.117" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:00.103" endtime="20201110 08:34:00.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.121" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.120" endtime="20201110 08:34:00.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.124" level="INFO">VALUE: [4.009799999999883e-05, 4.0097000000002825e-05, 4.002799999999751e-05, 3.952800000000048e-05, 3.9582999999999285e-05, 3.973600000000202e-05, 3.9611000000001895e-05, 3.9625000000001465e-05, 3.9416999999999924e-05, 4.024999999999862e-05, 3.9347000000002075e-05, 3.9847000000002575e-05, 4.020799999999991e-05, 3.950000000000134e-05, 4.0110999999998925e-05, 4.0138999999998065e-05, 3.954200000000005e-05, 3.949999999999787e-05, 3.9388999999997315e-05, 3.933399999999851e-05, 3.9736999999998024e-05, 3.9403000000000354e-05, 3.9875000000001715e-05, 3.9611000000001895e-05, 4.019399999999687e-05, 4.0054999999997176e-05, 3.9375000000001215e-05, 3.9318999999999465e-05, 3.97920000000003e-05, 3.943000000000002e-05, 3.9263000000001186e-05, 3.991600000000095e-05, 4.0110999999998925e-05, 3.947199999999873e-05, 3.9291000000000326e-05, 4.0040999999997606e-05, 3.991599999999748e-05, 3.9332999999999035e-05, 3.947199999999873e-05, 3.977799999999726e-05, 3.97920000000003e-05, 3.9416999999999924e-05, 4.023599999999905e-05, 3.9681000000003214e-05, 3.9874999999998245e-05, 3.965199999999766e-05, 3.9389000000000784e-05, 3.961200000000137e-05, 3.9403000000000354e-05, 3.997199999999923e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.122" endtime="20201110 08:34:00.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.118" endtime="20201110 08:34:00.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.128" endtime="20201110 08:34:00.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.131" endtime="20201110 08:34:00.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.130" endtime="20201110 08:34:00.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.126" endtime="20201110 08:34:00.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.757" endtime="20201110 08:34:00.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.756" endtime="20201110 08:34:00.152"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.161" endtime="20201110 08:34:00.177"></status>
</kw>
<msg timestamp="20201110 08:34:00.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.159" endtime="20201110 08:34:00.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.179" endtime="20201110 08:34:00.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.181" endtime="20201110 08:34:00.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.157" endtime="20201110 08:34:00.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.155" endtime="20201110 08:34:00.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.192" endtime="20201110 08:34:00.477"></status>
</kw>
<msg timestamp="20201110 08:34:00.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.190" endtime="20201110 08:34:00.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.482" endtime="20201110 08:34:00.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.490" endtime="20201110 08:34:00.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.188" endtime="20201110 08:34:00.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.186" endtime="20201110 08:34:00.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.497" level="INFO">${RESULT} = [{'time': 0.022559264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.079199999999783e-05, 'source_diff': 4.079199999999783e-05}, {'time': 0.022610292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.494" endtime="20201110 08:34:00.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.511" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:00.498" endtime="20201110 08:34:00.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.516" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.515" endtime="20201110 08:34:00.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.518" level="INFO">VALUE: [4.079199999999783e-05, 4.0972999999999704e-05, 4.0624999999998995e-05, 4.1152999999998635e-05, 4.1069000000001216e-05, 4.0472999999999204e-05, 4.1026999999999036e-05, 4.127800000000223e-05, 4.0624999999998995e-05, 4.026400000000166e-05, 4.100000000000284e-05, 4.0583000000000286e-05, 4.118000000000177e-05, 4.068000000000127e-05, 4.11660000000022e-05, 4.0305000000000896e-05, 4.0403000000001354e-05, 4.073599999999955e-05, 4.043000000000102e-05, 4.1222999999999954e-05, 4.1055000000001646e-05, 4.0346999999999605e-05, 4.0959000000000134e-05, 4.0375000000002215e-05, 4.030600000000037e-05, 4.0832999999997066e-05, 4.0319000000000466e-05, 4.0375000000002215e-05, 4.031999999999994e-05, 4.050000000000234e-05, 4.0944999999997095e-05, 4.0389000000001785e-05, 4.097200000000023e-05, 4.102799999999851e-05, 4.082000000000044e-05, 4.034800000000255e-05, 4.0832999999997066e-05, 4.104200000000155e-05, 4.0540999999998106e-05, 4.0638999999998565e-05, 4.0389000000001785e-05, 4.0860999999999675e-05, 4.0611000000002895e-05, 4.0541000000001576e-05, 4.073599999999955e-05, 4.123600000000005e-05, 4.065200000000213e-05, 4.124999999999962e-05, 4.0610999999999425e-05, 4.077799999999826e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.517" endtime="20201110 08:34:00.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.512" endtime="20201110 08:34:00.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.522" endtime="20201110 08:34:00.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.526" endtime="20201110 08:34:00.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.524" endtime="20201110 08:34:00.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.520" endtime="20201110 08:34:00.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.153" endtime="20201110 08:34:00.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.152" endtime="20201110 08:34:00.547"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.556" endtime="20201110 08:34:00.572"></status>
</kw>
<msg timestamp="20201110 08:34:00.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.554" endtime="20201110 08:34:00.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.574" endtime="20201110 08:34:00.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.576" endtime="20201110 08:34:00.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.551" endtime="20201110 08:34:00.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.549" endtime="20201110 08:34:00.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.587" endtime="20201110 08:34:00.873"></status>
</kw>
<msg timestamp="20201110 08:34:00.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.585" endtime="20201110 08:34:00.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.877" endtime="20201110 08:34:00.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.886" endtime="20201110 08:34:00.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.583" endtime="20201110 08:34:00.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.581" endtime="20201110 08:34:00.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.893" level="INFO">${RESULT} = [{'time': 0.022336375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1652999999999135e-05, 'source_diff': 4.1652999999999135e-05}, {'time': 0.022391417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:00.889" endtime="20201110 08:34:00.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.908" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:00.894" endtime="20201110 08:34:00.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.913" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.912" endtime="20201110 08:34:00.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.915" level="INFO">VALUE: [4.1652999999999135e-05, 4.1888999999999815e-05, 4.159800000000033e-05, 4.1624999999999995e-05, 4.2152999999999635e-05, 4.1847000000001106e-05, 4.222200000000148e-05, 4.175000000000012e-05, 4.220800000000191e-05, 4.222199999999801e-05, 4.195800000000166e-05, 4.222200000000148e-05, 4.1361000000000175e-05, 4.2083000000001786e-05, 4.1554999999998676e-05, 4.1318999999997996e-05, 4.172200000000098e-05, 4.201399999999994e-05, 4.147200000000073e-05, 4.1888999999999815e-05, 4.1375000000003215e-05, 4.1916999999998955e-05, 4.19999999999969e-05, 4.19860000000008e-05, 4.1361000000000175e-05, 4.155600000000162e-05, 4.1902999999999385e-05, 4.2152999999999635e-05, 4.149999999999987e-05, 4.1916999999998955e-05, 4.183400000000101e-05, 4.180600000000187e-05, 4.1638999999999565e-05, 4.1973000000000704e-05, 4.155600000000162e-05, 4.1388999999999315e-05, 4.1723000000000454e-05, 4.1374999999999745e-05, 4.141599999999898e-05, 4.151399999999944e-05, 4.226300000000072e-05, 4.151399999999944e-05, 4.14860000000003e-05, 4.169400000000184e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.2139000000000065e-05, 4.140199999999941e-05, 4.1431000000001494e-05, 4.1597000000000856e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.914" endtime="20201110 08:34:00.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.909" endtime="20201110 08:34:00.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.919" endtime="20201110 08:34:00.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.922" endtime="20201110 08:34:00.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.921" endtime="20201110 08:34:00.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.917" endtime="20201110 08:34:00.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.548" endtime="20201110 08:34:00.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.547" endtime="20201110 08:34:00.943"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.952" endtime="20201110 08:34:00.969"></status>
</kw>
<msg timestamp="20201110 08:34:00.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.951" endtime="20201110 08:34:00.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.970" endtime="20201110 08:34:00.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.973" endtime="20201110 08:34:00.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.948" endtime="20201110 08:34:00.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.946" endtime="20201110 08:34:00.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.983" endtime="20201110 08:34:01.272"></status>
</kw>
<msg timestamp="20201110 08:34:01.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.982" endtime="20201110 08:34:01.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.277" endtime="20201110 08:34:01.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.286" endtime="20201110 08:34:01.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.979" endtime="20201110 08:34:01.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.977" endtime="20201110 08:34:01.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.293" level="INFO">${RESULT} = [{'time': 0.022289306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2722999999997985e-05, 'source_diff': 4.2722999999997985e-05}, {'time': 0.022344361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.290" endtime="20201110 08:34:01.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.307" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:01.294" endtime="20201110 08:34:01.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.312" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.311" endtime="20201110 08:34:01.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.314" level="INFO">VALUE: [4.2722999999997985e-05, 4.2304999999999426e-05, 4.3153000000000635e-05, 4.3068999999999746e-05, 4.2318999999998996e-05, 4.3096999999998886e-05, 4.3111000000001926e-05, 4.304200000000008e-05, 4.3195000000002814e-05, 4.3096999999998886e-05, 4.326399999999772e-05, 4.297199999999876e-05, 4.229199999999933e-05, 4.3153000000000635e-05, 4.2889000000000815e-05, 4.297200000000223e-05, 4.297199999999876e-05, 4.3194999999999345e-05, 4.259800000000133e-05, 4.322199999999901e-05, 4.301400000000094e-05, 4.2653000000000135e-05, 4.327700000000129e-05, 4.2487000000000774e-05, 4.29860000000018e-05, 4.254199999999958e-05, 4.242999999999955e-05, 4.275000000000112e-05, 4.26799999999998e-05, 4.294399999999962e-05, 4.327699999999782e-05, 4.2332999999998566e-05, 4.252800000000001e-05, 4.2389000000000315e-05, 4.3125000000001495e-05, 4.2402999999999885e-05, 4.304099999999714e-05, 4.2846999999998636e-05, 4.2597000000001856e-05, 4.2554999999999676e-05, 4.2832999999999066e-05, 4.2459000000001634e-05, 4.3153000000000635e-05, 4.2611000000001426e-05, 4.252800000000001e-05, 4.2361000000001175e-05, 4.3125000000001495e-05, 4.245799999999869e-05, 4.3110999999998456e-05, 4.255599999999915e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.313" endtime="20201110 08:34:01.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.308" endtime="20201110 08:34:01.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.318" endtime="20201110 08:34:01.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.322" endtime="20201110 08:34:01.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.320" endtime="20201110 08:34:01.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.316" endtime="20201110 08:34:01.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.944" endtime="20201110 08:34:01.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.944" endtime="20201110 08:34:01.343"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.352" endtime="20201110 08:34:01.368"></status>
</kw>
<msg timestamp="20201110 08:34:01.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.350" endtime="20201110 08:34:01.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.370" endtime="20201110 08:34:01.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.372" endtime="20201110 08:34:01.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.347" endtime="20201110 08:34:01.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.345" endtime="20201110 08:34:01.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.383" endtime="20201110 08:34:01.669"></status>
</kw>
<msg timestamp="20201110 08:34:01.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.381" endtime="20201110 08:34:01.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.673" endtime="20201110 08:34:01.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.682" endtime="20201110 08:34:01.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.379" endtime="20201110 08:34:01.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.377" endtime="20201110 08:34:01.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.689" level="INFO">${RESULT} = [{'time': 0.022615806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3930999999997056e-05, 'source_diff': 4.3930999999997056e-05}, {'time': 0.022669847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:01.685" endtime="20201110 08:34:01.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.703" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:01.690" endtime="20201110 08:34:01.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.707" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.706" endtime="20201110 08:34:01.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.710" level="INFO">VALUE: [4.3930999999997056e-05, 4.343000000000055e-05, 4.401399999999847e-05, 4.3318999999999996e-05, 4.347199999999926e-05, 4.3889000000001815e-05, 4.33059999999999e-05, 4.352800000000101e-05, 4.3917000000000955e-05, 4.351400000000144e-05, 4.4125000000002496e-05, 4.381899999999703e-05, 4.358399999999929e-05, 4.4153000000001635e-05, 4.358399999999929e-05, 4.3694999999999845e-05, 4.405600000000065e-05, 4.4181000000000775e-05, 4.33059999999999e-05, 4.3388999999997846e-05, 4.4208999999999915e-05, 4.383399999999954e-05, 4.425000000000262e-05, 4.3695000000003315e-05, 4.4319000000000996e-05, 4.3652999999997666e-05, 4.374999999999865e-05, 4.377700000000179e-05, 4.395800000000019e-05, 4.377800000000126e-05, 4.365200000000166e-05, 4.4152999999998166e-05, 4.3653000000001135e-05, 4.4152999999998166e-05, 4.372199999999951e-05, 4.4153000000001635e-05, 4.3569000000000246e-05, 4.3874999999998776e-05, 4.3860999999999206e-05, 4.3624999999998526e-05, 4.3403000000000885e-05, 4.377800000000126e-05, 4.381899999999703e-05, 4.370799999999994e-05, 4.3694999999999845e-05, 4.352799999999754e-05, 4.3681000000000275e-05, 4.33059999999999e-05, 4.4195000000000345e-05, 4.3916999999997486e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.708" endtime="20201110 08:34:01.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.703" endtime="20201110 08:34:01.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.714" endtime="20201110 08:34:01.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.717" endtime="20201110 08:34:01.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.716" endtime="20201110 08:34:01.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.712" endtime="20201110 08:34:01.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.344" endtime="20201110 08:34:01.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.343" endtime="20201110 08:34:01.738"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.747" endtime="20201110 08:34:01.764"></status>
</kw>
<msg timestamp="20201110 08:34:01.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.745" endtime="20201110 08:34:01.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.765" endtime="20201110 08:34:01.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.768" endtime="20201110 08:34:01.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.743" endtime="20201110 08:34:01.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.741" endtime="20201110 08:34:01.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.778" endtime="20201110 08:34:02.064"></status>
</kw>
<msg timestamp="20201110 08:34:02.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.777" endtime="20201110 08:34:02.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.069" endtime="20201110 08:34:02.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.078" endtime="20201110 08:34:02.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.774" endtime="20201110 08:34:02.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.772" endtime="20201110 08:34:02.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.084" level="INFO">${RESULT} = [{'time': 0.022699806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4486999999999305e-05, 'source_diff': 4.4486999999999305e-05}, {'time': 0.022751847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:02.081" endtime="20201110 08:34:02.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.098" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:02.086" endtime="20201110 08:34:02.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.103" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.102" endtime="20201110 08:34:02.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.106" level="INFO">VALUE: [4.4486999999999305e-05, 4.466599999999876e-05, 4.5138999999999596e-05, 4.448599999999983e-05, 4.4888999999999346e-05, 4.5153000000002635e-05, 4.505599999999818e-05, 4.4305000000001427e-05, 4.5125000000000026e-05, 4.4930999999998056e-05, 4.46939999999979e-05, 4.4347000000000136e-05, 4.4388999999998846e-05, 4.5111000000000456e-05, 4.4431000000001025e-05, 4.4958999999997196e-05, 4.4360999999999706e-05, 4.4833000000001066e-05, 4.4652999999998666e-05, 4.454199999999811e-05, 4.4709000000000415e-05, 4.454200000000158e-05, 4.527799999999929e-05, 4.477799999999879e-05, 4.501399999999947e-05, 4.481899999999803e-05, 4.519400000000187e-05, 4.4375000000002746e-05, 4.5125000000000026e-05, 4.4347000000000136e-05, 4.4624999999999526e-05, 4.467999999999833e-05, 4.493000000000205e-05, 4.444399999999765e-05, 4.476399999999922e-05, 4.477800000000226e-05, 4.4388999999998846e-05, 4.4638999999999096e-05, 4.452800000000201e-05, 4.4861000000000206e-05, 4.495800000000119e-05, 4.522199999999754e-05, 4.497200000000076e-05, 4.523600000000058e-05, 4.470800000000094e-05, 4.5125000000000026e-05, 4.4722999999999985e-05, 4.4861000000000206e-05, 4.505599999999818e-05, 4.523600000000058e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.104" endtime="20201110 08:34:02.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.099" endtime="20201110 08:34:02.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.109" endtime="20201110 08:34:02.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.113" endtime="20201110 08:34:02.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.111" endtime="20201110 08:34:02.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.108" endtime="20201110 08:34:02.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.739" endtime="20201110 08:34:02.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.738" endtime="20201110 08:34:02.134"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.144" endtime="20201110 08:34:02.160"></status>
</kw>
<msg timestamp="20201110 08:34:02.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.142" endtime="20201110 08:34:02.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.162" endtime="20201110 08:34:02.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.164" endtime="20201110 08:34:02.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.139" endtime="20201110 08:34:02.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.137" endtime="20201110 08:34:02.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.175" endtime="20201110 08:34:02.462"></status>
</kw>
<msg timestamp="20201110 08:34:02.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.173" endtime="20201110 08:34:02.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023165958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.466" endtime="20201110 08:34:02.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.475" endtime="20201110 08:34:02.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.171" endtime="20201110 08:34:02.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.169" endtime="20201110 08:34:02.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.482" level="INFO">${RESULT} = [{'time': 0.023165958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.627700000000082e-05, 'source_diff': 4.627700000000082e-05}, {'time': 0.023218, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:34:02.478" endtime="20201110 08:34:02.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.497" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:02.483" endtime="20201110 08:34:02.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.501" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.500" endtime="20201110 08:34:02.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.504" level="INFO">VALUE: [4.627700000000082e-05, 4.5875000000000776e-05, 4.623600000000158e-05, 4.548600000000083e-05, 4.576400000000022e-05, 4.5945000000002095e-05, 4.5361000000000706e-05, 4.552799999999954e-05, 4.626399999999725e-05, 4.612499999999756e-05, 4.588800000000087e-05, 4.6097000000001886e-05, 4.579199999999936e-05, 4.583399999999807e-05, 4.541599999999951e-05, 4.547200000000126e-05, 4.601400000000047e-05, 4.590199999999697e-05, 4.53329999999981e-05, 4.620800000000244e-05, 4.530499999999896e-05, 4.570800000000194e-05, 4.595799999999872e-05, 4.529099999999939e-05, 4.61939999999994e-05, 4.556899999999878e-05, 4.624999999999768e-05, 4.580499999999946e-05, 4.544399999999865e-05, 4.595800000000219e-05, 4.60000000000009e-05, 4.594399999999915e-05, 4.576400000000022e-05, 4.5444999999998126e-05, 4.6166999999999736e-05, 4.605599999999918e-05, 4.5708999999997946e-05, 4.559699999999792e-05, 4.5347000000001136e-05, 4.6194999999998876e-05, 4.5875000000000776e-05, 4.55000000000004e-05, 4.623600000000158e-05, 4.5473000000000735e-05, 4.5487000000000305e-05, 4.5319999999998e-05, 4.605600000000265e-05, 4.580599999999893e-05, 4.56939999999989e-05, 4.6083000000002317e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.502" endtime="20201110 08:34:02.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.498" endtime="20201110 08:34:02.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.508" endtime="20201110 08:34:02.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.511" endtime="20201110 08:34:02.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.510" endtime="20201110 08:34:02.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.506" endtime="20201110 08:34:02.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.135" endtime="20201110 08:34:02.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.134" endtime="20201110 08:34:02.532"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.541" endtime="20201110 08:34:02.558"></status>
</kw>
<msg timestamp="20201110 08:34:02.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.539" endtime="20201110 08:34:02.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.559" endtime="20201110 08:34:02.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.562" endtime="20201110 08:34:02.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.537" endtime="20201110 08:34:02.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.535" endtime="20201110 08:34:02.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.572" endtime="20201110 08:34:02.858"></status>
</kw>
<msg timestamp="20201110 08:34:02.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.571" endtime="20201110 08:34:02.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.862" endtime="20201110 08:34:02.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.871" endtime="20201110 08:34:02.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.568" endtime="20201110 08:34:02.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.566" endtime="20201110 08:34:02.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.878" level="INFO">${RESULT} = [{'time': 0.022344889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.655599999999968e-05, 'source_diff': 4.655599999999968e-05}, {'time': 0.022399931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.874" endtime="20201110 08:34:02.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:02.879" endtime="20201110 08:34:02.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.897" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.896" endtime="20201110 08:34:02.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.899" level="INFO">VALUE: [4.655599999999968e-05, 4.6445000000002595e-05, 4.673600000000208e-05, 4.644399999999965e-05, 4.7013000000002e-05, 4.706900000000028e-05, 4.6903000000000916e-05, 4.724999999999868e-05, 4.7125000000002026e-05, 4.6680999999999806e-05, 4.6903000000000916e-05, 4.708299999999985e-05, 4.727799999999782e-05, 4.65139999999975e-05, 4.720799999999997e-05, 4.720799999999997e-05, 4.686099999999874e-05, 4.6361000000001706e-05, 4.676399999999775e-05, 4.6931000000000056e-05, 4.711099999999899e-05, 4.722199999999954e-05, 4.705600000000018e-05, 4.68199999999995e-05, 4.6958999999999196e-05, 4.6694999999999376e-05, 4.6459000000002165e-05, 4.6459000000002165e-05, 4.634799999999814e-05, 4.7223000000002485e-05, 4.7153000000001166e-05, 4.7237000000002055e-05, 4.641600000000051e-05, 4.684699999999917e-05, 4.727700000000182e-05, 4.704100000000114e-05, 4.647199999999879e-05, 4.723599999999911e-05, 4.649999999999793e-05, 4.6389000000000846e-05, 4.684699999999917e-05, 4.711099999999899e-05, 4.726400000000172e-05, 4.68329999999996e-05, 4.65000000000014e-05, 4.654200000000011e-05, 4.630599999999943e-05, 4.699999999999843e-05, 4.716699999999727e-05, 4.6667000000000236e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.898" endtime="20201110 08:34:02.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.893" endtime="20201110 08:34:02.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.903" endtime="20201110 08:34:02.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.906" endtime="20201110 08:34:02.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.905" endtime="20201110 08:34:02.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.901" endtime="20201110 08:34:02.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.533" endtime="20201110 08:34:02.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.532" endtime="20201110 08:34:02.927"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.936" endtime="20201110 08:34:02.953"></status>
</kw>
<msg timestamp="20201110 08:34:02.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.935" endtime="20201110 08:34:02.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.954" endtime="20201110 08:34:02.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.957" endtime="20201110 08:34:02.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.932" endtime="20201110 08:34:02.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.930" endtime="20201110 08:34:02.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.967" endtime="20201110 08:34:03.258"></status>
</kw>
<msg timestamp="20201110 08:34:03.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.966" endtime="20201110 08:34:03.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.262" endtime="20201110 08:34:03.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.271" endtime="20201110 08:34:03.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.963" endtime="20201110 08:34:03.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.961" endtime="20201110 08:34:03.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.278" level="INFO">${RESULT} = [{'time': 0.022258458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.75269999999986e-05, 'source_diff': 4.75269999999986e-05}, {'time': 0.022315486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:03.274" endtime="20201110 08:34:03.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.292" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:03.279" endtime="20201110 08:34:03.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.297" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.295" endtime="20201110 08:34:03.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.299" level="INFO">VALUE: [4.75269999999986e-05, 4.75139999999985e-05, 4.780499999999799e-05, 4.81940000000014e-05, 4.7917000000001486e-05, 4.809700000000042e-05, 4.773599999999961e-05, 4.759699999999992e-05, 4.797200000000029e-05, 4.804200000000161e-05, 4.75139999999985e-05, 4.829199999999839e-05, 4.755600000000068e-05, 4.734799999999914e-05, 4.786199999999921e-05, 4.754200000000111e-05, 4.744400000000065e-05, 4.7722999999999516e-05, 4.766699999999777e-05, 4.811099999999999e-05, 4.748599999999936e-05, 4.827699999999935e-05, 4.827800000000229e-05, 4.812499999999956e-05, 4.727700000000182e-05, 4.8013999999999e-05, 4.805500000000171e-05, 4.772200000000004e-05, 4.774999999999918e-05, 4.7667000000001236e-05, 4.826399999999925e-05, 4.8181000000001306e-05, 4.798599999999986e-05, 4.811099999999999e-05, 4.7681000000000806e-05, 4.784799999999964e-05, 4.737499999999881e-05, 4.7903000000001916e-05, 4.798599999999986e-05, 4.827799999999882e-05, 4.7403000000001416e-05, 4.8013999999999e-05, 4.833299999999763e-05, 4.732e-05, 4.748599999999936e-05, 4.804200000000161e-05, 4.7708999999999946e-05, 4.740199999999847e-05, 4.7931000000001056e-05, 4.806900000000128e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.298" endtime="20201110 08:34:03.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.293" endtime="20201110 08:34:03.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.303" endtime="20201110 08:34:03.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.306" endtime="20201110 08:34:03.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.305" endtime="20201110 08:34:03.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.301" endtime="20201110 08:34:03.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.928" endtime="20201110 08:34:03.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.928" endtime="20201110 08:34:03.327"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.336" endtime="20201110 08:34:03.353"></status>
</kw>
<msg timestamp="20201110 08:34:03.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.335" endtime="20201110 08:34:03.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.354" endtime="20201110 08:34:03.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.357" endtime="20201110 08:34:03.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.332" endtime="20201110 08:34:03.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.330" endtime="20201110 08:34:03.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.368" endtime="20201110 08:34:03.653"></status>
</kw>
<msg timestamp="20201110 08:34:03.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.366" endtime="20201110 08:34:03.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.658" endtime="20201110 08:34:03.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.666" endtime="20201110 08:34:03.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.363" endtime="20201110 08:34:03.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.361" endtime="20201110 08:34:03.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.673" level="INFO">${RESULT} = [{'time': 0.022293681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.884800000000064e-05, 'source_diff': 4.884800000000064e-05}, {'time': 0.022351722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.670" endtime="20201110 08:34:03.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.687" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:03.674" endtime="20201110 08:34:03.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.692" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.691" endtime="20201110 08:34:03.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.695" level="INFO">VALUE: [4.884800000000064e-05, 4.906900000000228e-05, 4.85269999999996e-05, 4.879099999999942e-05, 4.837499999999981e-05, 4.837499999999981e-05, 4.905600000000218e-05, 4.927799999999982e-05, 4.863899999999963e-05, 4.867999999999886e-05, 4.875000000000018e-05, 4.913900000000013e-05, 4.852799999999907e-05, 4.887500000000031e-05, 4.8681000000001806e-05, 4.916699999999927e-05, 4.884700000000117e-05, 4.8417000000001986e-05, 4.8958999999997727e-05, 4.8959000000001196e-05, 4.876399999999975e-05, 4.886200000000021e-05, 4.854199999999864e-05, 4.8737000000000086e-05, 4.879199999999889e-05, 4.916699999999927e-05, 4.901300000000053e-05, 4.900000000000043e-05, 4.904099999999967e-05, 4.841600000000251e-05, 4.848600000000036e-05, 4.93339999999981e-05, 4.909699999999795e-05, 4.840200000000294e-05, 4.884700000000117e-05, 4.863899999999963e-05, 4.85139999999995e-05, 4.906900000000228e-05, 4.902799999999957e-05, 4.873599999999714e-05, 4.888899999999988e-05, 4.872200000000104e-05, 4.902800000000304e-05, 4.879199999999889e-05, 4.9208999999997977e-05, 4.873599999999714e-05, 4.868099999999834e-05, 4.8320000000001e-05, 4.852799999999907e-05, 4.836100000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.693" endtime="20201110 08:34:03.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.688" endtime="20201110 08:34:03.696"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.698" endtime="20201110 08:34:03.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.702" endtime="20201110 08:34:03.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.700" endtime="20201110 08:34:03.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.697" endtime="20201110 08:34:03.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.328" endtime="20201110 08:34:03.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.328" endtime="20201110 08:34:03.723"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.732" endtime="20201110 08:34:03.748"></status>
</kw>
<msg timestamp="20201110 08:34:03.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.730" endtime="20201110 08:34:03.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.750" endtime="20201110 08:34:03.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.752" endtime="20201110 08:34:03.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.728" endtime="20201110 08:34:03.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.725" endtime="20201110 08:34:03.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.763" endtime="20201110 08:34:04.049"></status>
</kw>
<msg timestamp="20201110 08:34:04.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.761" endtime="20201110 08:34:04.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.054" endtime="20201110 08:34:04.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.062" endtime="20201110 08:34:04.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.759" endtime="20201110 08:34:04.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.757" endtime="20201110 08:34:04.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.069" level="INFO">${RESULT} = [{'time': 0.022250708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.947200000000179e-05, 'source_diff': 4.947200000000179e-05}, {'time': 0.022310736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.066" endtime="20201110 08:34:04.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.084" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:04.070" endtime="20201110 08:34:04.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.089" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.088" endtime="20201110 08:34:04.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.091" level="INFO">VALUE: [4.947200000000179e-05, 4.956900000000278e-05, 4.947199999999832e-05, 4.937500000000081e-05, 4.955599999999921e-05, 4.975000000000118e-05, 4.93469999999982e-05, 4.993099999999959e-05, 4.938900000000038e-05, 5.023599999999864e-05, 4.976400000000075e-05, 4.943099999999909e-05, 4.970899999999848e-05, 5.009799999999842e-05, 4.963899999999716e-05, 5.011100000000199e-05, 4.965200000000072e-05, 4.980599999999946e-05, 4.937499999999734e-05, 4.95140000000005e-05, 4.940299999999995e-05, 5.012500000000156e-05, 4.977700000000085e-05, 4.945800000000222e-05, 4.926400000000025e-05, 4.945799999999875e-05, 4.987499999999784e-05, 4.994399999999968e-05, 5.016600000000079e-05, 4.955499999999974e-05, 4.972200000000204e-05, 5.026400000000125e-05, 4.977800000000032e-05, 5.018099999999984e-05, 4.963900000000063e-05, 5.016700000000027e-05, 4.993099999999959e-05, 4.938899999999691e-05, 4.947199999999832e-05, 4.96530000000002e-05, 4.973599999999814e-05, 5.002800000000057e-05, 4.959800000000139e-05, 4.9737000000001086e-05, 5.016700000000027e-05, 4.991700000000002e-05, 4.9723000000001516e-05, 4.995799999999925e-05, 4.973600000000161e-05, 4.936099999999777e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.090" endtime="20201110 08:34:04.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.085" endtime="20201110 08:34:04.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.095" endtime="20201110 08:34:04.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.099" endtime="20201110 08:34:04.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.097" endtime="20201110 08:34:04.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.093" endtime="20201110 08:34:04.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.724" endtime="20201110 08:34:04.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.723" endtime="20201110 08:34:04.119"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.128" endtime="20201110 08:34:04.145"></status>
</kw>
<msg timestamp="20201110 08:34:04.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.127" endtime="20201110 08:34:04.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.147" endtime="20201110 08:34:04.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.149" endtime="20201110 08:34:04.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.124" endtime="20201110 08:34:04.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.122" endtime="20201110 08:34:04.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.161" endtime="20201110 08:34:04.448"></status>
</kw>
<msg timestamp="20201110 08:34:04.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.159" endtime="20201110 08:34:04.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.452" endtime="20201110 08:34:04.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.461" endtime="20201110 08:34:04.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.156" endtime="20201110 08:34:04.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.154" endtime="20201110 08:34:04.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.468" level="INFO">${RESULT} = [{'time': 0.022367111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.058299999999988e-05, 'source_diff': 5.058299999999988e-05}, {'time': 0.022431153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.464" endtime="20201110 08:34:04.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.481" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:04.469" endtime="20201110 08:34:04.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.486" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.485" endtime="20201110 08:34:04.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.488" level="INFO">VALUE: [5.058299999999988e-05, 5.129199999999792e-05, 5.105600000000071e-05, 5.086199999999874e-05, 5.056999999999978e-05, 5.087499999999884e-05, 5.034800000000214e-05, 5.088899999999841e-05, 5.072199999999957e-05, 5.081900000000056e-05, 5.072199999999957e-05, 5.081899999999709e-05, 5.087499999999884e-05, 5.041600000000104e-05, 5.029099999999745e-05, 5.093000000000111e-05, 5.047199999999932e-05, 5.072199999999957e-05, 5.098599999999939e-05, 5.101399999999853e-05, 5.112500000000256e-05, 5.076400000000175e-05, 5.118100000000084e-05, 5.037499999999834e-05, 5.055600000000021e-05, 5.075000000000218e-05, 5.086099999999927e-05, 5.05279999999976e-05, 5.058399999999935e-05, 5.030599999999996e-05, 5.122299999999955e-05, 5.041700000000052e-05, 5.041700000000052e-05, 5.116700000000127e-05, 5.048599999999889e-05, 5.11669999999978e-05, 5.11530000000017e-05, 5.033299999999963e-05, 5.044400000000018e-05, 5.048600000000236e-05, 5.072199999999957e-05, 5.116600000000179e-05, 5.034700000000267e-05, 5.08469999999997e-05, 5.068000000000086e-05, 5.130599999999749e-05, 5.059699999999945e-05, 5.069499999999991e-05, 5.112499999999909e-05, 5.123599999999964e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.487" endtime="20201110 08:34:04.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.482" endtime="20201110 08:34:04.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.492" endtime="20201110 08:34:04.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.495" endtime="20201110 08:34:04.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.494" endtime="20201110 08:34:04.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.490" endtime="20201110 08:34:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.120" endtime="20201110 08:34:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.120" endtime="20201110 08:34:04.516"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.525" endtime="20201110 08:34:04.542"></status>
</kw>
<msg timestamp="20201110 08:34:04.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.523" endtime="20201110 08:34:04.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.543" endtime="20201110 08:34:04.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.546" endtime="20201110 08:34:04.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.521" endtime="20201110 08:34:04.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.519" endtime="20201110 08:34:04.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.556" endtime="20201110 08:34:04.857"></status>
</kw>
<msg timestamp="20201110 08:34:04.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.554" endtime="20201110 08:34:04.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.861" endtime="20201110 08:34:04.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.870" endtime="20201110 08:34:04.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.552" endtime="20201110 08:34:04.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.550" endtime="20201110 08:34:04.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.876" level="INFO">${RESULT} = [{'time': 0.022340569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222200000000107e-05, 'source_diff': 5.222200000000107e-05}, {'time': 0.022401597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.873" endtime="20201110 08:34:04.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.890" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:04.877" endtime="20201110 08:34:04.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.895" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.894" endtime="20201110 08:34:04.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.898" level="INFO">VALUE: [5.222200000000107e-05, 5.2193999999998464e-05, 5.148599999999989e-05, 5.190299999999898e-05, 5.1429999999998144e-05, 5.190300000000245e-05, 5.16669999999983e-05, 5.199999999999996e-05, 5.182000000000103e-05, 5.208300000000138e-05, 5.2249999999996743e-05, 5.155600000000121e-05, 5.218100000000184e-05, 5.187499999999984e-05, 5.222299999999708e-05, 5.136099999999977e-05, 5.145900000000023e-05, 5.226399999999978e-05, 5.145900000000023e-05, 5.145900000000023e-05, 5.134799999999967e-05, 5.20279999999991e-05, 5.172200000000057e-05, 5.1916000000002543e-05, 5.218100000000184e-05, 5.13470000000002e-05, 5.152800000000207e-05, 5.226399999999978e-05, 5.1708000000001e-05, 5.163899999999916e-05, 5.198600000000039e-05, 5.173600000000014e-05, 5.209700000000095e-05, 5.148599999999989e-05, 5.193100000000159e-05, 5.162499999999959e-05, 5.225000000000021e-05, 5.201399999999953e-05, 5.136099999999977e-05, 5.209699999999748e-05, 5.227799999999935e-05, 5.158300000000088e-05, 5.212500000000009e-05, 5.2152000000003224e-05, 5.168100000000134e-05, 5.180600000000146e-05, 5.201399999999953e-05, 5.148599999999989e-05, 5.195900000000073e-05, 5.154199999999817e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.896" endtime="20201110 08:34:04.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.891" endtime="20201110 08:34:04.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.903" endtime="20201110 08:34:04.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.906" endtime="20201110 08:34:04.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.904" endtime="20201110 08:34:04.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.901" endtime="20201110 08:34:04.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.517" endtime="20201110 08:34:04.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.516" endtime="20201110 08:34:04.927"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.935" endtime="20201110 08:34:04.952"></status>
</kw>
<msg timestamp="20201110 08:34:04.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.934" endtime="20201110 08:34:04.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.954" endtime="20201110 08:34:04.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.956" endtime="20201110 08:34:04.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.931" endtime="20201110 08:34:04.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.929" endtime="20201110 08:34:04.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.967" endtime="20201110 08:34:05.252"></status>
</kw>
<msg timestamp="20201110 08:34:05.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.965" endtime="20201110 08:34:05.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.256" endtime="20201110 08:34:05.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.264" endtime="20201110 08:34:05.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.962" endtime="20201110 08:34:05.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.961" endtime="20201110 08:34:05.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.271" level="INFO">${RESULT} = [{'time': 0.021978722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.255499999999927e-05, 'source_diff': 5.255499999999927e-05}, {'time': 0.022042833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.268" endtime="20201110 08:34:05.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.284" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:05.272" endtime="20201110 08:34:05.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.289" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.288" endtime="20201110 08:34:05.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.291" level="INFO">VALUE: [5.255499999999927e-05, 5.25409999999997e-05, 5.229199999999892e-05, 5.294499999999869e-05, 5.301400000000053e-05, 5.261100000000102e-05, 5.312499999999762e-05, 5.244499999999819e-05, 5.277799999999985e-05, 5.269500000000191e-05, 5.265299999999973e-05, 5.236200000000024e-05, 5.28470000000017e-05, 5.273600000000114e-05, 5.286100000000127e-05, 5.309699999999848e-05, 5.3166000000000324e-05, 5.231900000000206e-05, 5.3013999999997063e-05, 5.263900000000016e-05, 5.248600000000089e-05, 5.2429999999999144e-05, 5.293099999999912e-05, 5.230599999999849e-05, 5.259699999999798e-05, 5.311100000000152e-05, 5.309700000000195e-05, 5.251400000000003e-05, 5.258299999999841e-05, 5.30280000000001e-05, 5.304199999999967e-05, 5.331899999999959e-05, 5.291699999999955e-05, 5.258400000000135e-05, 5.312499999999762e-05, 5.256899999999884e-05, 5.279099999999995e-05, 5.315300000000023e-05, 5.283300000000213e-05, 5.25409999999997e-05, 5.2957999999998784e-05, 5.3166000000000324e-05, 5.3179999999999894e-05, 5.2665999999999824e-05, 5.3165999999996855e-05, 5.325000000000121e-05, 5.3221999999998604e-05, 5.237499999999687e-05, 5.251400000000003e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.290" endtime="20201110 08:34:05.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.285" endtime="20201110 08:34:05.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.295" endtime="20201110 08:34:05.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.298" endtime="20201110 08:34:05.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.297" endtime="20201110 08:34:05.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.293" endtime="20201110 08:34:05.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.928" endtime="20201110 08:34:05.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.927" endtime="20201110 08:34:05.319"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.328" endtime="20201110 08:34:05.345"></status>
</kw>
<msg timestamp="20201110 08:34:05.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.327" endtime="20201110 08:34:05.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.347" endtime="20201110 08:34:05.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.349" endtime="20201110 08:34:05.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.324" endtime="20201110 08:34:05.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.322" endtime="20201110 08:34:05.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.359" endtime="20201110 08:34:05.661"></status>
</kw>
<msg timestamp="20201110 08:34:05.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.357" endtime="20201110 08:34:05.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022331194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.665" endtime="20201110 08:34:05.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.674" endtime="20201110 08:34:05.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.355" endtime="20201110 08:34:05.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.353" endtime="20201110 08:34:05.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.680" level="INFO">${RESULT} = [{'time': 0.022331194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3707999999999534e-05, 'source_diff': 5.3707999999999534e-05}, {'time': 0.022390222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:05.677" endtime="20201110 08:34:05.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.695" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:05.681" endtime="20201110 08:34:05.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.699" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.698" endtime="20201110 08:34:05.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.702" level="INFO">VALUE: [5.3707999999999534e-05, 5.3666000000000824e-05, 5.3721999999999104e-05, 5.413900000000166e-05, 5.343099999999962e-05, 5.391700000000055e-05, 5.393100000000012e-05, 5.368099999999987e-05, 5.420899999999951e-05, 5.4235999999999174e-05, 5.344499999999919e-05, 5.382000000000303e-05, 5.369499999999944e-05, 5.3485999999998424e-05, 5.405500000000077e-05, 5.388900000000141e-05, 5.387500000000184e-05, 5.3693999999999964e-05, 5.3944000000000214e-05, 5.412499999999862e-05, 5.409699999999948e-05, 5.333299999999916e-05, 5.331900000000306e-05, 5.384699999999923e-05, 5.351400000000103e-05, 5.331899999999959e-05, 5.409700000000295e-05, 5.3443999999999714e-05, 5.3444000000003183e-05, 5.3944000000000214e-05, 5.40280000000011e-05, 5.391700000000055e-05, 5.379200000000042e-05, 5.375000000000171e-05, 5.3763999999997814e-05, 5.3763999999997814e-05, 5.359799999999845e-05, 5.354200000000017e-05, 5.344500000000266e-05, 5.331999999999906e-05, 5.369499999999944e-05, 5.397299999999883e-05, 5.4166000000001324e-05, 5.34869999999979e-05, 5.362499999999812e-05, 5.377700000000138e-05, 5.3944000000000214e-05, 5.333299999999916e-05, 5.350000000000146e-05, 5.33609999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.700" endtime="20201110 08:34:05.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.696" endtime="20201110 08:34:05.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.705" endtime="20201110 08:34:05.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.709" endtime="20201110 08:34:05.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.707" endtime="20201110 08:34:05.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.704" endtime="20201110 08:34:05.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.320" endtime="20201110 08:34:05.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.320" endtime="20201110 08:34:05.729"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.738" endtime="20201110 08:34:05.755"></status>
</kw>
<msg timestamp="20201110 08:34:05.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.736" endtime="20201110 08:34:05.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.757" endtime="20201110 08:34:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.759" endtime="20201110 08:34:05.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.734" endtime="20201110 08:34:05.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.732" endtime="20201110 08:34:05.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.770" endtime="20201110 08:34:06.057"></status>
</kw>
<msg timestamp="20201110 08:34:06.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.769" endtime="20201110 08:34:06.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.061" endtime="20201110 08:34:06.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.069" endtime="20201110 08:34:06.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.765" endtime="20201110 08:34:06.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.763" endtime="20201110 08:34:06.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.076" level="INFO">${RESULT} = [{'time': 0.022112319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4485999999999424e-05, 'source_diff': 5.4485999999999424e-05}, {'time': 0.022179375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.073" endtime="20201110 08:34:06.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.090" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:06.077" endtime="20201110 08:34:06.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.094" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.093" endtime="20201110 08:34:06.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.097" level="INFO">VALUE: [5.4485999999999424e-05, 5.508300000000091e-05, 5.520899999999704e-05, 5.512499999999962e-05, 5.4499999999998994e-05, 5.4458000000000284e-05, 5.4972000000000354e-05, 5.4722000000000104e-05, 5.5208000000001034e-05, 5.480600000000099e-05, 5.484700000000023e-05, 5.444500000000019e-05, 5.4763999999998814e-05, 5.4693999999997495e-05, 5.432000000000006e-05, 5.466699999999783e-05, 5.43479999999992e-05, 5.470900000000001e-05, 5.4694000000000964e-05, 5.477699999999891e-05, 5.4958000000000784e-05, 5.513899999999919e-05, 5.4735999999999674e-05, 5.437499999999887e-05, 5.4429999999997675e-05, 5.465299999999826e-05, 5.429200000000092e-05, 5.4985999999999924e-05, 5.462499999999912e-05, 5.506900000000134e-05, 5.4541999999997703e-05, 5.501400000000253e-05, 5.506900000000134e-05, 5.5249999999999744e-05, 5.525000000000321e-05, 5.4429999999997675e-05, 5.462499999999912e-05, 5.490299999999851e-05, 5.515299999999876e-05, 5.4485999999999424e-05, 5.4651999999998785e-05, 5.5013999999999064e-05, 5.437499999999887e-05, 5.463899999999869e-05, 5.49869999999994e-05, 5.511100000000005e-05, 5.5221999999997134e-05, 5.4680000000001394e-05, 5.4485999999999424e-05, 5.430500000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.095" endtime="20201110 08:34:06.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.091" endtime="20201110 08:34:06.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.100" endtime="20201110 08:34:06.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.104" endtime="20201110 08:34:06.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.102" endtime="20201110 08:34:06.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.099" endtime="20201110 08:34:06.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.730" endtime="20201110 08:34:06.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.730" endtime="20201110 08:34:06.124"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.133" endtime="20201110 08:34:06.151"></status>
</kw>
<msg timestamp="20201110 08:34:06.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.131" endtime="20201110 08:34:06.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.152" endtime="20201110 08:34:06.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.154" endtime="20201110 08:34:06.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.129" endtime="20201110 08:34:06.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.127" endtime="20201110 08:34:06.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.164" endtime="20201110 08:34:06.451"></status>
</kw>
<msg timestamp="20201110 08:34:06.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.163" endtime="20201110 08:34:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021624778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.455" endtime="20201110 08:34:06.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.464" endtime="20201110 08:34:06.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.160" endtime="20201110 08:34:06.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.159" endtime="20201110 08:34:06.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.470" level="INFO">${RESULT} = [{'time': 0.021680736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5957999999998315e-05, 'source_diff': 5.5957999999998315e-05}, {'time': 0.021749833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.467" endtime="20201110 08:34:06.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.484" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:06.471" endtime="20201110 08:34:06.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.488" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.487" endtime="20201110 08:34:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.491" level="INFO">VALUE: [5.5957999999998315e-05, 5.6207999999998565e-05, 5.61670000000028e-05, 5.533400000000063e-05, 5.538899999999944e-05, 5.572300000000058e-05, 5.538899999999944e-05, 5.551300000000009e-05, 5.612500000000062e-05, 5.6165999999999855e-05, 5.609699999999801e-05, 5.5485999999996954e-05, 5.5708000000001534e-05, 5.5429999999998675e-05, 5.5486000000000424e-05, 5.613900000000019e-05, 5.616699999999933e-05, 5.556899999999837e-05, 5.6027999999999634e-05, 5.563899999999969e-05, 5.5277999999998884e-05, 5.5763999999999814e-05, 5.583299999999819e-05, 5.5527999999999134e-05, 5.5791999999998954e-05, 5.5541999999998704e-05, 5.5957999999998315e-05, 5.6221999999998135e-05, 5.605600000000224e-05, 5.540299999999901e-05, 5.5736000000000674e-05, 5.593099999999865e-05, 5.561100000000055e-05, 5.6263999999996844e-05, 5.554099999999923e-05, 5.584699999999776e-05, 5.5888000000000465e-05, 5.5513999999999564e-05, 5.554099999999923e-05, 5.5777999999999384e-05, 5.615299999999976e-05, 5.5263999999999314e-05, 5.5443999999998245e-05, 5.5722000000001104e-05, 5.6014000000000064e-05, 5.5957999999998315e-05, 5.531900000000159e-05, 5.584700000000123e-05, 5.56809999999984e-05, 5.563899999999969e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.489" endtime="20201110 08:34:06.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.485" endtime="20201110 08:34:06.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.494" endtime="20201110 08:34:06.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.498" endtime="20201110 08:34:06.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.496" endtime="20201110 08:34:06.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.493" endtime="20201110 08:34:06.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.125" endtime="20201110 08:34:06.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.125" endtime="20201110 08:34:06.518"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.527" endtime="20201110 08:34:06.544"></status>
</kw>
<msg timestamp="20201110 08:34:06.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.526" endtime="20201110 08:34:06.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.546" endtime="20201110 08:34:06.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.548" endtime="20201110 08:34:06.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.523" endtime="20201110 08:34:06.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.521" endtime="20201110 08:34:06.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.558" endtime="20201110 08:34:06.844"></status>
</kw>
<msg timestamp="20201110 08:34:06.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.557" endtime="20201110 08:34:06.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.848" endtime="20201110 08:34:06.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.856" endtime="20201110 08:34:06.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.554" endtime="20201110 08:34:06.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.553" endtime="20201110 08:34:06.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.863" level="INFO">${RESULT} = [{'time': 0.021879097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680500000000005e-05, 'source_diff': 5.680500000000005e-05}, {'time': 0.021948153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.860" endtime="20201110 08:34:06.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.877" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:06.864" endtime="20201110 08:34:06.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.881" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.880" endtime="20201110 08:34:06.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.883" level="INFO">VALUE: [5.680500000000005e-05, 5.6972000000002354e-05, 5.7235999999998705e-05, 5.6721999999998635e-05, 5.6541999999999704e-05, 5.632000000000206e-05, 5.6514000000000564e-05, 5.633400000000163e-05, 5.6916000000000605e-05, 5.6750000000001244e-05, 5.679100000000048e-05, 5.7221999999999135e-05, 5.6957999999999315e-05, 5.722300000000208e-05, 5.713900000000119e-05, 5.706899999999987e-05, 5.6443999999999245e-05, 5.6679999999999925e-05, 5.709699999999901e-05, 5.666699999999983e-05, 5.6486000000001424e-05, 5.6722000000002104e-05, 5.6721999999998635e-05, 5.6972000000002354e-05, 5.661100000000155e-05, 5.68610000000018e-05, 5.720900000000251e-05, 5.715299999999729e-05, 5.719500000000294e-05, 5.711100000000205e-05, 5.63610000000013e-05, 5.690300000000051e-05, 5.702700000000116e-05, 5.670899999999854e-05, 5.668100000000287e-05, 5.647299999999786e-05, 5.681899999999962e-05, 5.6638000000001215e-05, 5.6707999999999065e-05, 5.637500000000087e-05, 5.663899999999722e-05, 5.663900000000069e-05, 5.712499999999815e-05, 5.711100000000205e-05, 5.7250000000001744e-05, 5.7014000000001064e-05, 5.6721999999998635e-05, 5.6541999999999704e-05, 5.715300000000076e-05, 5.6693999999999495e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.882" endtime="20201110 08:34:06.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.877" endtime="20201110 08:34:06.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.887" endtime="20201110 08:34:06.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.890" endtime="20201110 08:34:06.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.889" endtime="20201110 08:34:06.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.885" endtime="20201110 08:34:06.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.519" endtime="20201110 08:34:06.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.519" endtime="20201110 08:34:06.911"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.919" endtime="20201110 08:34:06.937"></status>
</kw>
<msg timestamp="20201110 08:34:06.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.918" endtime="20201110 08:34:06.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.938" endtime="20201110 08:34:06.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.940" endtime="20201110 08:34:06.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.916" endtime="20201110 08:34:06.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.913" endtime="20201110 08:34:06.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.950" endtime="20201110 08:34:07.237"></status>
</kw>
<msg timestamp="20201110 08:34:07.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.949" endtime="20201110 08:34:07.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.241" endtime="20201110 08:34:07.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.249" endtime="20201110 08:34:07.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.946" endtime="20201110 08:34:07.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.945" endtime="20201110 08:34:07.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.257" level="INFO">${RESULT} = [{'time': 0.021743403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.759700000000298e-05, 'source_diff': 5.759700000000298e-05}, {'time': 0.021815444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.253" endtime="20201110 08:34:07.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.277" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:07.259" endtime="20201110 08:34:07.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.284" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.282" endtime="20201110 08:34:07.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.288" level="INFO">VALUE: [5.759700000000298e-05, 5.8208000000000565e-05, 5.740299999999754e-05, 5.779099999999801e-05, 5.731900000000012e-05, 5.7943999999997275e-05, 5.788899999999847e-05, 5.7721999999999635e-05, 5.788900000000194e-05, 5.756900000000037e-05, 5.7514000000001564e-05, 5.791700000000108e-05, 5.7749999999998775e-05, 5.7306000000000024e-05, 5.758300000000341e-05, 5.7499999999998525e-05, 5.8222000000000135e-05, 5.7528000000001134e-05, 5.740300000000101e-05, 5.779099999999801e-05, 5.815299999999829e-05, 5.783400000000313e-05, 5.812500000000262e-05, 5.7902000000002035e-05, 5.7430000000000675e-05, 5.783300000000019e-05, 5.781899999999715e-05, 5.811099999999958e-05, 5.740300000000101e-05, 5.734700000000273e-05, 5.756900000000037e-05, 5.740300000000101e-05, 5.7721999999999635e-05, 5.7556000000000274e-05, 5.7708000000000065e-05, 5.8180000000001425e-05, 5.7971999999999885e-05, 5.788900000000194e-05, 5.762499999999865e-05, 5.7277999999997414e-05, 5.805499999999783e-05, 5.736099999999883e-05, 5.7833999999999663e-05, 5.765300000000126e-05, 5.8042000000001204e-05, 5.791699999999761e-05, 5.790299999999804e-05, 5.791700000000108e-05, 5.736200000000177e-05, 5.76810000000004e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.286" endtime="20201110 08:34:07.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.278" endtime="20201110 08:34:07.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.292" endtime="20201110 08:34:07.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.295" endtime="20201110 08:34:07.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.294" endtime="20201110 08:34:07.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.290" endtime="20201110 08:34:07.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.912" endtime="20201110 08:34:07.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.911" endtime="20201110 08:34:07.316"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.325" endtime="20201110 08:34:07.342"></status>
</kw>
<msg timestamp="20201110 08:34:07.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.323" endtime="20201110 08:34:07.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.344" endtime="20201110 08:34:07.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.346" endtime="20201110 08:34:07.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.321" endtime="20201110 08:34:07.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.319" endtime="20201110 08:34:07.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.356" endtime="20201110 08:34:07.642"></status>
</kw>
<msg timestamp="20201110 08:34:07.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.354" endtime="20201110 08:34:07.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021892069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.646" endtime="20201110 08:34:07.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.655" endtime="20201110 08:34:07.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.352" endtime="20201110 08:34:07.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.350" endtime="20201110 08:34:07.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.662" level="INFO">${RESULT} = [{'time': 0.021950472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.840299999999854e-05, 'source_diff': 5.840299999999854e-05}, {'time': 0.022019528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.659" endtime="20201110 08:34:07.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.677" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:07.664" endtime="20201110 08:34:07.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.682" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.681" endtime="20201110 08:34:07.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.684" level="INFO">VALUE: [5.840299999999854e-05, 5.844500000000072e-05, 5.8541999999998234e-05, 5.8792000000001954e-05, 5.862499999999965e-05, 5.8763999999999345e-05, 5.9041999999998734e-05, 5.838899999999897e-05, 5.869500000000097e-05, 5.9250000000000275e-05, 5.9250000000000275e-05, 5.908299999999797e-05, 5.8485999999999955e-05, 5.8972000000000885e-05, 5.8514000000002564e-05, 5.877699999999944e-05, 5.886099999999686e-05, 5.9236000000000705e-05, 5.858299999999747e-05, 5.865300000000226e-05, 5.9041999999998734e-05, 5.9194000000001995e-05, 5.8485999999999955e-05, 5.8763999999999345e-05, 5.868099999999793e-05, 5.886100000000033e-05, 5.890300000000251e-05, 5.9250000000000275e-05, 5.8334000000000163e-05, 5.8915999999999136e-05, 5.8848000000000233e-05, 5.916699999999886e-05, 5.890299999999904e-05, 5.898699999999993e-05, 5.9250000000000275e-05, 5.9151999999999816e-05, 5.880499999999858e-05, 5.911100000000058e-05, 5.833300000000069e-05, 5.88749999999999e-05, 5.8401999999999066e-05, 5.888900000000294e-05, 5.9165999999999386e-05, 5.913899999999972e-05, 5.8764000000002814e-05, 5.856900000000137e-05, 5.840299999999854e-05, 5.840300000000201e-05, 5.8305999999997554e-05, 5.8763999999999345e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.683" endtime="20201110 08:34:07.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.678" endtime="20201110 08:34:07.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.688" endtime="20201110 08:34:07.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.691" endtime="20201110 08:34:07.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.690" endtime="20201110 08:34:07.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.686" endtime="20201110 08:34:07.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.317" endtime="20201110 08:34:07.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.316" endtime="20201110 08:34:07.712"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.721" endtime="20201110 08:34:07.739"></status>
</kw>
<msg timestamp="20201110 08:34:07.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.719" endtime="20201110 08:34:07.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.740" endtime="20201110 08:34:07.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.742" endtime="20201110 08:34:07.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.717" endtime="20201110 08:34:07.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.715" endtime="20201110 08:34:07.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.754" endtime="20201110 08:34:08.040"></status>
</kw>
<msg timestamp="20201110 08:34:08.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.753" endtime="20201110 08:34:08.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.044" endtime="20201110 08:34:08.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.052" endtime="20201110 08:34:08.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.750" endtime="20201110 08:34:08.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.748" endtime="20201110 08:34:08.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.059" level="INFO">${RESULT} = [{'time': 0.021803167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.962499999999718e-05, 'source_diff': 5.962499999999718e-05}, {'time': 0.021873222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.056" endtime="20201110 08:34:08.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.073" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:08.060" endtime="20201110 08:34:08.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.077" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.076" endtime="20201110 08:34:08.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.080" level="INFO">VALUE: [5.962499999999718e-05, 6.011100000000158e-05, 5.941699999999911e-05, 6.0264000000000845e-05, 5.981899999999915e-05, 5.941700000000258e-05, 5.986100000000133e-05, 5.938899999999997e-05, 5.9791999999999484e-05, 6.0278000000000415e-05, 5.940299999999954e-05, 5.940300000000301e-05, 5.9306000000002024e-05, 5.984700000000176e-05, 5.98750000000009e-05, 5.944499999999825e-05, 5.961100000000108e-05, 5.941699999999911e-05, 5.936099999999736e-05, 6.0194000000002995e-05, 6.0112000000001053e-05, 5.990300000000004e-05, 5.9679999999999456e-05, 5.955499999999933e-05, 5.958299999999847e-05, 6.0249999999997805e-05, 6.011100000000158e-05, 6.012499999999768e-05, 5.940299999999954e-05, 5.9693999999999026e-05, 5.938899999999997e-05, 6.0250000000001275e-05, 6.0250000000001275e-05, 5.9805999999999054e-05, 5.941699999999911e-05, 5.991699999999961e-05, 5.9750000000000775e-05, 5.9291999999998984e-05, 5.986100000000133e-05, 5.9750000000000775e-05, 5.936100000000083e-05, 6.0112000000001053e-05, 5.973700000000068e-05, 5.966699999999936e-05, 6.015300000000029e-05, 6.013900000000072e-05, 5.941699999999911e-05, 5.9514000000000095e-05, 5.9486000000000955e-05, 5.961100000000108e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.078" endtime="20201110 08:34:08.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.073" endtime="20201110 08:34:08.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.083" endtime="20201110 08:34:08.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.087" endtime="20201110 08:34:08.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.085" endtime="20201110 08:34:08.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.082" endtime="20201110 08:34:08.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.713" endtime="20201110 08:34:08.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.713" endtime="20201110 08:34:08.107"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.116" endtime="20201110 08:34:08.133"></status>
</kw>
<msg timestamp="20201110 08:34:08.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.114" endtime="20201110 08:34:08.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.134" endtime="20201110 08:34:08.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.137" endtime="20201110 08:34:08.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.112" endtime="20201110 08:34:08.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.110" endtime="20201110 08:34:08.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.146" endtime="20201110 08:34:08.431"></status>
</kw>
<msg timestamp="20201110 08:34:08.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.145" endtime="20201110 08:34:08.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.436" endtime="20201110 08:34:08.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.444" endtime="20201110 08:34:08.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.142" endtime="20201110 08:34:08.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.141" endtime="20201110 08:34:08.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.451" level="INFO">${RESULT} = [{'time': 0.021810486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.058299999999947e-05, 'source_diff': 6.058299999999947e-05}, {'time': 0.021879528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.447" endtime="20201110 08:34:08.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.464" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:08.452" endtime="20201110 08:34:08.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.469" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.468" endtime="20201110 08:34:08.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.471" level="INFO">VALUE: [6.058299999999947e-05, 6.059699999999904e-05, 6.043099999999968e-05, 6.063900000000122e-05, 6.03750000000014e-05, 6.081900000000015e-05, 6.047299999999839e-05, 6.0500000000001525e-05, 6.0847999999998764e-05, 6.0334000000002164e-05, 6.0499999999998055e-05, 6.054100000000076e-05, 6.033300000000269e-05, 6.0930000000000706e-05, 6.058299999999947e-05, 6.0430000000000206e-05, 6.0528000000000665e-05, 6.0764000000001345e-05, 6.0957999999999846e-05, 6.105500000000083e-05, 6.034699999999879e-05, 6.0694000000000026e-05, 6.136099999999936e-05, 6.0471999999998916e-05, 6.052700000000119e-05, 6.036099999999836e-05, 6.0888999999998e-05, 6.125000000000227e-05, 6.0528000000000665e-05, 6.126399999999838e-05, 6.0555999999999804e-05, 6.098700000000193e-05, 6.0362000000001304e-05, 6.0333999999998694e-05, 6.118000000000096e-05, 6.088900000000147e-05, 6.12080000000001e-05, 6.12080000000001e-05, 6.034700000000226e-05, 6.112500000000215e-05, 6.036100000000183e-05, 6.063900000000122e-05, 6.1027999999997695e-05, 6.1013999999998125e-05, 6.0749999999998305e-05, 6.0471999999998916e-05, 6.0888999999998e-05, 6.130600000000055e-05, 6.070900000000254e-05, 6.116700000000086e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.470" endtime="20201110 08:34:08.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.465" endtime="20201110 08:34:08.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.474" endtime="20201110 08:34:08.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.478" endtime="20201110 08:34:08.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.476" endtime="20201110 08:34:08.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.473" endtime="20201110 08:34:08.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.108" endtime="20201110 08:34:08.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.108" endtime="20201110 08:34:08.499"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.507" endtime="20201110 08:34:08.525"></status>
</kw>
<msg timestamp="20201110 08:34:08.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.506" endtime="20201110 08:34:08.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.526" endtime="20201110 08:34:08.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.529" endtime="20201110 08:34:08.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.503" endtime="20201110 08:34:08.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.501" endtime="20201110 08:34:08.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.539" endtime="20201110 08:34:08.825"></status>
</kw>
<msg timestamp="20201110 08:34:08.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:08.537" endtime="20201110 08:34:08.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:08.829" endtime="20201110 08:34:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.837" endtime="20201110 08:34:08.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.535" endtime="20201110 08:34:08.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.533" endtime="20201110 08:34:08.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.844" level="INFO">${RESULT} = [{'time': 0.021736875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.212499999999968e-05, 'source_diff': 6.212499999999968e-05}, {'time': 0.021805917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.841" endtime="20201110 08:34:08.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.858" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:08.845" endtime="20201110 08:34:08.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.863" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.862" endtime="20201110 08:34:08.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.865" level="INFO">VALUE: [6.212499999999968e-05, 6.193100000000118e-05, 6.170900000000007e-05, 6.20560000000013e-05, 6.152700000000219e-05, 6.173599999999974e-05, 6.152700000000219e-05, 6.208300000000097e-05, 6.14019999999986e-05, 6.140200000000207e-05, 6.218000000000196e-05, 6.141599999999817e-05, 6.177800000000191e-05, 6.212499999999968e-05, 6.190299999999857e-05, 6.222200000000067e-05, 6.204200000000173e-05, 6.212499999999968e-05, 6.15690000000009e-05, 6.212499999999968e-05, 6.132000000000012e-05, 6.17499999999993e-05, 6.194400000000128e-05, 6.191700000000161e-05, 6.181999999999716e-05, 6.204099999999879e-05, 6.187499999999943e-05, 6.172300000000311e-05, 6.212499999999968e-05, 6.165199999999885e-05, 6.181999999999716e-05, 6.215200000000282e-05, 6.136099999999936e-05, 6.227800000000241e-05, 6.201399999999913e-05, 6.215299999999882e-05, 6.223600000000024e-05, 6.198599999999999e-05, 6.209700000000054e-05, 6.13889999999985e-05, 6.20690000000014e-05, 6.155599999999734e-05, 6.133300000000022e-05, 6.186099999999986e-05, 6.149999999999906e-05, 6.198599999999999e-05, 6.190300000000204e-05, 6.149999999999906e-05, 6.184799999999976e-05, 6.180499999999811e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.864" endtime="20201110 08:34:08.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.859" endtime="20201110 08:34:08.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.869" endtime="20201110 08:34:08.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.872" endtime="20201110 08:34:08.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.871" endtime="20201110 08:34:08.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.867" endtime="20201110 08:34:08.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.500" endtime="20201110 08:34:08.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.499" endtime="20201110 08:34:08.893"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.901" endtime="20201110 08:34:08.918"></status>
</kw>
<msg timestamp="20201110 08:34:08.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.900" endtime="20201110 08:34:08.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.919" endtime="20201110 08:34:08.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.922" endtime="20201110 08:34:08.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.897" endtime="20201110 08:34:08.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.895" endtime="20201110 08:34:08.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.932" endtime="20201110 08:34:09.218"></status>
</kw>
<msg timestamp="20201110 08:34:09.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.930" endtime="20201110 08:34:09.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.222" endtime="20201110 08:34:09.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.230" endtime="20201110 08:34:09.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.928" endtime="20201110 08:34:09.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.926" endtime="20201110 08:34:09.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.238" level="INFO">${RESULT} = [{'time': 0.021629375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.293099999999871e-05, 'source_diff': 6.293099999999871e-05}, {'time': 0.021699472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.234" endtime="20201110 08:34:09.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.251" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:09.239" endtime="20201110 08:34:09.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.256" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.255" endtime="20201110 08:34:09.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.258" level="INFO">VALUE: [6.293099999999871e-05, 6.276399999999988e-05, 6.245900000000082e-05, 6.319499999999853e-05, 6.30560000000023e-05, 6.265299999999932e-05, 6.23889999999995e-05, 6.287500000000043e-05, 6.2582999999998e-05, 6.317999999999949e-05, 6.298600000000099e-05, 6.297199999999795e-05, 6.262500000000018e-05, 6.29439999999988e-05, 6.25279999999992e-05, 6.254199999999877e-05, 6.313900000000025e-05, 6.250000000000006e-05, 6.273600000000074e-05, 6.261100000000061e-05, 6.309699999999807e-05, 6.265299999999932e-05, 6.304199999999927e-05, 6.230599999999809e-05, 6.319499999999853e-05, 6.305499999999936e-05, 6.315200000000035e-05, 6.244400000000178e-05, 6.307000000000187e-05, 6.252699999999972e-05, 6.283299999999825e-05, 6.316599999999992e-05, 6.273600000000074e-05, 6.241599999999917e-05, 6.262500000000018e-05, 6.295800000000185e-05, 6.261100000000061e-05, 6.241700000000211e-05, 6.259700000000104e-05, 6.257000000000137e-05, 6.265299999999932e-05, 6.269399999999856e-05, 6.245899999999735e-05, 6.266699999999889e-05, 6.258400000000094e-05, 6.3195000000002e-05, 6.248600000000049e-05, 6.266700000000236e-05, 6.301400000000013e-05, 6.247300000000039e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.257" endtime="20201110 08:34:09.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.252" endtime="20201110 08:34:09.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.262" endtime="20201110 08:34:09.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.265" endtime="20201110 08:34:09.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.264" endtime="20201110 08:34:09.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.260" endtime="20201110 08:34:09.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.894" endtime="20201110 08:34:09.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.893" endtime="20201110 08:34:09.286"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.295" endtime="20201110 08:34:09.312"></status>
</kw>
<msg timestamp="20201110 08:34:09.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.293" endtime="20201110 08:34:09.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.314" endtime="20201110 08:34:09.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.316" endtime="20201110 08:34:09.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.291" endtime="20201110 08:34:09.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.289" endtime="20201110 08:34:09.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.326" endtime="20201110 08:34:09.614"></status>
</kw>
<msg timestamp="20201110 08:34:09.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:09.325" endtime="20201110 08:34:09.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:09.618" endtime="20201110 08:34:09.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.627" endtime="20201110 08:34:09.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.322" endtime="20201110 08:34:09.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.320" endtime="20201110 08:34:09.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.633" level="INFO">${RESULT} = [{'time': 0.021995319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.431900000000018e-05, 'source_diff': 6.431900000000018e-05}, {'time': 0.022067361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.630" endtime="20201110 08:34:09.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.647" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:09.634" endtime="20201110 08:34:09.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.651" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.650" endtime="20201110 08:34:09.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.654" level="INFO">VALUE: [6.431900000000018e-05, 6.398600000000199e-05, 6.340300000000007e-05, 6.336100000000136e-05, 6.35280000000002e-05, 6.33890000000005e-05, 6.409700000000254e-05, 6.373600000000174e-05, 6.37639999999974e-05, 6.398599999999852e-05, 6.332000000000212e-05, 6.350000000000106e-05, 6.365300000000032e-05, 6.399999999999809e-05, 6.381999999999916e-05, 6.338799999999756e-05, 6.430500000000061e-05, 6.342999999999974e-05, 6.341699999999964e-05, 6.366600000000042e-05, 6.409799999999855e-05, 6.42639999999979e-05, 6.358300000000247e-05, 6.35280000000002e-05, 6.401400000000113e-05, 6.351400000000063e-05, 6.357000000000237e-05, 6.413899999999778e-05, 6.329199999999952e-05, 6.3582999999999e-05, 6.343099999999921e-05, 6.358399999999848e-05, 6.366699999999989e-05, 6.42500000000018e-05, 6.3889000000001e-05, 6.356899999999943e-05, 6.393099999999971e-05, 6.405599999999984e-05, 6.412499999999821e-05, 6.398599999999852e-05, 6.366599999999695e-05, 6.398600000000199e-05, 6.405500000000036e-05, 6.3582999999999e-05, 6.418099999999996e-05, 6.391600000000067e-05, 6.376400000000088e-05, 6.398600000000199e-05, 6.373599999999827e-05, 6.341699999999964e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.652" endtime="20201110 08:34:09.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.648" endtime="20201110 08:34:09.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.663" endtime="20201110 08:34:09.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.667" endtime="20201110 08:34:09.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.665" endtime="20201110 08:34:09.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.662" endtime="20201110 08:34:09.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.287" endtime="20201110 08:34:09.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.286" endtime="20201110 08:34:09.688"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.696" endtime="20201110 08:34:09.714"></status>
</kw>
<msg timestamp="20201110 08:34:09.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.695" endtime="20201110 08:34:09.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.715" endtime="20201110 08:34:09.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.718" endtime="20201110 08:34:09.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.692" endtime="20201110 08:34:09.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.690" endtime="20201110 08:34:09.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.727" endtime="20201110 08:34:10.014"></status>
</kw>
<msg timestamp="20201110 08:34:10.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.726" endtime="20201110 08:34:10.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021814486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.018" endtime="20201110 08:34:10.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.027" endtime="20201110 08:34:10.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.723" endtime="20201110 08:34:10.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.722" endtime="20201110 08:34:10.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.033" level="INFO">${RESULT} = [{'time': 0.021879333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.484699999999982e-05, 'source_diff': 6.484699999999982e-05}, {'time': 0.021955333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.030" endtime="20201110 08:34:10.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.047" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:10.034" endtime="20201110 08:34:10.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.051" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.050" endtime="20201110 08:34:10.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.054" level="INFO">VALUE: [6.484699999999982e-05, 6.511099999999964e-05, 6.487500000000243e-05, 6.456900000000043e-05, 6.468000000000099e-05, 6.519400000000106e-05, 6.434699999999932e-05, 6.523600000000324e-05, 6.465299999999785e-05, 6.49029999999981e-05, 6.524999999999934e-05, 6.447199999999945e-05, 6.445799999999988e-05, 6.49029999999981e-05, 6.45280000000012e-05, 6.44029999999976e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.524999999999934e-05, 6.459699999999957e-05, 6.449999999999859e-05, 6.502699999999875e-05, 6.467999999999752e-05, 6.495800000000038e-05, 6.456900000000043e-05, 6.445800000000335e-05, 6.517999999999802e-05, 6.516700000000139e-05, 6.434700000000279e-05, 6.524999999999934e-05, 6.451400000000163e-05, 6.469400000000056e-05, 6.466699999999742e-05, 6.461100000000261e-05, 6.451399999999816e-05, 6.450000000000206e-05, 6.43890000000015e-05, 6.490300000000157e-05, 6.522299999999967e-05, 6.516600000000192e-05, 6.462499999999871e-05, 6.524999999999934e-05, 6.443000000000074e-05, 6.452699999999825e-05, 6.454100000000129e-05, 6.515199999999888e-05, 6.465199999999838e-05, 6.4583e-05, 6.463899999999828e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.052" endtime="20201110 08:34:10.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.048" endtime="20201110 08:34:10.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.057" endtime="20201110 08:34:10.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.061" endtime="20201110 08:34:10.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.059" endtime="20201110 08:34:10.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.056" endtime="20201110 08:34:10.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.689" endtime="20201110 08:34:10.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.688" endtime="20201110 08:34:10.081"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.090" endtime="20201110 08:34:10.107"></status>
</kw>
<msg timestamp="20201110 08:34:10.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.088" endtime="20201110 08:34:10.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.109" endtime="20201110 08:34:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.111" endtime="20201110 08:34:10.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.086" endtime="20201110 08:34:10.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.084" endtime="20201110 08:34:10.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.121" endtime="20201110 08:34:10.406"></status>
</kw>
<msg timestamp="20201110 08:34:10.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.120" endtime="20201110 08:34:10.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.410" endtime="20201110 08:34:10.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.418" endtime="20201110 08:34:10.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.117" endtime="20201110 08:34:10.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.115" endtime="20201110 08:34:10.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.425" level="INFO">${RESULT} = [{'time': 0.021798417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.600000000000009e-05, 'source_diff': 6.600000000000009e-05}, {'time': 0.021875472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:10.422" endtime="20201110 08:34:10.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.440" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:10.426" endtime="20201110 08:34:10.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.444" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.443" endtime="20201110 08:34:10.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.447" level="INFO">VALUE: [6.600000000000009e-05, 6.538899999999903e-05, 6.602700000000322e-05, 6.549999999999959e-05, 6.5583000000001e-05, 6.617999999999902e-05, 6.608299999999803e-05, 6.561100000000014e-05, 6.591699999999867e-05, 6.59029999999991e-05, 6.593099999999824e-05, 6.566699999999842e-05, 6.569500000000103e-05, 6.588899999999953e-05, 6.544499999999731e-05, 6.627799999999948e-05, 6.598600000000052e-05, 6.534700000000032e-05, 6.555600000000134e-05, 6.613899999999978e-05, 6.537499999999946e-05, 6.601399999999966e-05, 6.536200000000283e-05, 6.552699999999925e-05, 6.586100000000039e-05, 6.613899999999978e-05, 6.619399999999859e-05, 6.549999999999959e-05, 6.591699999999867e-05, 6.600000000000009e-05, 6.544399999999784e-05, 6.599999999999662e-05, 6.584699999999735e-05, 6.58480000000003e-05, 6.57220000000007e-05, 6.534700000000032e-05, 6.630600000000209e-05, 6.584699999999735e-05, 6.541700000000164e-05, 6.584700000000082e-05, 6.544500000000078e-05, 6.569500000000103e-05, 6.597300000000042e-05, 6.60830000000015e-05, 6.532000000000066e-05, 6.556899999999796e-05, 6.590199999999963e-05, 6.615299999999935e-05, 6.579099999999907e-05, 6.541699999999817e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.445" endtime="20201110 08:34:10.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.441" endtime="20201110 08:34:10.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.450" endtime="20201110 08:34:10.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.453" endtime="20201110 08:34:10.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.452" endtime="20201110 08:34:10.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.449" endtime="20201110 08:34:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.082" endtime="20201110 08:34:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.082" endtime="20201110 08:34:10.474"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.483" endtime="20201110 08:34:10.500"></status>
</kw>
<msg timestamp="20201110 08:34:10.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.481" endtime="20201110 08:34:10.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.502" endtime="20201110 08:34:10.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.504" endtime="20201110 08:34:10.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.479" endtime="20201110 08:34:10.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.477" endtime="20201110 08:34:10.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.514" endtime="20201110 08:34:10.800"></status>
</kw>
<msg timestamp="20201110 08:34:10.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:10.513" endtime="20201110 08:34:10.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:10.804" endtime="20201110 08:34:10.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.813" endtime="20201110 08:34:10.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.510" endtime="20201110 08:34:10.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.508" endtime="20201110 08:34:10.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.819" level="INFO">${RESULT} = [{'time': 0.022184028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.65280000000032e-05, 'source_diff': 6.65280000000032e-05}, {'time': 0.022257069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:10.816" endtime="20201110 08:34:10.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.833" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:10.820" endtime="20201110 08:34:10.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.837" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.836" endtime="20201110 08:34:10.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.840" level="INFO">VALUE: [6.65280000000032e-05, 6.673600000000127e-05, 6.67220000000017e-05, 6.644399999999884e-05, 6.72359999999983e-05, 6.643100000000221e-05, 6.648600000000102e-05, 6.62220000000012e-05, 6.636200000000037e-05, 6.686099999999792e-05, 6.712500000000121e-05, 6.655599999999887e-05, 6.680599999999912e-05, 6.670800000000213e-05, 6.691699999999967e-05, 6.669499999999856e-05, 6.686100000000139e-05, 6.694499999999881e-05, 6.651400000000016e-05, 6.704100000000032e-05, 6.720799999999916e-05, 6.644399999999884e-05, 6.687500000000096e-05, 6.67770000000005e-05, 6.637500000000046e-05, 6.674999999999737e-05, 6.64029999999996e-05, 6.663900000000028e-05, 6.665299999999985e-05, 6.631899999999871e-05, 6.686100000000139e-05, 6.643100000000221e-05, 6.693099999999924e-05, 6.636099999999742e-05, 6.69160000000002e-05, 6.669499999999856e-05, 6.661100000000114e-05, 6.652799999999973e-05, 6.724999999999787e-05, 6.683400000000173e-05, 6.629199999999905e-05, 6.647300000000092e-05, 6.723700000000124e-05, 6.650000000000059e-05, 6.72640000000009e-05, 6.638800000000056e-05, 6.675000000000084e-05, 6.668000000000299e-05, 6.634700000000132e-05, 6.700000000000109e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.838" endtime="20201110 08:34:10.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.834" endtime="20201110 08:34:10.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.843" endtime="20201110 08:34:10.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.847" endtime="20201110 08:34:10.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.845" endtime="20201110 08:34:10.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.842" endtime="20201110 08:34:10.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.475" endtime="20201110 08:34:10.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.475" endtime="20201110 08:34:10.867"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.876" endtime="20201110 08:34:10.894"></status>
</kw>
<msg timestamp="20201110 08:34:10.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.874" endtime="20201110 08:34:10.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.895" endtime="20201110 08:34:10.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.898" endtime="20201110 08:34:10.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.872" endtime="20201110 08:34:10.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.870" endtime="20201110 08:34:10.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.909" endtime="20201110 08:34:11.195"></status>
</kw>
<msg timestamp="20201110 08:34:11.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.907" endtime="20201110 08:34:11.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.199" endtime="20201110 08:34:11.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.208" endtime="20201110 08:34:11.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.903" endtime="20201110 08:34:11.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.902" endtime="20201110 08:34:11.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.214" level="INFO">${RESULT} = [{'time': 0.022086403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.820899999999963e-05, 'source_diff': 6.820899999999963e-05}, {'time': 0.022164444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.211" endtime="20201110 08:34:11.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.228" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:11.215" endtime="20201110 08:34:11.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.232" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.231" endtime="20201110 08:34:11.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.235" level="INFO">VALUE: [6.820899999999963e-05, 6.781899999999674e-05, 6.766699999999695e-05, 6.776300000000193e-05, 6.755499999999692e-05, 6.822199999999973e-05, 6.82909999999981e-05, 6.806900000000046e-05, 6.800000000000209e-05, 6.744399999999984e-05, 6.813899999999831e-05, 6.768000000000052e-05, 6.738900000000103e-05, 6.797199999999948e-05, 6.779200000000055e-05, 6.795900000000285e-05, 6.737499999999799e-05, 6.77640000000014e-05, 6.741700000000017e-05, 6.751400000000116e-05, 6.797299999999895e-05, 6.737500000000146e-05, 6.745799999999941e-05, 6.768099999999999e-05, 6.725000000000134e-05, 6.808300000000003e-05, 6.781900000000021e-05, 6.788899999999806e-05, 6.824999999999887e-05, 6.80420000000008e-05, 6.79160000000012e-05, 6.731899999999971e-05, 6.813899999999831e-05, 6.813900000000178e-05, 6.755599999999987e-05, 6.801399999999819e-05, 6.747200000000245e-05, 6.783399999999926e-05, 6.798600000000252e-05, 6.777800000000098e-05, 6.769499999999956e-05, 6.787500000000196e-05, 6.820899999999963e-05, 6.74160000000007e-05, 6.7583999999999e-05, 6.736200000000137e-05, 6.747199999999898e-05, 6.775000000000184e-05, 6.8277000000002e-05, 6.79299999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.233" endtime="20201110 08:34:11.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.228" endtime="20201110 08:34:11.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.238" endtime="20201110 08:34:11.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.242" endtime="20201110 08:34:11.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.240" endtime="20201110 08:34:11.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.237" endtime="20201110 08:34:11.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.868" endtime="20201110 08:34:11.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.868" endtime="20201110 08:34:11.263"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.272" endtime="20201110 08:34:11.290"></status>
</kw>
<msg timestamp="20201110 08:34:11.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.270" endtime="20201110 08:34:11.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.291" endtime="20201110 08:34:11.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.294" endtime="20201110 08:34:11.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.268" endtime="20201110 08:34:11.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.265" endtime="20201110 08:34:11.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.304" endtime="20201110 08:34:11.589"></status>
</kw>
<msg timestamp="20201110 08:34:11.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.302" endtime="20201110 08:34:11.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.594" endtime="20201110 08:34:11.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.602" endtime="20201110 08:34:11.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.300" endtime="20201110 08:34:11.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.298" endtime="20201110 08:34:11.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.609" level="INFO">${RESULT} = [{'time': 0.022931444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.87909999999986e-05, 'source_diff': 6.87909999999986e-05}, {'time': 0.023006444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:11.605" endtime="20201110 08:34:11.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.622" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:11.610" endtime="20201110 08:34:11.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.627" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.626" endtime="20201110 08:34:11.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.629" level="INFO">VALUE: [6.87909999999986e-05, 6.847199999999998e-05, 6.877699999999903e-05, 6.855500000000139e-05, 6.887500000000296e-05, 6.855499999999792e-05, 6.906900000000146e-05, 6.838899999999856e-05, 6.905499999999842e-05, 6.844500000000031e-05, 6.902799999999876e-05, 6.872200000000023e-05, 6.912499999999974e-05, 6.891700000000167e-05, 6.905600000000137e-05, 6.926399999999944e-05, 6.902799999999876e-05, 6.924999999999987e-05, 6.927799999999901e-05, 6.911100000000017e-05, 6.849999999999912e-05, 6.857000000000044e-05, 6.838899999999856e-05, 6.888799999999959e-05, 6.852699999999878e-05, 6.884700000000035e-05, 6.855500000000139e-05, 6.856900000000096e-05, 6.845800000000041e-05, 6.919400000000159e-05, 6.848599999999955e-05, 6.858300000000053e-05, 6.880599999999765e-05, 6.847199999999998e-05, 6.92360000000003e-05, 6.904199999999833e-05, 6.836099999999942e-05, 6.833399999999976e-05, 6.847199999999998e-05, 6.855600000000087e-05, 6.866600000000195e-05, 6.895799999999744e-05, 6.847299999999945e-05, 6.924999999999987e-05, 6.911100000000017e-05, 6.845800000000041e-05, 6.838900000000203e-05, 6.901399999999919e-05, 6.888899999999906e-05, 6.872200000000023e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.628" endtime="20201110 08:34:11.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.623" endtime="20201110 08:34:11.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.633" endtime="20201110 08:34:11.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.636" endtime="20201110 08:34:11.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.635" endtime="20201110 08:34:11.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.631" endtime="20201110 08:34:11.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.264" endtime="20201110 08:34:11.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.263" endtime="20201110 08:34:11.657"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.666" endtime="20201110 08:34:11.683"></status>
</kw>
<msg timestamp="20201110 08:34:11.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.664" endtime="20201110 08:34:11.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.684" endtime="20201110 08:34:11.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.687" endtime="20201110 08:34:11.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.662" endtime="20201110 08:34:11.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.660" endtime="20201110 08:34:11.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.697" endtime="20201110 08:34:11.982"></status>
</kw>
<msg timestamp="20201110 08:34:11.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.695" endtime="20201110 08:34:11.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.986" endtime="20201110 08:34:11.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.995" endtime="20201110 08:34:11.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.693" endtime="20201110 08:34:11.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.691" endtime="20201110 08:34:11.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.001" level="INFO">${RESULT} = [{'time': 0.021807778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.933400000000076e-05, 'source_diff': 6.933400000000076e-05}, {'time': 0.021887819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.998" endtime="20201110 08:34:12.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.016" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:12.002" endtime="20201110 08:34:12.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.020" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.019" endtime="20201110 08:34:12.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.023" level="INFO">VALUE: [6.933400000000076e-05, 6.970799999999819e-05, 6.968000000000252e-05, 6.970800000000166e-05, 6.965299999999938e-05, 6.998600000000105e-05, 6.970799999999819e-05, 6.99169999999992e-05, 6.954199999999883e-05, 7.025000000000087e-05, 6.995800000000191e-05, 6.998599999999758e-05, 6.938899999999956e-05, 7.002799999999976e-05, 6.949999999999665e-05, 6.929199999999858e-05, 6.934700000000085e-05, 6.987500000000049e-05, 6.982000000000169e-05, 7.000000000000062e-05, 7.004199999999933e-05, 7.008300000000203e-05, 7.00970000000016e-05, 6.920799999999769e-05, 6.948600000000055e-05, 7.018000000000302e-05, 6.961100000000067e-05, 7.016599999999998e-05, 6.968100000000199e-05, 7.015299999999988e-05, 6.970800000000166e-05, 6.994500000000181e-05, 6.991700000000267e-05, 6.929199999999858e-05, 6.958300000000153e-05, 7.013900000000031e-05, 6.986100000000092e-05, 6.988900000000006e-05, 6.97230000000007e-05, 6.931999999999772e-05, 6.95420000000023e-05, 7.023700000000077e-05, 6.950000000000012e-05, 6.975000000000037e-05, 6.99299999999993e-05, 6.941599999999923e-05, 7.015299999999988e-05, 6.951400000000316e-05, 7.030499999999967e-05, 6.931900000000171e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.021" endtime="20201110 08:34:12.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.017" endtime="20201110 08:34:12.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.026" endtime="20201110 08:34:12.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.029" endtime="20201110 08:34:12.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.028" endtime="20201110 08:34:12.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.024" endtime="20201110 08:34:12.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.658" endtime="20201110 08:34:12.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.657" endtime="20201110 08:34:12.050"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.059" endtime="20201110 08:34:12.076"></status>
</kw>
<msg timestamp="20201110 08:34:12.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.057" endtime="20201110 08:34:12.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.078" endtime="20201110 08:34:12.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.080" endtime="20201110 08:34:12.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.055" endtime="20201110 08:34:12.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.053" endtime="20201110 08:34:12.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.090" endtime="20201110 08:34:12.375"></status>
</kw>
<msg timestamp="20201110 08:34:12.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.089" endtime="20201110 08:34:12.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.380" endtime="20201110 08:34:12.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.388" endtime="20201110 08:34:12.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.086" endtime="20201110 08:34:12.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.084" endtime="20201110 08:34:12.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.395" level="INFO">${RESULT} = [{'time': 0.021769264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.079200000000008e-05, 'source_diff': 7.079200000000008e-05}, {'time': 0.021854264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.391" endtime="20201110 08:34:12.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.408" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:12.396" endtime="20201110 08:34:12.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.412" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.411" endtime="20201110 08:34:12.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.415" level="INFO">VALUE: [7.079200000000008e-05, 7.108300000000303e-05, 7.031999999999872e-05, 7.047199999999851e-05, 7.123599999999883e-05, 7.052800000000026e-05, 7.120899999999916e-05, 7.127800000000101e-05, 7.044400000000284e-05, 7.063800000000134e-05, 7.094399999999987e-05, 7.12499999999984e-05, 7.115199999999794e-05, 7.063899999999734e-05, 7.1069e-05, 7.115300000000088e-05, 7.081899999999974e-05, 7.034699999999838e-05, 7.070799999999919e-05, 7.062500000000124e-05, 7.118100000000002e-05, 7.127800000000101e-05, 7.112500000000174e-05, 7.047199999999851e-05, 7.081999999999922e-05, 7.093099999999977e-05, 7.083399999999879e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.131900000000024e-05, 7.063899999999734e-05, 7.051400000000069e-05, 7.059699999999863e-05, 7.11109999999987e-05, 7.090200000000116e-05, 7.116599999999751e-05, 7.113899999999784e-05, 7.122199999999926e-05, 7.065300000000038e-05, 7.072199999999876e-05, 7.12499999999984e-05, 7.045800000000241e-05, 7.043100000000274e-05, 7.090300000000063e-05, 7.083300000000278e-05, 7.119499999999959e-05, 7.080599999999965e-05, 7.07230000000017e-05, 7.051400000000069e-05, 7.112499999999827e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.414" endtime="20201110 08:34:12.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.409" endtime="20201110 08:34:12.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.418" endtime="20201110 08:34:12.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.422" endtime="20201110 08:34:12.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.420" endtime="20201110 08:34:12.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.417" endtime="20201110 08:34:12.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.051" endtime="20201110 08:34:12.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.051" endtime="20201110 08:34:12.443"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.451" endtime="20201110 08:34:12.469"></status>
</kw>
<msg timestamp="20201110 08:34:12.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.450" endtime="20201110 08:34:12.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.470" endtime="20201110 08:34:12.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.473" endtime="20201110 08:34:12.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.447" endtime="20201110 08:34:12.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.445" endtime="20201110 08:34:12.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.483" endtime="20201110 08:34:12.769"></status>
</kw>
<msg timestamp="20201110 08:34:12.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.481" endtime="20201110 08:34:12.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.773" endtime="20201110 08:34:12.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.781" endtime="20201110 08:34:12.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.479" endtime="20201110 08:34:12.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.477" endtime="20201110 08:34:12.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.788" level="INFO">${RESULT} = [{'time': 0.021688681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.161200000000215e-05, 'source_diff': 7.161200000000215e-05}, {'time': 0.021770722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.784" endtime="20201110 08:34:12.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:12.789" endtime="20201110 08:34:12.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.806" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.805" endtime="20201110 08:34:12.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.808" level="INFO">VALUE: [7.161200000000215e-05, 7.198599999999958e-05, 7.141600000000123e-05, 7.130500000000067e-05, 7.213900000000231e-05, 7.159699999999963e-05, 7.190299999999816e-05, 7.136099999999895e-05, 7.197200000000001e-05, 7.148599999999908e-05, 7.156999999999997e-05, 7.156999999999997e-05, 7.19309999999973e-05, 7.229200000000158e-05, 7.16109999999992e-05, 7.169499999999662e-05, 7.199999999999915e-05, 7.169400000000062e-05, 7.147199999999951e-05, 7.22499999999994e-05, 7.180500000000117e-05, 7.198599999999958e-05, 7.131900000000024e-05, 7.170800000000019e-05, 7.188900000000206e-05, 7.158300000000006e-05, 7.14170000000007e-05, 7.151399999999822e-05, 7.223599999999983e-05, 7.201400000000219e-05, 7.134699999999938e-05, 7.151399999999822e-05, 7.140300000000113e-05, 7.168100000000052e-05, 7.148600000000255e-05, 7.165300000000138e-05, 7.161200000000215e-05, 7.207000000000047e-05, 7.163800000000234e-05, 7.134699999999938e-05, 7.161100000000267e-05, 7.168100000000052e-05, 7.170800000000019e-05, 7.151400000000169e-05, 7.138900000000156e-05, 7.199999999999915e-05, 7.148699999999855e-05, 7.158300000000006e-05, 7.177799999999804e-05, 7.172199999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.807" endtime="20201110 08:34:12.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.802" endtime="20201110 08:34:12.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.812" endtime="20201110 08:34:12.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.815" endtime="20201110 08:34:12.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.814" endtime="20201110 08:34:12.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.810" endtime="20201110 08:34:12.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.443" endtime="20201110 08:34:12.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.443" endtime="20201110 08:34:12.836"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.845" endtime="20201110 08:34:12.862"></status>
</kw>
<msg timestamp="20201110 08:34:12.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.843" endtime="20201110 08:34:12.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.864" endtime="20201110 08:34:12.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.866" endtime="20201110 08:34:12.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.841" endtime="20201110 08:34:12.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.839" endtime="20201110 08:34:12.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.876" endtime="20201110 08:34:13.162"></status>
</kw>
<msg timestamp="20201110 08:34:13.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:12.875" endtime="20201110 08:34:13.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02183425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:13.167" endtime="20201110 08:34:13.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.175" endtime="20201110 08:34:13.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.872" endtime="20201110 08:34:13.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.870" endtime="20201110 08:34:13.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.182" level="INFO">${RESULT} = [{'time': 0.021906806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.25560000000014e-05, 'source_diff': 7.25560000000014e-05}, {'time': 0.021985833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:13.179" endtime="20201110 08:34:13.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.195" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:13.183" endtime="20201110 08:34:13.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.200" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.199" endtime="20201110 08:34:13.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.202" level="INFO">VALUE: [7.25560000000014e-05, 7.272200000000076e-05, 7.300000000000015e-05, 7.258300000000106e-05, 7.308400000000104e-05, 7.251399999999922e-05, 7.312500000000027e-05, 7.29170000000022e-05, 7.32500000000004e-05, 7.27499999999999e-05, 7.230600000000115e-05, 7.32500000000004e-05, 7.266699999999848e-05, 7.32500000000004e-05, 7.263899999999934e-05, 7.304199999999886e-05, 7.266600000000248e-05, 7.311199999999671e-05, 7.248600000000008e-05, 7.259700000000063e-05, 7.251399999999922e-05, 7.252800000000226e-05, 7.245799999999747e-05, 7.323599999999736e-05, 7.313899999999984e-05, 7.230600000000115e-05, 7.247200000000051e-05, 7.255599999999793e-05, 7.298600000000058e-05, 7.254199999999836e-05, 7.229199999999811e-05, 7.265299999999891e-05, 7.318099999999855e-05, 7.263900000000281e-05, 7.312500000000027e-05, 7.238899999999909e-05, 7.241699999999823e-05, 7.227800000000201e-05, 7.300000000000015e-05, 7.30829999999981e-05, 7.273600000000033e-05, 7.288899999999959e-05, 7.248600000000008e-05, 7.281899999999827e-05, 7.252799999999879e-05, 7.319399999999865e-05, 7.302799999999929e-05, 7.231900000000124e-05, 7.265299999999891e-05, 7.280599999999818e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.201" endtime="20201110 08:34:13.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.196" endtime="20201110 08:34:13.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.206" endtime="20201110 08:34:13.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.209" endtime="20201110 08:34:13.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.208" endtime="20201110 08:34:13.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.204" endtime="20201110 08:34:13.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.837" endtime="20201110 08:34:13.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.837" endtime="20201110 08:34:13.230"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.239" endtime="20201110 08:34:13.256"></status>
</kw>
<msg timestamp="20201110 08:34:13.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.237" endtime="20201110 08:34:13.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.257" endtime="20201110 08:34:13.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.260" endtime="20201110 08:34:13.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.234" endtime="20201110 08:34:13.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.232" endtime="20201110 08:34:13.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.270" endtime="20201110 08:34:13.554"></status>
</kw>
<msg timestamp="20201110 08:34:13.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.268" endtime="20201110 08:34:13.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.558" endtime="20201110 08:34:13.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.567" endtime="20201110 08:34:13.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.266" endtime="20201110 08:34:13.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.264" endtime="20201110 08:34:13.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.574" level="INFO">${RESULT} = [{'time': 0.022012819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.35829999999986e-05, 'source_diff': 7.35829999999986e-05}, {'time': 0.022098861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:13.571" endtime="20201110 08:34:13.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.588" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:13.575" endtime="20201110 08:34:13.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.593" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.592" endtime="20201110 08:34:13.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.595" level="INFO">VALUE: [7.35829999999986e-05, 7.369400000000262e-05, 7.365300000000338e-05, 7.391699999999973e-05, 7.39309999999993e-05, 7.366700000000295e-05, 7.398600000000158e-05, 7.34309999999988e-05, 7.41249999999978e-05, 7.379100000000013e-05, 7.380599999999918e-05, 7.379199999999961e-05, 7.399999999999768e-05, 7.345800000000194e-05, 7.406899999999952e-05, 7.42500000000014e-05, 7.418000000000008e-05, 7.37500000000009e-05, 7.37500000000009e-05, 7.405599999999943e-05, 7.340299999999966e-05, 7.399999999999768e-05, 7.377800000000004e-05, 7.350000000000065e-05, 7.401400000000072e-05, 7.380599999999918e-05, 7.391600000000026e-05, 7.369500000000209e-05, 7.427800000000054e-05, 7.368099999999905e-05, 7.387499999999755e-05, 7.416600000000051e-05, 7.39439999999994e-05, 7.351400000000022e-05, 7.331899999999877e-05, 7.416600000000051e-05, 7.336099999999748e-05, 7.404100000000038e-05, 7.349999999999718e-05, 7.404199999999986e-05, 7.347200000000151e-05, 7.333399999999782e-05, 7.333300000000181e-05, 7.37500000000009e-05, 7.3763999999997e-05, 7.419399999999965e-05, 7.369499999999862e-05, 7.397199999999854e-05, 7.330599999999868e-05, 7.347300000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.594" endtime="20201110 08:34:13.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.589" endtime="20201110 08:34:13.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.599" endtime="20201110 08:34:13.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.602" endtime="20201110 08:34:13.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.601" endtime="20201110 08:34:13.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.597" endtime="20201110 08:34:13.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.231" endtime="20201110 08:34:13.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.230" endtime="20201110 08:34:13.623"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.631" endtime="20201110 08:34:13.649"></status>
</kw>
<msg timestamp="20201110 08:34:13.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.630" endtime="20201110 08:34:13.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.650" endtime="20201110 08:34:13.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.653" endtime="20201110 08:34:13.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.627" endtime="20201110 08:34:13.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.625" endtime="20201110 08:34:13.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.663" endtime="20201110 08:34:13.947"></status>
</kw>
<msg timestamp="20201110 08:34:13.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.661" endtime="20201110 08:34:13.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021632861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.952" endtime="20201110 08:34:13.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.960" endtime="20201110 08:34:13.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.659" endtime="20201110 08:34:13.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.657" endtime="20201110 08:34:13.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.967" level="INFO">${RESULT} = [{'time': 0.021632861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.488899999999812e-05, 'source_diff': 7.488899999999812e-05}, {'time': 0.021716889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.963" endtime="20201110 08:34:13.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:13.968" endtime="20201110 08:34:13.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.986" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.985" endtime="20201110 08:34:13.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.989" level="INFO">VALUE: [7.488899999999812e-05, 7.463900000000134e-05, 7.499999999999868e-05, 7.527800000000154e-05, 7.470900000000266e-05, 7.523600000000283e-05, 7.424999999999793e-05, 7.505500000000095e-05, 7.452800000000079e-05, 7.451299999999828e-05, 7.491600000000126e-05, 7.440199999999772e-05, 7.455500000000045e-05, 7.473599999999886e-05, 7.509699999999966e-05, 7.500000000000215e-05, 7.448600000000208e-05, 7.430599999999968e-05, 7.463899999999787e-05, 7.438900000000109e-05, 7.441700000000023e-05, 7.481999999999975e-05, 7.519500000000012e-05, 7.483399999999932e-05, 7.512500000000227e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.472300000000223e-05, 7.504199999999739e-05, 7.452800000000079e-05, 7.468000000000058e-05, 7.497199999999954e-05, 7.436099999999848e-05, 7.465300000000091e-05, 7.505500000000095e-05, 7.520800000000022e-05, 7.447199999999904e-05, 7.451400000000122e-05, 7.488900000000159e-05, 7.44439999999999e-05, 7.527799999999807e-05, 7.497199999999954e-05, 7.484700000000288e-05, 7.440300000000066e-05, 7.469499999999962e-05, 7.438899999999762e-05, 7.430599999999968e-05, 7.504200000000086e-05, 7.483399999999932e-05, 7.488900000000159e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.987" endtime="20201110 08:34:13.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.982" endtime="20201110 08:34:13.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.992" endtime="20201110 08:34:13.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.996" endtime="20201110 08:34:14.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.994" endtime="20201110 08:34:14.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.991" endtime="20201110 08:34:14.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.624" endtime="20201110 08:34:14.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.623" endtime="20201110 08:34:14.017"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.026" endtime="20201110 08:34:14.044"></status>
</kw>
<msg timestamp="20201110 08:34:14.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.024" endtime="20201110 08:34:14.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.046" endtime="20201110 08:34:14.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.048" endtime="20201110 08:34:14.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.022" endtime="20201110 08:34:14.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.020" endtime="20201110 08:34:14.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.059" endtime="20201110 08:34:14.368"></status>
</kw>
<msg timestamp="20201110 08:34:14.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.057" endtime="20201110 08:34:14.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.372" endtime="20201110 08:34:14.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.381" endtime="20201110 08:34:14.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.054" endtime="20201110 08:34:14.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.053" endtime="20201110 08:34:14.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.388" level="INFO">${RESULT} = [{'time': 0.022612972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.54029999999982e-05, 'source_diff': 7.54029999999982e-05}, {'time': 0.022698, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201110 08:34:14.384" endtime="20201110 08:34:14.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:14.389" endtime="20201110 08:34:14.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.406" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.405" endtime="20201110 08:34:14.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.409" level="INFO">VALUE: [7.54029999999982e-05, 7.577799999999857e-05, 7.547200000000004e-05, 7.586099999999998e-05, 7.583400000000032e-05, 7.547299999999951e-05, 7.534699999999991e-05, 7.577800000000204e-05, 7.54310000000008e-05, 7.565300000000191e-05, 7.587499999999955e-05, 7.545800000000047e-05, 7.593000000000183e-05, 7.61249999999998e-05, 7.573599999999986e-05, 7.611100000000023e-05, 7.627799999999907e-05, 7.620799999999775e-05, 7.556900000000102e-05, 7.547200000000004e-05, 7.531900000000077e-05, 7.597200000000054e-05, 7.547200000000004e-05, 7.587499999999955e-05, 7.534699999999991e-05, 7.559799999999964e-05, 7.530600000000068e-05, 7.579200000000161e-05, 7.570900000000019e-05, 7.568000000000158e-05, 7.59310000000013e-05, 7.595800000000097e-05, 7.598600000000011e-05, 7.609700000000066e-05, 7.573599999999986e-05, 7.598600000000011e-05, 7.5763999999999e-05, 7.608299999999762e-05, 7.541699999999776e-05, 7.620799999999775e-05, 7.601399999999925e-05, 7.583300000000084e-05, 7.534699999999991e-05, 7.613899999999937e-05, 7.561099999999973e-05, 7.533399999999982e-05, 7.56110000000032e-05, 7.586199999999946e-05, 7.550000000000265e-05, 7.598600000000011e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.407" endtime="20201110 08:34:14.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.402" endtime="20201110 08:34:14.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.412" endtime="20201110 08:34:14.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.416" endtime="20201110 08:34:14.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.414" endtime="20201110 08:34:14.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.411" endtime="20201110 08:34:14.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.018" endtime="20201110 08:34:14.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.017" endtime="20201110 08:34:14.437"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.446" endtime="20201110 08:34:14.464"></status>
</kw>
<msg timestamp="20201110 08:34:14.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.444" endtime="20201110 08:34:14.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.466" endtime="20201110 08:34:14.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.468" endtime="20201110 08:34:14.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.442" endtime="20201110 08:34:14.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.440" endtime="20201110 08:34:14.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.478" endtime="20201110 08:34:14.764"></status>
</kw>
<msg timestamp="20201110 08:34:14.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.477" endtime="20201110 08:34:14.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.769" endtime="20201110 08:34:14.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.777" endtime="20201110 08:34:14.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.474" endtime="20201110 08:34:14.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.472" endtime="20201110 08:34:14.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.784" level="INFO">${RESULT} = [{'time': 0.022538875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.683299999999837e-05, 'source_diff': 7.683299999999837e-05}, {'time': 0.022628917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:14.781" endtime="20201110 08:34:14.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.798" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:14.785" endtime="20201110 08:34:14.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.803" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.802" endtime="20201110 08:34:14.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.805" level="INFO">VALUE: [7.683299999999837e-05, 7.673599999999739e-05, 7.72770000000006e-05, 7.647200000000104e-05, 7.634700000000091e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.656900000000202e-05, 7.655499999999898e-05, 7.641599999999929e-05, 7.6764e-05, 7.650000000000018e-05, 7.698599999999764e-05, 7.701400000000025e-05, 7.637500000000005e-05, 7.643099999999833e-05, 7.705599999999896e-05, 7.640199999999972e-05, 7.70839999999981e-05, 7.716699999999951e-05, 7.687499999999708e-05, 7.69029999999997e-05, 7.636100000000048e-05, 7.652800000000279e-05, 7.641599999999929e-05, 7.67770000000001e-05, 7.727800000000007e-05, 7.669400000000215e-05, 7.638899999999962e-05, 7.717999999999961e-05, 7.697199999999807e-05, 7.726399999999703e-05, 7.656899999999855e-05, 7.665299999999944e-05, 7.63189999999983e-05, 7.648599999999714e-05, 7.654199999999889e-05, 7.636100000000048e-05, 7.655599999999846e-05, 7.702799999999982e-05, 7.701300000000078e-05, 7.679199999999914e-05, 7.704199999999939e-05, 7.708299999999862e-05, 7.656899999999855e-05, 7.675000000000043e-05, 7.686100000000098e-05, 7.647200000000104e-05, 7.641599999999929e-05, 7.672199999999782e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.804" endtime="20201110 08:34:14.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.799" endtime="20201110 08:34:14.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.813" endtime="20201110 08:34:14.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.817" endtime="20201110 08:34:14.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.815" endtime="20201110 08:34:14.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.811" endtime="20201110 08:34:14.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.438" endtime="20201110 08:34:14.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.437" endtime="20201110 08:34:14.838"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.847" endtime="20201110 08:34:14.866"></status>
</kw>
<msg timestamp="20201110 08:34:14.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.845" endtime="20201110 08:34:14.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.867" endtime="20201110 08:34:14.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.870" endtime="20201110 08:34:14.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.843" endtime="20201110 08:34:14.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.840" endtime="20201110 08:34:14.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.880" endtime="20201110 08:34:15.166"></status>
</kw>
<msg timestamp="20201110 08:34:15.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.879" endtime="20201110 08:34:15.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.170" endtime="20201110 08:34:15.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.179" endtime="20201110 08:34:15.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.876" endtime="20201110 08:34:15.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.874" endtime="20201110 08:34:15.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.186" level="INFO">${RESULT} = [{'time': 0.022907208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.80969999999992e-05, 'source_diff': 7.80969999999992e-05}, {'time': 0.022991278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:15.182" endtime="20201110 08:34:15.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.201" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:15.187" endtime="20201110 08:34:15.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.206" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.205" endtime="20201110 08:34:15.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.208" level="INFO">VALUE: [7.80969999999992e-05, 7.813900000000137e-05, 7.745800000000247e-05, 7.800000000000168e-05, 7.81389999999979e-05, 7.823600000000236e-05, 7.781999999999928e-05, 7.766700000000001e-05, 7.779100000000067e-05, 7.784699999999894e-05, 7.791600000000079e-05, 7.816600000000104e-05, 7.829199999999717e-05, 7.788899999999765e-05, 7.817999999999714e-05, 7.738900000000062e-05, 7.79169999999968e-05, 7.823600000000236e-05, 7.811099999999876e-05, 7.730599999999921e-05, 7.7457999999999e-05, 7.802800000000082e-05, 7.808299999999962e-05, 7.818100000000008e-05, 7.731999999999878e-05, 7.738900000000062e-05, 7.741699999999976e-05, 7.755499999999999e-05, 7.769500000000262e-05, 7.730499999999974e-05, 7.743000000000333e-05, 7.820799999999975e-05, 7.773600000000186e-05, 7.766600000000054e-05, 7.815300000000094e-05, 7.729100000000017e-05, 7.787499999999808e-05, 7.826399999999803e-05, 7.747200000000204e-05, 7.748600000000161e-05, 7.797199999999907e-05, 7.823599999999889e-05, 7.811100000000223e-05, 7.772199999999882e-05, 7.752800000000032e-05, 7.770899999999872e-05, 7.813900000000137e-05, 7.827800000000107e-05, 7.779100000000067e-05, 7.786099999999851e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.207" endtime="20201110 08:34:15.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.202" endtime="20201110 08:34:15.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.212" endtime="20201110 08:34:15.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.216" endtime="20201110 08:34:15.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.214" endtime="20201110 08:34:15.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.210" endtime="20201110 08:34:15.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.839" endtime="20201110 08:34:15.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.838" endtime="20201110 08:34:15.236"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.246" endtime="20201110 08:34:15.263"></status>
</kw>
<msg timestamp="20201110 08:34:15.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.244" endtime="20201110 08:34:15.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.264" endtime="20201110 08:34:15.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.267" endtime="20201110 08:34:15.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.241" endtime="20201110 08:34:15.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.239" endtime="20201110 08:34:15.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.277" endtime="20201110 08:34:15.563"></status>
</kw>
<msg timestamp="20201110 08:34:15.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.276" endtime="20201110 08:34:15.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.568" endtime="20201110 08:34:15.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.577" endtime="20201110 08:34:15.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.273" endtime="20201110 08:34:15.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.271" endtime="20201110 08:34:15.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.583" level="INFO">${RESULT} = [{'time': 0.022559514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916699999999804e-05, 'source_diff': 7.916699999999804e-05}, {'time': 0.022649611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.580" endtime="20201110 08:34:15.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.597" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:15.584" endtime="20201110 08:34:15.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.602" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.601" endtime="20201110 08:34:15.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.605" level="INFO">VALUE: [7.916699999999804e-05, 7.843000000000086e-05, 7.847199999999957e-05, 7.856899999999709e-05, 7.877699999999863e-05, 7.843000000000086e-05, 7.869400000000068e-05, 7.904100000000192e-05, 7.933400000000035e-05, 7.834699999999944e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.898599999999964e-05, 7.923599999999989e-05, 7.837499999999858e-05, 7.886099999999951e-05, 7.861099999999926e-05, 7.845899999999947e-05, 7.926399999999903e-05, 7.887499999999908e-05, 7.849999999999871e-05, 7.870899999999972e-05, 7.834700000000291e-05, 7.837499999999858e-05, 7.85969999999997e-05, 7.873600000000286e-05, 7.869399999999721e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.862499999999883e-05, 7.861100000000273e-05, 7.897200000000007e-05, 7.898599999999964e-05, 7.912499999999933e-05, 7.89169999999978e-05, 7.869500000000015e-05, 7.865300000000144e-05, 7.84449999999999e-05, 7.874999999999896e-05, 7.887499999999908e-05, 7.908300000000063e-05, 7.840200000000172e-05, 7.874999999999896e-05, 7.893000000000136e-05, 7.904100000000192e-05, 7.905499999999802e-05, 7.861099999999926e-05, 7.865299999999797e-05, 7.934799999999992e-05, 7.89719999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.603" endtime="20201110 08:34:15.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.598" endtime="20201110 08:34:15.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.608" endtime="20201110 08:34:15.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.612" endtime="20201110 08:34:15.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.610" endtime="20201110 08:34:15.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.607" endtime="20201110 08:34:15.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.237" endtime="20201110 08:34:15.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.237" endtime="20201110 08:34:15.633"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.642" endtime="20201110 08:34:15.660"></status>
</kw>
<msg timestamp="20201110 08:34:15.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.640" endtime="20201110 08:34:15.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.662" endtime="20201110 08:34:15.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.664" endtime="20201110 08:34:15.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.638" endtime="20201110 08:34:15.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.635" endtime="20201110 08:34:15.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.674" endtime="20201110 08:34:15.960"></status>
</kw>
<msg timestamp="20201110 08:34:15.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.673" endtime="20201110 08:34:15.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.964" endtime="20201110 08:34:15.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.973" endtime="20201110 08:34:15.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.670" endtime="20201110 08:34:15.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.669" endtime="20201110 08:34:15.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.980" level="INFO">${RESULT} = [{'time': 0.022409208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.947200000000057e-05, 'source_diff': 7.947200000000057e-05}, {'time': 0.02249725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:15.976" endtime="20201110 08:34:15.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.994" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:15.981" endtime="20201110 08:34:15.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.999" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.998" endtime="20201110 08:34:15.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.001" level="INFO">VALUE: [7.947200000000057e-05, 7.993099999999836e-05, 7.990299999999922e-05, 7.930599999999774e-05, 7.955600000000146e-05, 7.933400000000035e-05, 8.001399999999978e-05, 7.970899999999725e-05, 7.945900000000047e-05, 7.986199999999999e-05, 7.952699999999938e-05, 8.025000000000046e-05, 7.998600000000064e-05, 7.949999999999971e-05, 8.017999999999914e-05, 7.9458000000001e-05, 7.9458000000001e-05, 7.9458000000001e-05, 7.965299999999897e-05, 7.930500000000174e-05, 7.940299999999872e-05, 7.931899999999784e-05, 7.948600000000014e-05, 7.94719999999971e-05, 7.995900000000097e-05, 7.986099999999705e-05, 7.970900000000072e-05, 7.974999999999996e-05, 7.993100000000183e-05, 7.97230000000003e-05, 7.94450000000009e-05, 8.0152e-05, 8.001399999999978e-05, 7.97770000000031e-05, 7.969399999999821e-05, 8.015299999999947e-05, 8.020799999999828e-05, 7.93329999999974e-05, 7.967999999999864e-05, 8.002799999999935e-05, 7.92779999999986e-05, 8.004199999999892e-05, 8.011100000000076e-05, 8.00970000000012e-05, 8.019500000000165e-05, 7.949999999999971e-05, 7.954200000000189e-05, 7.955599999999799e-05, 7.936100000000001e-05, 7.997200000000107e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.000" endtime="20201110 08:34:16.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.995" endtime="20201110 08:34:16.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.005" endtime="20201110 08:34:16.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.008" endtime="20201110 08:34:16.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.007" endtime="20201110 08:34:16.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.003" endtime="20201110 08:34:16.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.634" endtime="20201110 08:34:16.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.633" endtime="20201110 08:34:16.029"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.038" endtime="20201110 08:34:16.057"></status>
</kw>
<msg timestamp="20201110 08:34:16.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.037" endtime="20201110 08:34:16.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.058" endtime="20201110 08:34:16.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.061" endtime="20201110 08:34:16.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.034" endtime="20201110 08:34:16.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.032" endtime="20201110 08:34:16.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.071" endtime="20201110 08:34:16.357"></status>
</kw>
<msg timestamp="20201110 08:34:16.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.070" endtime="20201110 08:34:16.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022359139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.362" endtime="20201110 08:34:16.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.370" endtime="20201110 08:34:16.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.067" endtime="20201110 08:34:16.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.065" endtime="20201110 08:34:16.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.377" level="INFO">${RESULT} = [{'time': 0.022359139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.095799999999903e-05, 'source_diff': 8.095799999999903e-05}, {'time': 0.022446194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:16.374" endtime="20201110 08:34:16.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.391" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:16.378" endtime="20201110 08:34:16.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.396" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.395" endtime="20201110 08:34:16.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.398" level="INFO">VALUE: [8.095799999999903e-05, 8.04719999999981e-05, 8.087500000000108e-05, 8.075000000000096e-05, 8.072200000000182e-05, 8.05130000000008e-05, 8.037500000000058e-05, 8.030499999999927e-05, 8.066600000000007e-05, 8.043099999999886e-05, 8.127700000000113e-05, 8.048599999999767e-05, 8.118099999999961e-05, 8.061100000000126e-05, 8.119499999999918e-05, 8.081999999999881e-05, 8.111100000000177e-05, 8.06390000000004e-05, 8.038900000000015e-05, 8.09169999999998e-05, 8.065299999999997e-05, 8.101400000000078e-05, 8.045799999999853e-05, 8.09719999999986e-05, 8.050000000000071e-05, 8.104199999999992e-05, 8.075000000000096e-05, 8.124999999999799e-05, 8.125000000000146e-05, 8.06109999999978e-05, 8.070800000000225e-05, 8.086100000000151e-05, 8.125000000000146e-05, 8.043099999999886e-05, 8.086100000000151e-05, 8.100000000000121e-05, 8.054199999999942e-05, 8.062500000000083e-05, 8.081999999999881e-05, 8.091600000000032e-05, 8.052799999999985e-05, 8.040200000000025e-05, 8.1152000000001e-05, 8.101400000000078e-05, 8.095799999999903e-05, 8.112500000000133e-05, 8.123600000000189e-05, 8.048700000000061e-05, 8.031899999999884e-05, 8.084700000000195e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.397" endtime="20201110 08:34:16.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.392" endtime="20201110 08:34:16.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.402" endtime="20201110 08:34:16.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.406" endtime="20201110 08:34:16.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.404" endtime="20201110 08:34:16.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.400" endtime="20201110 08:34:16.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.030" endtime="20201110 08:34:16.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.030" endtime="20201110 08:34:16.427"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.436" endtime="20201110 08:34:16.454"></status>
</kw>
<msg timestamp="20201110 08:34:16.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.434" endtime="20201110 08:34:16.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.455" endtime="20201110 08:34:16.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.458" endtime="20201110 08:34:16.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.431" endtime="20201110 08:34:16.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.429" endtime="20201110 08:34:16.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.468" endtime="20201110 08:34:16.754"></status>
</kw>
<msg timestamp="20201110 08:34:16.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.467" endtime="20201110 08:34:16.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.758" endtime="20201110 08:34:16.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.767" endtime="20201110 08:34:16.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.464" endtime="20201110 08:34:16.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.462" endtime="20201110 08:34:16.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.774" level="INFO">${RESULT} = [{'time': 0.022425069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.192999999999742e-05, 'source_diff': 8.192999999999742e-05}, {'time': 0.022513097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:16.770" endtime="20201110 08:34:16.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.789" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:16.775" endtime="20201110 08:34:16.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.794" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.792" endtime="20201110 08:34:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.796" level="INFO">VALUE: [8.192999999999742e-05, 8.14719999999991e-05, 8.170899999999925e-05, 8.198599999999917e-05, 8.216700000000104e-05, 8.173600000000239e-05, 8.152800000000085e-05, 8.136100000000202e-05, 8.190300000000122e-05, 8.133400000000235e-05, 8.188900000000165e-05, 8.19589999999995e-05, 8.183399999999938e-05, 8.140199999999778e-05, 8.219400000000071e-05, 8.198599999999917e-05, 8.198599999999917e-05, 8.174999999999849e-05, 8.148600000000214e-05, 8.145799999999953e-05, 8.201399999999831e-05, 8.224999999999899e-05, 8.173599999999892e-05, 8.208399999999963e-05, 8.194400000000046e-05, 8.220899999999975e-05, 8.145799999999953e-05, 8.16529999999975e-05, 8.143099999999986e-05, 8.193100000000036e-05, 8.137499999999812e-05, 8.15979999999987e-05, 8.181900000000034e-05, 8.177799999999763e-05, 8.130500000000027e-05, 8.19719999999996e-05, 8.187499999999862e-05, 8.190199999999828e-05, 8.156900000000009e-05, 8.150000000000171e-05, 8.152800000000085e-05, 8.145799999999953e-05, 8.18329999999999e-05, 8.226399999999856e-05, 8.21390000000019e-05, 8.225000000000246e-05, 8.174999999999849e-05, 8.216600000000157e-05, 8.175000000000196e-05, 8.12780000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.795" endtime="20201110 08:34:16.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.790" endtime="20201110 08:34:16.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.800" endtime="20201110 08:34:16.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.803" endtime="20201110 08:34:16.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.802" endtime="20201110 08:34:16.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.798" endtime="20201110 08:34:16.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.428" endtime="20201110 08:34:16.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.427" endtime="20201110 08:34:16.824"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.833" endtime="20201110 08:34:16.852"></status>
</kw>
<msg timestamp="20201110 08:34:16.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.832" endtime="20201110 08:34:16.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.853" endtime="20201110 08:34:16.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.856" endtime="20201110 08:34:16.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.829" endtime="20201110 08:34:16.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.827" endtime="20201110 08:34:16.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.866" endtime="20201110 08:34:17.152"></status>
</kw>
<msg timestamp="20201110 08:34:17.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.865" endtime="20201110 08:34:17.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.156" endtime="20201110 08:34:17.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.165" endtime="20201110 08:34:17.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.862" endtime="20201110 08:34:17.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.860" endtime="20201110 08:34:17.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.172" level="INFO">${RESULT} = [{'time': 0.022399444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.302699999999941e-05, 'source_diff': 8.302699999999941e-05}, {'time': 0.022496444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.168" endtime="20201110 08:34:17.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.186" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:17.173" endtime="20201110 08:34:17.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.190" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.189" endtime="20201110 08:34:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.193" level="INFO">VALUE: [8.302699999999941e-05, 8.308300000000116e-05, 8.301399999999931e-05, 8.304100000000245e-05, 8.258300000000066e-05, 8.286100000000005e-05, 8.240299999999826e-05, 8.236099999999955e-05, 8.273599999999992e-05, 8.252799999999838e-05, 8.236099999999955e-05, 8.26109999999998e-05, 8.288899999999919e-05, 8.268100000000111e-05, 8.29859999999967e-05, 8.326399999999956e-05, 8.237499999999912e-05, 8.26529999999985e-05, 8.262499999999937e-05, 8.276399999999906e-05, 8.229200000000117e-05, 8.268000000000164e-05, 8.302799999999888e-05, 8.295799999999756e-05, 8.323600000000042e-05, 8.312499999999987e-05, 8.29720000000006e-05, 8.276399999999906e-05, 8.248600000000314e-05, 8.286100000000005e-05, 8.249999999999924e-05, 8.275000000000296e-05, 8.31110000000003e-05, 8.238899999999869e-05, 8.255500000000152e-05, 8.319399999999824e-05, 8.30980000000002e-05, 8.287499999999962e-05, 8.263799999999946e-05, 8.234799999999945e-05, 8.256900000000109e-05, 8.265199999999903e-05, 8.236099999999955e-05, 8.298600000000017e-05, 8.29720000000006e-05, 8.279200000000167e-05, 8.252799999999838e-05, 8.32919999999987e-05, 8.281999999999734e-05, 8.252799999999838e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.192" endtime="20201110 08:34:17.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.187" endtime="20201110 08:34:17.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.197" endtime="20201110 08:34:17.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.200" endtime="20201110 08:34:17.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.199" endtime="20201110 08:34:17.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.195" endtime="20201110 08:34:17.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.825" endtime="20201110 08:34:17.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.825" endtime="20201110 08:34:17.221"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.230" endtime="20201110 08:34:17.250"></status>
</kw>
<msg timestamp="20201110 08:34:17.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.229" endtime="20201110 08:34:17.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.251" endtime="20201110 08:34:17.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.254" endtime="20201110 08:34:17.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.226" endtime="20201110 08:34:17.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.224" endtime="20201110 08:34:17.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.264" endtime="20201110 08:34:17.558"></status>
</kw>
<msg timestamp="20201110 08:34:17.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.263" endtime="20201110 08:34:17.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.563" endtime="20201110 08:34:17.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.571" endtime="20201110 08:34:17.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.260" endtime="20201110 08:34:17.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.258" endtime="20201110 08:34:17.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.578" level="INFO">${RESULT} = [{'time': 0.022890764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.420800000000228e-05, 'source_diff': 8.420800000000228e-05}, {'time': 0.022987792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.575" endtime="20201110 08:34:17.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.592" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:17.579" endtime="20201110 08:34:17.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.597" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.596" endtime="20201110 08:34:17.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.599" level="INFO">VALUE: [8.420800000000228e-05, 8.362500000000037e-05, 8.390200000000028e-05, 8.401400000000031e-05, 8.429100000000023e-05, 8.368000000000264e-05, 8.4153e-05, 8.338900000000316e-05, 8.340299999999926e-05, 8.391599999999985e-05, 8.419399999999924e-05, 8.337500000000012e-05, 8.38330000000019e-05, 8.379200000000267e-05, 8.39729999999976e-05, 8.36529999999995e-05, 8.334700000000098e-05, 8.391699999999933e-05, 8.39859999999977e-05, 8.354199999999895e-05, 8.411099999999783e-05, 8.338800000000021e-05, 8.358399999999766e-05, 8.427800000000013e-05, 8.376300000000059e-05, 8.331900000000184e-05, 8.369399999999874e-05, 8.343000000000239e-05, 8.406900000000259e-05, 8.358399999999766e-05, 8.362500000000037e-05, 8.3459000000001e-05, 8.331900000000184e-05, 8.377799999999963e-05, 8.409700000000173e-05, 8.404200000000292e-05, 8.336099999999708e-05, 8.377799999999963e-05, 8.32919999999987e-05, 8.408400000000163e-05, 8.376300000000059e-05, 8.404099999999998e-05, 8.359700000000123e-05, 8.370800000000178e-05, 8.381900000000234e-05, 8.372200000000135e-05, 8.370800000000178e-05, 8.420799999999881e-05, 8.334700000000098e-05, 8.340299999999926e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.598" endtime="20201110 08:34:17.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.593" endtime="20201110 08:34:17.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.603" endtime="20201110 08:34:17.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.607" endtime="20201110 08:34:17.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.605" endtime="20201110 08:34:17.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.601" endtime="20201110 08:34:17.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.222" endtime="20201110 08:34:17.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.222" endtime="20201110 08:34:17.627"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.637" endtime="20201110 08:34:17.655"></status>
</kw>
<msg timestamp="20201110 08:34:17.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.635" endtime="20201110 08:34:17.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.656" endtime="20201110 08:34:17.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.659" endtime="20201110 08:34:17.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.632" endtime="20201110 08:34:17.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.630" endtime="20201110 08:34:17.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.669" endtime="20201110 08:34:17.955"></status>
</kw>
<msg timestamp="20201110 08:34:17.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.667" endtime="20201110 08:34:17.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.959" endtime="20201110 08:34:17.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.968" endtime="20201110 08:34:17.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.665" endtime="20201110 08:34:17.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.663" endtime="20201110 08:34:17.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.975" level="INFO">${RESULT} = [{'time': 0.022506125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.466700000000008e-05, 'source_diff': 8.466700000000008e-05}, {'time': 0.022602181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.971" endtime="20201110 08:34:17.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.988" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:17.976" endtime="20201110 08:34:17.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.993" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.992" endtime="20201110 08:34:17.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.996" level="INFO">VALUE: [8.466700000000008e-05, 8.480599999999977e-05, 8.458399999999866e-05, 8.502800000000088e-05, 8.501399999999784e-05, 8.526300000000209e-05, 8.437500000000112e-05, 8.46249999999979e-05, 8.437500000000112e-05, 8.46110000000018e-05, 8.456899999999962e-05, 8.462500000000137e-05, 8.513900000000144e-05, 8.497199999999913e-05, 8.490199999999781e-05, 8.474999999999802e-05, 8.44309999999994e-05, 8.4846999999999e-05, 8.448600000000167e-05, 8.502799999999741e-05, 8.441699999999983e-05, 8.487500000000162e-05, 8.438800000000121e-05, 8.427800000000013e-05, 8.463900000000094e-05, 8.468000000000017e-05, 8.494399999999999e-05, 8.463899999999747e-05, 8.502799999999741e-05, 8.4846999999999e-05, 8.46530000000005e-05, 8.473599999999845e-05, 8.509700000000273e-05, 8.486099999999858e-05, 8.499999999999827e-05, 8.44309999999994e-05, 8.451399999999734e-05, 8.516700000000058e-05, 8.495899999999904e-05, 8.42919999999997e-05, 8.525000000000199e-05, 8.527800000000113e-05, 8.515199999999806e-05, 8.470799999999931e-05, 8.497199999999913e-05, 8.46110000000018e-05, 8.431899999999937e-05, 8.491700000000033e-05, 8.431899999999937e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.994" endtime="20201110 08:34:17.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.989" endtime="20201110 08:34:17.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.000" endtime="20201110 08:34:18.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.003" endtime="20201110 08:34:18.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.002" endtime="20201110 08:34:18.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.998" endtime="20201110 08:34:18.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.628" endtime="20201110 08:34:18.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.628" endtime="20201110 08:34:18.024"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.033" endtime="20201110 08:34:18.052"></status>
</kw>
<msg timestamp="20201110 08:34:18.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.032" endtime="20201110 08:34:18.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.054" endtime="20201110 08:34:18.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.057" endtime="20201110 08:34:18.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.029" endtime="20201110 08:34:18.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.027" endtime="20201110 08:34:18.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.067" endtime="20201110 08:34:18.353"></status>
</kw>
<msg timestamp="20201110 08:34:18.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.065" endtime="20201110 08:34:18.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.357" endtime="20201110 08:34:18.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.366" endtime="20201110 08:34:18.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.063" endtime="20201110 08:34:18.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.061" endtime="20201110 08:34:18.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.374" level="INFO">${RESULT} = [{'time': 0.023119458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.544400000000049e-05, 'source_diff': 8.544400000000049e-05}, {'time': 0.023215486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.370" endtime="20201110 08:34:18.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.389" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:18.375" endtime="20201110 08:34:18.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.394" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.393" endtime="20201110 08:34:18.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.396" level="INFO">VALUE: [8.544400000000049e-05, 8.570800000000031e-05, 8.5847e-05, 8.59859999999997e-05, 8.618100000000115e-05, 8.627800000000213e-05, 8.554200000000095e-05, 8.595900000000004e-05, 8.561099999999933e-05, 8.566700000000108e-05, 8.538800000000221e-05, 8.570899999999979e-05, 8.606900000000112e-05, 8.550000000000224e-05, 8.554099999999801e-05, 8.529099999999776e-05, 8.576400000000206e-05, 8.543000000000092e-05, 8.609700000000026e-05, 8.565200000000203e-05, 8.551399999999834e-05, 8.545800000000006e-05, 8.54310000000004e-05, 8.552800000000138e-05, 8.602799999999841e-05, 8.557000000000009e-05, 8.548600000000267e-05, 8.53469999999995e-05, 8.552699999999844e-05, 8.626400000000256e-05, 8.575000000000249e-05, 8.588899999999872e-05, 8.575000000000249e-05, 8.597200000000013e-05, 8.577799999999816e-05, 8.536100000000255e-05, 8.604199999999798e-05, 8.604199999999798e-05, 8.54310000000004e-05, 8.619400000000124e-05, 8.536099999999908e-05, 8.588899999999872e-05, 8.629199999999823e-05, 8.536099999999908e-05, 8.529199999999723e-05, 8.586099999999958e-05, 8.56119999999988e-05, 8.569400000000074e-05, 8.538900000000169e-05, 8.601399999999884e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.395" endtime="20201110 08:34:18.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.390" endtime="20201110 08:34:18.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.400" endtime="20201110 08:34:18.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.404" endtime="20201110 08:34:18.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.402" endtime="20201110 08:34:18.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.398" endtime="20201110 08:34:18.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.025" endtime="20201110 08:34:18.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.025" endtime="20201110 08:34:18.425"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.434" endtime="20201110 08:34:18.452"></status>
</kw>
<msg timestamp="20201110 08:34:18.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.432" endtime="20201110 08:34:18.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.454" endtime="20201110 08:34:18.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.457" endtime="20201110 08:34:18.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.429" endtime="20201110 08:34:18.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.427" endtime="20201110 08:34:18.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.467" endtime="20201110 08:34:18.753"></status>
</kw>
<msg timestamp="20201110 08:34:18.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022450917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.465" endtime="20201110 08:34:18.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022450917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.757" endtime="20201110 08:34:18.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.766" endtime="20201110 08:34:18.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.463" endtime="20201110 08:34:18.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.461" endtime="20201110 08:34:18.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.773" level="INFO">${RESULT} = [{'time': 0.022538222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.730499999999933e-05, 'source_diff': 8.730499999999933e-05}, {'time': 0.022632278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.769" endtime="20201110 08:34:18.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.787" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:18.774" endtime="20201110 08:34:18.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.791" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.790" endtime="20201110 08:34:18.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.794" level="INFO">VALUE: [8.730499999999933e-05, 8.705599999999855e-05, 8.705599999999855e-05, 8.698700000000018e-05, 8.729199999999923e-05, 8.677699999999969e-05, 8.673699999999993e-05, 8.669500000000122e-05, 8.665199999999956e-05, 8.636100000000008e-05, 8.680499999999883e-05, 8.675000000000002e-05, 8.641699999999836e-05, 8.649999999999977e-05, 8.670800000000131e-05, 8.725000000000052e-05, 8.702799999999941e-05, 8.673600000000045e-05, 8.693099999999843e-05, 8.715200000000006e-05, 8.691699999999886e-05, 8.71120000000003e-05, 8.663899999999947e-05, 8.676400000000306e-05, 8.674999999999655e-05, 8.643000000000192e-05, 8.692999999999895e-05, 8.624999999999952e-05, 8.676399999999959e-05, 8.679199999999873e-05, 8.719400000000224e-05, 8.641699999999836e-05, 8.66669999999986e-05, 8.700000000000027e-05, 8.64310000000014e-05, 8.712499999999693e-05, 8.641700000000183e-05, 8.71799999999992e-05, 8.673600000000045e-05, 8.640300000000226e-05, 8.634799999999998e-05, 8.676300000000012e-05, 8.630600000000127e-05, 8.71799999999992e-05, 8.655499999999858e-05, 8.677799999999916e-05, 8.645800000000106e-05, 8.704200000000245e-05, 8.669400000000174e-05, 8.693000000000242e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.792" endtime="20201110 08:34:18.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.787" endtime="20201110 08:34:18.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.797" endtime="20201110 08:34:18.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.801" endtime="20201110 08:34:18.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.799" endtime="20201110 08:34:18.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.796" endtime="20201110 08:34:18.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.426" endtime="20201110 08:34:18.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.425" endtime="20201110 08:34:18.822"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.831" endtime="20201110 08:34:18.849"></status>
</kw>
<msg timestamp="20201110 08:34:18.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.829" endtime="20201110 08:34:18.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.850" endtime="20201110 08:34:18.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.853" endtime="20201110 08:34:18.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.827" endtime="20201110 08:34:18.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.824" endtime="20201110 08:34:18.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.863" endtime="20201110 08:34:19.149"></status>
</kw>
<msg timestamp="20201110 08:34:19.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.862" endtime="20201110 08:34:19.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022410069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.154" endtime="20201110 08:34:19.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.163" endtime="20201110 08:34:19.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.859" endtime="20201110 08:34:19.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.857" endtime="20201110 08:34:19.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.170" level="INFO">${RESULT} = [{'time': 0.022410069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.765200000000056e-05, 'source_diff': 8.765200000000056e-05}, {'time': 0.022509125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.166" endtime="20201110 08:34:19.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:19.171" endtime="20201110 08:34:19.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.188" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.187" endtime="20201110 08:34:19.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.191" level="INFO">VALUE: [8.765200000000056e-05, 8.750000000000077e-05, 8.820899999999882e-05, 8.763900000000047e-05, 8.827800000000066e-05, 8.73059999999988e-05, 8.761099999999786e-05, 8.76669999999996e-05, 8.73059999999988e-05, 8.804100000000051e-05, 8.738900000000022e-05, 8.78189999999994e-05, 8.736100000000108e-05, 8.790300000000029e-05, 8.769499999999875e-05, 8.752799999999991e-05, 8.81800000000002e-05, 8.737500000000065e-05, 8.780499999999983e-05, 8.791700000000333e-05, 8.788900000000072e-05, 8.801400000000084e-05, 8.742999999999945e-05, 8.783399999999844e-05, 8.740299999999979e-05, 8.772299999999789e-05, 8.769499999999875e-05, 8.774999999999755e-05, 8.768100000000265e-05, 8.736100000000108e-05, 8.730499999999933e-05, 8.793099999999943e-05, 8.809700000000226e-05, 8.777800000000016e-05, 8.747199999999816e-05, 8.76669999999996e-05, 8.736099999999761e-05, 8.826400000000109e-05, 8.747199999999816e-05, 8.762499999999743e-05, 8.818099999999968e-05, 8.790300000000029e-05, 8.782000000000234e-05, 8.819499999999925e-05, 8.824999999999805e-05, 8.783399999999844e-05, 8.801399999999737e-05, 8.742999999999945e-05, 8.775000000000102e-05, 8.769399999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.189" endtime="20201110 08:34:19.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.184" endtime="20201110 08:34:19.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.194" endtime="20201110 08:34:19.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.198" endtime="20201110 08:34:19.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.196" endtime="20201110 08:34:19.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.193" endtime="20201110 08:34:19.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.823" endtime="20201110 08:34:19.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.822" endtime="20201110 08:34:19.219"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.228" endtime="20201110 08:34:19.246"></status>
</kw>
<msg timestamp="20201110 08:34:19.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.226" endtime="20201110 08:34:19.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.248" endtime="20201110 08:34:19.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.251" endtime="20201110 08:34:19.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.224" endtime="20201110 08:34:19.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.221" endtime="20201110 08:34:19.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.261" endtime="20201110 08:34:19.547"></status>
</kw>
<msg timestamp="20201110 08:34:19.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02262775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:19.259" endtime="20201110 08:34:19.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02262775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:19.551" endtime="20201110 08:34:19.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.560" endtime="20201110 08:34:19.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.257" endtime="20201110 08:34:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.255" endtime="20201110 08:34:19.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.566" level="INFO">${RESULT} = [{'time': 0.02262775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.920799999999687e-05, 'source_diff': 8.920799999999687e-05}, {'time': 0.022727792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:19.563" endtime="20201110 08:34:19.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.580" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:19.567" endtime="20201110 08:34:19.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.584" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.583" endtime="20201110 08:34:19.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.586" level="INFO">VALUE: [8.920799999999687e-05, 8.890300000000129e-05, 8.859699999999929e-05, 8.870899999999932e-05, 8.873600000000245e-05, 8.844400000000002e-05, 8.850000000000177e-05, 8.909699999999979e-05, 8.841599999999741e-05, 8.872200000000288e-05, 8.905600000000055e-05, 8.852800000000091e-05, 8.911100000000283e-05, 8.91389999999985e-05, 8.890300000000129e-05, 8.888899999999825e-05, 8.927800000000166e-05, 8.895800000000009e-05, 8.833399999999894e-05, 8.873700000000193e-05, 8.888900000000172e-05, 8.883299999999997e-05, 8.884699999999954e-05, 8.877700000000169e-05, 8.855500000000058e-05, 8.908300000000022e-05, 8.906899999999718e-05, 8.88190000000004e-05, 8.855500000000058e-05, 8.877800000000116e-05, 8.856999999999962e-05, 8.829200000000023e-05, 8.879100000000126e-05, 8.845900000000254e-05, 8.919500000000025e-05, 8.836099999999861e-05, 8.858399999999919e-05, 8.887500000000215e-05, 8.859699999999929e-05, 8.91800000000012e-05, 8.851400000000134e-05, 8.862499999999843e-05, 8.847199999999916e-05, 8.856899999999668e-05, 8.851400000000134e-05, 8.91670000000011e-05, 8.927800000000166e-05, 8.895899999999957e-05, 8.927799999999819e-05, 8.922199999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.585" endtime="20201110 08:34:19.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.581" endtime="20201110 08:34:19.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.590" endtime="20201110 08:34:19.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.593" endtime="20201110 08:34:19.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.592" endtime="20201110 08:34:19.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.588" endtime="20201110 08:34:19.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.220" endtime="20201110 08:34:19.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.219" endtime="20201110 08:34:19.614"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.623" endtime="20201110 08:34:19.641"></status>
</kw>
<msg timestamp="20201110 08:34:19.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.621" endtime="20201110 08:34:19.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.643" endtime="20201110 08:34:19.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.646" endtime="20201110 08:34:19.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.619" endtime="20201110 08:34:19.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.617" endtime="20201110 08:34:19.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.656" endtime="20201110 08:34:19.967"></status>
</kw>
<msg timestamp="20201110 08:34:19.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.654" endtime="20201110 08:34:19.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021616458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.971" endtime="20201110 08:34:19.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.980" endtime="20201110 08:34:19.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.652" endtime="20201110 08:34:19.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.650" endtime="20201110 08:34:19.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.987" level="INFO">${RESULT} = [{'time': 0.021616458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.015200000000306e-05, 'source_diff': 9.015200000000306e-05}, {'time': 0.021714444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.983" endtime="20201110 08:34:19.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.002" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:19.988" endtime="20201110 08:34:20.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.007" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.005" endtime="20201110 08:34:20.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.009" level="INFO">VALUE: [9.015200000000306e-05, 8.972200000000041e-05, 8.941600000000188e-05, 9.01389999999995e-05, 8.938899999999875e-05, 8.992999999999848e-05, 8.950000000000277e-05, 8.981899999999793e-05, 9.004200000000198e-05, 8.933300000000047e-05, 9.004200000000198e-05, 8.98199999999974e-05, 8.929200000000123e-05, 9.004200000000198e-05, 8.952800000000191e-05, 9.002799999999894e-05, 8.982000000000087e-05, 9.025000000000005e-05, 8.930499999999786e-05, 9.005500000000208e-05, 8.96800000000017e-05, 9.009700000000079e-05, 9.011100000000036e-05, 9.002799999999894e-05, 8.955600000000105e-05, 8.993099999999796e-05, 8.940300000000179e-05, 8.993100000000143e-05, 9.023599999999701e-05, 8.99869999999997e-05, 9.026399999999962e-05, 8.951400000000234e-05, 8.975000000000302e-05, 8.965299999999857e-05, 9.024999999999658e-05, 8.976299999999965e-05, 9.005500000000208e-05, 8.995799999999762e-05, 8.993000000000195e-05, 8.966599999999866e-05, 8.975000000000302e-05, 8.944400000000102e-05, 8.941699999999789e-05, 8.963900000000247e-05, 9.025000000000005e-05, 9.015300000000254e-05, 9.027799999999919e-05, 8.987499999999968e-05, 9.020900000000082e-05, 9.005600000000155e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.008" endtime="20201110 08:34:20.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.003" endtime="20201110 08:34:20.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.013" endtime="20201110 08:34:20.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.016" endtime="20201110 08:34:20.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.015" endtime="20201110 08:34:20.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.011" endtime="20201110 08:34:20.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.615" endtime="20201110 08:34:20.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.614" endtime="20201110 08:34:20.037"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.046" endtime="20201110 08:34:20.065"></status>
</kw>
<msg timestamp="20201110 08:34:20.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.045" endtime="20201110 08:34:20.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.067" endtime="20201110 08:34:20.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.069" endtime="20201110 08:34:20.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.042" endtime="20201110 08:34:20.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.040" endtime="20201110 08:34:20.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.080" endtime="20201110 08:34:20.365"></status>
</kw>
<msg timestamp="20201110 08:34:20.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.078" endtime="20201110 08:34:20.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.370" endtime="20201110 08:34:20.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.378" endtime="20201110 08:34:20.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.075" endtime="20201110 08:34:20.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.073" endtime="20201110 08:34:20.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.385" level="INFO">${RESULT} = [{'time': 0.022509986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.08329999999985e-05, 'source_diff': 9.08329999999985e-05}, {'time': 0.022606083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:20.382" endtime="20201110 08:34:20.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.399" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:20.386" endtime="20201110 08:34:20.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.404" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.403" endtime="20201110 08:34:20.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.407" level="INFO">VALUE: [9.08329999999985e-05, 9.045799999999812e-05, 9.120900000000182e-05, 9.0639e-05, 9.047200000000116e-05, 9.11520000000006e-05, 9.115300000000007e-05, 9.066600000000313e-05, 9.040199999999984e-05, 9.0639e-05, 9.084699999999807e-05, 9.091700000000286e-05, 9.109700000000179e-05, 9.104199999999951e-05, 9.093099999999896e-05, 9.055600000000205e-05, 9.106999999999865e-05, 9.066699999999914e-05, 9.111200000000083e-05, 9.032000000000137e-05, 9.0639e-05, 9.033400000000094e-05, 9.065299999999957e-05, 9.129199999999976e-05, 9.097200000000166e-05, 9.037500000000018e-05, 9.08329999999985e-05, 9.102700000000047e-05, 9.037500000000018e-05, 9.076400000000012e-05, 9.125000000000105e-05, 9.10000000000008e-05, 9.038899999999975e-05, 9.109700000000179e-05, 9.08199999999984e-05, 9.123600000000148e-05, 9.062500000000043e-05, 9.037500000000018e-05, 9.111200000000083e-05, 9.095900000000157e-05, 9.042999999999898e-05, 9.034700000000104e-05, 9.097199999999819e-05, 9.091600000000338e-05, 9.045799999999812e-05, 9.091699999999939e-05, 9.106900000000265e-05, 9.072199999999794e-05, 9.093099999999896e-05, 9.066699999999914e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.405" endtime="20201110 08:34:20.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.400" endtime="20201110 08:34:20.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.411" endtime="20201110 08:34:20.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.414" endtime="20201110 08:34:20.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.413" endtime="20201110 08:34:20.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.409" endtime="20201110 08:34:20.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.038" endtime="20201110 08:34:20.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.038" endtime="20201110 08:34:20.435"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.444" endtime="20201110 08:34:20.463"></status>
</kw>
<msg timestamp="20201110 08:34:20.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.443" endtime="20201110 08:34:20.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.465" endtime="20201110 08:34:20.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.467" endtime="20201110 08:34:20.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.440" endtime="20201110 08:34:20.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.438" endtime="20201110 08:34:20.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.478" endtime="20201110 08:34:20.764"></status>
</kw>
<msg timestamp="20201110 08:34:20.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.476" endtime="20201110 08:34:20.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.768" endtime="20201110 08:34:20.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.777" endtime="20201110 08:34:20.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.473" endtime="20201110 08:34:20.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.472" endtime="20201110 08:34:20.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.784" level="INFO">${RESULT} = [{'time': 0.022959847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152799999999697e-05, 'source_diff': 9.152799999999697e-05}, {'time': 0.023058917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.780" endtime="20201110 08:34:20.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.798" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:20.785" endtime="20201110 08:34:20.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.802" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.801" endtime="20201110 08:34:20.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.805" level="INFO">VALUE: [9.152799999999697e-05, 9.154200000000001e-05, 9.193099999999996e-05, 9.229199999999729e-05, 9.216700000000064e-05, 9.158400000000219e-05, 9.136200000000108e-05, 9.211099999999889e-05, 9.16939999999998e-05, 9.211099999999889e-05, 9.190200000000134e-05, 9.154100000000054e-05, 9.154200000000001e-05, 9.191700000000039e-05, 9.20000000000018e-05, 9.176400000000112e-05, 9.193000000000048e-05, 9.140300000000032e-05, 9.175000000000155e-05, 9.154200000000001e-05, 9.137500000000118e-05, 9.216700000000064e-05, 9.147299999999817e-05, 9.193099999999996e-05, 9.191599999999744e-05, 9.142999999999998e-05, 9.191600000000091e-05, 9.159700000000229e-05, 9.172200000000241e-05, 9.141699999999989e-05, 9.16939999999998e-05, 9.141699999999989e-05, 9.197200000000266e-05, 9.165300000000057e-05, 9.205600000000008e-05, 9.152800000000044e-05, 9.170900000000232e-05, 9.162500000000143e-05, 9.176399999999765e-05, 9.138900000000075e-05, 9.14719999999987e-05, 9.184699999999907e-05, 9.209699999999932e-05, 9.138899999999728e-05, 9.138900000000075e-05, 9.216699999999717e-05, 9.190300000000082e-05, 9.180500000000036e-05, 9.211099999999889e-05, 9.170800000000284e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.803" endtime="20201110 08:34:20.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.799" endtime="20201110 08:34:20.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.809" endtime="20201110 08:34:20.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.812" endtime="20201110 08:34:20.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.811" endtime="20201110 08:34:20.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.807" endtime="20201110 08:34:20.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.436" endtime="20201110 08:34:20.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.436" endtime="20201110 08:34:20.833"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.842" endtime="20201110 08:34:20.861"></status>
</kw>
<msg timestamp="20201110 08:34:20.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.840" endtime="20201110 08:34:20.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.863" endtime="20201110 08:34:20.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.866" endtime="20201110 08:34:20.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.838" endtime="20201110 08:34:20.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.836" endtime="20201110 08:34:20.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.876" endtime="20201110 08:34:21.162"></status>
</kw>
<msg timestamp="20201110 08:34:21.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.874" endtime="20201110 08:34:21.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.166" endtime="20201110 08:34:21.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.175" endtime="20201110 08:34:21.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.872" endtime="20201110 08:34:21.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.870" endtime="20201110 08:34:21.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.182" level="INFO">${RESULT} = [{'time': 0.022724542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309799999999979e-05, 'source_diff': 9.309799999999979e-05}, {'time': 0.0228245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:21.178" endtime="20201110 08:34:21.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.196" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:21.183" endtime="20201110 08:34:21.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.200" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.199" endtime="20201110 08:34:21.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.203" level="INFO">VALUE: [9.309799999999979e-05, 9.318100000000121e-05, 9.309700000000032e-05, 9.243100000000046e-05, 9.265300000000157e-05, 9.31529999999986e-05, 9.261099999999939e-05, 9.263899999999853e-05, 9.236099999999914e-05, 9.248599999999926e-05, 9.299999999999933e-05, 9.316600000000216e-05, 9.323600000000001e-05, 9.29720000000002e-05, 9.318000000000173e-05, 9.255600000000058e-05, 9.230600000000033e-05, 9.279200000000126e-05, 9.293100000000096e-05, 9.236100000000261e-05, 9.304199999999804e-05, 9.254199999999754e-05, 9.301400000000237e-05, 9.25139999999984e-05, 9.254200000000101e-05, 9.274999999999908e-05, 9.243000000000098e-05, 9.256900000000068e-05, 9.290200000000234e-05, 9.311100000000336e-05, 9.238899999999828e-05, 9.243000000000098e-05, 9.311099999999989e-05, 9.236099999999914e-05, 9.295800000000062e-05, 9.265199999999862e-05, 9.236100000000261e-05, 9.304200000000151e-05, 9.243100000000046e-05, 9.283399999999997e-05, 9.299999999999933e-05, 9.277800000000169e-05, 9.240200000000184e-05, 9.255499999999764e-05, 9.30000000000028e-05, 9.317999999999826e-05, 9.244400000000055e-05, 9.291600000000191e-05, 9.309700000000032e-05, 9.2333e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.202" endtime="20201110 08:34:21.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.197" endtime="20201110 08:34:21.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.207" endtime="20201110 08:34:21.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.210" endtime="20201110 08:34:21.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.209" endtime="20201110 08:34:21.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.205" endtime="20201110 08:34:21.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.834" endtime="20201110 08:34:21.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.833" endtime="20201110 08:34:21.231"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.240" endtime="20201110 08:34:21.259"></status>
</kw>
<msg timestamp="20201110 08:34:21.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.238" endtime="20201110 08:34:21.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.261" endtime="20201110 08:34:21.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.263" endtime="20201110 08:34:21.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.236" endtime="20201110 08:34:21.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.234" endtime="20201110 08:34:21.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.274" endtime="20201110 08:34:21.559"></status>
</kw>
<msg timestamp="20201110 08:34:21.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.272" endtime="20201110 08:34:21.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022648111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.563" endtime="20201110 08:34:21.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.572" endtime="20201110 08:34:21.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.270" endtime="20201110 08:34:21.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.268" endtime="20201110 08:34:21.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.579" level="INFO">${RESULT} = [{'time': 0.022741944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.38330000000015e-05, 'source_diff': 9.38330000000015e-05}, {'time': 0.022848986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:21.576" endtime="20201110 08:34:21.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.594" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:21.580" endtime="20201110 08:34:21.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.599" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.598" endtime="20201110 08:34:21.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.601" level="INFO">VALUE: [9.38330000000015e-05, 9.388900000000325e-05, 9.413900000000003e-05, 9.422199999999797e-05, 9.363899999999953e-05, 9.405499999999914e-05, 9.344500000000103e-05, 9.358400000000072e-05, 9.377800000000269e-05, 9.404099999999957e-05, 9.405600000000208e-05, 9.354099999999907e-05, 9.386100000000064e-05, 9.340199999999937e-05, 9.333299999999753e-05, 9.330499999999839e-05, 9.377800000000269e-05, 9.409699999999785e-05, 9.359699999999735e-05, 9.388899999999978e-05, 9.406999999999818e-05, 9.377799999999922e-05, 9.408300000000175e-05, 9.354199999999854e-05, 9.41529999999996e-05, 9.39590000000011e-05, 9.34590000000006e-05, 9.412500000000046e-05, 9.331900000000143e-05, 9.369500000000128e-05, 9.405599999999861e-05, 9.352799999999897e-05, 9.372200000000094e-05, 9.372200000000094e-05, 9.400000000000033e-05, 9.422200000000144e-05, 9.341700000000189e-05, 9.375000000000008e-05, 9.426400000000015e-05, 9.341700000000189e-05, 9.340300000000232e-05, 9.390299999999935e-05, 9.392999999999901e-05, 9.337499999999971e-05, 9.333299999999753e-05, 9.377799999999922e-05, 9.404099999999957e-05, 9.351400000000287e-05, 9.408300000000175e-05, 9.352800000000244e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.600" endtime="20201110 08:34:21.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.595" endtime="20201110 08:34:21.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.605" endtime="20201110 08:34:21.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.609" endtime="20201110 08:34:21.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.607" endtime="20201110 08:34:21.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.603" endtime="20201110 08:34:21.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.232" endtime="20201110 08:34:21.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.231" endtime="20201110 08:34:21.629"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.638" endtime="20201110 08:34:21.658"></status>
</kw>
<msg timestamp="20201110 08:34:21.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.637" endtime="20201110 08:34:21.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.659" endtime="20201110 08:34:21.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.662" endtime="20201110 08:34:21.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.634" endtime="20201110 08:34:21.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.632" endtime="20201110 08:34:21.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.672" endtime="20201110 08:34:21.959"></status>
</kw>
<msg timestamp="20201110 08:34:21.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.671" endtime="20201110 08:34:21.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.963" endtime="20201110 08:34:21.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.972" endtime="20201110 08:34:21.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.668" endtime="20201110 08:34:21.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.666" endtime="20201110 08:34:21.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.979" level="INFO">${RESULT} = [{'time': 0.022273444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.483299999999903e-05, 'source_diff': 9.483299999999903e-05}, {'time': 0.022376569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.975" endtime="20201110 08:34:21.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.992" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:21.980" endtime="20201110 08:34:21.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.997" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.996" endtime="20201110 08:34:21.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.000" level="INFO">VALUE: [9.483299999999903e-05, 9.53469999999991e-05, 9.466699999999967e-05, 9.493099999999949e-05, 9.479199999999979e-05, 9.518099999999974e-05, 9.476400000000065e-05, 9.433400000000147e-05, 9.486099999999817e-05, 9.486099999999817e-05, 9.45140000000004e-05, 9.483299999999903e-05, 9.529100000000082e-05, 9.495799999999915e-05, 9.519399999999983e-05, 9.443000000000298e-05, 9.529199999999682e-05, 9.523599999999854e-05, 9.495799999999915e-05, 9.455599999999911e-05, 9.486100000000164e-05, 9.483299999999903e-05, 9.493099999999949e-05, 9.519499999999931e-05, 9.501399999999743e-05, 9.511100000000189e-05, 9.477800000000022e-05, 9.508299999999928e-05, 9.461100000000139e-05, 9.525000000000158e-05, 9.449999999999736e-05, 9.448600000000126e-05, 9.461100000000139e-05, 9.473600000000151e-05, 9.440299999999985e-05, 9.513899999999756e-05, 9.518099999999974e-05, 9.48469999999986e-05, 9.522200000000244e-05, 9.459700000000182e-05, 9.493000000000001e-05, 9.461100000000139e-05, 9.45140000000004e-05, 9.436200000000061e-05, 9.46660000000002e-05, 9.467999999999976e-05, 9.437500000000071e-05, 9.45140000000004e-05, 9.491699999999992e-05, 9.490300000000035e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.998" endtime="20201110 08:34:22.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.993" endtime="20201110 08:34:22.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.004" endtime="20201110 08:34:22.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.007" endtime="20201110 08:34:22.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.006" endtime="20201110 08:34:22.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.002" endtime="20201110 08:34:22.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.630" endtime="20201110 08:34:22.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.630" endtime="20201110 08:34:22.028"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.037" endtime="20201110 08:34:22.056"></status>
</kw>
<msg timestamp="20201110 08:34:22.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.035" endtime="20201110 08:34:22.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.058" endtime="20201110 08:34:22.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.060" endtime="20201110 08:34:22.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.033" endtime="20201110 08:34:22.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.031" endtime="20201110 08:34:22.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.071" endtime="20201110 08:34:22.356"></status>
</kw>
<msg timestamp="20201110 08:34:22.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.069" endtime="20201110 08:34:22.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.360" endtime="20201110 08:34:22.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.369" endtime="20201110 08:34:22.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.066" endtime="20201110 08:34:22.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.065" endtime="20201110 08:34:22.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.376" level="INFO">${RESULT} = [{'time': 0.022390194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.601299999999896e-05, 'source_diff': 9.601299999999896e-05}, {'time': 0.022491222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.372" endtime="20201110 08:34:22.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.390" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:22.377" endtime="20201110 08:34:22.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.395" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.394" endtime="20201110 08:34:22.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.397" level="INFO">VALUE: [9.601299999999896e-05, 9.541600000000094e-05, 9.622199999999997e-05, 9.59720000000032e-05, 9.626400000000215e-05, 9.60140000000019e-05, 9.58339999999995e-05, 9.605600000000061e-05, 9.537500000000171e-05, 9.563900000000153e-05, 9.533400000000247e-05, 9.573599999999904e-05, 9.584700000000307e-05, 9.57079999999999e-05, 9.591599999999798e-05, 9.583300000000003e-05, 9.616599999999823e-05, 9.577799999999775e-05, 9.558299999999978e-05, 9.54859999999988e-05, 9.574999999999861e-05, 9.608300000000028e-05, 9.570899999999938e-05, 9.6027999999998e-05, 9.556999999999968e-05, 9.626399999999868e-05, 9.545899999999913e-05, 9.543099999999999e-05, 9.541600000000094e-05, 9.536200000000161e-05, 9.597199999999972e-05, 9.597199999999972e-05, 9.629199999999782e-05, 9.568000000000076e-05, 9.581900000000046e-05, 9.618000000000126e-05, 9.611099999999942e-05, 9.572199999999947e-05, 9.626400000000215e-05, 9.595800000000015e-05, 9.590200000000187e-05, 9.570900000000285e-05, 9.574999999999861e-05, 9.552800000000097e-05, 9.559699999999935e-05, 9.609799999999932e-05, 9.615199999999866e-05, 9.568000000000076e-05, 9.619399999999736e-05, 9.540200000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.396" endtime="20201110 08:34:22.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.391" endtime="20201110 08:34:22.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.401" endtime="20201110 08:34:22.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.405" endtime="20201110 08:34:22.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.403" endtime="20201110 08:34:22.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.399" endtime="20201110 08:34:22.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.029" endtime="20201110 08:34:22.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.028" endtime="20201110 08:34:22.426"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.436" endtime="20201110 08:34:22.455"></status>
</kw>
<msg timestamp="20201110 08:34:22.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.434" endtime="20201110 08:34:22.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.457" endtime="20201110 08:34:22.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.459" endtime="20201110 08:34:22.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.431" endtime="20201110 08:34:22.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.429" endtime="20201110 08:34:22.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.470" endtime="20201110 08:34:22.755"></status>
</kw>
<msg timestamp="20201110 08:34:22.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.468" endtime="20201110 08:34:22.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023743028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.760" endtime="20201110 08:34:22.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.768" endtime="20201110 08:34:22.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.465" endtime="20201110 08:34:22.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.464" endtime="20201110 08:34:22.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.775" level="INFO">${RESULT} = [{'time': 0.023840319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729099999999935e-05, 'source_diff': 9.729099999999935e-05}, {'time': 0.023950375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.772" endtime="20201110 08:34:22.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.789" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:22.776" endtime="20201110 08:34:22.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.794" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.793" endtime="20201110 08:34:22.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.796" level="INFO">VALUE: [9.729099999999935e-05, 9.711100000000042e-05, 9.711100000000042e-05, 9.697199999999725e-05, 9.643100000000099e-05, 9.654199999999807e-05, 9.630600000000086e-05, 9.720900000000088e-05, 9.68340000000005e-05, 9.670900000000038e-05, 9.682000000000093e-05, 9.686199999999964e-05, 9.699999999999986e-05, 9.712499999999999e-05, 9.66660000000022e-05, 9.640300000000185e-05, 9.709699999999738e-05, 9.663899999999906e-05, 9.691700000000192e-05, 9.661099999999992e-05, 9.640299999999838e-05, 9.71669999999987e-05, 9.723599999999707e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.659700000000035e-05, 9.677699999999928e-05, 9.669399999999786e-05, 9.726399999999968e-05, 9.699999999999986e-05, 9.691599999999898e-05, 9.701399999999943e-05, 9.70409999999991e-05, 9.674999999999961e-05, 9.659700000000035e-05, 9.691700000000192e-05, 9.668100000000124e-05, 9.673600000000004e-05, 9.636099999999967e-05, 9.662499999999949e-05, 9.726300000000021e-05, 9.701399999999943e-05, 9.713899999999956e-05, 9.686100000000017e-05, 9.631900000000096e-05, 9.688899999999931e-05, 9.679099999999885e-05, 9.638899999999881e-05, 9.644399999999761e-05, 9.63470000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.795" endtime="20201110 08:34:22.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.790" endtime="20201110 08:34:22.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.800" endtime="20201110 08:34:22.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.804" endtime="20201110 08:34:22.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.802" endtime="20201110 08:34:22.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.798" endtime="20201110 08:34:22.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.427" endtime="20201110 08:34:22.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.426" endtime="20201110 08:34:22.825"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.834" endtime="20201110 08:34:22.853"></status>
</kw>
<msg timestamp="20201110 08:34:22.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.832" endtime="20201110 08:34:22.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.854" endtime="20201110 08:34:22.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.857" endtime="20201110 08:34:22.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.829" endtime="20201110 08:34:22.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.827" endtime="20201110 08:34:22.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.868" endtime="20201110 08:34:23.154"></status>
</kw>
<msg timestamp="20201110 08:34:23.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.866" endtime="20201110 08:34:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.159" endtime="20201110 08:34:23.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.167" endtime="20201110 08:34:23.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.863" endtime="20201110 08:34:23.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.861" endtime="20201110 08:34:23.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.174" level="INFO">${RESULT} = [{'time': 0.022598806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.761200000000039e-05, 'source_diff': 9.761200000000039e-05}, {'time': 0.022709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.171" endtime="20201110 08:34:23.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.189" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:23.175" endtime="20201110 08:34:23.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.194" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.193" endtime="20201110 08:34:23.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.197" level="INFO">VALUE: [9.761200000000039e-05, 9.773600000000104e-05, 9.758300000000178e-05, 9.79730000000012e-05, 9.79730000000012e-05, 9.74019999999999e-05, 9.830499999999992e-05, 9.804199999999957e-05, 9.786200000000064e-05, 9.75279999999995e-05, 9.79999999999974e-05, 9.765200000000016e-05, 9.736100000000067e-05, 9.800000000000086e-05, 9.805499999999967e-05, 9.773600000000104e-05, 9.795799999999869e-05, 9.754199999999907e-05, 9.737499999999677e-05, 9.761100000000092e-05, 9.755600000000211e-05, 9.815300000000013e-05, 9.727799999999925e-05, 9.737500000000024e-05, 9.741700000000242e-05, 9.787500000000074e-05, 9.804199999999957e-05, 9.740299999999938e-05, 9.795799999999869e-05, 9.833300000000253e-05, 9.825000000000111e-05, 9.780500000000289e-05, 9.729099999999935e-05, 9.804199999999957e-05, 9.781899999999899e-05, 9.790299999999988e-05, 9.801400000000043e-05, 9.806900000000271e-05, 9.818099999999927e-05, 9.791699999999945e-05, 9.738899999999981e-05, 9.805599999999914e-05, 9.761200000000039e-05, 9.822299999999798e-05, 9.73470000000011e-05, 9.805499999999967e-05, 9.795799999999869e-05, 9.820799999999894e-05, 9.766599999999973e-05, 9.765299999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.195" endtime="20201110 08:34:23.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.190" endtime="20201110 08:34:23.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.200" endtime="20201110 08:34:23.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.204" endtime="20201110 08:34:23.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.202" endtime="20201110 08:34:23.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.199" endtime="20201110 08:34:23.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.826" endtime="20201110 08:34:23.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.825" endtime="20201110 08:34:23.225"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.238" endtime="20201110 08:34:23.257"></status>
</kw>
<msg timestamp="20201110 08:34:23.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.235" endtime="20201110 08:34:23.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.259" endtime="20201110 08:34:23.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.262" endtime="20201110 08:34:23.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.230" endtime="20201110 08:34:23.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.227" endtime="20201110 08:34:23.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.274" endtime="20201110 08:34:23.570"></status>
</kw>
<msg timestamp="20201110 08:34:23.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026095292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026193861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.272" endtime="20201110 08:34:23.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026095292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026193861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.579" endtime="20201110 08:34:23.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.598" endtime="20201110 08:34:23.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.270" endtime="20201110 08:34:23.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.268" endtime="20201110 08:34:23.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.609" level="INFO">${RESULT} = [{'time': 0.026193861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.856899999999974e-05, 'source_diff': 9.856899999999974e-05}, {'time': 0.026305931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.604" endtime="20201110 08:34:23.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.622" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:23.610" endtime="20201110 08:34:23.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.627" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.626" endtime="20201110 08:34:23.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.629" level="INFO">VALUE: [9.856899999999974e-05, 9.887500000000174e-05, 9.848599999999832e-05, 9.876400000000118e-05, 9.912500000000199e-05, 9.866600000000073e-05, 9.84860000000018e-05, 9.901400000000143e-05, 9.863900000000106e-05, 9.859699999999888e-05, 9.845799999999919e-05, 9.844500000000256e-05, 9.923599999999907e-05, 9.886100000000217e-05, 9.915300000000113e-05, 9.893100000000002e-05, 9.906999999999971e-05, 9.850000000000136e-05, 9.859799999999835e-05, 9.911199999999842e-05, 9.85280000000005e-05, 9.863799999999812e-05, 9.90410000000011e-05, 9.876400000000118e-05, 9.83609999999982e-05, 9.862500000000149e-05, 9.876400000000118e-05, 9.905600000000014e-05, 9.918100000000027e-05, 9.831899999999949e-05, 9.869499999999934e-05, 9.91670000000007e-05, 9.88340000000025e-05, 9.876400000000118e-05, 9.922299999999898e-05, 9.862499999999802e-05, 9.862500000000149e-05, 9.851299999999799e-05, 9.861099999999845e-05, 9.859699999999888e-05, 9.85280000000005e-05, 9.83470000000021e-05, 9.926400000000168e-05, 9.854200000000007e-05, 9.895799999999969e-05, 9.89860000000023e-05, 9.891700000000045e-05, 9.88340000000025e-05, 9.863900000000453e-05, 9.83059999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.628" endtime="20201110 08:34:23.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.623" endtime="20201110 08:34:23.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.633" endtime="20201110 08:34:23.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.636" endtime="20201110 08:34:23.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.635" endtime="20201110 08:34:23.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.631" endtime="20201110 08:34:23.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.226" endtime="20201110 08:34:23.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.225" endtime="20201110 08:34:23.657"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.665" endtime="20201110 08:34:23.685"></status>
</kw>
<msg timestamp="20201110 08:34:23.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.664" endtime="20201110 08:34:23.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.686" endtime="20201110 08:34:23.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.689" endtime="20201110 08:34:23.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.661" endtime="20201110 08:34:23.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.659" endtime="20201110 08:34:23.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.699" endtime="20201110 08:34:23.984"></status>
</kw>
<msg timestamp="20201110 08:34:23.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.697" endtime="20201110 08:34:23.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021651569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.988" endtime="20201110 08:34:23.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.996" endtime="20201110 08:34:23.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.694" endtime="20201110 08:34:23.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.693" endtime="20201110 08:34:23.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.003" level="INFO">${RESULT} = [{'time': 0.021751847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010027800000000225, 'source_diff': 0.00010027800000000225}, {'time': 0.021859903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.000" endtime="20201110 08:34:24.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.016" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:24.004" endtime="20201110 08:34:24.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.021" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.020" endtime="20201110 08:34:24.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.023" level="INFO">VALUE: [0.00010027800000000225, 0.00010026399999999921, 9.993099999999755e-05, 0.00010015300000000213, 9.93060000000004e-05, 9.984700000000013e-05, 9.934699999999963e-05, 9.988899999999884e-05, 9.969400000000087e-05, 9.940300000000138e-05, 9.937500000000224e-05, 0.0001001800000000018, 9.965300000000163e-05, 9.987499999999927e-05, 0.00010006900000000124, 9.988899999999884e-05, 9.984700000000013e-05, 9.95280000000015e-05, 9.988899999999884e-05, 9.968100000000077e-05, 9.929200000000082e-05, 9.956900000000074e-05, 9.933299999999659e-05, 9.9415999999998e-05, 0.00010002699999999906, 0.0001000410000000021, 9.959699999999988e-05, 9.94999999999989e-05, 9.969500000000034e-05, 9.947199999999976e-05, 9.95280000000015e-05, 0.00010012499999999952, 9.961099999999945e-05, 9.938900000000181e-05, 9.975000000000261e-05, 0.00010011099999999995, 0.00010016699999999823, 9.958399999999978e-05, 9.937500000000224e-05, 9.970800000000044e-05, 9.994400000000112e-05, 0.00010023600000000008, 0.00010020900000000041, 0.00010027800000000225, 9.988899999999884e-05, 9.987499999999927e-05, 9.95419999999976e-05, 0.00010027800000000225, 0.0001001809999999978, 9.993100000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.022" endtime="20201110 08:34:24.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.017" endtime="20201110 08:34:24.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.027" endtime="20201110 08:34:24.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.030" endtime="20201110 08:34:24.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.029" endtime="20201110 08:34:24.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.025" endtime="20201110 08:34:24.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.658" endtime="20201110 08:34:24.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.657" endtime="20201110 08:34:24.051"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.059" endtime="20201110 08:34:24.079"></status>
</kw>
<msg timestamp="20201110 08:34:24.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.058" endtime="20201110 08:34:24.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.080" endtime="20201110 08:34:24.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.082" endtime="20201110 08:34:24.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.055" endtime="20201110 08:34:24.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.053" endtime="20201110 08:34:24.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.092" endtime="20201110 08:34:24.377"></status>
</kw>
<msg timestamp="20201110 08:34:24.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.091" endtime="20201110 08:34:24.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.381" endtime="20201110 08:34:24.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.389" endtime="20201110 08:34:24.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.088" endtime="20201110 08:34:24.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.087" endtime="20201110 08:34:24.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.396" level="INFO">${RESULT} = [{'time': 0.021890472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010063899999999959, 'source_diff': 0.00010063899999999959}, {'time': 0.021996514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.392" endtime="20201110 08:34:24.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.409" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:24.397" endtime="20201110 08:34:24.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.413" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.412" endtime="20201110 08:34:24.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.416" level="INFO">VALUE: [0.00010063899999999959, 0.00010041700000000195, 0.00010055600000000164, 0.00010041699999999848, 0.00010077799999999928, 0.00010083400000000103, 0.00010126400000000021, 0.00010061199999999992, 0.0001009159999999995, 0.00010031900000000149, 0.00010123600000000108, 0.00010119499999999837, 0.00010126400000000021, 0.00010129199999999935, 0.00010062500000000002, 0.00010083299999999809, 0.00010057000000000121, 0.00010070899999999744, 0.00010125000000000065, 0.00010090299999999941, 0.00010116699999999923, 0.00010119499999999837, 0.0001011670000000027, 0.00010077699999999981, 0.00010102700000000006, 0.00010126400000000021, 0.00010043000000000205, 0.00010038899999999934, 0.00010083300000000156, 0.00010109699999999791, 0.00010119499999999837, 0.00010076400000000318, 0.00010127799999999978, 0.00010094399999999865, 0.00010073600000000058, 0.00010054200000000207, 0.00010101300000000049, 0.00010077799999999928, 0.00010069400000000187, 0.00010058300000000131, 0.00010044399999999815, 0.00010042999999999858, 0.00010063899999999959, 0.00010115299999999966, 0.000100722000000001, 0.00010058300000000131, 0.0001008060000000019, 0.00010040300000000238, 0.0001011809999999988, 0.00010043100000000152]</msg>
<status status="PASS" starttime="20201110 08:34:24.414" endtime="20201110 08:34:24.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.410" endtime="20201110 08:34:24.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.419" endtime="20201110 08:34:24.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.423" endtime="20201110 08:34:24.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.421" endtime="20201110 08:34:24.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.418" endtime="20201110 08:34:24.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.052" endtime="20201110 08:34:24.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.051" endtime="20201110 08:34:24.443"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.453" endtime="20201110 08:34:24.473"></status>
</kw>
<msg timestamp="20201110 08:34:24.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.451" endtime="20201110 08:34:24.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.474" endtime="20201110 08:34:24.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.480" endtime="20201110 08:34:24.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.448" endtime="20201110 08:34:24.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.446" endtime="20201110 08:34:24.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.491" endtime="20201110 08:34:24.777"></status>
</kw>
<msg timestamp="20201110 08:34:24.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.490" endtime="20201110 08:34:24.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.782" endtime="20201110 08:34:24.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.790" endtime="20201110 08:34:24.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.487" endtime="20201110 08:34:24.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.484" endtime="20201110 08:34:24.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.797" level="INFO">${RESULT} = [{'time': 0.022933792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010215300000000066, 'source_diff': 0.00010215300000000066}, {'time': 0.023043847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.794" endtime="20201110 08:34:24.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.811" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:24.798" endtime="20201110 08:34:24.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.816" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.815" endtime="20201110 08:34:24.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.818" level="INFO">VALUE: [0.00010215300000000066, 0.0001018749999999978, 0.00010163900000000059, 0.00010130499999999945, 0.0001021939999999999, 0.00010206999999999924, 0.00010212499999999805, 0.00010140299999999991, 0.00010209699999999891, 0.00010209699999999891, 0.00010177800000000028, 0.0001013610000000012, 0.00010195899999999869, 0.00010133399999999806, 0.00010181900000000299, 0.00010193000000000008, 0.00010202700000000106, 0.00010156899999999927, 0.00010212500000000152, 0.00010148600000000133, 0.00010172199999999854, 0.00010181900000000299, 0.00010162499999999755, 0.00010141699999999948, 0.00010143099999999905, 0.00010190300000000041, 0.00010197299999999826, 0.00010133400000000153, 0.00010211200000000142, 0.00010152699999999709, 0.0001021939999999999, 0.0001022359999999986, 0.00010176400000000071, 0.00010173600000000158, 0.0001018610000000017, 0.00010131899999999902, 0.00010211100000000195, 0.00010148600000000133, 0.00010165300000000016, 0.00010230599999999992, 0.00010180599999999942, 0.00010229100000000088, 0.00010194399999999965, 0.0001015419999999996, 0.00010154100000000013, 0.00010142999999999958, 0.00010209699999999891, 0.00010180499999999995, 0.00010220799999999947, 0.00010187500000000127]</msg>
<status status="PASS" starttime="20201110 08:34:24.817" endtime="20201110 08:34:24.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.812" endtime="20201110 08:34:24.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.822" endtime="20201110 08:34:24.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.825" endtime="20201110 08:34:24.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.823" endtime="20201110 08:34:24.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.820" endtime="20201110 08:34:24.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.444" endtime="20201110 08:34:24.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.444" endtime="20201110 08:34:24.846"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.854" endtime="20201110 08:34:24.874"></status>
</kw>
<msg timestamp="20201110 08:34:24.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.853" endtime="20201110 08:34:24.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.875" endtime="20201110 08:34:24.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.878" endtime="20201110 08:34:24.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.850" endtime="20201110 08:34:24.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.848" endtime="20201110 08:34:24.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.889" endtime="20201110 08:34:25.174"></status>
</kw>
<msg timestamp="20201110 08:34:25.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.887" endtime="20201110 08:34:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.179" endtime="20201110 08:34:25.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.187" endtime="20201110 08:34:25.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.885" endtime="20201110 08:34:25.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.883" endtime="20201110 08:34:25.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.193" level="INFO">${RESULT} = [{'time': 0.021828528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010236099999999873, 'source_diff': 0.00010236099999999873}, {'time': 0.021943542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:25.190" endtime="20201110 08:34:25.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.206" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:25.194" endtime="20201110 08:34:25.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.211" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.210" endtime="20201110 08:34:25.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.213" level="INFO">VALUE: [0.00010236099999999873, 0.00010270899999999944, 0.00010297299999999926, 0.00010237500000000177, 0.00010241599999999754, 0.00010230500000000045, 0.00010249999999999843, 0.00010248600000000233, 0.0001032359999999996, 0.00010244400000000015, 0.00010318099999999733, 0.00010324999999999918, 0.00010234699999999916, 0.00010234699999999916, 0.0001031949999999969, 0.00010269499999999987, 0.00010324999999999918, 0.00010251400000000147, 0.00010283300000000009, 0.00010279099999999791, 0.00010240199999999797, 0.00010236099999999873, 0.00010262499999999855, 0.00010295800000000022, 0.00010266700000000073, 0.00010326399999999875, 0.00010288900000000184, 0.00010308300000000034, 0.00010233399999999906, 0.00010233400000000253, 0.00010286099999999923, 0.0001031810000000008, 0.0001028749999999988, 0.00010308399999999981, 0.00010308300000000034, 0.00010298599999999936, 0.00010317999999999786, 0.00010238899999999787, 0.00010312499999999905, 0.00010297199999999979, 0.00010230500000000045, 0.00010288899999999837, 0.00010263899999999812, 0.00010313899999999862, 0.00010320800000000047, 0.00010320899999999994, 0.00010319500000000037, 0.00010327699999999884, 0.00010306900000000077, 0.0001024870000000018]</msg>
<status status="PASS" starttime="20201110 08:34:25.212" endtime="20201110 08:34:25.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.207" endtime="20201110 08:34:25.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.244" endtime="20201110 08:34:25.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.248" endtime="20201110 08:34:25.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.246" endtime="20201110 08:34:25.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.243" endtime="20201110 08:34:25.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.847" endtime="20201110 08:34:25.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.846" endtime="20201110 08:34:25.269"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.277" endtime="20201110 08:34:25.297"></status>
</kw>
<msg timestamp="20201110 08:34:25.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.276" endtime="20201110 08:34:25.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.298" endtime="20201110 08:34:25.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.301" endtime="20201110 08:34:25.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.273" endtime="20201110 08:34:25.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.271" endtime="20201110 08:34:25.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.311" endtime="20201110 08:34:25.596"></status>
</kw>
<msg timestamp="20201110 08:34:25.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.309" endtime="20201110 08:34:25.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.600" endtime="20201110 08:34:25.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.608" endtime="20201110 08:34:25.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.307" endtime="20201110 08:34:25.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.305" endtime="20201110 08:34:25.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.614" level="INFO">${RESULT} = [{'time': 0.021923625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010365299999999869, 'source_diff': 0.00010365299999999869}, {'time': 0.022038681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:25.611" endtime="20201110 08:34:25.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.627" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:25.615" endtime="20201110 08:34:25.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.632" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.631" endtime="20201110 08:34:25.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.634" level="INFO">VALUE: [0.00010365299999999869, 0.00010393100000000155, 0.00010398600000000036, 0.0001033619999999992, 0.00010361200000000292, 0.00010359700000000041, 0.00010347200000000029, 0.00010422199999999757, 0.00010340300000000191, 0.00010413899999999962, 0.00010411100000000048, 0.00010343100000000105, 0.00010394399999999818, 0.0001040139999999995, 0.0001033200000000005, 0.00010388899999999937, 0.00010384800000000013, 0.00010379199999999839, 0.00010398699999999983, 0.00010412500000000005, 0.00010420800000000147, 0.00010366599999999879, 0.0001037079999999975, 0.00010338900000000234, 0.00010365300000000216, 0.00010343000000000158, 0.00010330599999999746, 0.00010391699999999851, 0.00010429199999999889, 0.0001032359999999996, 0.00010349999999999943, 0.00010359799999999988, 0.00010374999999999968, 0.00010336099999999973, 0.00010408300000000134, 0.00010363799999999965, 0.00010426399999999975, 0.00010415199999999972, 0.00010413900000000309, 0.0001033749999999993, 0.0001040420000000021, 0.0001036940000000014, 0.00010356900000000127, 0.00010395899999999722, 0.00010334700000000016, 0.00010349999999999943, 0.00010363899999999912, 0.00010341699999999801, 0.00010365299999999869, 0.00010411100000000048]</msg>
<status status="PASS" starttime="20201110 08:34:25.633" endtime="20201110 08:34:25.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.628" endtime="20201110 08:34:25.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.638" endtime="20201110 08:34:25.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.641" endtime="20201110 08:34:25.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.640" endtime="20201110 08:34:25.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.636" endtime="20201110 08:34:25.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.270" endtime="20201110 08:34:25.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.269" endtime="20201110 08:34:25.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.640" endtime="20201110 08:34:25.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.666" endtime="20201110 08:34:25.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.664" endtime="20201110 08:34:25.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.663" endtime="20201110 08:34:25.686"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:45.566" endtime="20201110 08:34:25.686" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.693" endtime="20201110 08:34:25.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.691" endtime="20201110 08:34:25.713"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.727" endtime="20201110 08:34:25.740"></status>
</kw>
<msg timestamp="20201110 08:34:25.740" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.725" endtime="20201110 08:34:25.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.743" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.741" endtime="20201110 08:34:25.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.746" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:25.744" endtime="20201110 08:34:25.746"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:25.722" endtime="20201110 08:34:25.747"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:25.720" endtime="20201110 08:34:25.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.719" endtime="20201110 08:34:25.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:25.751" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:25.750" endtime="20201110 08:34:25.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.748" endtime="20201110 08:34:25.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.718" endtime="20201110 08:34:25.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.717" endtime="20201110 08:34:25.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.753" endtime="20201110 08:34:25.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.715" endtime="20201110 08:34:25.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.713" endtime="20201110 08:34:25.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.690" endtime="20201110 08:34:25.755"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.765" endtime="20201110 08:34:25.780"></status>
</kw>
<msg timestamp="20201110 08:34:25.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.763" endtime="20201110 08:34:25.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.782" endtime="20201110 08:34:25.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.784" endtime="20201110 08:34:25.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.760" endtime="20201110 08:34:25.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.758" endtime="20201110 08:34:25.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.794" endtime="20201110 08:34:26.079"></status>
</kw>
<msg timestamp="20201110 08:34:26.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064711542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064716278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.792" endtime="20201110 08:34:26.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064711542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064716278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.083" endtime="20201110 08:34:26.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.092" endtime="20201110 08:34:26.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.789" endtime="20201110 08:34:26.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.788" endtime="20201110 08:34:26.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.098" level="INFO">${RESULT} = [{'time': 0.064716278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.064730083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:26.095" endtime="20201110 08:34:26.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.112" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:26.099" endtime="20201110 08:34:26.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.116" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.115" endtime="20201110 08:34:26.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.118" level="INFO">VALUE: [4.7360000000051805e-06, 4.179999999992523e-06, 3.7090000000045142e-06, 4.805999999996091e-06, 4.389000000007415e-06, 4.361000000008275e-06, 4.430999999999186e-06, 3.902999999999546e-06, 3.6940000000124096e-06, 4.778000000010829e-06, 4.041999999995771e-06, 4.541000000010675e-06, 4.375000000000906e-06, 3.915999999992703e-06, 3.7219999999976716e-06, 4.735999999991303e-06, 4.429999999999712e-06, 4.375000000000906e-06, 4.540999999996798e-06, 4.375000000000906e-06, 4.097999999994051e-06, 3.916000000006581e-06, 3.707999999991163e-06, 4.791999999989582e-06, 3.9170000000060545e-06, 3.7220000000115494e-06, 3.6949999999980054e-06, 3.7090000000045142e-06, 4.139000000000226e-06, 4.125000000007595e-06, 4.805999999996091e-06, 4.443999999992343e-06, 4.08400000000142e-06, 4.347000000001766e-06, 4.361000000008275e-06, 4.513999999997131e-06, 3.9309999999986855e-06, 3.707999999991163e-06, 4.153000000006735e-06, 3.693999999998532e-06, 4.166999999999366e-06, 4.166999999999366e-06, 3.6530000000062346e-06, 4.165999999999892e-06, 3.7219999999976716e-06, 4.139000000000226e-06, 4.152999999992857e-06, 4.777999999996951e-06, 3.847000000001266e-06, 4.179999999992523e-06]</msg>
<status status="PASS" starttime="20201110 08:34:26.117" endtime="20201110 08:34:26.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.112" endtime="20201110 08:34:26.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.121" endtime="20201110 08:34:26.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.125" endtime="20201110 08:34:26.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.123" endtime="20201110 08:34:26.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.120" endtime="20201110 08:34:26.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.757" endtime="20201110 08:34:26.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.756" endtime="20201110 08:34:26.146"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.155" endtime="20201110 08:34:26.168"></status>
</kw>
<msg timestamp="20201110 08:34:26.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.153" endtime="20201110 08:34:26.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.170" endtime="20201110 08:34:26.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.172" endtime="20201110 08:34:26.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.151" endtime="20201110 08:34:26.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.149" endtime="20201110 08:34:26.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.181" endtime="20201110 08:34:26.472"></status>
</kw>
<msg timestamp="20201110 08:34:26.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.180" endtime="20201110 08:34:26.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022136875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.476" endtime="20201110 08:34:26.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.484" endtime="20201110 08:34:26.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.177" endtime="20201110 08:34:26.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.175" endtime="20201110 08:34:26.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.492" level="INFO">${RESULT} = [{'time': 0.022142694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.022157514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.488" endtime="20201110 08:34:26.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.550" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:26.493" endtime="20201110 08:34:26.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.554" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.553" endtime="20201110 08:34:26.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.557" level="INFO">VALUE: [5.819000000000657e-06, 5.292000000000491e-06, 4.985999999998492e-06, 5.292000000000491e-06, 5.472000000002891e-06, 4.846999999998797e-06, 4.514000000000601e-06, 4.778000000000421e-06, 4.986000000001961e-06, 5.3200000000031e-06, 4.889000000000976e-06, 4.973000000001865e-06, 4.860999999998367e-06, 5.5139999999981315e-06, 5.041000000000767e-06, 5.457999999999852e-06, 5.319000000000157e-06, 5.457999999999852e-06, 4.846999999998797e-06, 5.306000000000061e-06, 4.930000000000212e-06, 5.306000000000061e-06, 5.457999999999852e-06, 4.8200000000026e-06, 4.528000000000171e-06, 4.9999999999980616e-06, 4.846999999998797e-06, 5.042000000000241e-06, 5.4589999999993255e-06, 5.000000000001531e-06, 4.526999999997228e-06, 4.8339999999987004e-06, 5.292000000000491e-06, 4.861000000001836e-06, 5.305000000000587e-06, 4.832999999999227e-06, 5.512999999998658e-06, 4.846999999998797e-06, 5.444999999999756e-06, 4.875000000001406e-06, 4.846999999998797e-06, 4.861000000001836e-06, 5.042000000000241e-06, 4.513000000001127e-06, 4.985999999998492e-06, 5.444999999999756e-06, 5.472999999998895e-06, 5.457999999999852e-06, 4.847000000002266e-06, 5.000000000001531e-06]</msg>
<status status="PASS" starttime="20201110 08:34:26.555" endtime="20201110 08:34:26.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.551" endtime="20201110 08:34:26.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.560" endtime="20201110 08:34:26.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.564" endtime="20201110 08:34:26.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.562" endtime="20201110 08:34:26.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.558" endtime="20201110 08:34:26.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.147" endtime="20201110 08:34:26.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.146" endtime="20201110 08:34:26.584"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.593" endtime="20201110 08:34:26.607"></status>
</kw>
<msg timestamp="20201110 08:34:26.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.592" endtime="20201110 08:34:26.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.609" endtime="20201110 08:34:26.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.611" endtime="20201110 08:34:26.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.589" endtime="20201110 08:34:26.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.587" endtime="20201110 08:34:26.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.620" endtime="20201110 08:34:26.907"></status>
</kw>
<msg timestamp="20201110 08:34:26.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.619" endtime="20201110 08:34:26.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.911" endtime="20201110 08:34:26.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.920" endtime="20201110 08:34:26.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.616" endtime="20201110 08:34:26.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.614" endtime="20201110 08:34:26.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.926" level="INFO">${RESULT} = [{'time': 0.022317903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.022331681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.923" endtime="20201110 08:34:26.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.940" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:26.927" endtime="20201110 08:34:26.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.944" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.943" endtime="20201110 08:34:26.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.947" level="INFO">VALUE: [6.611000000000117e-06, 6.7230000000001455e-06, 5.846999999999797e-06, 5.917000000001116e-06, 6.374999999999437e-06, 5.750000000002281e-06, 5.930000000001212e-06, 6.374999999999437e-06, 6.333000000000727e-06, 6.235999999999742e-06, 6.374999999999437e-06, 6.388999999999007e-06, 6.374999999999437e-06, 6.264000000002351e-06, 6.6529999999988265e-06, 6.249999999999312e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 6.388999999999007e-06, 6.235999999999742e-06, 6.374999999999437e-06, 5.917000000001116e-06, 5.764000000001851e-06, 6.389000000002476e-06, 6.637999999999783e-06, 6.374999999999437e-06, 6.389000000002476e-06, 6.222000000000172e-06, 6.249999999999312e-06, 5.917000000001116e-06, 6.7079999999976325e-06, 6.417000000001616e-06, 6.708000000001102e-06, 6.374999999999437e-06, 6.695000000001006e-06, 5.7089999999995755e-06, 6.222000000000172e-06, 5.778000000001421e-06, 6.375000000002906e-06, 5.778000000001421e-06, 5.931000000000686e-06, 5.9439999999973125e-06, 6.374999999999437e-06, 6.305999999997591e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 5.945000000000256e-06, 5.791999999997521e-06, 5.930000000001212e-06, 5.930000000001212e-06]</msg>
<status status="PASS" starttime="20201110 08:34:26.945" endtime="20201110 08:34:26.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.941" endtime="20201110 08:34:26.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.950" endtime="20201110 08:34:26.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.953" endtime="20201110 08:34:26.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.952" endtime="20201110 08:34:26.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.948" endtime="20201110 08:34:26.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.585" endtime="20201110 08:34:26.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.585" endtime="20201110 08:34:26.974"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.983" endtime="20201110 08:34:26.997"></status>
</kw>
<msg timestamp="20201110 08:34:26.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.982" endtime="20201110 08:34:26.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.999" endtime="20201110 08:34:27.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.001" endtime="20201110 08:34:27.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.979" endtime="20201110 08:34:27.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.977" endtime="20201110 08:34:27.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.010" endtime="20201110 08:34:27.294"></status>
</kw>
<msg timestamp="20201110 08:34:27.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.009" endtime="20201110 08:34:27.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.298" endtime="20201110 08:34:27.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.306" endtime="20201110 08:34:27.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.006" endtime="20201110 08:34:27.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.004" endtime="20201110 08:34:27.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.313" level="INFO">${RESULT} = [{'time': 0.022446347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.022461056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.310" endtime="20201110 08:34:27.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.326" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:27.314" endtime="20201110 08:34:27.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.331" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.330" endtime="20201110 08:34:27.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.333" level="INFO">VALUE: [7.985999999998022e-06, 6.834000000000701e-06, 7.306000000002061e-06, 7.1529999999993266e-06, 6.861000000000367e-06, 7.320000000001631e-06, 6.874999999999937e-06, 6.820000000001131e-06, 7.333000000001727e-06, 6.834000000000701e-06, 7.625000000000687e-06, 7.1529999999993266e-06, 6.8329999999977575e-06, 7.1669999999988965e-06, 7.153000000002796e-06, 7.611000000001117e-06, 6.709000000000576e-06, 7.569000000002407e-06, 7.138999999999757e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.320000000001631e-06, 7.402999999999577e-06, 7.306000000002061e-06, 7.208999999997606e-06, 7.195000000001506e-06, 7.318999999998688e-06, 7.222000000001172e-06, 7.333000000001727e-06, 7.306000000002061e-06, 6.8329999999977575e-06, 7.1669999999988965e-06, 6.847000000000797e-06, 6.7219999999972024e-06, 7.333000000001727e-06, 6.874999999999937e-06, 6.833999999997231e-06, 6.8480000000002705e-06, 6.847000000000797e-06, 7.151999999999853e-06, 7.597000000001547e-06, 7.611000000001117e-06, 6.833000000001227e-06, 6.7079999999976325e-06, 6.847000000000797e-06, 6.708000000001102e-06, 7.151999999999853e-06, 7.333999999997731e-06, 7.318999999998688e-06, 6.695000000001006e-06]</msg>
<status status="PASS" starttime="20201110 08:34:27.332" endtime="20201110 08:34:27.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.327" endtime="20201110 08:34:27.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.337" endtime="20201110 08:34:27.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.340" endtime="20201110 08:34:27.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.339" endtime="20201110 08:34:27.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.335" endtime="20201110 08:34:27.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.975" endtime="20201110 08:34:27.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.974" endtime="20201110 08:34:27.361"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.370" endtime="20201110 08:34:27.385"></status>
</kw>
<msg timestamp="20201110 08:34:27.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.368" endtime="20201110 08:34:27.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.386" endtime="20201110 08:34:27.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.389" endtime="20201110 08:34:27.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.365" endtime="20201110 08:34:27.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.363" endtime="20201110 08:34:27.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.398" endtime="20201110 08:34:27.684"></status>
</kw>
<msg timestamp="20201110 08:34:27.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.396" endtime="20201110 08:34:27.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.688" endtime="20201110 08:34:27.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.696" endtime="20201110 08:34:27.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.394" endtime="20201110 08:34:27.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.392" endtime="20201110 08:34:27.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.703" level="INFO">${RESULT} = [{'time': 0.022910958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.022923792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.700" endtime="20201110 08:34:27.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:27.704" endtime="20201110 08:34:27.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.721" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.720" endtime="20201110 08:34:27.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.723" level="INFO">VALUE: [8.915999999997704e-06, 7.763999999996912e-06, 8.541000000000798e-06, 8.041999999999772e-06, 8.054999999999868e-06, 7.6120000000005905e-06, 8.236000000001742e-06, 7.666999999999397e-06, 8.555000000000368e-06, 8.083000000002477e-06, 8.041000000000298e-06, 7.777999999999952e-06, 8.764000000001382e-06, 8.555999999999842e-06, 8.193999999999563e-06, 7.764000000000382e-06, 7.624999999997217e-06, 8.097000000002047e-06, 8.542000000000272e-06, 8.568999999999938e-06, 8.235999999998272e-06, 8.556000000003311e-06, 7.750000000000812e-06, 8.235999999998272e-06, 8.179999999999993e-06, 8.569999999999411e-06, 8.097000000002047e-06, 8.223000000001646e-06, 8.236000000001742e-06, 8.555000000000368e-06, 7.777999999999952e-06, 8.193999999999563e-06, 7.625000000000687e-06, 7.777999999999952e-06, 7.611000000001117e-06, 8.235999999998272e-06, 8.708000000003102e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.249999999997842e-06, 7.777999999999952e-06, 8.082999999999008e-06, 8.221999999998703e-06, 8.083000000002477e-06, 8.209000000002076e-06, 7.540999999999798e-06, 8.568999999999938e-06, 8.542000000000272e-06, 8.250000000001312e-06, 8.236999999997746e-06]</msg>
<status status="PASS" starttime="20201110 08:34:27.722" endtime="20201110 08:34:27.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.717" endtime="20201110 08:34:27.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.727" endtime="20201110 08:34:27.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.730" endtime="20201110 08:34:27.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.729" endtime="20201110 08:34:27.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.725" endtime="20201110 08:34:27.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.362" endtime="20201110 08:34:27.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.361" endtime="20201110 08:34:27.751"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.759" endtime="20201110 08:34:27.774"></status>
</kw>
<msg timestamp="20201110 08:34:27.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.758" endtime="20201110 08:34:27.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.776" endtime="20201110 08:34:27.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.778" endtime="20201110 08:34:27.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.755" endtime="20201110 08:34:27.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.753" endtime="20201110 08:34:27.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.787" endtime="20201110 08:34:28.074"></status>
</kw>
<msg timestamp="20201110 08:34:28.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.786" endtime="20201110 08:34:28.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.078" endtime="20201110 08:34:28.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.087" endtime="20201110 08:34:28.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.783" endtime="20201110 08:34:28.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.781" endtime="20201110 08:34:28.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.093" level="INFO">${RESULT} = [{'time': 0.022057167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.022072889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.090" endtime="20201110 08:34:28.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:28.094" endtime="20201110 08:34:28.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.112" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.111" endtime="20201110 08:34:28.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.114" level="INFO">VALUE: [9.986000000000023e-06, 9.180999999996997e-06, 9.028000000001202e-06, 8.694999999999536e-06, 9.069999999999911e-06, 9.110999999999148e-06, 9.012999999998689e-06, 8.708999999999106e-06, 9.042000000000772e-06, 9.167000000000897e-06, 9.111999999998621e-06, 9.611999999999121e-06, 9.041999999997302e-06, 9.500000000002562e-06, 9.028000000001202e-06, 9.542000000001272e-06, 9.485999999999523e-06, 9.471999999999953e-06, 8.694000000000063e-06, 9.013999999998162e-06, 8.694000000000063e-06, 8.694000000000063e-06, 9.013999999998162e-06, 8.723000000002146e-06, 9.137999999998814e-06, 9.027000000001728e-06, 8.750000000001812e-06, 9.61200000000259e-06, 9.471999999999953e-06, 9.403000000001577e-06, 9.152999999997857e-06, 8.985999999999023e-06, 8.722000000002672e-06, 9.124999999998717e-06, 9.000000000002062e-06, 9.181000000000467e-06, 9.472999999999426e-06, 9.097999999999051e-06, 8.694000000000063e-06, 9.610999999999648e-06, 9.153000000001327e-06, 9.208000000000133e-06, 8.694000000000063e-06, 8.694999999999536e-06, 9.485999999999523e-06, 9.152000000001853e-06, 9.013999999998162e-06, 9.181000000000467e-06, 8.680000000000493e-06, 9.167000000000897e-06]</msg>
<status status="PASS" starttime="20201110 08:34:28.113" endtime="20201110 08:34:28.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.108" endtime="20201110 08:34:28.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.118" endtime="20201110 08:34:28.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.121" endtime="20201110 08:34:28.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.120" endtime="20201110 08:34:28.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.116" endtime="20201110 08:34:28.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.752" endtime="20201110 08:34:28.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.751" endtime="20201110 08:34:28.142"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.151" endtime="20201110 08:34:28.165"></status>
</kw>
<msg timestamp="20201110 08:34:28.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.149" endtime="20201110 08:34:28.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.167" endtime="20201110 08:34:28.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.169" endtime="20201110 08:34:28.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.147" endtime="20201110 08:34:28.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.144" endtime="20201110 08:34:28.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.179" endtime="20201110 08:34:28.464"></status>
</kw>
<msg timestamp="20201110 08:34:28.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.178" endtime="20201110 08:34:28.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.468" endtime="20201110 08:34:28.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.477" endtime="20201110 08:34:28.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.175" endtime="20201110 08:34:28.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.173" endtime="20201110 08:34:28.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.483" level="INFO">${RESULT} = [{'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0777000000000009e-05, 'source_diff': 1.0777000000000009e-05}, {'time': 0.021797639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.480" endtime="20201110 08:34:28.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.497" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:28.484" endtime="20201110 08:34:28.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.501" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.500" endtime="20201110 08:34:28.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.503" level="INFO">VALUE: [1.0777000000000009e-05, 9.917000000001647e-06, 1.0388999999999537e-05, 9.931000000001217e-06, 1.0084000000000481e-05, 9.944000000001313e-06, 1.0082999999997538e-05, 1.0054999999998399e-05, 1.0083000000001008e-05, 1.0070000000000912e-05, 9.610999999999648e-06, 1.0374999999999968e-05, 1.0388999999999537e-05, 9.597000000000078e-06, 1.0402999999999107e-05, 9.944000000001313e-06, 1.0402000000003103e-05, 1.0568999999998469e-05, 1.0069000000001438e-05, 1.0402999999999107e-05, 1.0360999999996928e-05, 1.0403000000002577e-05, 1.0403000000002577e-05, 1.0540999999999329e-05, 9.943999999997843e-06, 1.0415999999999204e-05, 1.0083000000001008e-05, 1.0402999999999107e-05, 1.0416999999998677e-05, 1.0402999999999107e-05, 9.945000000000787e-06, 1.0097000000000578e-05, 1.0402999999999107e-05, 9.944000000001313e-06, 1.0070000000000912e-05, 9.610999999999648e-06, 1.0167000000001897e-05, 1.0083000000001008e-05, 1.0388999999999537e-05, 9.624999999999218e-06, 1.0082999999997538e-05, 1.0430999999998247e-05, 1.0555000000002368e-05, 1.0430000000002243e-05, 9.916999999998177e-06, 1.0334000000000731e-05, 9.639000000002257e-06, 9.903000000002077e-06, 1.0152999999998857e-05, 1.0069000000001438e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.502" endtime="20201110 08:34:28.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.497" endtime="20201110 08:34:28.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.507" endtime="20201110 08:34:28.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.511" endtime="20201110 08:34:28.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.509" endtime="20201110 08:34:28.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.505" endtime="20201110 08:34:28.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.143" endtime="20201110 08:34:28.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.142" endtime="20201110 08:34:28.532"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.540" endtime="20201110 08:34:28.555"></status>
</kw>
<msg timestamp="20201110 08:34:28.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.539" endtime="20201110 08:34:28.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.557" endtime="20201110 08:34:28.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.559" endtime="20201110 08:34:28.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.536" endtime="20201110 08:34:28.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.534" endtime="20201110 08:34:28.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.569" endtime="20201110 08:34:28.855"></status>
</kw>
<msg timestamp="20201110 08:34:28.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.568" endtime="20201110 08:34:28.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.859" endtime="20201110 08:34:28.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.867" endtime="20201110 08:34:28.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.565" endtime="20201110 08:34:28.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.563" endtime="20201110 08:34:28.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.874" level="INFO">${RESULT} = [{'time': 0.021945806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1362000000000871e-05, 'source_diff': 1.1362000000000871e-05}, {'time': 0.021964611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.871" endtime="20201110 08:34:28.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.887" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:28.875" endtime="20201110 08:34:28.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.892" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.891" endtime="20201110 08:34:28.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.894" level="INFO">VALUE: [1.1362000000000871e-05, 1.1457999999998913e-05, 1.0958999999997887e-05, 1.1319999999998692e-05, 1.1027999999999732e-05, 1.1444999999998817e-05, 1.1332999999998788e-05, 1.1014000000000163e-05, 1.1320000000002162e-05, 1.1027999999999732e-05, 1.1319999999998692e-05, 1.1471999999998483e-05, 1.0847000000001328e-05, 1.1347999999997832e-05, 1.0861000000000898e-05, 1.1444000000002813e-05, 1.1472000000001953e-05, 1.1332999999998788e-05, 1.0555999999998372e-05, 1.1014000000000163e-05, 1.1375000000000968e-05, 1.1332999999998788e-05, 1.0875000000000468e-05, 1.1318999999999219e-05, 1.1055999999998872e-05, 1.0540999999999329e-05, 1.0902999999999607e-05, 1.1320000000002162e-05, 1.1014000000000163e-05, 1.1027999999999732e-05, 1.0819000000002188e-05, 1.1486000000001523e-05, 1.1416000000000204e-05, 1.1000000000000593e-05, 1.0861000000000898e-05, 1.1459000000001857e-05, 1.1000000000000593e-05, 1.0833000000001758e-05, 1.1028000000003202e-05, 1.0833999999997762e-05, 1.1000000000000593e-05, 1.0860999999997428e-05, 1.0860999999997428e-05, 1.0875000000000468e-05, 1.0889000000000038e-05, 1.1459000000001857e-05, 1.0569999999997942e-05, 1.1471999999998483e-05, 1.0861000000000898e-05, 1.1250000000000843e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.893" endtime="20201110 08:34:28.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.888" endtime="20201110 08:34:28.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.898" endtime="20201110 08:34:28.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.901" endtime="20201110 08:34:28.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.900" endtime="20201110 08:34:28.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.896" endtime="20201110 08:34:28.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.533" endtime="20201110 08:34:28.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.532" endtime="20201110 08:34:28.922"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.930" endtime="20201110 08:34:28.946"></status>
</kw>
<msg timestamp="20201110 08:34:28.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.929" endtime="20201110 08:34:28.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.948" endtime="20201110 08:34:28.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.951" endtime="20201110 08:34:28.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.927" endtime="20201110 08:34:28.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.924" endtime="20201110 08:34:28.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.960" endtime="20201110 08:34:29.246"></status>
</kw>
<msg timestamp="20201110 08:34:29.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.959" endtime="20201110 08:34:29.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.250" endtime="20201110 08:34:29.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.258" endtime="20201110 08:34:29.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.956" endtime="20201110 08:34:29.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.955" endtime="20201110 08:34:29.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.265" level="INFO">${RESULT} = [{'time': 0.021656847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2610999999999178e-05, 'source_diff': 1.2610999999999178e-05}, {'time': 0.021678472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.262" endtime="20201110 08:34:29.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.279" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:29.266" endtime="20201110 08:34:29.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.283" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.282" endtime="20201110 08:34:29.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.286" level="INFO">VALUE: [1.2610999999999178e-05, 1.2403000000001108e-05, 1.2014000000001163e-05, 1.1805999999999622e-05, 1.1944999999999317e-05, 1.1792000000000052e-05, 1.2402000000001634e-05, 1.2402999999997638e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1459000000001857e-05, 1.2708999999999637e-05, 1.2250000000001843e-05, 1.2388999999998068e-05, 1.2332999999999789e-05, 1.2389000000001538e-05, 1.1764000000000913e-05, 1.2778000000001483e-05, 1.1957999999999414e-05, 1.1958999999998887e-05, 1.1902000000001134e-05, 1.2402999999997638e-05, 1.1834000000002232e-05, 1.2207999999999664e-05, 1.1792000000000052e-05, 1.2429999999997304e-05, 1.1957999999999414e-05, 1.2222000000002703e-05, 1.2389000000001538e-05, 1.2403000000001108e-05, 1.2403000000001108e-05, 1.1916000000000704e-05, 1.2250000000001843e-05, 1.2235999999998803e-05, 1.2387999999998595e-05, 1.2417000000000677e-05, 1.2735999999999303e-05, 1.1805999999999622e-05, 1.2180999999999997e-05, 1.1778000000000483e-05, 1.2235999999998803e-05, 1.1820000000002662e-05, 1.1805000000000149e-05, 1.1792000000000052e-05, 1.2278000000000983e-05, 1.2403000000001108e-05, 1.1735999999998303e-05, 1.1805000000000149e-05, 1.1749999999997873e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.284" endtime="20201110 08:34:29.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.280" endtime="20201110 08:34:29.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.289" endtime="20201110 08:34:29.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.292" endtime="20201110 08:34:29.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.291" endtime="20201110 08:34:29.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.287" endtime="20201110 08:34:29.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.923" endtime="20201110 08:34:29.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.922" endtime="20201110 08:34:29.313"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.322" endtime="20201110 08:34:29.336"></status>
</kw>
<msg timestamp="20201110 08:34:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.320" endtime="20201110 08:34:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.338" endtime="20201110 08:34:29.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.340" endtime="20201110 08:34:29.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.318" endtime="20201110 08:34:29.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.316" endtime="20201110 08:34:29.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.350" endtime="20201110 08:34:29.635"></status>
</kw>
<msg timestamp="20201110 08:34:29.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.348" endtime="20201110 08:34:29.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.640" endtime="20201110 08:34:29.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.648" endtime="20201110 08:34:29.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.346" endtime="20201110 08:34:29.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.344" endtime="20201110 08:34:29.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.655" level="INFO">${RESULT} = [{'time': 0.021861611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.021884292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.651" endtime="20201110 08:34:29.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.669" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:29.656" endtime="20201110 08:34:29.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.674" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.673" endtime="20201110 08:34:29.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.676" level="INFO">VALUE: [1.4027999999999263e-05, 1.2917000000001178e-05, 1.3333000000000789e-05, 1.3638999999999318e-05, 1.3319000000001219e-05, 1.3167000000001428e-05, 1.2639000000001788e-05, 1.3151999999998915e-05, 1.2888999999998568e-05, 1.3638999999999318e-05, 1.3179999999998054e-05, 1.3306000000001122e-05, 1.3681000000001498e-05, 1.2875000000002468e-05, 1.2861999999998902e-05, 1.3611000000000179e-05, 1.2875000000002468e-05, 1.3180000000001524e-05, 1.3151999999998915e-05, 1.3194000000001094e-05, 1.3693999999998124e-05, 1.3166000000001954e-05, 1.2820000000000192e-05, 1.3319000000001219e-05, 1.2874999999998998e-05, 1.3179999999998054e-05, 1.2846999999999859e-05, 1.2917000000001178e-05, 1.2874999999998998e-05, 1.2846999999999859e-05, 1.3333000000000789e-05, 1.3651999999999415e-05, 1.2889000000002038e-05, 1.2888999999998568e-05, 1.3333000000000789e-05, 1.3209000000000137e-05, 1.3179999999998054e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.3333000000000789e-05, 1.3194000000001094e-05, 1.3333000000000789e-05, 1.3319000000001219e-05, 1.3346999999996889e-05, 1.3638999999999318e-05, 1.3180999999997528e-05, 1.3194000000001094e-05, 1.3666999999998458e-05, 1.3389000000002538e-05, 1.3651999999999415e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.675" endtime="20201110 08:34:29.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.670" endtime="20201110 08:34:29.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.680" endtime="20201110 08:34:29.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.683" endtime="20201110 08:34:29.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.681" endtime="20201110 08:34:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.678" endtime="20201110 08:34:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.314" endtime="20201110 08:34:29.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.313" endtime="20201110 08:34:29.704"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.712" endtime="20201110 08:34:29.727"></status>
</kw>
<msg timestamp="20201110 08:34:29.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.710" endtime="20201110 08:34:29.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.728" endtime="20201110 08:34:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.731" endtime="20201110 08:34:29.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.708" endtime="20201110 08:34:29.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.706" endtime="20201110 08:34:29.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.741" endtime="20201110 08:34:30.025"></status>
</kw>
<msg timestamp="20201110 08:34:30.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.739" endtime="20201110 08:34:30.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.029" endtime="20201110 08:34:30.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.037" endtime="20201110 08:34:30.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.737" endtime="20201110 08:34:30.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.735" endtime="20201110 08:34:30.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.044" level="INFO">${RESULT} = [{'time': 0.021869583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.021891167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.040" endtime="20201110 08:34:30.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.057" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:30.045" endtime="20201110 08:34:30.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.062" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.061" endtime="20201110 08:34:30.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.064" level="INFO">VALUE: [1.4472000000001484e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.377699999999954e-05, 1.3556000000001373e-05, 1.380499999999868e-05, 1.4278000000002983e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.3777999999999013e-05, 1.4111000000000679e-05, 1.4639000000000318e-05, 1.380499999999868e-05, 1.4097000000001109e-05, 1.4111000000000679e-05, 1.3777999999999013e-05, 1.4568999999999e-05, 1.4569999999998473e-05, 1.4568999999999e-05, 1.3722000000000734e-05, 1.4179999999999054e-05, 1.3791999999998583e-05, 1.3638999999999318e-05, 1.4569999999998473e-05, 1.4569000000002469e-05, 1.3763999999999443e-05, 1.4098000000000582e-05, 1.3805000000002149e-05, 1.4125000000000248e-05, 1.455499999999943e-05, 1.458299999999857e-05, 1.4263999999999943e-05, 1.4291999999999083e-05, 1.377699999999954e-05, 1.4597000000001609e-05, 1.4569000000002469e-05, 1.3777999999999013e-05, 1.426300000000047e-05, 1.4250000000000373e-05, 1.4568999999999e-05, 1.3805000000002149e-05, 1.4570000000001943e-05, 1.3763999999999443e-05, 1.4569000000002469e-05, 1.379099999999911e-05, 1.4098000000000582e-05, 1.3792000000002053e-05, 1.4193999999998624e-05, 1.3806000000001623e-05, 1.4277999999999513e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.063" endtime="20201110 08:34:30.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.058" endtime="20201110 08:34:30.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.068" endtime="20201110 08:34:30.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.071" endtime="20201110 08:34:30.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.069" endtime="20201110 08:34:30.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.066" endtime="20201110 08:34:30.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.704" endtime="20201110 08:34:30.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.704" endtime="20201110 08:34:30.092"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.100" endtime="20201110 08:34:30.115"></status>
</kw>
<msg timestamp="20201110 08:34:30.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.099" endtime="20201110 08:34:30.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.117" endtime="20201110 08:34:30.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.119" endtime="20201110 08:34:30.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.096" endtime="20201110 08:34:30.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.094" endtime="20201110 08:34:30.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.129" endtime="20201110 08:34:30.414"></status>
</kw>
<msg timestamp="20201110 08:34:30.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.127" endtime="20201110 08:34:30.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.418" endtime="20201110 08:34:30.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.427" endtime="20201110 08:34:30.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.125" endtime="20201110 08:34:30.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.123" endtime="20201110 08:34:30.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.434" level="INFO">${RESULT} = [{'time': 0.022097069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5402000000001165e-05, 'source_diff': 1.5402000000001165e-05}, {'time': 0.022113611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.430" endtime="20201110 08:34:30.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.447" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:30.435" endtime="20201110 08:34:30.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.451" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.450" endtime="20201110 08:34:30.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.454" level="INFO">VALUE: [1.5402000000001165e-05, 1.4721999999998264e-05, 1.5166999999999958e-05, 1.5166000000000485e-05, 1.5111000000001679e-05, 1.4708000000002164e-05, 1.563899999999785e-05, 1.5166000000000485e-05, 1.4694999999998598e-05, 1.4709000000001637e-05, 1.5180999999999528e-05, 1.551299999999825e-05, 1.5500000000001624e-05, 1.5166000000000485e-05, 1.4709000000001637e-05, 1.5651999999997945e-05, 1.5485999999998584e-05, 1.5028000000000263e-05, 1.4722000000001734e-05, 1.5180999999999528e-05, 1.4708000000002164e-05, 1.5166999999999958e-05, 1.4708999999998168e-05, 1.5014000000000693e-05, 1.5542000000000333e-05, 1.4736000000001304e-05, 1.4723000000001207e-05, 1.5471999999999014e-05, 1.5499999999998154e-05, 1.5473000000001957e-05, 1.5499999999998154e-05, 1.5028000000000263e-05, 1.4707999999998694e-05, 1.4693999999999124e-05, 1.5499999999998154e-05, 1.5041999999999833e-05, 1.5194999999999098e-05, 1.5513999999997724e-05, 1.4707999999998694e-05, 1.5207999999999194e-05, 1.5542000000000333e-05, 1.4665999999999985e-05, 1.5180000000000055e-05, 1.5485999999998584e-05, 1.5166999999999958e-05, 1.5028000000000263e-05, 1.566700000000046e-05, 1.5485999999998584e-05, 1.4735999999997834e-05, 1.4722000000001734e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.452" endtime="20201110 08:34:30.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.448" endtime="20201110 08:34:30.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.461" endtime="20201110 08:34:30.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.464" endtime="20201110 08:34:30.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.463" endtime="20201110 08:34:30.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.459" endtime="20201110 08:34:30.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.093" endtime="20201110 08:34:30.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.092" endtime="20201110 08:34:30.485"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.494" endtime="20201110 08:34:30.508"></status>
</kw>
<msg timestamp="20201110 08:34:30.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.492" endtime="20201110 08:34:30.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.510" endtime="20201110 08:34:30.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.512" endtime="20201110 08:34:30.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.490" endtime="20201110 08:34:30.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.488" endtime="20201110 08:34:30.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.522" endtime="20201110 08:34:30.807"></status>
</kw>
<msg timestamp="20201110 08:34:30.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.521" endtime="20201110 08:34:30.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.811" endtime="20201110 08:34:30.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.819" endtime="20201110 08:34:30.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.518" endtime="20201110 08:34:30.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.516" endtime="20201110 08:34:30.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.826" level="INFO">${RESULT} = [{'time': 0.021842681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6333999999999793e-05, 'source_diff': 1.6333999999999793e-05}, {'time': 0.021862486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:30.823" endtime="20201110 08:34:30.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.840" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:30.827" endtime="20201110 08:34:30.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.844" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.843" endtime="20201110 08:34:30.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.847" level="INFO">VALUE: [1.6333999999999793e-05, 1.609699999999964e-05, 1.643100000000078e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.659700000000014e-05, 1.611099999999921e-05, 1.590300000000114e-05, 1.604099999999789e-05, 1.588900000000157e-05, 1.601299999999875e-05, 1.656899999999753e-05, 1.60690000000005e-05, 1.563899999999785e-05, 1.5915999999997765e-05, 1.5986000000002554e-05, 1.6430000000001305e-05, 1.5971999999999514e-05, 1.5971999999999514e-05, 1.643100000000078e-05, 1.6444000000000875e-05, 1.6069999999999973e-05, 1.5707999999999694e-05, 1.633300000000032e-05, 1.611100000000268e-05, 1.5971999999999514e-05, 1.611099999999921e-05, 1.561099999999871e-05, 1.5986000000002554e-05, 1.559699999999914e-05, 1.565300000000089e-05, 1.6569000000001e-05, 1.5971999999999514e-05, 1.5957999999999944e-05, 1.6570000000000473e-05, 1.5957999999999944e-05, 1.658300000000057e-05, 1.6570000000000473e-05, 1.5972999999998988e-05, 1.6097999999999113e-05, 1.5944999999999848e-05, 1.612499999999878e-05, 1.658300000000057e-05, 1.6152000000001915e-05, 1.6570000000000473e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.6570000000000473e-05, 1.611099999999921e-05, 1.658300000000057e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.845" endtime="20201110 08:34:30.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.840" endtime="20201110 08:34:30.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.850" endtime="20201110 08:34:30.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.853" endtime="20201110 08:34:30.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.852" endtime="20201110 08:34:30.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.848" endtime="20201110 08:34:30.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.486" endtime="20201110 08:34:30.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.486" endtime="20201110 08:34:30.874"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.883" endtime="20201110 08:34:30.897"></status>
</kw>
<msg timestamp="20201110 08:34:30.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.881" endtime="20201110 08:34:30.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.899" endtime="20201110 08:34:30.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.901" endtime="20201110 08:34:30.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.879" endtime="20201110 08:34:30.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.877" endtime="20201110 08:34:30.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.911" endtime="20201110 08:34:31.195"></status>
</kw>
<msg timestamp="20201110 08:34:31.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.910" endtime="20201110 08:34:31.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.199" endtime="20201110 08:34:31.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.207" endtime="20201110 08:34:31.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.907" endtime="20201110 08:34:31.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.905" endtime="20201110 08:34:31.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.214" level="INFO">${RESULT} = [{'time': 0.021832639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.740300000000264e-05, 'source_diff': 1.740300000000264e-05}, {'time': 0.021857458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.211" endtime="20201110 08:34:31.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.231" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:31.215" endtime="20201110 08:34:31.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.238" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.236" endtime="20201110 08:34:31.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.243" level="INFO">VALUE: [1.740300000000264e-05, 1.7500000000000154e-05, 1.68889999999991e-05, 1.6875000000003e-05, 1.7042000000001833e-05, 1.7305999999998184e-05, 1.7500000000000154e-05, 1.702699999999932e-05, 1.734699999999742e-05, 1.68889999999991e-05, 1.733299999999785e-05, 1.68889999999991e-05, 1.654100000000186e-05, 1.7500000000000154e-05, 1.7499999999996685e-05, 1.7013999999999224e-05, 1.7055999999997934e-05, 1.7514000000003194e-05, 1.690300000000214e-05, 1.6887999999999626e-05, 1.7486000000000584e-05, 1.690300000000214e-05, 1.6528000000001764e-05, 1.687499999999953e-05, 1.7513999999999724e-05, 1.7334000000000793e-05, 1.7500000000000154e-05, 1.690300000000214e-05, 1.7485999999997115e-05, 1.6887999999999626e-05, 1.687499999999953e-05, 1.7042000000001833e-05, 1.7499999999996685e-05, 1.733299999999785e-05, 1.6986000000000084e-05, 1.7348000000000363e-05, 1.736099999999699e-05, 1.7486000000000584e-05, 1.734700000000089e-05, 1.7541999999998864e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.691699999999824e-05, 1.7027999999998794e-05, 1.734700000000089e-05, 1.702699999999932e-05, 1.7014000000002694e-05, 1.7013999999999224e-05, 1.736100000000046e-05, 1.661099999999971e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.240" endtime="20201110 08:34:31.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.233" endtime="20201110 08:34:31.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.250" endtime="20201110 08:34:31.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.254" endtime="20201110 08:34:31.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.252" endtime="20201110 08:34:31.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.247" endtime="20201110 08:34:31.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.875" endtime="20201110 08:34:31.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.874" endtime="20201110 08:34:31.275"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.283" endtime="20201110 08:34:31.299"></status>
</kw>
<msg timestamp="20201110 08:34:31.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.282" endtime="20201110 08:34:31.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.300" endtime="20201110 08:34:31.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.303" endtime="20201110 08:34:31.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.279" endtime="20201110 08:34:31.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.277" endtime="20201110 08:34:31.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.312" endtime="20201110 08:34:31.598"></status>
</kw>
<msg timestamp="20201110 08:34:31.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.311" endtime="20201110 08:34:31.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.602" endtime="20201110 08:34:31.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.610" endtime="20201110 08:34:31.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.309" endtime="20201110 08:34:31.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.307" endtime="20201110 08:34:31.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.617" level="INFO">${RESULT} = [{'time': 0.021854722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834699999999842e-05, 'source_diff': 1.834699999999842e-05}, {'time': 0.021875375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.614" endtime="20201110 08:34:31.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.630" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:31.618" endtime="20201110 08:34:31.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.635" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.634" endtime="20201110 08:34:31.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.637" level="INFO">VALUE: [1.834699999999842e-05, 1.7471999999997545e-05, 1.841699999999974e-05, 1.7972000000001515e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.791699999999924e-05, 1.843100000000278e-05, 1.83890000000006e-05, 1.781900000000225e-05, 1.7805999999998684e-05, 1.783300000000182e-05, 1.8278000000000044e-05, 1.781900000000225e-05, 1.8000000000000654e-05, 1.8264000000000474e-05, 1.780499999999921e-05, 1.78890000000001e-05, 1.8402000000000696e-05, 1.7805999999998684e-05, 1.8319999999998754e-05, 1.78890000000001e-05, 1.7971999999998045e-05, 1.841699999999974e-05, 1.830499999999971e-05, 1.7957999999998475e-05, 1.7943999999998905e-05, 1.8443999999999405e-05, 1.7805999999998684e-05, 1.844499999999888e-05, 1.7971999999998045e-05, 1.802700000000032e-05, 1.781900000000225e-05, 1.7972000000001515e-05, 1.7736000000000834e-05, 1.8250000000000904e-05, 1.8750000000001404e-05, 1.8278000000000044e-05, 1.8264000000000474e-05, 1.8250000000000904e-05, 1.8735999999998365e-05, 1.8402000000000696e-05, 1.7958000000001945e-05, 1.7820000000001723e-05, 1.836100000000146e-05, 1.7957999999998475e-05, 1.841699999999974e-05, 1.8263000000001e-05, 1.844499999999888e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.636" endtime="20201110 08:34:31.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.631" endtime="20201110 08:34:31.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.641" endtime="20201110 08:34:31.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.644" endtime="20201110 08:34:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.643" endtime="20201110 08:34:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.639" endtime="20201110 08:34:31.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.276" endtime="20201110 08:34:31.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.275" endtime="20201110 08:34:31.665"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.673" endtime="20201110 08:34:31.689"></status>
</kw>
<msg timestamp="20201110 08:34:31.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.672" endtime="20201110 08:34:31.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.691" endtime="20201110 08:34:31.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.693" endtime="20201110 08:34:31.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.669" endtime="20201110 08:34:31.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.667" endtime="20201110 08:34:31.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.703" endtime="20201110 08:34:31.988"></status>
</kw>
<msg timestamp="20201110 08:34:31.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.702" endtime="20201110 08:34:31.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.993" endtime="20201110 08:34:32.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.001" endtime="20201110 08:34:32.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.699" endtime="20201110 08:34:32.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.697" endtime="20201110 08:34:32.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.008" level="INFO">${RESULT} = [{'time': 0.022024556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9570000000000004e-05, 'source_diff': 1.9570000000000004e-05}, {'time': 0.022045139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:32.004" endtime="20201110 08:34:32.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.021" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:32.009" endtime="20201110 08:34:32.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.026" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.025" endtime="20201110 08:34:32.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.028" level="INFO">VALUE: [1.9570000000000004e-05, 1.888899999999763e-05, 1.9430000000000835e-05, 1.8736000000001835e-05, 1.9165999999997546e-05, 1.936099999999899e-05, 1.8735999999998365e-05, 1.887499999999806e-05, 1.934699999999942e-05, 1.891700000000024e-05, 1.937500000000203e-05, 1.9651999999998476e-05, 1.9235999999998865e-05, 1.9679999999997616e-05, 1.9651999999998476e-05, 1.933299999999985e-05, 1.931900000000028e-05, 1.890300000000067e-05, 1.887500000000153e-05, 1.88890000000011e-05, 1.8750000000001404e-05, 1.8819999999999254e-05, 1.965300000000142e-05, 1.9194000000000155e-05, 1.88890000000011e-05, 1.887499999999806e-05, 1.8722000000002265e-05, 1.934699999999942e-05, 1.933299999999985e-05, 1.966699999999752e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.9721999999999795e-05, 1.8735999999998365e-05, 1.8957999999999475e-05, 1.8750000000001404e-05, 1.865300000000042e-05, 1.966700000000099e-05, 1.88890000000011e-05, 1.931900000000028e-05, 1.8750000000001404e-05, 1.9207999999999725e-05, 1.884699999999892e-05, 1.87630000000015e-05, 1.916699999999702e-05, 1.913899999999788e-05, 1.934699999999942e-05, 1.9694000000000655e-05, 1.9194000000000155e-05, 1.887499999999806e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.027" endtime="20201110 08:34:32.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.022" endtime="20201110 08:34:32.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.032" endtime="20201110 08:34:32.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.035" endtime="20201110 08:34:32.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.033" endtime="20201110 08:34:32.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.030" endtime="20201110 08:34:32.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.666" endtime="20201110 08:34:32.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.665" endtime="20201110 08:34:32.056"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.064" endtime="20201110 08:34:32.079"></status>
</kw>
<msg timestamp="20201110 08:34:32.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.063" endtime="20201110 08:34:32.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.081" endtime="20201110 08:34:32.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.083" endtime="20201110 08:34:32.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.060" endtime="20201110 08:34:32.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.058" endtime="20201110 08:34:32.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.093" endtime="20201110 08:34:32.378"></status>
</kw>
<msg timestamp="20201110 08:34:32.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.092" endtime="20201110 08:34:32.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.382" endtime="20201110 08:34:32.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.391" endtime="20201110 08:34:32.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.089" endtime="20201110 08:34:32.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.087" endtime="20201110 08:34:32.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.397" level="INFO">${RESULT} = [{'time': 0.021905736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0179999999998116e-05, 'source_diff': 2.0179999999998116e-05}, {'time': 0.021928514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:32.394" endtime="20201110 08:34:32.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.411" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:32.398" endtime="20201110 08:34:32.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.415" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.414" endtime="20201110 08:34:32.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.418" level="INFO">VALUE: [2.0179999999998116e-05, 2.013899999999888e-05, 2.05969999999972e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.05969999999972e-05, 1.980499999999774e-05, 2.059700000000067e-05, 2.012500000000278e-05, 2.0263999999999005e-05, 1.9694000000000655e-05, 2.0278000000002044e-05, 1.9806000000000684e-05, 2.0291999999998145e-05, 2.0292000000001614e-05, 2.015300000000192e-05, 1.9819999999996785e-05, 1.9778000000001544e-05, 2.05830000000011e-05, 2.061100000000024e-05, 1.9778000000001544e-05, 2.059700000000067e-05, 2.0249999999999435e-05, 2.016700000000149e-05, 2.026299999999953e-05, 2.0278000000002044e-05, 1.980500000000121e-05, 2.0235999999999865e-05, 1.981900000000078e-05, 2.0277999999998575e-05, 1.984699999999992e-05, 1.9833999999999824e-05, 1.965299999999795e-05, 1.9665999999998046e-05, 2.015300000000192e-05, 2.0249999999999435e-05, 2.011099999999974e-05, 2.0263999999999005e-05, 1.983299999999688e-05, 1.980499999999774e-05, 1.9735999999999365e-05, 2.0264000000002474e-05, 1.9806000000000684e-05, 2.0249999999999435e-05, 1.965300000000142e-05, 1.969500000000013e-05, 1.9680000000001086e-05, 2.0555999999997965e-05, 2.0249999999999435e-05, 1.9805999999997215e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.416" endtime="20201110 08:34:32.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.412" endtime="20201110 08:34:32.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.421" endtime="20201110 08:34:32.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.425" endtime="20201110 08:34:32.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.423" endtime="20201110 08:34:32.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.420" endtime="20201110 08:34:32.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.057" endtime="20201110 08:34:32.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.056" endtime="20201110 08:34:32.446"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.454" endtime="20201110 08:34:32.469"></status>
</kw>
<msg timestamp="20201110 08:34:32.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.453" endtime="20201110 08:34:32.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.471" endtime="20201110 08:34:32.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.473" endtime="20201110 08:34:32.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.450" endtime="20201110 08:34:32.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.448" endtime="20201110 08:34:32.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.483" endtime="20201110 08:34:32.771"></status>
</kw>
<msg timestamp="20201110 08:34:32.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:32.482" endtime="20201110 08:34:32.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:32.776" endtime="20201110 08:34:32.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.784" endtime="20201110 08:34:32.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.479" endtime="20201110 08:34:32.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.477" endtime="20201110 08:34:32.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.797" level="INFO">${RESULT} = [{'time': 0.02206775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.156899999999906e-05, 'source_diff': 2.156899999999906e-05}, {'time': 0.022093458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:32.789" endtime="20201110 08:34:32.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.830" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:32.799" endtime="20201110 08:34:32.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.839" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.837" endtime="20201110 08:34:32.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.844" level="INFO">VALUE: [2.156899999999906e-05, 2.1193999999998686e-05, 2.10830000000016e-05, 2.119499999999816e-05, 2.1193999999998686e-05, 2.1069999999998035e-05, 2.0736000000000365e-05, 2.118099999999859e-05, 2.1485999999997646e-05, 2.0722000000000795e-05, 2.166699999999952e-05, 2.1207999999998256e-05, 2.105500000000246e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.1041999999998895e-05, 2.1208000000001725e-05, 2.1541999999999395e-05, 2.1042000000002364e-05, 2.0736000000000365e-05, 2.1584000000001574e-05, 2.166699999999952e-05, 2.105499999999899e-05, 2.1208000000001725e-05, 2.119499999999816e-05, 2.15830000000021e-05, 2.079100000000264e-05, 2.1056000000001934e-05, 2.151300000000078e-05, 2.1193999999998686e-05, 2.1514000000000255e-05, 2.166699999999952e-05, 2.1514000000000255e-05, 2.1041999999998895e-05, 2.0820000000001254e-05, 2.1500000000000685e-05, 2.1084000000001074e-05, 2.1207999999998256e-05, 2.1069999999998035e-05, 2.1070000000001504e-05, 2.1236000000000865e-05, 2.1541999999999395e-05, 2.0722000000000795e-05, 2.1041999999998895e-05, 2.1527999999999825e-05, 2.1070000000001504e-05, 2.116700000000249e-05, 2.1179999999999116e-05, 2.1042000000002364e-05, 2.0736000000000365e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.841" endtime="20201110 08:34:32.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.832" endtime="20201110 08:34:32.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.852" endtime="20201110 08:34:32.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.858" endtime="20201110 08:34:32.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.855" endtime="20201110 08:34:32.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.848" endtime="20201110 08:34:32.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.447" endtime="20201110 08:34:32.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.446" endtime="20201110 08:34:32.883"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.894" endtime="20201110 08:34:32.909"></status>
</kw>
<msg timestamp="20201110 08:34:32.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.892" endtime="20201110 08:34:32.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.911" endtime="20201110 08:34:32.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.913" endtime="20201110 08:34:32.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.890" endtime="20201110 08:34:32.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.888" endtime="20201110 08:34:32.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.923" endtime="20201110 08:34:33.209"></status>
</kw>
<msg timestamp="20201110 08:34:33.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027120347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027142833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.921" endtime="20201110 08:34:33.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027120347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027142833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.213" endtime="20201110 08:34:33.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.221" endtime="20201110 08:34:33.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.919" endtime="20201110 08:34:33.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.917" endtime="20201110 08:34:33.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.229" level="INFO">${RESULT} = [{'time': 0.027142833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2486000000002115e-05, 'source_diff': 2.2486000000002115e-05}, {'time': 0.0271705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.225" endtime="20201110 08:34:33.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.243" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:33.230" endtime="20201110 08:34:33.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.247" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.246" endtime="20201110 08:34:33.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.250" level="INFO">VALUE: [2.2486000000002115e-05, 2.2555999999999965e-05, 2.1679999999999616e-05, 2.2430000000000366e-05, 2.2569999999999535e-05, 2.2583999999999105e-05, 2.213900000000088e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.2583999999999105e-05, 2.169499999999866e-05, 2.213900000000088e-05, 2.213900000000088e-05, 2.1985999999998146e-05, 2.2111999999997745e-05, 2.213899999999741e-05, 2.1652000000000476e-05, 2.248700000000159e-05, 2.25969999999992e-05, 2.243099999999984e-05, 2.256900000000006e-05, 2.1957999999999006e-05, 2.245899999999898e-05, 2.2014000000000755e-05, 2.165299999999995e-05, 2.166700000000299e-05, 2.2457999999999506e-05, 2.244499999999941e-05, 2.197299999999805e-05, 2.1972000000002045e-05, 2.211100000000174e-05, 2.1972000000002045e-05, 2.2111999999997745e-05, 2.243099999999984e-05, 2.24030000000007e-05, 2.195900000000195e-05, 2.212500000000131e-05, 2.2443999999999936e-05, 2.211099999999827e-05, 2.211099999999827e-05, 2.197300000000152e-05, 2.1986000000001615e-05, 2.2485999999998646e-05, 2.2000000000001185e-05, 2.1985999999998146e-05, 2.2485999999998646e-05, 2.2041999999999895e-05, 2.215300000000045e-05, 2.244500000000288e-05, 2.213899999999741e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.248" endtime="20201110 08:34:33.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.244" endtime="20201110 08:34:33.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.253" endtime="20201110 08:34:33.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.257" endtime="20201110 08:34:33.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.255" endtime="20201110 08:34:33.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.251" endtime="20201110 08:34:33.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.885" endtime="20201110 08:34:33.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.884" endtime="20201110 08:34:33.277"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.286" endtime="20201110 08:34:33.301"></status>
</kw>
<msg timestamp="20201110 08:34:33.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.284" endtime="20201110 08:34:33.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.303" endtime="20201110 08:34:33.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.308" endtime="20201110 08:34:33.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.282" endtime="20201110 08:34:33.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.280" endtime="20201110 08:34:33.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.322" endtime="20201110 08:34:33.608"></status>
</kw>
<msg timestamp="20201110 08:34:33.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.320" endtime="20201110 08:34:33.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021898403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.612" endtime="20201110 08:34:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.620" endtime="20201110 08:34:33.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.316" endtime="20201110 08:34:33.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.313" endtime="20201110 08:34:33.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.627" level="INFO">${RESULT} = [{'time': 0.021898403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.021931125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:33.623" endtime="20201110 08:34:33.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:33.629" endtime="20201110 08:34:33.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.646" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.645" endtime="20201110 08:34:33.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.648" level="INFO">VALUE: [2.3735999999999896e-05, 2.331900000000081e-05, 2.293099999999687e-05, 2.3042000000000895e-05, 2.261099999999877e-05, 2.288899999999816e-05, 2.2555999999999965e-05, 2.3361999999998995e-05, 2.3514000000002255e-05, 2.3040999999997952e-05, 2.291700000000077e-05, 2.306900000000056e-05, 2.3012999999998812e-05, 2.3513999999998786e-05, 2.337499999999909e-05, 2.2929999999997397e-05, 2.306900000000056e-05, 2.3040999999997952e-05, 2.3028000000001325e-05, 2.3013999999998286e-05, 2.3040999999997952e-05, 2.293100000000034e-05, 2.336099999999952e-05, 2.305500000000099e-05, 2.305500000000099e-05, 2.3056000000000465e-05, 2.2651999999998007e-05, 2.333300000000038e-05, 2.2985999999999146e-05, 2.25969999999992e-05, 2.340299999999823e-05, 2.3054999999997522e-05, 2.290299999999773e-05, 2.3056000000000465e-05, 2.258299999999963e-05, 2.3514000000002255e-05, 2.337500000000256e-05, 2.312499999999884e-05, 2.336099999999952e-05, 2.337500000000256e-05, 2.263900000000138e-05, 2.3513999999998786e-05, 2.336100000000299e-05, 2.312499999999884e-05, 2.304100000000142e-05, 2.288899999999816e-05, 2.290299999999773e-05, 2.259700000000267e-05, 2.304100000000142e-05, 2.3056000000000465e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.647" endtime="20201110 08:34:33.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.642" endtime="20201110 08:34:33.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.652" endtime="20201110 08:34:33.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.655" endtime="20201110 08:34:33.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.654" endtime="20201110 08:34:33.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.650" endtime="20201110 08:34:33.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.278" endtime="20201110 08:34:33.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.278" endtime="20201110 08:34:33.676"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.685" endtime="20201110 08:34:33.700"></status>
</kw>
<msg timestamp="20201110 08:34:33.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.683" endtime="20201110 08:34:33.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.701" endtime="20201110 08:34:33.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.704" endtime="20201110 08:34:33.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.681" endtime="20201110 08:34:33.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.679" endtime="20201110 08:34:33.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.714" endtime="20201110 08:34:34.000"></status>
</kw>
<msg timestamp="20201110 08:34:34.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.712" endtime="20201110 08:34:34.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.004" endtime="20201110 08:34:34.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.012" endtime="20201110 08:34:34.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.710" endtime="20201110 08:34:34.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.708" endtime="20201110 08:34:34.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.019" level="INFO">${RESULT} = [{'time': 0.021837083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.512500000000084e-05, 'source_diff': 2.512500000000084e-05}, {'time': 0.021867847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.016" endtime="20201110 08:34:34.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.034" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:34.020" endtime="20201110 08:34:34.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.039" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.038" endtime="20201110 08:34:34.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.041" level="INFO">VALUE: [2.512500000000084e-05, 2.3818999999997842e-05, 2.4305999999998246e-05, 2.3834000000000355e-05, 2.4429999999998897e-05, 2.4291999999998676e-05, 2.383300000000088e-05, 2.3999999999999716e-05, 2.3806000000001215e-05, 2.4027999999998856e-05, 2.4458000000001506e-05, 2.381900000000131e-05, 2.4028000000002325e-05, 2.3846999999996982e-05, 2.441700000000227e-05, 2.4291999999998676e-05, 2.384700000000045e-05, 2.3971999999997107e-05, 2.3986000000000146e-05, 2.3999999999999716e-05, 2.384700000000045e-05, 2.4264000000003005e-05, 2.4304999999998772e-05, 2.3999999999999716e-05, 2.4304999999998772e-05, 2.4263000000000062e-05, 2.3972000000000576e-05, 2.4292000000002145e-05, 2.3513999999998786e-05, 2.386100000000002e-05, 2.3499999999999216e-05, 2.384700000000045e-05, 2.444499999999794e-05, 2.394499999999744e-05, 2.3986000000000146e-05, 2.443099999999837e-05, 2.384700000000045e-05, 2.4290999999999202e-05, 2.3818999999997842e-05, 2.3820000000000785e-05, 2.4444000000001936e-05, 2.3818999999997842e-05, 2.4443999999998467e-05, 2.3972000000000576e-05, 2.3972000000000576e-05, 2.397300000000005e-05, 2.4764000000000036e-05, 2.397300000000005e-05, 2.441700000000227e-05, 2.383300000000088e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.040" endtime="20201110 08:34:34.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.035" endtime="20201110 08:34:34.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.044" endtime="20201110 08:34:34.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.048" endtime="20201110 08:34:34.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.046" endtime="20201110 08:34:34.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.043" endtime="20201110 08:34:34.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.677" endtime="20201110 08:34:34.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.676" endtime="20201110 08:34:34.069"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.077" endtime="20201110 08:34:34.093"></status>
</kw>
<msg timestamp="20201110 08:34:34.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.076" endtime="20201110 08:34:34.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.094" endtime="20201110 08:34:34.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.097" endtime="20201110 08:34:34.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.073" endtime="20201110 08:34:34.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.071" endtime="20201110 08:34:34.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.106" endtime="20201110 08:34:34.392"></status>
</kw>
<msg timestamp="20201110 08:34:34.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.105" endtime="20201110 08:34:34.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.396" endtime="20201110 08:34:34.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.404" endtime="20201110 08:34:34.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.102" endtime="20201110 08:34:34.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.101" endtime="20201110 08:34:34.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.411" level="INFO">${RESULT} = [{'time': 0.022003514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.022036, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:34.408" endtime="20201110 08:34:34.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.426" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:34.412" endtime="20201110 08:34:34.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.431" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.430" endtime="20201110 08:34:34.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.434" level="INFO">VALUE: [2.5582999999999162e-05, 2.49169999999993e-05, 2.4888000000000687e-05, 2.533300000000238e-05, 2.5221999999998357e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.568099999999962e-05, 2.5249999999997497e-05, 2.5291000000000202e-05, 2.537500000000109e-05, 2.5360999999998052e-05, 2.568100000000309e-05, 2.4971999999998107e-05, 2.5235999999997927e-05, 2.490299999999973e-05, 2.5693999999999717e-05, 2.537499999999762e-05, 2.5693999999999717e-05, 2.537500000000109e-05, 2.4721999999997857e-05, 2.4915999999999827e-05, 2.5179999999999647e-05, 2.49169999999993e-05, 2.568099999999962e-05, 2.5222000000001826e-05, 2.4777999999999606e-05, 2.4902000000000257e-05, 2.5320000000002285e-05, 2.5278000000000106e-05, 2.487500000000059e-05, 2.5194000000002686e-05, 2.537499999999762e-05, 2.5207999999998787e-05, 2.4679999999999147e-05, 2.4749999999996997e-05, 2.488900000000016e-05, 2.490299999999973e-05, 2.566700000000005e-05, 2.49169999999993e-05, 2.5222000000001826e-05, 2.54169999999998e-05, 2.488900000000016e-05, 2.522299999999783e-05, 2.5749999999997997e-05, 2.4820000000001785e-05, 2.4763999999996567e-05, 2.566700000000005e-05, 2.5222000000001826e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.432" endtime="20201110 08:34:34.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.427" endtime="20201110 08:34:34.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.437" endtime="20201110 08:34:34.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.440" endtime="20201110 08:34:34.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.439" endtime="20201110 08:34:34.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.436" endtime="20201110 08:34:34.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.070" endtime="20201110 08:34:34.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.069" endtime="20201110 08:34:34.461"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.470" endtime="20201110 08:34:34.485"></status>
</kw>
<msg timestamp="20201110 08:34:34.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.468" endtime="20201110 08:34:34.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.487" endtime="20201110 08:34:34.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.489" endtime="20201110 08:34:34.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.466" endtime="20201110 08:34:34.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.464" endtime="20201110 08:34:34.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.499" endtime="20201110 08:34:34.785"></status>
</kw>
<msg timestamp="20201110 08:34:34.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.497" endtime="20201110 08:34:34.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.789" endtime="20201110 08:34:34.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.797" endtime="20201110 08:34:34.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.495" endtime="20201110 08:34:34.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.493" endtime="20201110 08:34:34.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.804" level="INFO">${RESULT} = [{'time': 0.021799556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6069999999999566e-05, 'source_diff': 2.6069999999999566e-05}, {'time': 0.021834319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:34.801" endtime="20201110 08:34:34.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.818" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:34.805" endtime="20201110 08:34:34.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.822" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.821" endtime="20201110 08:34:34.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.824" level="INFO">VALUE: [2.6069999999999566e-05, 2.5818999999999842e-05, 2.6097999999998706e-05, 2.6152000000001507e-05, 2.5792000000000176e-05, 2.6124999999998372e-05, 2.665300000000148e-05, 2.566700000000005e-05, 2.6332999999999912e-05, 2.5818999999999842e-05, 2.562500000000134e-05, 2.661100000000277e-05, 2.6151999999998038e-05, 2.6291000000001202e-05, 2.590300000000073e-05, 2.6305000000000772e-05, 2.613899999999794e-05, 2.613899999999794e-05, 2.613899999999794e-05, 2.6570000000000066e-05, 2.6278000000001106e-05, 2.6596999999999732e-05, 2.62230000000023e-05, 2.6624999999998872e-05, 2.5832999999999412e-05, 2.5832999999999412e-05, 2.5749999999997997e-05, 2.661100000000277e-05, 2.612500000000184e-05, 2.6610999999999302e-05, 2.6319000000000342e-05, 2.5819999999999316e-05, 2.6110999999998802e-05, 2.613900000000141e-05, 2.566700000000005e-05, 2.5832999999999412e-05, 2.5693999999999717e-05, 2.615300000000098e-05, 2.6278000000001106e-05, 2.562500000000134e-05, 2.6305000000000772e-05, 2.6292000000000676e-05, 2.665300000000148e-05, 2.611100000000227e-05, 2.613899999999794e-05, 2.6306000000000246e-05, 2.6290999999997733e-05, 2.6290999999997733e-05, 2.6610999999999302e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.823" endtime="20201110 08:34:34.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.819" endtime="20201110 08:34:34.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.829" endtime="20201110 08:34:34.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.833" endtime="20201110 08:34:34.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.831" endtime="20201110 08:34:34.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.827" endtime="20201110 08:34:34.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.462" endtime="20201110 08:34:34.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.462" endtime="20201110 08:34:34.853"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.862" endtime="20201110 08:34:34.878"></status>
</kw>
<msg timestamp="20201110 08:34:34.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.860" endtime="20201110 08:34:34.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.879" endtime="20201110 08:34:34.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.882" endtime="20201110 08:34:34.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.858" endtime="20201110 08:34:34.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.856" endtime="20201110 08:34:34.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.891" endtime="20201110 08:34:35.178"></status>
</kw>
<msg timestamp="20201110 08:34:35.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.890" endtime="20201110 08:34:35.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.183" endtime="20201110 08:34:35.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.191" endtime="20201110 08:34:35.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.887" endtime="20201110 08:34:35.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.886" endtime="20201110 08:34:35.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.198" level="INFO">${RESULT} = [{'time': 0.022012181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8097999999997236e-05, 'source_diff': 2.8097999999997236e-05}, {'time': 0.022048958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:35.194" endtime="20201110 08:34:35.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.211" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:35.199" endtime="20201110 08:34:35.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.216" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.215" endtime="20201110 08:34:35.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.218" level="INFO">VALUE: [2.8097999999997236e-05, 2.7055000000001522e-05, 2.6749999999998997e-05, 2.7526999999999413e-05, 2.7070000000000566e-05, 2.722299999999983e-05, 2.7540999999998983e-05, 2.7540999999998983e-05, 2.7041000000001952e-05, 2.7069000000001092e-05, 2.7264000000002536e-05, 2.7569000000001592e-05, 2.6764000000002036e-05, 2.6735999999999427e-05, 2.7110999999999802e-05, 2.7014000000002286e-05, 2.7527999999998887e-05, 2.7083000000000662e-05, 2.6610999999999302e-05, 2.6735999999999427e-05, 2.719500000000069e-05, 2.7513999999999317e-05, 2.7583000000001162e-05, 2.6778000000001606e-05, 2.7056000000000996e-05, 2.7527999999998887e-05, 2.7083000000000662e-05, 2.7222000000000357e-05, 2.7542000000001926e-05, 2.6750000000002466e-05, 2.7555999999998027e-05, 2.7556000000001496e-05, 2.7068999999997623e-05, 2.7082999999997193e-05, 2.7194000000001217e-05, 2.6778000000001606e-05, 2.715300000000198e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.7526999999999413e-05, 2.7207999999997318e-05, 2.6764000000002036e-05, 2.6750000000002466e-05, 2.7222000000000357e-05, 2.7194000000001217e-05, 2.6764000000002036e-05, 2.7180000000001647e-05, 2.7068999999997623e-05, 2.769499999999772e-05, 2.6721999999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.217" endtime="20201110 08:34:35.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.212" endtime="20201110 08:34:35.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.222" endtime="20201110 08:34:35.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.225" endtime="20201110 08:34:35.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.224" endtime="20201110 08:34:35.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.220" endtime="20201110 08:34:35.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.854" endtime="20201110 08:34:35.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.854" endtime="20201110 08:34:35.246"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.254" endtime="20201110 08:34:35.271"></status>
</kw>
<msg timestamp="20201110 08:34:35.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.253" endtime="20201110 08:34:35.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.272" endtime="20201110 08:34:35.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.274" endtime="20201110 08:34:35.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.250" endtime="20201110 08:34:35.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.248" endtime="20201110 08:34:35.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.284" endtime="20201110 08:34:35.572"></status>
</kw>
<msg timestamp="20201110 08:34:35.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.283" endtime="20201110 08:34:35.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.576" endtime="20201110 08:34:35.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.585" endtime="20201110 08:34:35.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.280" endtime="20201110 08:34:35.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.279" endtime="20201110 08:34:35.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.592" level="INFO">${RESULT} = [{'time': 0.022151847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8818999999999373e-05, 'source_diff': 2.8818999999999373e-05}, {'time': 0.022184514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:35.588" endtime="20201110 08:34:35.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.606" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:35.593" endtime="20201110 08:34:35.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.611" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.609" endtime="20201110 08:34:35.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.614" level="INFO">VALUE: [2.8818999999999373e-05, 2.8152999999999512e-05, 2.8597000000001732e-05, 2.8457999999998568e-05, 2.8013999999999817e-05, 2.848699999999718e-05, 2.845900000000151e-05, 2.8471999999998138e-05, 2.8125000000000372e-05, 2.8082999999998193e-05, 2.8000000000000247e-05, 2.7679999999998678e-05, 2.766700000000205e-05, 2.84170000000028e-05, 2.8152999999999512e-05, 2.8472000000001607e-05, 2.8000000000000247e-05, 2.8152999999999512e-05, 2.7986000000000677e-05, 2.7693999999998248e-05, 2.816700000000255e-05, 2.8041999999998957e-05, 2.8152000000000038e-05, 2.8582999999998693e-05, 2.8000000000000247e-05, 2.8207999999998318e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.768099999999815e-05, 2.769500000000119e-05, 2.845900000000151e-05, 2.8111000000000802e-05, 2.84309999999989e-05, 2.8625000000000872e-05, 2.8000000000000247e-05, 2.8000000000000247e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.8458000000002037e-05, 2.7694000000001717e-05, 2.8596999999998263e-05, 2.8611000000001302e-05, 2.8000000000000247e-05, 2.7749999999999997e-05, 2.815300000000298e-05, 2.8026999999999913e-05, 2.8152999999999512e-05, 2.8471999999998138e-05, 2.8444000000002467e-05, 2.8402999999999762e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.612" endtime="20201110 08:34:35.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.607" endtime="20201110 08:34:35.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.623" endtime="20201110 08:34:35.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.627" endtime="20201110 08:34:35.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.625" endtime="20201110 08:34:35.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.621" endtime="20201110 08:34:35.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.247" endtime="20201110 08:34:35.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.246" endtime="20201110 08:34:35.648"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.657" endtime="20201110 08:34:35.672"></status>
</kw>
<msg timestamp="20201110 08:34:35.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.655" endtime="20201110 08:34:35.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.675" endtime="20201110 08:34:35.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.681" endtime="20201110 08:34:35.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.652" endtime="20201110 08:34:35.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.650" endtime="20201110 08:34:35.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.696" endtime="20201110 08:34:35.996"></status>
</kw>
<msg timestamp="20201110 08:34:35.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.694" endtime="20201110 08:34:35.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.000" endtime="20201110 08:34:36.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.009" endtime="20201110 08:34:36.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.690" endtime="20201110 08:34:36.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.688" endtime="20201110 08:34:36.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.016" level="INFO">${RESULT} = [{'time': 0.022566528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9902999999997792e-05, 'source_diff': 2.9902999999997792e-05}, {'time': 0.022605361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.012" endtime="20201110 08:34:36.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.030" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:36.017" endtime="20201110 08:34:36.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.035" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.034" endtime="20201110 08:34:36.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.037" level="INFO">VALUE: [2.9902999999997792e-05, 2.9082999999999193e-05, 2.9513999999997848e-05, 2.9068999999999623e-05, 2.89309999999994e-05, 2.8625000000000872e-05, 2.9375000000001622e-05, 2.9027000000000913e-05, 2.9055000000000053e-05, 2.9055999999999527e-05, 2.9068999999999623e-05, 2.9526999999997944e-05, 2.9375000000001622e-05, 2.9514000000001317e-05, 2.9068999999999623e-05, 2.9389000000001192e-05, 2.8611000000001302e-05, 2.9347999999998486e-05, 2.8929999999999928e-05, 2.94309999999999e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.9068999999999623e-05, 2.9055999999999527e-05, 2.9070000000002566e-05, 2.8916000000000358e-05, 2.9388999999997723e-05, 2.8875000000001122e-05, 2.9041999999999957e-05, 2.9402999999997292e-05, 2.9514000000001317e-05, 2.8985999999998208e-05, 2.8929999999999928e-05, 2.8916999999999832e-05, 2.8611000000001302e-05, 2.8611000000001302e-05, 2.9389000000001192e-05, 2.9069999999999097e-05, 2.8612000000000776e-05, 2.8611000000001302e-05, 2.9556000000000027e-05, 2.8568999999999123e-05, 2.8625000000000872e-05, 2.89309999999994e-05, 2.9540999999997514e-05, 2.8596999999998263e-05, 2.9055000000000053e-05, 2.8916999999999832e-05, 2.9416000000000858e-05, 2.8916999999999832e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.036" endtime="20201110 08:34:36.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.031" endtime="20201110 08:34:36.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.041" endtime="20201110 08:34:36.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.044" endtime="20201110 08:34:36.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.043" endtime="20201110 08:34:36.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.039" endtime="20201110 08:34:36.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.649" endtime="20201110 08:34:36.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.648" endtime="20201110 08:34:36.065"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.074" endtime="20201110 08:34:36.089"></status>
</kw>
<msg timestamp="20201110 08:34:36.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.072" endtime="20201110 08:34:36.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.091" endtime="20201110 08:34:36.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.093" endtime="20201110 08:34:36.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.070" endtime="20201110 08:34:36.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.067" endtime="20201110 08:34:36.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.103" endtime="20201110 08:34:36.388"></status>
</kw>
<msg timestamp="20201110 08:34:36.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.102" endtime="20201110 08:34:36.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.392" endtime="20201110 08:34:36.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.400" endtime="20201110 08:34:36.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.099" endtime="20201110 08:34:36.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.098" endtime="20201110 08:34:36.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.407" level="INFO">${RESULT} = [{'time': 0.022394125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.080600000000128e-05, 'source_diff': 3.080600000000128e-05}, {'time': 0.022429833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:36.404" endtime="20201110 08:34:36.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.421" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:36.408" endtime="20201110 08:34:36.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.425" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.424" endtime="20201110 08:34:36.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.428" level="INFO">VALUE: [3.080600000000128e-05, 2.9971999999999638e-05, 3.045900000000004e-05, 3.0000000000002247e-05, 3.0318999999997404e-05, 2.9527000000001413e-05, 3.0070000000000097e-05, 3.047300000000308e-05, 3.0472000000000138e-05, 2.9931000000000402e-05, 3.0305000000001303e-05, 3.0347000000000013e-05, 3.0375000000002622e-05, 2.9860999999999083e-05, 3.047299999999961e-05, 2.9999999999998778e-05, 2.9985999999999208e-05, 3.0430000000001428e-05, 3.0458000000000568e-05, 2.9556000000000027e-05, 2.9846999999999513e-05, 2.9806000000000277e-05, 3.0458000000000568e-05, 2.9861000000002552e-05, 3.0000000000002247e-05, 3.0430999999997432e-05, 3.04579999999971e-05, 2.9985999999999208e-05, 2.9999999999998778e-05, 2.9819000000000373e-05, 2.9848000000002456e-05, 3.0000000000002247e-05, 2.9846999999999513e-05, 2.9513999999997848e-05, 3.0306000000000777e-05, 3.0000000000002247e-05, 2.9985999999999208e-05, 3.0514000000002317e-05, 2.9874999999998653e-05, 2.9834000000002886e-05, 3.0000000000002247e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 3.0458000000000568e-05, 3.0485999999999708e-05, 2.9846999999999513e-05, 2.9971999999999638e-05, 3.0249999999999028e-05, 3.0444000000000998e-05, 3.0319000000000873e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.426" endtime="20201110 08:34:36.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.422" endtime="20201110 08:34:36.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.431" endtime="20201110 08:34:36.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.435" endtime="20201110 08:34:36.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.433" endtime="20201110 08:34:36.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.430" endtime="20201110 08:34:36.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.066" endtime="20201110 08:34:36.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.065" endtime="20201110 08:34:36.456"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.464" endtime="20201110 08:34:36.481"></status>
</kw>
<msg timestamp="20201110 08:34:36.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.463" endtime="20201110 08:34:36.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.482" endtime="20201110 08:34:36.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.485" endtime="20201110 08:34:36.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.460" endtime="20201110 08:34:36.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.458" endtime="20201110 08:34:36.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.495" endtime="20201110 08:34:36.781"></status>
</kw>
<msg timestamp="20201110 08:34:36.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.493" endtime="20201110 08:34:36.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.789" endtime="20201110 08:34:36.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.803" endtime="20201110 08:34:36.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.491" endtime="20201110 08:34:36.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.489" endtime="20201110 08:34:36.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.810" level="INFO">${RESULT} = [{'time': 0.022510722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2068999999999154e-05, 'source_diff': 3.2068999999999154e-05}, {'time': 0.022547222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.807" endtime="20201110 08:34:36.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.825" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:36.811" endtime="20201110 08:34:36.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.829" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.828" endtime="20201110 08:34:36.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.832" level="INFO">VALUE: [3.2068999999999154e-05, 3.091599999999889e-05, 3.069400000000125e-05, 3.125000000000003e-05, 3.0790999999998764e-05, 3.074999999999953e-05, 3.138899999999972e-05, 3.0750000000003e-05, 3.084700000000051e-05, 3.079100000000223e-05, 3.137500000000015e-05, 3.091699999999836e-05, 3.137500000000015e-05, 3.092999999999846e-05, 3.073599999999996e-05, 3.168100000000215e-05, 3.123600000000046e-05, 3.091700000000183e-05, 3.125000000000003e-05, 3.092999999999846e-05, 3.125000000000003e-05, 3.077800000000214e-05, 3.138800000000025e-05, 3.133300000000144e-05, 3.090299999999879e-05, 3.1444999999998e-05, 3.166700000000258e-05, 3.093099999999793e-05, 3.145900000000104e-05, 3.091700000000183e-05, 3.120800000000132e-05, 3.091699999999836e-05, 3.123600000000046e-05, 3.07639999999991e-05, 3.165300000000301e-05, 3.173600000000096e-05, 3.076400000000257e-05, 3.0776999999999194e-05, 3.07639999999991e-05, 3.122200000000089e-05, 3.090299999999879e-05, 3.079200000000171e-05, 3.0804999999998334e-05, 3.094500000000097e-05, 3.138899999999972e-05, 3.091700000000183e-05, 3.090300000000226e-05, 3.166600000000311e-05, 3.076400000000257e-05, 3.138899999999972e-05]</msg>
<status status="PASS" starttime="20201110 08:34:36.830" endtime="20201110 08:34:36.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.826" endtime="20201110 08:34:36.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.835" endtime="20201110 08:34:36.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.839" endtime="20201110 08:34:36.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.837" endtime="20201110 08:34:36.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.834" endtime="20201110 08:34:36.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.457" endtime="20201110 08:34:36.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.456" endtime="20201110 08:34:36.859"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.868" endtime="20201110 08:34:36.883"></status>
</kw>
<msg timestamp="20201110 08:34:36.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.866" endtime="20201110 08:34:36.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.885" endtime="20201110 08:34:36.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.887" endtime="20201110 08:34:36.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.864" endtime="20201110 08:34:36.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.862" endtime="20201110 08:34:36.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.897" endtime="20201110 08:34:37.183"></status>
</kw>
<msg timestamp="20201110 08:34:37.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.896" endtime="20201110 08:34:37.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.187" endtime="20201110 08:34:37.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.195" endtime="20201110 08:34:37.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.893" endtime="20201110 08:34:37.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.892" endtime="20201110 08:34:37.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.202" level="INFO">${RESULT} = [{'time': 0.021945542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.299999999999831e-05, 'source_diff': 3.299999999999831e-05}, {'time': 0.021980194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:37.199" endtime="20201110 08:34:37.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.215" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:37.203" endtime="20201110 08:34:37.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.220" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.219" endtime="20201110 08:34:37.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.222" level="INFO">VALUE: [3.299999999999831e-05, 3.2138000000001e-05, 3.225000000000103e-05, 3.1846999999998044e-05, 3.216600000000014e-05, 3.2304999999999834e-05, 3.1862000000000557e-05, 3.216699999999961e-05, 3.237500000000115e-05, 3.263900000000097e-05, 3.170800000000182e-05, 3.183399999999795e-05, 3.233400000000192e-05, 3.216699999999961e-05, 3.263900000000097e-05, 3.219500000000222e-05, 3.2624999999997933e-05, 3.231999999999888e-05, 3.231900000000287e-05, 3.169499999999825e-05, 3.181999999999838e-05, 3.238800000000125e-05, 3.218099999999918e-05, 3.223599999999799e-05, 3.1832999999998474e-05, 3.186100000000108e-05, 3.180600000000228e-05, 3.2624999999997933e-05, 3.225000000000103e-05, 3.1846999999998044e-05, 3.172300000000086e-05, 3.187500000000065e-05, 3.230599999999931e-05, 3.170900000000129e-05, 3.2624999999997933e-05, 3.2318999999999404e-05, 3.183300000000194e-05, 3.2318999999999404e-05, 3.169399999999878e-05, 3.170800000000182e-05, 3.180600000000228e-05, 3.181999999999838e-05, 3.184700000000151e-05, 3.177799999999967e-05, 3.230599999999931e-05, 3.26250000000014e-05, 3.230600000000278e-05, 3.166699999999911e-05, 3.231999999999888e-05, 3.265300000000054e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.221" endtime="20201110 08:34:37.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.216" endtime="20201110 08:34:37.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.226" endtime="20201110 08:34:37.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.233" endtime="20201110 08:34:37.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.230" endtime="20201110 08:34:37.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.224" endtime="20201110 08:34:37.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.860" endtime="20201110 08:34:37.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.860" endtime="20201110 08:34:37.258"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.276" endtime="20201110 08:34:37.295"></status>
</kw>
<msg timestamp="20201110 08:34:37.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.273" endtime="20201110 08:34:37.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.298" endtime="20201110 08:34:37.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.303" endtime="20201110 08:34:37.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.267" endtime="20201110 08:34:37.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.263" endtime="20201110 08:34:37.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.324" endtime="20201110 08:34:37.610"></status>
</kw>
<msg timestamp="20201110 08:34:37.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035552903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.321" endtime="20201110 08:34:37.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035552903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.614" endtime="20201110 08:34:37.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.622" endtime="20201110 08:34:37.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.315" endtime="20201110 08:34:37.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.312" endtime="20201110 08:34:37.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.629" level="INFO">${RESULT} = [{'time': 0.035552903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2444999999995126e-05, 'source_diff': 4.2444999999995126e-05}, {'time': 0.035598931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.626" endtime="20201110 08:34:37.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.643" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:37.630" endtime="20201110 08:34:37.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.648" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.647" endtime="20201110 08:34:37.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.651" level="INFO">VALUE: [4.2444999999995126e-05, 4.208399999999779e-05, 4.197200000000123e-05, 4.245799999999522e-05, 4.176399999999969e-05, 4.251400000000044e-05, 4.250000000000087e-05, 4.168000000000227e-05, 4.1804999999998926e-05, 4.1737000000000024e-05, 4.2403000000003355e-05, 4.2375000000004215e-05, 4.2124999999997026e-05, 4.2597000000005325e-05, 4.2417000000002925e-05, 4.1902999999995916e-05, 4.201399999999994e-05, 4.205599999999865e-05, 4.1638999999996096e-05, 4.208399999999779e-05, 4.2152999999996166e-05, 4.201399999999994e-05, 4.2403000000003355e-05, 4.1903000000002855e-05, 4.1667000000002175e-05, 4.2596999999998386e-05, 4.248599999999436e-05, 4.19860000000008e-05, 4.24860000000013e-05, 4.201399999999994e-05, 4.183399999999754e-05, 4.2277000000000287e-05, 4.204199999999908e-05, 4.19860000000008e-05, 4.2374999999997276e-05, 4.227699999999335e-05, 4.241599999999651e-05, 4.1903000000002855e-05, 4.220800000000191e-05, 4.201399999999994e-05, 4.2277000000000287e-05, 4.176399999999969e-05, 4.2111000000004395e-05, 4.244400000000259e-05, 4.2153000000003105e-05, 4.1846999999997636e-05, 4.1903000000002855e-05, 4.1945000000001564e-05, 4.2332999999998566e-05, 4.2445000000002064e-05]</msg>
<status status="PASS" starttime="20201110 08:34:37.650" endtime="20201110 08:34:37.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.644" endtime="20201110 08:34:37.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.655" endtime="20201110 08:34:37.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.659" endtime="20201110 08:34:37.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.657" endtime="20201110 08:34:37.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.653" endtime="20201110 08:34:37.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.260" endtime="20201110 08:34:37.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.259" endtime="20201110 08:34:37.679"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.688" endtime="20201110 08:34:37.704"></status>
</kw>
<msg timestamp="20201110 08:34:37.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.686" endtime="20201110 08:34:37.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.705" endtime="20201110 08:34:37.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.708" endtime="20201110 08:34:37.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.684" endtime="20201110 08:34:37.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.682" endtime="20201110 08:34:37.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.717" endtime="20201110 08:34:38.004"></status>
</kw>
<msg timestamp="20201110 08:34:38.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.716" endtime="20201110 08:34:38.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.009" endtime="20201110 08:34:38.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.017" endtime="20201110 08:34:38.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.713" endtime="20201110 08:34:38.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.712" endtime="20201110 08:34:38.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.024" level="INFO">${RESULT} = [{'time': 0.022064167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3444999999999595e-05, 'source_diff': 4.3444999999999595e-05}, {'time': 0.022114208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.020" endtime="20201110 08:34:38.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.037" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:38.025" endtime="20201110 08:34:38.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.042" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.041" endtime="20201110 08:34:38.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.044" level="INFO">VALUE: [4.3444999999999595e-05, 4.36800000000008e-05, 4.294399999999962e-05, 4.352799999999754e-05, 4.2888999999997346e-05, 4.279199999999983e-05, 4.3166999999996736e-05, 4.331999999999947e-05, 4.348599999999883e-05, 4.355599999999668e-05, 4.301400000000094e-05, 4.351400000000144e-05, 4.3082999999999316e-05, 4.3111000000001926e-05, 4.308399999999879e-05, 4.3653000000001135e-05, 4.3124999999998026e-05, 4.307000000000269e-05, 4.2846999999998636e-05, 4.323599999999858e-05, 4.308399999999879e-05, 4.2708999999998415e-05, 4.2653000000000135e-05, 4.290200000000091e-05, 4.290200000000091e-05, 4.3610999999998956e-05, 4.2737000000001024e-05, 4.327799999999729e-05, 4.288799999999787e-05, 4.3361000000002176e-05, 4.2846999999998636e-05, 4.3360999999998706e-05, 4.2625000000000995e-05, 4.272200000000198e-05, 4.3555000000000677e-05, 4.274999999999765e-05, 4.3055000000000176e-05, 4.347199999999926e-05, 4.2916999999999955e-05, 4.3125000000001495e-05, 4.2639000000000565e-05, 4.327800000000076e-05, 4.2875000000001245e-05, 4.354200000000058e-05, 4.276399999999722e-05, 4.273599999999808e-05, 4.329200000000033e-05, 4.332000000000294e-05, 4.2583000000002286e-05, 4.2861000000001676e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.043" endtime="20201110 08:34:38.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.038" endtime="20201110 08:34:38.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.048" endtime="20201110 08:34:38.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.051" endtime="20201110 08:34:38.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.050" endtime="20201110 08:34:38.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.046" endtime="20201110 08:34:38.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.680" endtime="20201110 08:34:38.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.680" endtime="20201110 08:34:38.072"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.080" endtime="20201110 08:34:38.096"></status>
</kw>
<msg timestamp="20201110 08:34:38.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.079" endtime="20201110 08:34:38.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.098" endtime="20201110 08:34:38.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.100" endtime="20201110 08:34:38.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.076" endtime="20201110 08:34:38.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.074" endtime="20201110 08:34:38.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.116" endtime="20201110 08:34:38.402"></status>
</kw>
<msg timestamp="20201110 08:34:38.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.114" endtime="20201110 08:34:38.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.407" endtime="20201110 08:34:38.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.415" endtime="20201110 08:34:38.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.110" endtime="20201110 08:34:38.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.108" endtime="20201110 08:34:38.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.422" level="INFO">${RESULT} = [{'time': 0.022266069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4055000000001177e-05, 'source_diff': 4.4055000000001177e-05}, {'time': 0.022314097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.418" endtime="20201110 08:34:38.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.435" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:38.423" endtime="20201110 08:34:38.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.440" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.439" endtime="20201110 08:34:38.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.442" level="INFO">VALUE: [4.4055000000001177e-05, 4.451400000000244e-05, 4.404200000000108e-05, 4.431899999999753e-05, 4.4431000000001025e-05, 4.375000000000212e-05, 4.401400000000194e-05, 4.4416999999997986e-05, 4.404200000000108e-05, 4.4124999999999026e-05, 4.427799999999829e-05, 4.424999999999915e-05, 4.3583000000003286e-05, 4.4388999999998846e-05, 4.4374999999999276e-05, 4.3861000000002676e-05, 4.3681000000000275e-05, 4.3667000000000705e-05, 4.3611000000002426e-05, 4.451400000000244e-05, 4.451399999999897e-05, 4.454100000000211e-05, 4.424999999999915e-05, 4.4124999999999026e-05, 4.4236999999999055e-05, 4.420800000000044e-05, 4.424999999999915e-05, 4.376400000000169e-05, 4.447200000000026e-05, 4.443000000000155e-05, 4.391599999999801e-05, 4.377799999999779e-05, 4.391600000000148e-05, 4.457000000000072e-05, 4.424999999999915e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.4431000000001025e-05, 4.447200000000026e-05, 4.394400000000062e-05, 4.401400000000194e-05, 4.4139000000002065e-05, 4.4360999999999706e-05, 4.3916999999997486e-05, 4.432000000000047e-05, 4.3931000000000525e-05, 4.420800000000044e-05, 4.407000000000022e-05, 4.457000000000072e-05, 4.373599999999908e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.441" endtime="20201110 08:34:38.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.436" endtime="20201110 08:34:38.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.446" endtime="20201110 08:34:38.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.449" endtime="20201110 08:34:38.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.447" endtime="20201110 08:34:38.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.444" endtime="20201110 08:34:38.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.073" endtime="20201110 08:34:38.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.072" endtime="20201110 08:34:38.470"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.478" endtime="20201110 08:34:38.494"></status>
</kw>
<msg timestamp="20201110 08:34:38.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.477" endtime="20201110 08:34:38.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.496" endtime="20201110 08:34:38.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.498" endtime="20201110 08:34:38.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.474" endtime="20201110 08:34:38.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.472" endtime="20201110 08:34:38.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.508" endtime="20201110 08:34:38.794"></status>
</kw>
<msg timestamp="20201110 08:34:38.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.507" endtime="20201110 08:34:38.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.798" endtime="20201110 08:34:38.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.806" endtime="20201110 08:34:38.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.504" endtime="20201110 08:34:38.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.502" endtime="20201110 08:34:38.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.813" level="INFO">${RESULT} = [{'time': 0.022122292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5111000000000456e-05, 'source_diff': 4.5111000000000456e-05}, {'time': 0.022177347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.810" endtime="20201110 08:34:38.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.826" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:38.814" endtime="20201110 08:34:38.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.831" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.830" endtime="20201110 08:34:38.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.833" level="INFO">VALUE: [4.5111000000000456e-05, 4.502799999999904e-05, 4.530599999999843e-05, 4.526399999999972e-05, 4.527799999999929e-05, 4.558299999999835e-05, 4.497200000000076e-05, 4.5166999999998736e-05, 4.525000000000015e-05, 4.5402999999999416e-05, 4.5195000000001345e-05, 4.526399999999972e-05, 4.5167000000002205e-05, 4.5209000000000915e-05, 4.529200000000233e-05, 4.504199999999861e-05, 4.507000000000122e-05, 4.55000000000004e-05, 4.5473000000000735e-05, 4.526300000000025e-05, 4.493000000000205e-05, 4.4624999999999526e-05, 4.4847000000000636e-05, 4.49999999999999e-05, 4.473600000000008e-05, 4.541599999999951e-05, 4.552700000000007e-05, 4.4902999999998916e-05, 4.4861000000000206e-05, 4.527800000000276e-05, 4.508299999999785e-05, 4.4945000000001095e-05, 4.5111000000000456e-05, 4.523600000000058e-05, 4.530499999999896e-05, 4.519400000000187e-05, 4.472200000000051e-05, 4.486199999999968e-05, 4.5125000000000026e-05, 4.4973000000000235e-05, 4.5361000000000706e-05, 4.526399999999972e-05, 4.494400000000162e-05, 4.5209000000000915e-05, 4.498600000000033e-05, 4.477799999999879e-05, 4.497200000000076e-05, 4.5375000000000276e-05, 4.4959000000000665e-05, 4.5361000000000706e-05]</msg>
<status status="PASS" starttime="20201110 08:34:38.832" endtime="20201110 08:34:38.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.827" endtime="20201110 08:34:38.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.837" endtime="20201110 08:34:38.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.841" endtime="20201110 08:34:38.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.839" endtime="20201110 08:34:38.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.835" endtime="20201110 08:34:38.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.471" endtime="20201110 08:34:38.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.470" endtime="20201110 08:34:38.861"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.870" endtime="20201110 08:34:38.887"></status>
</kw>
<msg timestamp="20201110 08:34:38.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.868" endtime="20201110 08:34:38.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.888" endtime="20201110 08:34:38.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.890" endtime="20201110 08:34:38.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.866" endtime="20201110 08:34:38.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.864" endtime="20201110 08:34:38.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.900" endtime="20201110 08:34:39.185"></status>
</kw>
<msg timestamp="20201110 08:34:39.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.899" endtime="20201110 08:34:39.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.189" endtime="20201110 08:34:39.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.198" endtime="20201110 08:34:39.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.896" endtime="20201110 08:34:39.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.894" endtime="20201110 08:34:39.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.204" level="INFO">${RESULT} = [{'time': 0.021949014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.636099999999824e-05, 'source_diff': 4.636099999999824e-05}, {'time': 0.022005042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:39.201" endtime="20201110 08:34:39.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.219" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:39.205" endtime="20201110 08:34:39.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.223" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.222" endtime="20201110 08:34:39.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.226" level="INFO">VALUE: [4.636099999999824e-05, 4.5916999999999486e-05, 4.577799999999979e-05, 4.617999999999983e-05, 4.655500000000021e-05, 4.6403000000000416e-05, 4.592999999999958e-05, 4.630499999999996e-05, 4.643000000000008e-05, 4.61939999999994e-05, 4.595799999999872e-05, 4.629199999999986e-05, 4.595799999999872e-05, 4.598600000000133e-05, 4.5666999999999236e-05, 4.601400000000047e-05, 4.645800000000269e-05, 4.572200000000151e-05, 4.5611000000000956e-05, 4.5652999999999666e-05, 4.5861000000001206e-05, 4.607000000000222e-05, 4.652799999999707e-05, 4.576400000000022e-05, 4.575000000000065e-05, 4.65000000000014e-05, 4.5917000000002955e-05, 4.5737000000000555e-05, 4.601400000000047e-05, 4.656899999999978e-05, 4.58329999999986e-05, 4.631899999999953e-05, 4.588800000000087e-05, 4.584699999999817e-05, 4.655599999999968e-05, 4.65139999999975e-05, 4.611099999999799e-05, 4.567999999999933e-05, 4.5611000000000956e-05, 4.604199999999961e-05, 4.641599999999704e-05, 4.627800000000029e-05, 4.652800000000054e-05, 4.595799999999872e-05, 4.627800000000029e-05, 4.651400000000097e-05, 4.658299999999935e-05, 4.5833000000002067e-05, 4.6403000000000416e-05, 4.6195000000002345e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.224" endtime="20201110 08:34:39.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.220" endtime="20201110 08:34:39.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.229" endtime="20201110 08:34:39.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.233" endtime="20201110 08:34:39.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.231" endtime="20201110 08:34:39.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.228" endtime="20201110 08:34:39.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.862" endtime="20201110 08:34:39.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.862" endtime="20201110 08:34:39.253"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.262" endtime="20201110 08:34:39.279"></status>
</kw>
<msg timestamp="20201110 08:34:39.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.260" endtime="20201110 08:34:39.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.280" endtime="20201110 08:34:39.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.283" endtime="20201110 08:34:39.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.258" endtime="20201110 08:34:39.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.256" endtime="20201110 08:34:39.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.292" endtime="20201110 08:34:39.578"></status>
</kw>
<msg timestamp="20201110 08:34:39.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.291" endtime="20201110 08:34:39.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021780208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.582" endtime="20201110 08:34:39.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.590" endtime="20201110 08:34:39.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.288" endtime="20201110 08:34:39.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.287" endtime="20201110 08:34:39.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.597" level="INFO">${RESULT} = [{'time': 0.021827097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6889000000001346e-05, 'source_diff': 4.6889000000001346e-05}, {'time': 0.021879139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.593" endtime="20201110 08:34:39.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.610" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:39.598" endtime="20201110 08:34:39.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.615" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.614" endtime="20201110 08:34:39.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.617" level="INFO">VALUE: [4.6889000000001346e-05, 4.674999999999818e-05, 4.6861000000002206e-05, 4.741599999999804e-05, 4.752800000000154e-05, 4.684699999999917e-05, 4.732e-05, 4.6861000000002206e-05, 4.7430999999997087e-05, 4.6861000000002206e-05, 4.677800000000079e-05, 4.690200000000144e-05, 4.672199999999904e-05, 4.66939999999999e-05, 4.741599999999804e-05, 4.730500000000096e-05, 4.677799999999732e-05, 4.686099999999874e-05, 4.759699999999992e-05, 4.731900000000053e-05, 4.75000000000024e-05, 4.720799999999997e-05, 4.709699999999942e-05, 4.740299999999795e-05, 4.748599999999936e-05, 4.758300000000035e-05, 4.694400000000015e-05, 4.708399999999932e-05, 4.698599999999886e-05, 4.6959000000002665e-05, 4.732e-05, 4.6680999999999806e-05, 4.66529999999972e-05, 4.724999999999868e-05, 4.738899999999838e-05, 4.7375000000002276e-05, 4.732e-05, 4.729200000000086e-05, 4.73330000000001e-05, 4.701400000000147e-05, 4.7139000000001596e-05, 4.712499999999856e-05, 4.6653000000000666e-05, 4.718000000000083e-05, 4.662499999999806e-05, 4.709699999999942e-05, 4.730499999999749e-05, 4.708299999999985e-05, 4.713899999999813e-05, 4.724999999999868e-05]</msg>
<status status="PASS" starttime="20201110 08:34:39.616" endtime="20201110 08:34:39.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.611" endtime="20201110 08:34:39.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.621" endtime="20201110 08:34:39.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.624" endtime="20201110 08:34:39.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.622" endtime="20201110 08:34:39.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.619" endtime="20201110 08:34:39.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.254" endtime="20201110 08:34:39.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.254" endtime="20201110 08:34:39.645"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.653" endtime="20201110 08:34:39.670"></status>
</kw>
<msg timestamp="20201110 08:34:39.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.652" endtime="20201110 08:34:39.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.672" endtime="20201110 08:34:39.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.674" endtime="20201110 08:34:39.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.649" endtime="20201110 08:34:39.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.647" endtime="20201110 08:34:39.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.693" endtime="20201110 08:34:39.981"></status>
</kw>
<msg timestamp="20201110 08:34:39.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.690" endtime="20201110 08:34:39.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.985" endtime="20201110 08:34:39.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.994" endtime="20201110 08:34:39.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.683" endtime="20201110 08:34:39.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.680" endtime="20201110 08:34:39.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.001" level="INFO">${RESULT} = [{'time': 0.021969111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.829199999999839e-05, 'source_diff': 4.829199999999839e-05}, {'time': 0.022024153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:39.997" endtime="20201110 08:34:40.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.014" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:40.002" endtime="20201110 08:34:40.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.019" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.018" endtime="20201110 08:34:40.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.021" level="INFO">VALUE: [4.829199999999839e-05, 4.801400000000247e-05, 4.836100000000024e-05, 4.799999999999943e-05, 4.7625000000002526e-05, 4.790200000000244e-05, 4.786199999999921e-05, 4.786099999999974e-05, 4.7708999999999946e-05, 4.798599999999986e-05, 4.781899999999756e-05, 4.855500000000221e-05, 4.78330000000006e-05, 4.786099999999974e-05, 4.822200000000054e-05, 4.86529999999992e-05, 4.802799999999857e-05, 4.858299999999788e-05, 4.848600000000036e-05, 4.791699999999802e-05, 4.829200000000186e-05, 4.861100000000049e-05, 4.798599999999986e-05, 4.830500000000196e-05, 4.788899999999888e-05, 4.861100000000049e-05, 4.848600000000036e-05, 4.849999999999993e-05, 4.836100000000024e-05, 4.774999999999918e-05, 4.824999999999968e-05, 4.805599999999771e-05, 4.7667000000001236e-05, 4.808300000000085e-05, 4.78200000000005e-05, 4.827699999999935e-05, 4.801299999999953e-05, 4.851300000000003e-05, 4.80269999999991e-05, 4.826399999999925e-05, 4.808299999999738e-05, 4.797200000000029e-05, 4.766600000000176e-05, 4.831899999999806e-05, 4.855499999999874e-05, 4.8167000000001736e-05, 4.786099999999974e-05, 4.858300000000135e-05, 4.78330000000006e-05, 4.7667000000001236e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.020" endtime="20201110 08:34:40.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.015" endtime="20201110 08:34:40.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.025" endtime="20201110 08:34:40.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.028" endtime="20201110 08:34:40.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.027" endtime="20201110 08:34:40.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.023" endtime="20201110 08:34:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.646" endtime="20201110 08:34:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.645" endtime="20201110 08:34:40.049"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.058" endtime="20201110 08:34:40.074"></status>
</kw>
<msg timestamp="20201110 08:34:40.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.056" endtime="20201110 08:34:40.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.076" endtime="20201110 08:34:40.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.078" endtime="20201110 08:34:40.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.054" endtime="20201110 08:34:40.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.052" endtime="20201110 08:34:40.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.089" endtime="20201110 08:34:40.389"></status>
</kw>
<msg timestamp="20201110 08:34:40.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.087" endtime="20201110 08:34:40.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.393" endtime="20201110 08:34:40.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.402" endtime="20201110 08:34:40.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.084" endtime="20201110 08:34:40.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.083" endtime="20201110 08:34:40.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.408" level="INFO">${RESULT} = [{'time': 0.022171486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.879200000000236e-05, 'source_diff': 4.879200000000236e-05}, {'time': 0.022224514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.405" endtime="20201110 08:34:40.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.422" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:40.409" endtime="20201110 08:34:40.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.426" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.425" endtime="20201110 08:34:40.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.429" level="INFO">VALUE: [4.879200000000236e-05, 4.922200000000154e-05, 4.9222999999997546e-05, 4.916599999999979e-05, 4.88200000000015e-05, 4.9472999999997797e-05, 4.9237000000000586e-05, 4.931899999999906e-05, 4.913900000000013e-05, 4.961099999999802e-05, 4.9014e-05, 4.947199999999832e-05, 4.890199999999997e-05, 4.942999999999961e-05, 4.937500000000081e-05, 4.8667000000002236e-05, 4.8707999999998e-05, 4.92079999999985e-05, 4.895799999999825e-05, 4.890299999999945e-05, 4.886100000000074e-05, 4.966699999999977e-05, 4.927800000000329e-05, 4.944399999999918e-05, 4.925000000000068e-05, 4.886099999999727e-05, 4.877799999999932e-05, 4.879199999999889e-05, 4.927799999999982e-05, 4.877800000000279e-05, 4.902799999999957e-05, 4.955599999999921e-05, 4.876399999999975e-05, 4.937500000000081e-05, 4.952800000000007e-05, 4.901300000000053e-05, 4.908400000000132e-05, 4.924999999999721e-05, 4.929099999999992e-05, 4.887500000000031e-05, 4.8987000000000336e-05, 4.92079999999985e-05, 4.940200000000047e-05, 4.905499999999924e-05, 4.900000000000043e-05, 4.955499999999974e-05, 4.912500000000056e-05, 4.934700000000167e-05, 4.938899999999691e-05, 4.881900000000203e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.427" endtime="20201110 08:34:40.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.423" endtime="20201110 08:34:40.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.432" endtime="20201110 08:34:40.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.436" endtime="20201110 08:34:40.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.434" endtime="20201110 08:34:40.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.431" endtime="20201110 08:34:40.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.050" endtime="20201110 08:34:40.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.050" endtime="20201110 08:34:40.457"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.465" endtime="20201110 08:34:40.482"></status>
</kw>
<msg timestamp="20201110 08:34:40.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.464" endtime="20201110 08:34:40.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.484" endtime="20201110 08:34:40.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.486" endtime="20201110 08:34:40.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.461" endtime="20201110 08:34:40.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.459" endtime="20201110 08:34:40.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.496" endtime="20201110 08:34:40.782"></status>
</kw>
<msg timestamp="20201110 08:34:40.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.494" endtime="20201110 08:34:40.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.786" endtime="20201110 08:34:40.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.795" endtime="20201110 08:34:40.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.492" endtime="20201110 08:34:40.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.490" endtime="20201110 08:34:40.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.801" level="INFO">${RESULT} = [{'time': 0.022101528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.997199999999882e-05, 'source_diff': 4.997199999999882e-05}, {'time': 0.022157583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.798" endtime="20201110 08:34:40.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.816" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:40.802" endtime="20201110 08:34:40.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.820" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.819" endtime="20201110 08:34:40.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.823" level="INFO">VALUE: [4.997199999999882e-05, 5.023600000000211e-05, 4.96940000000029e-05, 4.990300000000045e-05, 4.987499999999784e-05, 5.044400000000018e-05, 4.975000000000118e-05, 5.031900000000006e-05, 5.059799999999892e-05, 5.023599999999864e-05, 5.01530000000007e-05, 5.06530000000012e-05, 5.034700000000267e-05, 4.9709000000001946e-05, 4.976399999999728e-05, 4.983400000000207e-05, 5.040300000000095e-05, 5.013900000000113e-05, 4.987499999999784e-05, 5.0014000000001e-05, 4.995799999999925e-05, 5.024999999999821e-05, 5.051399999999803e-05, 4.995800000000272e-05, 5.0222999999998547e-05, 4.966600000000029e-05, 5.033299999999963e-05, 4.995799999999925e-05, 4.991600000000054e-05, 5.011100000000199e-05, 5.048599999999889e-05, 5.000000000000143e-05, 4.9707999999999e-05, 4.969499999999891e-05, 5.012499999999809e-05, 5.02079999999995e-05, 4.962499999999759e-05, 5.036100000000224e-05, 4.991700000000002e-05, 4.993099999999959e-05, 5.056900000000031e-05, 4.9959000000002196e-05, 4.991700000000002e-05, 5.05140000000015e-05, 5.030599999999996e-05, 5.022199999999907e-05, 4.966699999999977e-05, 4.988900000000088e-05, 5.036099999999877e-05, 5.019499999999941e-05]</msg>
<status status="PASS" starttime="20201110 08:34:40.821" endtime="20201110 08:34:40.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.817" endtime="20201110 08:34:40.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.830" endtime="20201110 08:34:40.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.834" endtime="20201110 08:34:40.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.832" endtime="20201110 08:34:40.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.829" endtime="20201110 08:34:40.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.458" endtime="20201110 08:34:40.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.457" endtime="20201110 08:34:40.854"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.863" endtime="20201110 08:34:40.880"></status>
</kw>
<msg timestamp="20201110 08:34:40.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.861" endtime="20201110 08:34:40.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.881" endtime="20201110 08:34:40.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.884" endtime="20201110 08:34:40.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.859" endtime="20201110 08:34:40.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.857" endtime="20201110 08:34:40.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.894" endtime="20201110 08:34:41.194"></status>
</kw>
<msg timestamp="20201110 08:34:41.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.892" endtime="20201110 08:34:41.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.198" endtime="20201110 08:34:41.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.207" endtime="20201110 08:34:41.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.890" endtime="20201110 08:34:41.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.888" endtime="20201110 08:34:41.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.213" level="INFO">${RESULT} = [{'time': 0.021828889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.072199999999957e-05, 'source_diff': 5.072199999999957e-05}, {'time': 0.021884931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.210" endtime="20201110 08:34:41.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.227" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:41.214" endtime="20201110 08:34:41.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.231" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.230" endtime="20201110 08:34:41.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.234" level="INFO">VALUE: [5.072199999999957e-05, 5.087499999999884e-05, 5.108300000000038e-05, 5.090300000000145e-05, 5.094400000000068e-05, 5.090299999999798e-05, 5.137499999999934e-05, 5.122200000000007e-05, 5.062499999999859e-05, 5.088899999999841e-05, 5.062500000000206e-05, 5.079199999999742e-05, 5.087499999999884e-05, 5.097199999999982e-05, 5.127800000000182e-05, 5.084799999999917e-05, 5.130599999999749e-05, 5.145900000000023e-05, 5.083300000000013e-05, 5.107000000000028e-05, 5.134799999999967e-05, 5.120899999999998e-05, 5.138900000000238e-05, 5.137499999999934e-05, 5.073599999999914e-05, 5.079199999999742e-05, 5.143099999999762e-05, 5.074999999999871e-05, 5.143000000000161e-05, 5.077700000000185e-05, 5.136099999999977e-05, 5.080500000000099e-05, 5.0652000000001723e-05, 5.10279999999981e-05, 5.155600000000121e-05, 5.094400000000068e-05, 5.1165999999998324e-05, 5.087499999999884e-05, 5.068000000000086e-05, 5.073599999999914e-05, 5.08469999999997e-05, 5.137499999999934e-05, 5.08469999999997e-05, 5.154200000000164e-05, 5.12080000000005e-05, 5.108399999999985e-05, 5.073600000000261e-05, 5.104200000000114e-05, 5.087500000000231e-05, 5.091700000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.232" endtime="20201110 08:34:41.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.228" endtime="20201110 08:34:41.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.237" endtime="20201110 08:34:41.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.241" endtime="20201110 08:34:41.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.239" endtime="20201110 08:34:41.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.236" endtime="20201110 08:34:41.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.855" endtime="20201110 08:34:41.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.855" endtime="20201110 08:34:41.261"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.270" endtime="20201110 08:34:41.286"></status>
</kw>
<msg timestamp="20201110 08:34:41.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.268" endtime="20201110 08:34:41.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.288" endtime="20201110 08:34:41.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.290" endtime="20201110 08:34:41.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.266" endtime="20201110 08:34:41.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.264" endtime="20201110 08:34:41.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.300" endtime="20201110 08:34:41.587"></status>
</kw>
<msg timestamp="20201110 08:34:41.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.299" endtime="20201110 08:34:41.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.594" endtime="20201110 08:34:41.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.608" endtime="20201110 08:34:41.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.296" endtime="20201110 08:34:41.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.294" endtime="20201110 08:34:41.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.615" level="INFO">${RESULT} = [{'time': 0.021935389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.262500000000059e-05, 'source_diff': 5.262500000000059e-05}, {'time': 0.021996417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:41.612" endtime="20201110 08:34:41.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.628" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:41.616" endtime="20201110 08:34:41.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.633" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.632" endtime="20201110 08:34:41.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.635" level="INFO">VALUE: [5.262500000000059e-05, 5.238899999999991e-05, 5.1901999999999504e-05, 5.1901999999999504e-05, 5.20409999999992e-05, 5.238899999999991e-05, 5.213899999999966e-05, 5.198600000000039e-05, 5.208300000000138e-05, 5.212500000000009e-05, 5.251400000000003e-05, 5.1707999999997534e-05, 5.176399999999928e-05, 5.172200000000057e-05, 5.233300000000163e-05, 5.256999999999831e-05, 5.187499999999984e-05, 5.255600000000221e-05, 5.241699999999905e-05, 5.197200000000082e-05, 5.169500000000091e-05, 5.261199999999702e-05, 5.204199999999867e-05, 5.232000000000153e-05, 5.183399999999713e-05, 5.258300000000188e-05, 5.225000000000021e-05, 5.1915999999999074e-05, 5.176399999999928e-05, 5.256899999999884e-05, 5.227799999999935e-05, 5.2471999999997854e-05, 5.186100000000027e-05, 5.2193999999998464e-05, 5.240299999999948e-05, 5.191699999999855e-05, 5.1679999999998394e-05, 5.180499999999852e-05, 5.188899999999941e-05, 5.194400000000168e-05, 5.163899999999916e-05, 5.251400000000003e-05, 5.183300000000113e-05, 5.174999999999971e-05, 5.1708000000001e-05, 5.197200000000082e-05, 5.174999999999971e-05, 5.179099999999895e-05, 5.248600000000089e-05, 5.241699999999905e-05]</msg>
<status status="PASS" starttime="20201110 08:34:41.634" endtime="20201110 08:34:41.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.629" endtime="20201110 08:34:41.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.639" endtime="20201110 08:34:41.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.642" endtime="20201110 08:34:41.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.641" endtime="20201110 08:34:41.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.637" endtime="20201110 08:34:41.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.262" endtime="20201110 08:34:41.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.262" endtime="20201110 08:34:41.663"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.672" endtime="20201110 08:34:41.689"></status>
</kw>
<msg timestamp="20201110 08:34:41.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.670" endtime="20201110 08:34:41.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.690" endtime="20201110 08:34:41.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.693" endtime="20201110 08:34:41.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.668" endtime="20201110 08:34:41.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.666" endtime="20201110 08:34:41.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.703" endtime="20201110 08:34:41.988"></status>
</kw>
<msg timestamp="20201110 08:34:41.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.701" endtime="20201110 08:34:41.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.992" endtime="20201110 08:34:42.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.001" endtime="20201110 08:34:42.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.699" endtime="20201110 08:34:42.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.697" endtime="20201110 08:34:42.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.008" level="INFO">${RESULT} = [{'time': 0.022254403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.338899999999744e-05, 'source_diff': 5.338899999999744e-05}, {'time': 0.022313458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.004" endtime="20201110 08:34:42.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.021" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:42.009" endtime="20201110 08:34:42.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.026" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.024" endtime="20201110 08:34:42.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.028" level="INFO">VALUE: [5.338899999999744e-05, 5.350000000000146e-05, 5.295800000000225e-05, 5.284699999999823e-05, 5.315300000000023e-05, 5.304199999999967e-05, 5.300000000000096e-05, 5.354200000000017e-05, 5.3485999999998424e-05, 5.280599999999899e-05, 5.340299999999701e-05, 5.287500000000084e-05, 5.290299999999998e-05, 5.284800000000117e-05, 5.343099999999962e-05, 5.2929999999999644e-05, 5.290299999999998e-05, 5.3485999999998424e-05, 5.262500000000059e-05, 5.318099999999937e-05, 5.2665999999999824e-05, 5.356899999999984e-05, 5.3402000000001004e-05, 5.345900000000223e-05, 5.344500000000266e-05, 5.283299999999866e-05, 5.329100000000045e-05, 5.2693999999998964e-05, 5.28609999999978e-05, 5.276400000000028e-05, 5.352700000000113e-05, 5.275000000000071e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.343099999999962e-05, 5.322300000000155e-05, 5.280599999999899e-05, 5.327800000000035e-05, 5.355500000000027e-05, 5.305599999999924e-05, 5.268099999999887e-05, 5.3443999999999714e-05, 5.283299999999866e-05, 5.312499999999762e-05, 5.268099999999887e-05, 5.30280000000001e-05, 5.326400000000078e-05, 5.330500000000002e-05, 5.300000000000096e-05, 5.305599999999924e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.027" endtime="20201110 08:34:42.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.022" endtime="20201110 08:34:42.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.031" endtime="20201110 08:34:42.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.035" endtime="20201110 08:34:42.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.033" endtime="20201110 08:34:42.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.030" endtime="20201110 08:34:42.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.664" endtime="20201110 08:34:42.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.663" endtime="20201110 08:34:42.056"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.064" endtime="20201110 08:34:42.082"></status>
</kw>
<msg timestamp="20201110 08:34:42.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.063" endtime="20201110 08:34:42.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.083" endtime="20201110 08:34:42.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.086" endtime="20201110 08:34:42.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.060" endtime="20201110 08:34:42.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.058" endtime="20201110 08:34:42.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.095" endtime="20201110 08:34:42.381"></status>
</kw>
<msg timestamp="20201110 08:34:42.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.094" endtime="20201110 08:34:42.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.385" endtime="20201110 08:34:42.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.394" endtime="20201110 08:34:42.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.091" endtime="20201110 08:34:42.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.090" endtime="20201110 08:34:42.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.400" level="INFO">${RESULT} = [{'time': 0.021900111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.441700000000105e-05, 'source_diff': 5.441700000000105e-05}, {'time': 0.021957167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.397" endtime="20201110 08:34:42.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:42.401" endtime="20201110 08:34:42.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.419" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.418" endtime="20201110 08:34:42.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.422" level="INFO">VALUE: [5.441700000000105e-05, 5.432000000000006e-05, 5.368099999999987e-05, 5.430500000000102e-05, 5.412499999999862e-05, 5.4193999999996995e-05, 5.430600000000049e-05, 5.4513999999998564e-05, 5.409699999999948e-05, 5.40419999999972e-05, 5.388900000000141e-05, 5.390300000000098e-05, 5.381900000000009e-05, 5.461099999999955e-05, 5.388900000000141e-05, 5.36670000000003e-05, 5.39730000000023e-05, 5.451400000000203e-05, 5.391700000000055e-05, 5.4013999999998064e-05, 5.393100000000012e-05, 5.3915999999997605e-05, 5.395899999999926e-05, 5.405599999999677e-05, 5.40280000000011e-05, 5.456900000000084e-05, 5.432000000000006e-05, 5.409799999999895e-05, 5.4513999999998564e-05, 5.444500000000019e-05, 5.373600000000214e-05, 5.4249999999998744e-05, 5.448700000000237e-05, 5.4638000000002684e-05, 5.372299999999858e-05, 5.387499999999837e-05, 5.397200000000282e-05, 5.388899999999794e-05, 5.4263999999998314e-05, 5.411100000000252e-05, 5.397200000000282e-05, 5.388899999999794e-05, 5.438900000000191e-05, 5.393099999999665e-05, 5.362500000000159e-05, 5.36670000000003e-05, 5.4485999999999424e-05, 5.411100000000252e-05, 5.444500000000019e-05, 5.373600000000214e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.420" endtime="20201110 08:34:42.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.416" endtime="20201110 08:34:42.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.425" endtime="20201110 08:34:42.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.429" endtime="20201110 08:34:42.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.427" endtime="20201110 08:34:42.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.424" endtime="20201110 08:34:42.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.057" endtime="20201110 08:34:42.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.056" endtime="20201110 08:34:42.449"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.458" endtime="20201110 08:34:42.475"></status>
</kw>
<msg timestamp="20201110 08:34:42.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.456" endtime="20201110 08:34:42.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.476" endtime="20201110 08:34:42.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.479" endtime="20201110 08:34:42.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.454" endtime="20201110 08:34:42.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.452" endtime="20201110 08:34:42.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.488" endtime="20201110 08:34:42.773"></status>
</kw>
<msg timestamp="20201110 08:34:42.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.487" endtime="20201110 08:34:42.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.777" endtime="20201110 08:34:42.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.785" endtime="20201110 08:34:42.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.484" endtime="20201110 08:34:42.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.483" endtime="20201110 08:34:42.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.792" level="INFO">${RESULT} = [{'time': 0.021846819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.530499999999855e-05, 'source_diff': 5.530499999999855e-05}, {'time': 0.021908861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.789" endtime="20201110 08:34:42.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.806" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:42.793" endtime="20201110 08:34:42.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.810" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.809" endtime="20201110 08:34:42.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.812" level="INFO">VALUE: [5.530499999999855e-05, 5.554200000000217e-05, 5.461099999999955e-05, 5.544499999999772e-05, 5.529200000000192e-05, 5.4735999999999674e-05, 5.48609999999998e-05, 5.5263999999999314e-05, 5.48609999999998e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.4958000000000784e-05, 5.508400000000038e-05, 5.50280000000021e-05, 5.481999999999709e-05, 5.555500000000227e-05, 5.473699999999915e-05, 5.558299999999794e-05, 5.5499999999999994e-05, 5.4679999999997925e-05, 5.538899999999944e-05, 5.563900000000316e-05, 5.5222000000000604e-05, 5.4708000000000534e-05, 5.5430000000002144e-05, 5.5291999999998453e-05, 5.5180000000001894e-05, 5.559700000000098e-05, 5.493099999999765e-05, 5.545900000000076e-05, 5.490299999999851e-05, 5.487499999999937e-05, 5.483400000000013e-05, 5.519500000000094e-05, 5.461099999999955e-05, 5.4777999999998384e-05, 5.534700000000073e-05, 5.48479999999997e-05, 5.491700000000155e-05, 5.522300000000008e-05, 5.520900000000051e-05, 5.479099999999848e-05, 5.4735999999999674e-05, 5.53610000000003e-05, 5.483300000000066e-05, 5.505500000000177e-05, 5.483300000000066e-05, 5.4972000000000354e-05, 5.5429999999998675e-05, 5.466699999999783e-05]</msg>
<status status="PASS" starttime="20201110 08:34:42.811" endtime="20201110 08:34:42.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.806" endtime="20201110 08:34:42.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.816" endtime="20201110 08:34:42.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.819" endtime="20201110 08:34:42.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.818" endtime="20201110 08:34:42.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.814" endtime="20201110 08:34:42.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.450" endtime="20201110 08:34:42.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.450" endtime="20201110 08:34:42.840"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.849" endtime="20201110 08:34:42.866"></status>
</kw>
<msg timestamp="20201110 08:34:42.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.847" endtime="20201110 08:34:42.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.868" endtime="20201110 08:34:42.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.870" endtime="20201110 08:34:42.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.845" endtime="20201110 08:34:42.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.843" endtime="20201110 08:34:42.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.880" endtime="20201110 08:34:43.165"></status>
</kw>
<msg timestamp="20201110 08:34:43.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.878" endtime="20201110 08:34:43.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.169" endtime="20201110 08:34:43.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.178" endtime="20201110 08:34:43.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.876" endtime="20201110 08:34:43.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.874" endtime="20201110 08:34:43.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.184" level="INFO">${RESULT} = [{'time': 0.022345167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.588899999999994e-05, 'source_diff': 5.588899999999994e-05}, {'time': 0.02240625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:43.181" endtime="20201110 08:34:43.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.198" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:43.185" endtime="20201110 08:34:43.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.202" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.201" endtime="20201110 08:34:43.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.204" level="INFO">VALUE: [5.588899999999994e-05, 5.631899999999912e-05, 5.6222000000001604e-05, 5.643100000000262e-05, 5.590299999999951e-05, 5.5958000000001784e-05, 5.643100000000262e-05, 5.569500000000144e-05, 5.6250000000000744e-05, 5.640300000000001e-05, 5.6222000000001604e-05, 5.6264000000000314e-05, 5.594499999999822e-05, 5.5805999999998523e-05, 5.577800000000285e-05, 5.607000000000181e-05, 5.648699999999743e-05, 5.615299999999976e-05, 5.584799999999723e-05, 5.658300000000241e-05, 5.631899999999912e-05, 5.613900000000019e-05, 5.5902000000000035e-05, 5.6208000000002034e-05, 5.602700000000016e-05, 5.5957999999998315e-05, 5.606899999999887e-05, 5.637500000000087e-05, 5.5777999999999384e-05, 5.583299999999819e-05, 5.58610000000008e-05, 5.5777999999999384e-05, 5.588899999999994e-05, 5.6014000000000064e-05, 5.586099999999733e-05, 5.647300000000133e-05, 5.581999999999809e-05, 5.638900000000044e-05, 5.583300000000166e-05, 5.597300000000083e-05, 5.5750000000000244e-05, 5.580500000000252e-05, 5.615299999999976e-05, 5.6055999999998773e-05, 5.580600000000199e-05, 5.5777999999999384e-05, 5.583300000000166e-05, 5.6666000000000355e-05, 5.5665999999999355e-05, 5.634700000000173e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.203" endtime="20201110 08:34:43.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.198" endtime="20201110 08:34:43.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.208" endtime="20201110 08:34:43.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.211" endtime="20201110 08:34:43.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.210" endtime="20201110 08:34:43.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.206" endtime="20201110 08:34:43.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.841" endtime="20201110 08:34:43.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.841" endtime="20201110 08:34:43.232"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.241" endtime="20201110 08:34:43.258"></status>
</kw>
<msg timestamp="20201110 08:34:43.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.239" endtime="20201110 08:34:43.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.259" endtime="20201110 08:34:43.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.262" endtime="20201110 08:34:43.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.237" endtime="20201110 08:34:43.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.234" endtime="20201110 08:34:43.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.272" endtime="20201110 08:34:43.555"></status>
</kw>
<msg timestamp="20201110 08:34:43.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.270" endtime="20201110 08:34:43.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.560" endtime="20201110 08:34:43.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.568" endtime="20201110 08:34:43.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.268" endtime="20201110 08:34:43.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.266" endtime="20201110 08:34:43.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.575" level="INFO">${RESULT} = [{'time': 0.021910222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.761099999999908e-05, 'source_diff': 5.761099999999908e-05}, {'time': 0.021970264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.571" endtime="20201110 08:34:43.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.588" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:43.576" endtime="20201110 08:34:43.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.593" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.592" endtime="20201110 08:34:43.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.595" level="INFO">VALUE: [5.761099999999908e-05, 5.7306000000000024e-05, 5.6749999999997774e-05, 5.7055999999999774e-05, 5.6985999999998455e-05, 5.73749999999984e-05, 5.7069999999999343e-05, 5.73749999999984e-05, 5.7514000000001564e-05, 5.7180000000000425e-05, 5.706900000000334e-05, 5.7415999999997636e-05, 5.726300000000184e-05, 5.7292000000000454e-05, 5.7306000000000024e-05, 5.7542000000000704e-05, 5.708299999999944e-05, 5.7055999999999774e-05, 5.6707999999999065e-05, 5.7542000000000704e-05, 5.709699999999901e-05, 5.7500000000001994e-05, 5.7207999999999565e-05, 5.6707999999999065e-05, 5.6764000000000814e-05, 5.7542000000000704e-05, 5.6707999999999065e-05, 5.6735999999998205e-05, 5.683399999999866e-05, 5.740300000000101e-05, 5.712499999999815e-05, 5.7430000000000675e-05, 5.6778000000000384e-05, 5.6971999999998885e-05, 5.747299999999886e-05, 5.6750000000001244e-05, 5.669499999999897e-05, 5.684699999999876e-05, 5.70550000000003e-05, 5.7179999999996955e-05, 5.686099999999833e-05, 5.6999999999998024e-05, 5.6721999999998635e-05, 5.7528000000001134e-05, 5.736099999999883e-05, 5.7193999999999995e-05, 5.7528000000001134e-05, 5.7014000000001064e-05, 5.7221999999999135e-05, 5.738900000000144e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.594" endtime="20201110 08:34:43.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.589" endtime="20201110 08:34:43.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.599" endtime="20201110 08:34:43.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.602" endtime="20201110 08:34:43.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.600" endtime="20201110 08:34:43.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.597" endtime="20201110 08:34:43.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.233" endtime="20201110 08:34:43.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.232" endtime="20201110 08:34:43.623"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.631" endtime="20201110 08:34:43.648"></status>
</kw>
<msg timestamp="20201110 08:34:43.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.630" endtime="20201110 08:34:43.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.650" endtime="20201110 08:34:43.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.652" endtime="20201110 08:34:43.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.627" endtime="20201110 08:34:43.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.625" endtime="20201110 08:34:43.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.662" endtime="20201110 08:34:43.948"></status>
</kw>
<msg timestamp="20201110 08:34:43.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.660" endtime="20201110 08:34:43.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.952" endtime="20201110 08:34:43.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.960" endtime="20201110 08:34:43.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.658" endtime="20201110 08:34:43.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.656" endtime="20201110 08:34:43.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.967" level="INFO">${RESULT} = [{'time': 0.021835764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.866700000000183e-05, 'source_diff': 5.866700000000183e-05}, {'time': 0.021897792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:43.963" endtime="20201110 08:34:43.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.982" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:43.968" endtime="20201110 08:34:43.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.987" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.986" endtime="20201110 08:34:43.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.989" level="INFO">VALUE: [5.866700000000183e-05, 5.766700000000083e-05, 5.7999999999999025e-05, 5.856900000000137e-05, 5.8151999999998816e-05, 5.856900000000137e-05, 5.8194000000000995e-05, 5.7985999999999455e-05, 5.8528000000002134e-05, 5.8555999999997804e-05, 5.781900000000062e-05, 5.8028000000001634e-05, 5.8264000000002314e-05, 5.780500000000105e-05, 5.7735999999999205e-05, 5.813899999999872e-05, 5.788900000000194e-05, 5.845900000000029e-05, 5.7985999999999455e-05, 5.834700000000026e-05, 5.8513999999999095e-05, 5.78749999999989e-05, 5.759800000000245e-05, 5.861100000000008e-05, 5.8014000000002064e-05, 5.8208000000000565e-05, 5.841700000000158e-05, 5.8485999999999955e-05, 5.8570000000000844e-05, 5.808300000000044e-05, 5.851299999999962e-05, 5.8528000000002134e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.7680000000000925e-05, 5.813899999999872e-05, 5.78749999999989e-05, 5.8485999999999955e-05, 5.7708000000000065e-05, 5.786099999999933e-05, 5.765300000000126e-05, 5.7721999999999635e-05, 5.8291999999997984e-05, 5.7916000000001605e-05, 5.838899999999897e-05, 5.8527999999998664e-05, 5.790299999999804e-05, 5.818099999999743e-05, 5.76810000000004e-05, 5.816700000000133e-05]</msg>
<status status="PASS" starttime="20201110 08:34:43.988" endtime="20201110 08:34:43.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.983" endtime="20201110 08:34:43.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.993" endtime="20201110 08:34:43.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.996" endtime="20201110 08:34:44.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.995" endtime="20201110 08:34:44.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.991" endtime="20201110 08:34:44.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.624" endtime="20201110 08:34:44.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.623" endtime="20201110 08:34:44.017"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.026" endtime="20201110 08:34:44.043"></status>
</kw>
<msg timestamp="20201110 08:34:44.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.024" endtime="20201110 08:34:44.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.045" endtime="20201110 08:34:44.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.047" endtime="20201110 08:34:44.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.021" endtime="20201110 08:34:44.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.019" endtime="20201110 08:34:44.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.057" endtime="20201110 08:34:44.342"></status>
</kw>
<msg timestamp="20201110 08:34:44.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.055" endtime="20201110 08:34:44.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.346" endtime="20201110 08:34:44.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.354" endtime="20201110 08:34:44.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.053" endtime="20201110 08:34:44.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.051" endtime="20201110 08:34:44.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.361" level="INFO">${RESULT} = [{'time': 0.022514653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9555999999998804e-05, 'source_diff': 5.9555999999998804e-05}, {'time': 0.022579708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:44.358" endtime="20201110 08:34:44.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.374" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:44.362" endtime="20201110 08:34:44.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.379" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.378" endtime="20201110 08:34:44.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.381" level="INFO">VALUE: [5.9555999999998804e-05, 5.9222000000001135e-05, 5.954099999999976e-05, 5.8736000000000205e-05, 5.936100000000083e-05, 5.9263999999999845e-05, 5.909699999999754e-05, 5.8972000000000885e-05, 5.9236000000000705e-05, 5.9556000000002274e-05, 5.886100000000033e-05, 5.8791999999998484e-05, 5.947300000000086e-05, 5.888899999999947e-05, 5.927699999999994e-05, 5.968099999999893e-05, 5.9263999999999845e-05, 5.9083999999997444e-05, 5.913899999999972e-05, 5.8834000000000664e-05, 5.861100000000008e-05, 5.883300000000119e-05, 5.9055999999998304e-05, 5.929099999999951e-05, 5.912500000000015e-05, 5.905499999999883e-05, 5.8944000000001745e-05, 5.8972000000000885e-05, 5.862499999999965e-05, 5.965300000000326e-05, 5.9221999999997665e-05, 5.9541999999999234e-05, 5.879099999999901e-05, 5.933300000000169e-05, 5.8943999999998276e-05, 5.870900000000054e-05, 5.86810000000014e-05, 5.888899999999947e-05, 5.9291999999998984e-05, 5.9334000000001164e-05, 5.893099999999818e-05, 5.90689999999984e-05, 5.866699999999836e-05, 5.944500000000172e-05, 5.9027999999999164e-05, 5.9443999999998776e-05, 5.866699999999836e-05, 5.930499999999908e-05, 5.9472000000001385e-05, 5.912500000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.380" endtime="20201110 08:34:44.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.375" endtime="20201110 08:34:44.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.385" endtime="20201110 08:34:44.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.388" endtime="20201110 08:34:44.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.387" endtime="20201110 08:34:44.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.383" endtime="20201110 08:34:44.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.018" endtime="20201110 08:34:44.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.017" endtime="20201110 08:34:44.409"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.418" endtime="20201110 08:34:44.434"></status>
</kw>
<msg timestamp="20201110 08:34:44.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.416" endtime="20201110 08:34:44.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.436" endtime="20201110 08:34:44.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.438" endtime="20201110 08:34:44.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.413" endtime="20201110 08:34:44.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.411" endtime="20201110 08:34:44.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.448" endtime="20201110 08:34:44.736"></status>
</kw>
<msg timestamp="20201110 08:34:44.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.447" endtime="20201110 08:34:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.740" endtime="20201110 08:34:44.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.754" endtime="20201110 08:34:44.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.444" endtime="20201110 08:34:44.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.442" endtime="20201110 08:34:44.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.763" level="INFO">${RESULT} = [{'time': 0.022229264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.993099999999918e-05, 'source_diff': 5.993099999999918e-05}, {'time': 0.022296292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:44.759" endtime="20201110 08:34:44.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.776" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:44.764" endtime="20201110 08:34:44.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.781" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.780" endtime="20201110 08:34:44.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.783" level="INFO">VALUE: [5.993099999999918e-05, 6.068099999999993e-05, 6.0319999999999124e-05, 6.055500000000033e-05, 6.05689999999999e-05, 5.9986000000001455e-05, 5.990300000000004e-05, 6.0430000000000206e-05, 6.029100000000051e-05, 6.062500000000165e-05, 5.9929999999999706e-05, 6.034700000000226e-05, 6.0471999999998916e-05, 6.01810000000029e-05, 5.98750000000009e-05, 6.061100000000208e-05, 6.0055999999999304e-05, 5.9986000000001455e-05, 6.018099999999943e-05, 6.016699999999986e-05, 5.9777999999999915e-05, 5.988900000000047e-05, 6.0361999999997834e-05, 5.9819999999998624e-05, 6.0485999999998485e-05, 6.0221999999998665e-05, 6.048700000000143e-05, 6.009700000000201e-05, 5.993099999999918e-05, 6.054100000000076e-05, 5.9972000000001885e-05, 5.980500000000305e-05, 6.0151999999997346e-05, 6.0263999999997375e-05, 5.9958000000002315e-05, 5.968099999999893e-05, 6.012500000000115e-05, 6.0542000000000235e-05, 6.0250000000001275e-05, 6.044499999999925e-05, 6.043099999999968e-05, 6.016699999999986e-05, 6.0471999999998916e-05, 5.9750000000000775e-05, 5.98750000000009e-05, 6.029100000000051e-05, 6.0542000000000235e-05, 6.0555999999999804e-05, 6.005499999999983e-05, 5.9777999999999915e-05]</msg>
<status status="PASS" starttime="20201110 08:34:44.782" endtime="20201110 08:34:44.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.777" endtime="20201110 08:34:44.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.787" endtime="20201110 08:34:44.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.790" endtime="20201110 08:34:44.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.789" endtime="20201110 08:34:44.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.785" endtime="20201110 08:34:44.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.410" endtime="20201110 08:34:44.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.409" endtime="20201110 08:34:44.811"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.820" endtime="20201110 08:34:44.837"></status>
</kw>
<msg timestamp="20201110 08:34:44.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.818" endtime="20201110 08:34:44.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:44.838" endtime="20201110 08:34:44.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.841" endtime="20201110 08:34:44.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.816" endtime="20201110 08:34:44.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.813" endtime="20201110 08:34:44.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.851" endtime="20201110 08:34:45.137"></status>
</kw>
<msg timestamp="20201110 08:34:45.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.850" endtime="20201110 08:34:45.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.141" endtime="20201110 08:34:45.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.150" endtime="20201110 08:34:45.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.847" endtime="20201110 08:34:45.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.845" endtime="20201110 08:34:45.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.157" level="INFO">${RESULT} = [{'time': 0.022246194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152699999999872e-05, 'source_diff': 6.152699999999872e-05}, {'time': 0.022311222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:45.154" endtime="20201110 08:34:45.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.171" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:45.158" endtime="20201110 08:34:45.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.175" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.174" endtime="20201110 08:34:45.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.178" level="INFO">VALUE: [6.152699999999872e-05, 6.134699999999979e-05, 6.163900000000222e-05, 6.127800000000141e-05, 6.123599999999924e-05, 6.081900000000015e-05, 6.061099999999861e-05, 6.144499999999678e-05, 6.0833999999999194e-05, 6.147199999999992e-05, 6.062500000000165e-05, 6.073699999999821e-05, 6.118100000000043e-05, 6.086100000000233e-05, 6.0819999999999624e-05, 6.13750000000024e-05, 6.0750000000001775e-05, 6.14439999999973e-05, 6.13750000000024e-05, 6.116599999999792e-05, 6.0680000000000456e-05, 6.148599999999949e-05, 6.115300000000129e-05, 6.136099999999936e-05, 6.113899999999825e-05, 6.0764000000001345e-05, 6.136100000000283e-05, 6.108399999999944e-05, 6.066700000000036e-05, 6.126399999999838e-05, 6.129200000000098e-05, 6.130599999999709e-05, 6.0750000000001775e-05, 6.06949999999995e-05, 6.141599999999817e-05, 6.112499999999868e-05, 6.093100000000018e-05, 6.0930000000000706e-05, 6.111099999999911e-05, 6.130500000000108e-05, 6.084699999999929e-05, 6.0944000000000276e-05, 6.061100000000208e-05, 6.108399999999944e-05, 6.104100000000126e-05, 6.127800000000141e-05, 6.05689999999999e-05, 6.1027999999997695e-05, 6.083299999999972e-05, 6.093100000000018e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.176" endtime="20201110 08:34:45.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.172" endtime="20201110 08:34:45.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.181" endtime="20201110 08:34:45.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.185" endtime="20201110 08:34:45.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.183" endtime="20201110 08:34:45.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.180" endtime="20201110 08:34:45.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.812" endtime="20201110 08:34:45.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.811" endtime="20201110 08:34:45.206"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.214" endtime="20201110 08:34:45.231"></status>
</kw>
<msg timestamp="20201110 08:34:45.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.212" endtime="20201110 08:34:45.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.233" endtime="20201110 08:34:45.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.235" endtime="20201110 08:34:45.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.210" endtime="20201110 08:34:45.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.208" endtime="20201110 08:34:45.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.245" endtime="20201110 08:34:45.550"></status>
</kw>
<msg timestamp="20201110 08:34:45.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.243" endtime="20201110 08:34:45.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.554" endtime="20201110 08:34:45.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.563" endtime="20201110 08:34:45.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.241" endtime="20201110 08:34:45.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.239" endtime="20201110 08:34:45.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.569" level="INFO">${RESULT} = [{'time': 0.022021319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.22629999999999e-05, 'source_diff': 6.22629999999999e-05}, {'time': 0.022085375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:45.566" endtime="20201110 08:34:45.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.584" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:45.570" endtime="20201110 08:34:45.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.588" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.587" endtime="20201110 08:34:45.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.591" level="INFO">VALUE: [6.22629999999999e-05, 6.17080000000006e-05, 6.199999999999956e-05, 6.184799999999976e-05, 6.226399999999938e-05, 6.244500000000125e-05, 6.17499999999993e-05, 6.166700000000136e-05, 6.251399999999963e-05, 6.231899999999818e-05, 6.162499999999918e-05, 6.191600000000214e-05, 6.163900000000222e-05, 6.216600000000239e-05, 6.24300000000022e-05, 6.237499999999993e-05, 6.202699999999922e-05, 6.259700000000104e-05, 6.240299999999907e-05, 6.205500000000183e-05, 6.165300000000179e-05, 6.266699999999889e-05, 6.242999999999874e-05, 6.257000000000137e-05, 6.215299999999882e-05, 6.230599999999809e-05, 6.187499999999943e-05, 6.240299999999907e-05, 6.248600000000049e-05, 6.198599999999999e-05, 6.181999999999716e-05, 6.180599999999759e-05, 6.255599999999834e-05, 6.213799999999978e-05, 6.229199999999852e-05, 6.234700000000079e-05, 6.175000000000277e-05, 6.241599999999917e-05, 6.233299999999775e-05, 6.176400000000234e-05, 6.173599999999974e-05, 6.223600000000024e-05, 6.238900000000297e-05, 6.199999999999956e-05, 6.244400000000178e-05, 6.183299999999725e-05, 6.226399999999938e-05, 6.244499999999778e-05, 6.23889999999995e-05, 6.259699999999757e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.589" endtime="20201110 08:34:45.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.585" endtime="20201110 08:34:45.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.594" endtime="20201110 08:34:45.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:45.598" endtime="20201110 08:34:45.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.596" endtime="20201110 08:34:45.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.593" endtime="20201110 08:34:45.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.206" endtime="20201110 08:34:45.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.206" endtime="20201110 08:34:45.618"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.627" endtime="20201110 08:34:45.644"></status>
</kw>
<msg timestamp="20201110 08:34:45.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.625" endtime="20201110 08:34:45.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:45.646" endtime="20201110 08:34:45.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.648" endtime="20201110 08:34:45.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.623" endtime="20201110 08:34:45.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.621" endtime="20201110 08:34:45.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.658" endtime="20201110 08:34:45.943"></status>
</kw>
<msg timestamp="20201110 08:34:45.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.656" endtime="20201110 08:34:45.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021899375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:45.947" endtime="20201110 08:34:45.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:45.955" endtime="20201110 08:34:45.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.654" endtime="20201110 08:34:45.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.652" endtime="20201110 08:34:45.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:45.962" level="INFO">${RESULT} = [{'time': 0.021899375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.277799999999945e-05, 'source_diff': 6.277799999999945e-05}, {'time': 0.021966403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:45.959" endtime="20201110 08:34:45.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:45.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:45.963" endtime="20201110 08:34:45.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.980" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:45.979" endtime="20201110 08:34:45.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:45.982" level="INFO">VALUE: [6.277799999999945e-05, 6.349999999999759e-05, 6.274999999999684e-05, 6.286100000000086e-05, 6.345899999999835e-05, 6.267999999999899e-05, 6.311100000000111e-05, 6.336100000000136e-05, 6.315200000000035e-05, 6.309700000000154e-05, 6.276399999999988e-05, 6.361100000000161e-05, 6.286100000000086e-05, 6.334699999999832e-05, 6.309700000000154e-05, 6.277799999999945e-05, 6.279199999999902e-05, 6.298600000000099e-05, 6.350000000000106e-05, 6.316699999999939e-05, 6.312500000000068e-05, 6.273600000000074e-05, 6.300000000000056e-05, 6.272200000000117e-05, 6.306899999999893e-05, 6.292999999999924e-05, 6.290299999999957e-05, 6.297200000000142e-05, 6.330499999999961e-05, 6.313800000000078e-05, 6.295799999999838e-05, 6.2889e-05, 6.286100000000086e-05, 6.280499999999911e-05, 6.283300000000172e-05, 6.318000000000296e-05, 6.355599999999934e-05, 6.287500000000043e-05, 6.270799999999813e-05, 6.266699999999889e-05, 6.281900000000215e-05, 6.327799999999995e-05, 6.268100000000193e-05, 6.355599999999934e-05, 6.355599999999934e-05, 6.318099999999896e-05, 6.32089999999981e-05, 6.334800000000126e-05, 6.323599999999777e-05, 6.327799999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:34:45.981" endtime="20201110 08:34:46.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.976" endtime="20201110 08:34:46.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.011" endtime="20201110 08:34:46.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.014" endtime="20201110 08:34:46.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.013" endtime="20201110 08:34:46.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.009" endtime="20201110 08:34:46.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.619" endtime="20201110 08:34:46.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:45.619" endtime="20201110 08:34:46.035"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.044" endtime="20201110 08:34:46.060"></status>
</kw>
<msg timestamp="20201110 08:34:46.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.042" endtime="20201110 08:34:46.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.062" endtime="20201110 08:34:46.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.064" endtime="20201110 08:34:46.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.040" endtime="20201110 08:34:46.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.038" endtime="20201110 08:34:46.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.074" endtime="20201110 08:34:46.360"></status>
</kw>
<msg timestamp="20201110 08:34:46.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.073" endtime="20201110 08:34:46.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.364" endtime="20201110 08:34:46.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.372" endtime="20201110 08:34:46.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.070" endtime="20201110 08:34:46.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.068" endtime="20201110 08:34:46.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.379" level="INFO">${RESULT} = [{'time': 0.021836653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.36950000000025e-05, 'source_diff': 6.36950000000025e-05}, {'time': 0.021904694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:46.375" endtime="20201110 08:34:46.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.392" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:46.380" endtime="20201110 08:34:46.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.397" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.396" endtime="20201110 08:34:46.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.399" level="INFO">VALUE: [6.36950000000025e-05, 6.381899999999968e-05, 6.384699999999882e-05, 6.393099999999971e-05, 6.369399999999956e-05, 6.416699999999692e-05, 6.448599999999902e-05, 6.409699999999907e-05, 6.37219999999987e-05, 6.430600000000009e-05, 6.412499999999821e-05, 6.45699999999999e-05, 6.433300000000322e-05, 6.419400000000006e-05, 6.450000000000206e-05, 6.395900000000232e-05, 6.359699999999857e-05, 6.377700000000097e-05, 6.431900000000018e-05, 6.415300000000082e-05, 6.361200000000108e-05, 6.427700000000147e-05, 6.423599999999877e-05, 6.42500000000018e-05, 6.4276999999998e-05, 6.37080000000026e-05, 6.397199999999895e-05, 6.380500000000011e-05, 6.405500000000036e-05, 6.40829999999995e-05, 6.39439999999998e-05, 6.42639999999979e-05, 6.429200000000052e-05, 6.429099999999757e-05, 6.447199999999945e-05, 6.391700000000014e-05, 6.440300000000107e-05, 6.370799999999913e-05, 6.447199999999945e-05, 6.42500000000018e-05, 6.40699999999994e-05, 6.401400000000113e-05, 6.383399999999873e-05, 6.461100000000261e-05, 6.376400000000088e-05, 6.395800000000285e-05, 6.402699999999775e-05, 6.366600000000042e-05, 6.420799999999963e-05, 6.377800000000045e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.398" endtime="20201110 08:34:46.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.393" endtime="20201110 08:34:46.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.402" endtime="20201110 08:34:46.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.406" endtime="20201110 08:34:46.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.404" endtime="20201110 08:34:46.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.401" endtime="20201110 08:34:46.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.036" endtime="20201110 08:34:46.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.036" endtime="20201110 08:34:46.427"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.435" endtime="20201110 08:34:46.453"></status>
</kw>
<msg timestamp="20201110 08:34:46.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.434" endtime="20201110 08:34:46.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.455" endtime="20201110 08:34:46.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.457" endtime="20201110 08:34:46.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.431" endtime="20201110 08:34:46.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.429" endtime="20201110 08:34:46.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.467" endtime="20201110 08:34:46.753"></status>
</kw>
<msg timestamp="20201110 08:34:46.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:46.465" endtime="20201110 08:34:46.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:46.757" endtime="20201110 08:34:46.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.765" endtime="20201110 08:34:46.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.463" endtime="20201110 08:34:46.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.461" endtime="20201110 08:34:46.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.772" level="INFO">${RESULT} = [{'time': 0.021852542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.55419999999983e-05, 'source_diff': 6.55419999999983e-05}, {'time': 0.021927569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:46.769" endtime="20201110 08:34:46.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:46.786" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:46.773" endtime="20201110 08:34:46.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.791" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:46.790" endtime="20201110 08:34:46.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.793" level="INFO">VALUE: [6.55419999999983e-05, 6.477700000000197e-05, 6.523600000000324e-05, 6.495800000000038e-05, 6.49159999999982e-05, 6.493100000000071e-05, 6.487499999999896e-05, 6.568100000000146e-05, 6.52639999999989e-05, 6.52639999999989e-05, 6.541699999999817e-05, 6.509700000000007e-05, 6.50419999999978e-05, 6.504200000000127e-05, 6.486199999999887e-05, 6.518099999999749e-05, 6.504200000000127e-05, 6.473699999999874e-05, 6.523599999999977e-05, 6.505500000000136e-05, 6.480600000000059e-05, 6.555499999999839e-05, 6.534700000000032e-05, 6.491700000000114e-05, 6.470799999999666e-05, 6.492999999999777e-05, 6.512499999999921e-05, 6.476400000000188e-05, 6.49440000000008e-05, 6.541699999999817e-05, 6.491700000000114e-05, 6.540300000000207e-05, 6.486099999999939e-05, 6.486099999999939e-05, 6.465299999999785e-05, 6.548600000000002e-05, 6.527799999999848e-05, 6.497299999999942e-05, 6.482000000000016e-05, 6.551399999999916e-05, 6.509800000000301e-05, 6.480500000000111e-05, 6.519399999999759e-05, 6.466599999999795e-05, 6.480599999999712e-05, 6.533300000000075e-05, 6.466600000000142e-05, 6.545799999999741e-05, 6.513900000000225e-05, 6.491699999999767e-05]</msg>
<status status="PASS" starttime="20201110 08:34:46.792" endtime="20201110 08:34:46.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.787" endtime="20201110 08:34:46.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.797" endtime="20201110 08:34:46.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.800" endtime="20201110 08:34:46.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.799" endtime="20201110 08:34:46.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.795" endtime="20201110 08:34:46.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.428" endtime="20201110 08:34:46.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.427" endtime="20201110 08:34:46.821"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.829" endtime="20201110 08:34:46.847"></status>
</kw>
<msg timestamp="20201110 08:34:46.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.828" endtime="20201110 08:34:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:46.848" endtime="20201110 08:34:46.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.851" endtime="20201110 08:34:46.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.825" endtime="20201110 08:34:46.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.823" endtime="20201110 08:34:46.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.861" endtime="20201110 08:34:47.147"></status>
</kw>
<msg timestamp="20201110 08:34:47.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.859" endtime="20201110 08:34:47.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.151" endtime="20201110 08:34:47.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.159" endtime="20201110 08:34:47.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.857" endtime="20201110 08:34:47.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.855" endtime="20201110 08:34:47.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.166" level="INFO">${RESULT} = [{'time': 0.021968639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.619500000000153e-05, 'source_diff': 6.619500000000153e-05}, {'time': 0.022041667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:47.163" endtime="20201110 08:34:47.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:47.167" endtime="20201110 08:34:47.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.185" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.184" endtime="20201110 08:34:47.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.188" level="INFO">VALUE: [6.619500000000153e-05, 6.600000000000009e-05, 6.59029999999991e-05, 6.637500000000046e-05, 6.629099999999957e-05, 6.654099999999982e-05, 6.573600000000027e-05, 6.647199999999798e-05, 6.608400000000098e-05, 6.630499999999914e-05, 6.584700000000082e-05, 6.591699999999867e-05, 6.597200000000095e-05, 6.637500000000046e-05, 6.59029999999991e-05, 6.627799999999948e-05, 6.625000000000034e-05, 6.588899999999953e-05, 6.638900000000003e-05, 6.576400000000288e-05, 6.60969999999976e-05, 6.595899999999738e-05, 6.600000000000009e-05, 6.601399999999966e-05, 6.619400000000206e-05, 6.611100000000064e-05, 6.597300000000042e-05, 6.638900000000003e-05, 6.601399999999966e-05, 6.568000000000199e-05, 6.592999999999877e-05, 6.648600000000102e-05, 6.591600000000267e-05, 6.645800000000188e-05, 6.630499999999914e-05, 6.615300000000282e-05, 6.559700000000057e-05, 6.62639999999999e-05, 6.630599999999862e-05, 6.581999999999769e-05, 6.583299999999778e-05, 6.588899999999953e-05, 6.655599999999887e-05, 6.579199999999855e-05, 6.586099999999692e-05, 6.633400000000123e-05, 6.615299999999935e-05, 6.615199999999988e-05, 6.574999999999984e-05, 6.59029999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:34:47.186" endtime="20201110 08:34:47.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.182" endtime="20201110 08:34:47.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.191" endtime="20201110 08:34:47.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.194" endtime="20201110 08:34:47.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.193" endtime="20201110 08:34:47.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.190" endtime="20201110 08:34:47.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.822" endtime="20201110 08:34:47.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.821" endtime="20201110 08:34:47.215"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.224" endtime="20201110 08:34:47.241"></status>
</kw>
<msg timestamp="20201110 08:34:47.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.222" endtime="20201110 08:34:47.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.243" endtime="20201110 08:34:47.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.245" endtime="20201110 08:34:47.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.220" endtime="20201110 08:34:47.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.218" endtime="20201110 08:34:47.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.255" endtime="20201110 08:34:47.540"></status>
</kw>
<msg timestamp="20201110 08:34:47.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.254" endtime="20201110 08:34:47.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.544" endtime="20201110 08:34:47.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.552" endtime="20201110 08:34:47.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.251" endtime="20201110 08:34:47.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.249" endtime="20201110 08:34:47.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.559" level="INFO">${RESULT} = [{'time': 0.022240889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.695799999999891e-05, 'source_diff': 6.695799999999891e-05}, {'time': 0.022312931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:47.556" endtime="20201110 08:34:47.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.573" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:47.560" endtime="20201110 08:34:47.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.577" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.576" endtime="20201110 08:34:47.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.579" level="INFO">VALUE: [6.695799999999891e-05, 6.755599999999987e-05, 6.733299999999928e-05, 6.692999999999977e-05, 6.695799999999891e-05, 6.725000000000134e-05, 6.722199999999873e-05, 6.687500000000096e-05, 6.695800000000238e-05, 6.748599999999855e-05, 6.729200000000005e-05, 6.737499999999799e-05, 6.723600000000177e-05, 6.766700000000042e-05, 6.709700000000207e-05, 6.730599999999962e-05, 6.70969999999986e-05, 6.672300000000117e-05, 6.748599999999855e-05, 6.702800000000023e-05, 6.684799999999783e-05, 6.669400000000256e-05, 6.724999999999787e-05, 6.711100000000164e-05, 6.730500000000014e-05, 6.731899999999971e-05, 6.683300000000225e-05, 6.763900000000128e-05, 6.734700000000232e-05, 6.69030000000001e-05, 6.72220000000022e-05, 6.738900000000103e-05, 6.751399999999769e-05, 6.680599999999912e-05, 6.695899999999838e-05, 6.720899999999863e-05, 6.697200000000195e-05, 6.70419999999998e-05, 6.708299999999903e-05, 6.697199999999848e-05, 6.736100000000189e-05, 6.73480000000018e-05, 6.715199999999741e-05, 6.69030000000001e-05, 6.736099999999842e-05, 6.672199999999823e-05, 6.683299999999878e-05, 6.698599999999805e-05, 6.720799999999916e-05, 6.719399999999959e-05]</msg>
<status status="PASS" starttime="20201110 08:34:47.578" endtime="20201110 08:34:47.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.573" endtime="20201110 08:34:47.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.583" endtime="20201110 08:34:47.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.587" endtime="20201110 08:34:47.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.585" endtime="20201110 08:34:47.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.581" endtime="20201110 08:34:47.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.216" endtime="20201110 08:34:47.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.216" endtime="20201110 08:34:47.607"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.616" endtime="20201110 08:34:47.633"></status>
</kw>
<msg timestamp="20201110 08:34:47.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.614" endtime="20201110 08:34:47.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:47.635" endtime="20201110 08:34:47.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.637" endtime="20201110 08:34:47.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.612" endtime="20201110 08:34:47.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.610" endtime="20201110 08:34:47.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.647" endtime="20201110 08:34:47.932"></status>
</kw>
<msg timestamp="20201110 08:34:47.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.646" endtime="20201110 08:34:47.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:47.937" endtime="20201110 08:34:47.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.945" endtime="20201110 08:34:47.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.643" endtime="20201110 08:34:47.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.641" endtime="20201110 08:34:47.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:47.952" level="INFO">${RESULT} = [{'time': 0.021830417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.79030000000011e-05, 'source_diff': 6.79030000000011e-05}, {'time': 0.021902472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:47.948" endtime="20201110 08:34:47.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:47.965" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:47.953" endtime="20201110 08:34:47.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.969" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:47.968" endtime="20201110 08:34:47.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:47.972" level="INFO">VALUE: [6.79030000000011e-05, 6.851399999999869e-05, 6.783299999999978e-05, 6.811099999999917e-05, 6.845899999999988e-05, 6.822199999999973e-05, 6.808300000000003e-05, 6.777800000000098e-05, 6.813799999999884e-05, 6.768099999999999e-05, 6.823600000000277e-05, 6.844500000000031e-05, 6.784699999999935e-05, 6.854199999999783e-05, 6.837499999999899e-05, 6.806900000000046e-05, 6.848699999999902e-05, 6.805500000000089e-05, 6.822199999999973e-05, 6.800000000000209e-05, 6.769400000000009e-05, 6.813900000000178e-05, 6.770799999999966e-05, 6.794499999999981e-05, 6.79299999999973e-05, 6.849999999999912e-05, 6.761099999999867e-05, 6.815299999999788e-05, 6.837500000000246e-05, 6.838899999999856e-05, 6.841700000000117e-05, 6.781999999999969e-05, 6.772199999999923e-05, 6.794499999999981e-05, 6.798599999999905e-05, 6.773700000000174e-05, 6.847299999999945e-05, 6.845800000000041e-05, 6.769499999999956e-05, 6.787500000000196e-05, 6.765199999999791e-05, 6.851399999999869e-05, 6.836100000000289e-05, 6.795799999999991e-05, 6.762500000000171e-05, 6.851400000000216e-05, 6.766599999999748e-05, 6.766700000000042e-05, 6.763900000000128e-05, 6.830600000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:34:47.971" endtime="20201110 08:34:47.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.966" endtime="20201110 08:34:47.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:47.975" endtime="20201110 08:34:47.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:47.979" endtime="20201110 08:34:47.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.977" endtime="20201110 08:34:47.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.974" endtime="20201110 08:34:47.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.608" endtime="20201110 08:34:47.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:47.608" endtime="20201110 08:34:48.000"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.008" endtime="20201110 08:34:48.026"></status>
</kw>
<msg timestamp="20201110 08:34:48.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.007" endtime="20201110 08:34:48.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.028" endtime="20201110 08:34:48.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.030" endtime="20201110 08:34:48.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.004" endtime="20201110 08:34:48.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.002" endtime="20201110 08:34:48.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.040" endtime="20201110 08:34:48.326"></status>
</kw>
<msg timestamp="20201110 08:34:48.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.039" endtime="20201110 08:34:48.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.330" endtime="20201110 08:34:48.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.338" endtime="20201110 08:34:48.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.036" endtime="20201110 08:34:48.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.034" endtime="20201110 08:34:48.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.345" level="INFO">${RESULT} = [{'time': 0.022401431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.898699999999952e-05, 'source_diff': 6.898699999999952e-05}, {'time': 0.022478514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:48.342" endtime="20201110 08:34:48.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.358" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:48.346" endtime="20201110 08:34:48.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.363" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.362" endtime="20201110 08:34:48.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.365" level="INFO">VALUE: [6.898699999999952e-05, 6.911100000000017e-05, 6.955500000000239e-05, 6.958300000000153e-05, 6.887499999999949e-05, 6.931999999999772e-05, 6.92640000000029e-05, 6.954199999999883e-05, 6.912499999999974e-05, 6.965299999999938e-05, 6.876399999999894e-05, 6.869399999999762e-05, 6.877800000000198e-05, 6.905500000000189e-05, 6.916700000000192e-05, 6.868000000000152e-05, 6.92360000000003e-05, 6.941599999999923e-05, 6.940199999999966e-05, 6.933299999999781e-05, 6.934700000000085e-05, 6.897200000000048e-05, 6.902799999999876e-05, 6.879199999999808e-05, 6.895800000000091e-05, 6.948600000000055e-05, 6.940299999999913e-05, 6.874999999999937e-05, 6.866699999999795e-05, 6.918099999999802e-05, 6.869500000000056e-05, 6.891599999999873e-05, 6.90840000000005e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.883300000000078e-05, 6.90970000000006e-05, 6.905600000000137e-05, 6.861099999999967e-05, 6.877699999999903e-05, 6.87359999999998e-05, 6.881899999999774e-05, 6.868000000000152e-05, 6.926399999999944e-05, 6.901400000000266e-05, 6.92640000000029e-05, 6.866700000000142e-05, 6.940299999999913e-05, 6.929199999999858e-05, 6.884700000000035e-05]</msg>
<status status="PASS" starttime="20201110 08:34:48.364" endtime="20201110 08:34:48.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.359" endtime="20201110 08:34:48.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.369" endtime="20201110 08:34:48.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.372" endtime="20201110 08:34:48.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.371" endtime="20201110 08:34:48.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.367" endtime="20201110 08:34:48.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.001" endtime="20201110 08:34:48.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.000" endtime="20201110 08:34:48.393"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.401" endtime="20201110 08:34:48.419"></status>
</kw>
<msg timestamp="20201110 08:34:48.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.400" endtime="20201110 08:34:48.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.421" endtime="20201110 08:34:48.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.425" endtime="20201110 08:34:48.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.398" endtime="20201110 08:34:48.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.396" endtime="20201110 08:34:48.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.438" endtime="20201110 08:34:48.725"></status>
</kw>
<msg timestamp="20201110 08:34:48.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.436" endtime="20201110 08:34:48.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.730" endtime="20201110 08:34:48.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.738" endtime="20201110 08:34:48.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.433" endtime="20201110 08:34:48.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.430" endtime="20201110 08:34:48.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.745" level="INFO">${RESULT} = [{'time': 0.021972125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.006899999999899e-05, 'source_diff': 7.006899999999899e-05}, {'time': 0.022045111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:48.742" endtime="20201110 08:34:48.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:48.760" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:48.746" endtime="20201110 08:34:48.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.765" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:48.764" endtime="20201110 08:34:48.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.768" level="INFO">VALUE: [7.006899999999899e-05, 7.001400000000019e-05, 7.031999999999872e-05, 6.994499999999834e-05, 6.976399999999994e-05, 6.993100000000224e-05, 7.038900000000056e-05, 6.97230000000007e-05, 6.99169999999992e-05, 7.051300000000121e-05, 7.001300000000071e-05, 6.977700000000003e-05, 7.012500000000074e-05, 6.987500000000049e-05, 6.970799999999819e-05, 7.006999999999847e-05, 6.97909999999996e-05, 7.051400000000069e-05, 6.977799999999951e-05, 6.973599999999733e-05, 6.986099999999745e-05, 6.999999999999715e-05, 6.988900000000006e-05, 7.001400000000019e-05, 6.976399999999994e-05, 6.980600000000212e-05, 7.047199999999851e-05, 7.037500000000099e-05, 7.056999999999897e-05, 7.031900000000271e-05, 6.984700000000135e-05, 7.02910000000001e-05, 6.990299999999963e-05, 6.967999999999905e-05, 7.02910000000001e-05, 6.986099999999745e-05, 6.980599999999865e-05, 7.001400000000019e-05, 7.048599999999808e-05, 7.069500000000256e-05, 6.965299999999938e-05, 7.002799999999976e-05, 6.997200000000148e-05, 6.987499999999702e-05, 7.038899999999709e-05, 6.965299999999938e-05, 7.000000000000062e-05, 7.013900000000031e-05, 6.97360000000008e-05, 7.038900000000056e-05]</msg>
<status status="PASS" starttime="20201110 08:34:48.766" endtime="20201110 08:34:48.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.761" endtime="20201110 08:34:48.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.771" endtime="20201110 08:34:48.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.775" endtime="20201110 08:34:48.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.773" endtime="20201110 08:34:48.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.770" endtime="20201110 08:34:48.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.394" endtime="20201110 08:34:48.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.393" endtime="20201110 08:34:48.796"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.805" endtime="20201110 08:34:48.823"></status>
</kw>
<msg timestamp="20201110 08:34:48.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.803" endtime="20201110 08:34:48.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.825" endtime="20201110 08:34:48.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.827" endtime="20201110 08:34:48.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.800" endtime="20201110 08:34:48.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.798" endtime="20201110 08:34:48.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.838" endtime="20201110 08:34:49.140"></status>
</kw>
<msg timestamp="20201110 08:34:49.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:48.836" endtime="20201110 08:34:49.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:49.145" endtime="20201110 08:34:49.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.154" endtime="20201110 08:34:49.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.833" endtime="20201110 08:34:49.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.832" endtime="20201110 08:34:49.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.161" level="INFO">${RESULT} = [{'time': 0.022838111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.136100000000242e-05, 'source_diff': 7.136100000000242e-05}, {'time': 0.022918139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.157" endtime="20201110 08:34:49.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.175" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:49.162" endtime="20201110 08:34:49.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.179" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.178" endtime="20201110 08:34:49.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.182" level="INFO">VALUE: [7.136100000000242e-05, 7.072200000000223e-05, 7.073599999999833e-05, 7.068099999999952e-05, 7.150000000000212e-05, 7.141600000000123e-05, 7.155500000000092e-05, 7.118000000000055e-05, 7.138900000000156e-05, 7.154099999999788e-05, 7.063800000000134e-05, 7.116700000000045e-05, 7.131899999999677e-05, 7.105500000000042e-05, 7.083299999999931e-05, 7.112500000000174e-05, 7.105500000000042e-05, 7.070800000000266e-05, 7.10970000000026e-05, 7.152800000000126e-05, 7.095799999999944e-05, 7.10559999999999e-05, 7.09170000000002e-05, 7.152799999999779e-05, 7.099999999999815e-05, 7.116600000000098e-05, 7.14309999999968e-05, 7.084700000000235e-05, 7.125000000000187e-05, 7.158300000000006e-05, 7.073599999999833e-05, 7.145799999999994e-05, 7.095799999999944e-05, 7.080500000000017e-05, 7.095799999999944e-05, 7.154200000000083e-05, 7.094399999999987e-05, 7.099999999999815e-05, 7.101400000000119e-05, 7.086099999999845e-05, 7.084699999999888e-05, 7.162499999999877e-05, 7.113899999999784e-05, 7.068099999999952e-05, 7.14170000000007e-05, 7.14170000000007e-05, 7.11109999999987e-05, 7.10840000000025e-05, 7.069499999999909e-05, 7.137499999999852e-05]</msg>
<status status="PASS" starttime="20201110 08:34:49.180" endtime="20201110 08:34:49.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.176" endtime="20201110 08:34:49.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.186" endtime="20201110 08:34:49.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.189" endtime="20201110 08:34:49.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.188" endtime="20201110 08:34:49.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.184" endtime="20201110 08:34:49.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.797" endtime="20201110 08:34:49.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.796" endtime="20201110 08:34:49.210"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.219" endtime="20201110 08:34:49.237"></status>
</kw>
<msg timestamp="20201110 08:34:49.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.217" endtime="20201110 08:34:49.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.239" endtime="20201110 08:34:49.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.242" endtime="20201110 08:34:49.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.215" endtime="20201110 08:34:49.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.213" endtime="20201110 08:34:49.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.252" endtime="20201110 08:34:49.537"></status>
</kw>
<msg timestamp="20201110 08:34:49.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.250" endtime="20201110 08:34:49.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022468889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.541" endtime="20201110 08:34:49.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.550" endtime="20201110 08:34:49.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.248" endtime="20201110 08:34:49.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.246" endtime="20201110 08:34:49.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.557" level="INFO">${RESULT} = [{'time': 0.022468889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.241699999999823e-05, 'source_diff': 7.241699999999823e-05}, {'time': 0.022549917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.553" endtime="20201110 08:34:49.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.571" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:49.558" endtime="20201110 08:34:49.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.576" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.575" endtime="20201110 08:34:49.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.578" level="INFO">VALUE: [7.241699999999823e-05, 7.265299999999891e-05, 7.231900000000124e-05, 7.184699999999988e-05, 7.204099999999838e-05, 7.258300000000106e-05, 7.222200000000026e-05, 7.229200000000158e-05, 7.219500000000059e-05, 7.227799999999854e-05, 7.252799999999879e-05, 7.219400000000112e-05, 7.223599999999983e-05, 7.231999999999725e-05, 7.212499999999927e-05, 7.179200000000108e-05, 7.223599999999983e-05, 7.234700000000038e-05, 7.208400000000004e-05, 7.183300000000031e-05, 7.254200000000183e-05, 7.266599999999901e-05, 7.252699999999931e-05, 7.259700000000063e-05, 7.169400000000062e-05, 7.240299999999866e-05, 7.231900000000124e-05, 7.244400000000137e-05, 7.22499999999994e-05, 7.217999999999808e-05, 7.201400000000219e-05, 7.180599999999718e-05, 7.180500000000117e-05, 7.220800000000069e-05, 7.177800000000151e-05, 7.204199999999786e-05, 7.194500000000034e-05, 7.266700000000195e-05, 7.229199999999811e-05, 7.191699999999773e-05, 7.16109999999992e-05, 7.236199999999943e-05, 7.24309999999978e-05, 7.215199999999894e-05, 7.20560000000009e-05, 7.190200000000216e-05, 7.197200000000001e-05, 7.236099999999995e-05, 7.17910000000016e-05, 7.205500000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:34:49.577" endtime="20201110 08:34:49.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.572" endtime="20201110 08:34:49.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.582" endtime="20201110 08:34:49.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.586" endtime="20201110 08:34:49.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.584" endtime="20201110 08:34:49.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.580" endtime="20201110 08:34:49.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.211" endtime="20201110 08:34:49.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.210" endtime="20201110 08:34:49.607"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.616" endtime="20201110 08:34:49.633"></status>
</kw>
<msg timestamp="20201110 08:34:49.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.614" endtime="20201110 08:34:49.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:49.635" endtime="20201110 08:34:49.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.638" endtime="20201110 08:34:49.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.611" endtime="20201110 08:34:49.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.609" endtime="20201110 08:34:49.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.648" endtime="20201110 08:34:49.934"></status>
</kw>
<msg timestamp="20201110 08:34:49.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.646" endtime="20201110 08:34:49.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.939" endtime="20201110 08:34:49.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.947" endtime="20201110 08:34:49.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.644" endtime="20201110 08:34:49.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.642" endtime="20201110 08:34:49.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.954" level="INFO">${RESULT} = [{'time': 0.023107097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.370799999999872e-05, 'source_diff': 7.370799999999872e-05}, {'time': 0.023186125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:49.951" endtime="20201110 08:34:49.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:49.968" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:49.955" endtime="20201110 08:34:49.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.973" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:49.972" endtime="20201110 08:34:49.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.976" level="INFO">VALUE: [7.370799999999872e-05, 7.320799999999822e-05, 7.269500000000109e-05, 7.316699999999898e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.280600000000165e-05, 7.345799999999847e-05, 7.348700000000055e-05, 7.317999999999908e-05, 7.354199999999936e-05, 7.297200000000101e-05, 7.272200000000076e-05, 7.320899999999769e-05, 7.329099999999963e-05, 7.302799999999929e-05, 7.262499999999977e-05, 7.334699999999791e-05, 7.35829999999986e-05, 7.304200000000233e-05, 7.309700000000113e-05, 7.35829999999986e-05, 7.35829999999986e-05, 7.365299999999991e-05, 7.290299999999916e-05, 7.36249999999973e-05, 7.352700000000031e-05, 7.312500000000027e-05, 7.298700000000005e-05, 7.300000000000015e-05, 7.347200000000151e-05, 7.327700000000006e-05, 7.287500000000002e-05, 7.338900000000009e-05, 7.330500000000267e-05, 7.308300000000156e-05, 7.304099999999938e-05, 7.354200000000283e-05, 7.302799999999929e-05, 7.345900000000141e-05, 7.350000000000065e-05, 7.338900000000009e-05, 7.304199999999886e-05, 7.29309999999983e-05, 7.308400000000104e-05, 7.281999999999775e-05, 7.295900000000091e-05, 7.315199999999994e-05, 7.280600000000165e-05, 7.35829999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:34:49.974" endtime="20201110 08:34:49.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.969" endtime="20201110 08:34:49.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.979" endtime="20201110 08:34:49.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.983" endtime="20201110 08:34:50.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.981" endtime="20201110 08:34:50.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.978" endtime="20201110 08:34:50.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.607" endtime="20201110 08:34:50.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.607" endtime="20201110 08:34:50.004"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.013" endtime="20201110 08:34:50.031"></status>
</kw>
<msg timestamp="20201110 08:34:50.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.011" endtime="20201110 08:34:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.032" endtime="20201110 08:34:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.035" endtime="20201110 08:34:50.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.009" endtime="20201110 08:34:50.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.007" endtime="20201110 08:34:50.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.046" endtime="20201110 08:34:50.332"></status>
</kw>
<msg timestamp="20201110 08:34:50.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.044" endtime="20201110 08:34:50.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022829472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.336" endtime="20201110 08:34:50.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.345" endtime="20201110 08:34:50.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.041" endtime="20201110 08:34:50.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.039" endtime="20201110 08:34:50.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.352" level="INFO">${RESULT} = [{'time': 0.022829472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.463900000000134e-05, 'source_diff': 7.463900000000134e-05}, {'time': 0.0229065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:50.348" endtime="20201110 08:34:50.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.367" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:50.353" endtime="20201110 08:34:50.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.371" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.370" endtime="20201110 08:34:50.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.374" level="INFO">VALUE: [7.463900000000134e-05, 7.429200000000011e-05, 7.376400000000047e-05, 7.433399999999882e-05, 7.365299999999991e-05, 7.441600000000076e-05, 7.398700000000105e-05, 7.366600000000001e-05, 7.402800000000029e-05, 7.379100000000013e-05, 7.459699999999916e-05, 7.462500000000177e-05, 7.429099999999716e-05, 7.454199999999689e-05, 7.43050000000002e-05, 7.430599999999968e-05, 7.405599999999943e-05, 7.440300000000066e-05, 7.418100000000302e-05, 7.431999999999925e-05, 7.419499999999912e-05, 7.408399999999857e-05, 7.394500000000234e-05, 7.454200000000036e-05, 7.408399999999857e-05, 7.390200000000069e-05, 7.405599999999943e-05, 7.405499999999995e-05, 7.366699999999948e-05, 7.461099999999873e-05, 7.437499999999805e-05, 7.388899999999712e-05, 7.370800000000219e-05, 7.451400000000122e-05, 7.449999999999818e-05, 7.387499999999755e-05, 7.409700000000213e-05, 7.422200000000226e-05, 7.437499999999805e-05, 7.413900000000084e-05, 7.380600000000265e-05, 7.388900000000059e-05, 7.420799999999922e-05, 7.412500000000127e-05, 7.422199999999879e-05, 7.370899999999819e-05, 7.400000000000115e-05, 7.380600000000265e-05, 7.369499999999862e-05, 7.391600000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:34:50.372" endtime="20201110 08:34:50.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.368" endtime="20201110 08:34:50.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.378" endtime="20201110 08:34:50.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.381" endtime="20201110 08:34:50.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.380" endtime="20201110 08:34:50.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.376" endtime="20201110 08:34:50.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.005" endtime="20201110 08:34:50.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.004" endtime="20201110 08:34:50.402"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.411" endtime="20201110 08:34:50.429"></status>
</kw>
<msg timestamp="20201110 08:34:50.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.410" endtime="20201110 08:34:50.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.431" endtime="20201110 08:34:50.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.433" endtime="20201110 08:34:50.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.407" endtime="20201110 08:34:50.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.405" endtime="20201110 08:34:50.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.444" endtime="20201110 08:34:50.728"></status>
</kw>
<msg timestamp="20201110 08:34:50.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.442" endtime="20201110 08:34:50.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.732" endtime="20201110 08:34:50.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.741" endtime="20201110 08:34:50.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.440" endtime="20201110 08:34:50.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.438" endtime="20201110 08:34:50.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:50.748" level="INFO">${RESULT} = [{'time': 0.022720917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.538899999999862e-05, 'source_diff': 7.538899999999862e-05}, {'time': 0.022804972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:50.745" endtime="20201110 08:34:50.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:50.762" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:50.749" endtime="20201110 08:34:50.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.767" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:50.766" endtime="20201110 08:34:50.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.769" level="INFO">VALUE: [7.538899999999862e-05, 7.554099999999841e-05, 7.517999999999761e-05, 7.49029999999977e-05, 7.481900000000027e-05, 7.536099999999948e-05, 7.498600000000258e-05, 7.480600000000018e-05, 7.501400000000172e-05, 7.491700000000073e-05, 7.479200000000061e-05, 7.470900000000266e-05, 7.529199999999764e-05, 7.506900000000052e-05, 7.533300000000034e-05, 7.50830000000001e-05, 7.491600000000126e-05, 7.540300000000166e-05, 7.479099999999766e-05, 7.51249999999988e-05, 7.48050000000007e-05, 7.487499999999855e-05, 7.533300000000034e-05, 7.491700000000073e-05, 7.519400000000065e-05, 7.470799999999972e-05, 7.543000000000133e-05, 7.509800000000261e-05, 7.520800000000022e-05, 7.49310000000003e-05, 7.466700000000048e-05, 7.556899999999755e-05, 7.466700000000048e-05, 7.488799999999865e-05, 7.488900000000159e-05, 7.511099999999923e-05, 7.520800000000022e-05, 7.483299999999984e-05, 7.513800000000237e-05, 7.495799999999997e-05, 7.479100000000113e-05, 7.515299999999794e-05, 7.481900000000027e-05, 7.54440000000009e-05, 7.470799999999972e-05, 7.522299999999926e-05, 7.544500000000037e-05, 7.511099999999923e-05, 7.46249999999983e-05, 7.486099999999898e-05]</msg>
<status status="PASS" starttime="20201110 08:34:50.768" endtime="20201110 08:34:50.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.763" endtime="20201110 08:34:50.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.773" endtime="20201110 08:34:50.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:50.777" endtime="20201110 08:34:50.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.775" endtime="20201110 08:34:50.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.771" endtime="20201110 08:34:50.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.403" endtime="20201110 08:34:50.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.403" endtime="20201110 08:34:50.798"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.807" endtime="20201110 08:34:50.826"></status>
</kw>
<msg timestamp="20201110 08:34:50.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.805" endtime="20201110 08:34:50.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:50.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:50.827" endtime="20201110 08:34:50.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.830" endtime="20201110 08:34:50.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.802" endtime="20201110 08:34:50.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.800" endtime="20201110 08:34:50.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:50.841" endtime="20201110 08:34:51.128"></status>
</kw>
<msg timestamp="20201110 08:34:51.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:50.839" endtime="20201110 08:34:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.132" endtime="20201110 08:34:51.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.141" endtime="20201110 08:34:51.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.836" endtime="20201110 08:34:51.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.834" endtime="20201110 08:34:51.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.148" level="INFO">${RESULT} = [{'time': 0.022654569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.572200000000029e-05, 'source_diff': 7.572200000000029e-05}, {'time': 0.022736653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:51.144" endtime="20201110 08:34:51.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.162" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:51.149" endtime="20201110 08:34:51.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.166" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.165" endtime="20201110 08:34:51.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.169" level="INFO">VALUE: [7.572200000000029e-05, 7.61249999999998e-05, 7.587499999999955e-05, 7.597199999999707e-05, 7.568100000000105e-05, 7.611199999999971e-05, 7.574999999999943e-05, 7.617999999999861e-05, 7.601399999999925e-05, 7.629099999999917e-05, 7.655599999999846e-05, 7.613899999999937e-05, 7.63189999999983e-05, 7.57769999999991e-05, 7.634699999999744e-05, 7.58890000000026e-05, 7.601400000000272e-05, 7.606899999999805e-05, 7.567999999999811e-05, 7.654199999999889e-05, 7.616700000000198e-05, 7.573599999999986e-05, 7.574999999999943e-05, 7.569400000000115e-05, 7.581999999999728e-05, 7.665300000000291e-05, 7.584700000000041e-05, 7.612500000000327e-05, 7.615299999999894e-05, 7.641600000000276e-05, 7.656999999999803e-05, 7.634700000000091e-05, 7.618099999999808e-05, 7.641599999999929e-05, 7.633299999999787e-05, 7.595800000000097e-05, 7.584700000000041e-05, 7.592999999999836e-05, 7.573599999999986e-05, 7.624999999999993e-05, 7.602799999999882e-05, 7.640199999999972e-05, 7.595800000000097e-05, 7.64449999999979e-05, 7.587499999999955e-05, 7.634699999999744e-05, 7.566700000000148e-05, 7.623599999999689e-05, 7.601399999999925e-05, 7.641699999999876e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.168" endtime="20201110 08:34:51.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.163" endtime="20201110 08:34:51.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.179" endtime="20201110 08:34:51.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.182" endtime="20201110 08:34:51.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.181" endtime="20201110 08:34:51.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.177" endtime="20201110 08:34:51.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.799" endtime="20201110 08:34:51.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:50.798" endtime="20201110 08:34:51.203"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.212" endtime="20201110 08:34:51.230"></status>
</kw>
<msg timestamp="20201110 08:34:51.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.211" endtime="20201110 08:34:51.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.232" endtime="20201110 08:34:51.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.234" endtime="20201110 08:34:51.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.208" endtime="20201110 08:34:51.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.206" endtime="20201110 08:34:51.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.245" endtime="20201110 08:34:51.531"></status>
</kw>
<msg timestamp="20201110 08:34:51.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.243" endtime="20201110 08:34:51.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.535" endtime="20201110 08:34:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.544" endtime="20201110 08:34:51.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.240" endtime="20201110 08:34:51.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.238" endtime="20201110 08:34:51.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.551" level="INFO">${RESULT} = [{'time': 0.022568444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709700000000166e-05, 'source_diff': 7.709700000000166e-05}, {'time': 0.022652486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:51.548" endtime="20201110 08:34:51.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.565" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:51.552" endtime="20201110 08:34:51.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.570" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.569" endtime="20201110 08:34:51.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.572" level="INFO">VALUE: [7.709700000000166e-05, 7.729199999999964e-05, 7.704199999999939e-05, 7.697200000000154e-05, 7.683299999999837e-05, 7.727800000000007e-05, 7.6764e-05, 7.679199999999914e-05, 7.736100000000148e-05, 7.751400000000075e-05, 7.701400000000025e-05, 7.698599999999764e-05, 7.697300000000101e-05, 7.733299999999887e-05, 7.702700000000035e-05, 7.73189999999993e-05, 7.692999999999936e-05, 7.708299999999862e-05, 7.729100000000017e-05, 7.71250000000008e-05, 7.748600000000161e-05, 7.747200000000204e-05, 7.708299999999862e-05, 7.684699999999794e-05, 7.665299999999944e-05, 7.747300000000151e-05, 7.679199999999914e-05, 7.70839999999981e-05, 7.719499999999865e-05, 7.716699999999951e-05, 7.695900000000144e-05, 7.761200000000121e-05, 7.702799999999982e-05, 7.70969999999982e-05, 7.751399999999728e-05, 7.698600000000111e-05, 7.729100000000017e-05, 7.677799999999957e-05, 7.683400000000132e-05, 7.758299999999912e-05, 7.747299999999804e-05, 7.704199999999939e-05, 7.677799999999957e-05, 7.705600000000243e-05, 7.662499999999683e-05, 7.727800000000007e-05, 7.736100000000148e-05, 7.666699999999901e-05, 7.765300000000044e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.571" endtime="20201110 08:34:51.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.566" endtime="20201110 08:34:51.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.576" endtime="20201110 08:34:51.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.580" endtime="20201110 08:34:51.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.578" endtime="20201110 08:34:51.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.574" endtime="20201110 08:34:51.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.204" endtime="20201110 08:34:51.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.203" endtime="20201110 08:34:51.601"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.610" endtime="20201110 08:34:51.627"></status>
</kw>
<msg timestamp="20201110 08:34:51.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.608" endtime="20201110 08:34:51.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:51.629" endtime="20201110 08:34:51.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.631" endtime="20201110 08:34:51.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.606" endtime="20201110 08:34:51.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.603" endtime="20201110 08:34:51.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.642" endtime="20201110 08:34:51.929"></status>
</kw>
<msg timestamp="20201110 08:34:51.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.640" endtime="20201110 08:34:51.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.933" endtime="20201110 08:34:51.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.942" endtime="20201110 08:34:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.638" endtime="20201110 08:34:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.636" endtime="20201110 08:34:51.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.949" level="INFO">${RESULT} = [{'time': 0.022551764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847199999999957e-05, 'source_diff': 7.847199999999957e-05}, {'time': 0.022636875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:51.945" endtime="20201110 08:34:51.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:51.964" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:51.950" endtime="20201110 08:34:51.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.969" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:51.968" endtime="20201110 08:34:51.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.971" level="INFO">VALUE: [7.847199999999957e-05, 7.848599999999914e-05, 7.836099999999901e-05, 7.812499999999833e-05, 7.830499999999727e-05, 7.837500000000205e-05, 7.780500000000024e-05, 7.843100000000033e-05, 7.762499999999783e-05, 7.811099999999876e-05, 7.855600000000046e-05, 7.81250000000018e-05, 7.808400000000257e-05, 7.85969999999997e-05, 7.797299999999854e-05, 7.845899999999947e-05, 7.804200000000039e-05, 7.786200000000146e-05, 7.772300000000176e-05, 7.799999999999821e-05, 7.797199999999907e-05, 7.769399999999968e-05, 7.804100000000092e-05, 7.787500000000155e-05, 7.854099999999795e-05, 7.791700000000026e-05, 7.808299999999962e-05, 7.797199999999907e-05, 7.798600000000211e-05, 7.849999999999871e-05, 7.788899999999765e-05, 7.836099999999901e-05, 7.802800000000082e-05, 7.768099999999958e-05, 7.830600000000021e-05, 7.819499999999965e-05, 7.822300000000226e-05, 7.791700000000026e-05, 7.837500000000205e-05, 7.852699999999838e-05, 7.834800000000239e-05, 7.801399999999778e-05, 7.798600000000211e-05, 7.825000000000193e-05, 7.844399999999696e-05, 7.865300000000144e-05, 7.819400000000018e-05, 7.818100000000008e-05, 7.844400000000043e-05, 7.851400000000175e-05]</msg>
<status status="PASS" starttime="20201110 08:34:51.970" endtime="20201110 08:34:51.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.965" endtime="20201110 08:34:51.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.975" endtime="20201110 08:34:51.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.979" endtime="20201110 08:34:51.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.977" endtime="20201110 08:34:51.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.973" endtime="20201110 08:34:51.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.602" endtime="20201110 08:34:52.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.601" endtime="20201110 08:34:52.000"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.009" endtime="20201110 08:34:52.026"></status>
</kw>
<msg timestamp="20201110 08:34:52.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.007" endtime="20201110 08:34:52.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.028" endtime="20201110 08:34:52.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.031" endtime="20201110 08:34:52.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.004" endtime="20201110 08:34:52.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.002" endtime="20201110 08:34:52.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.041" endtime="20201110 08:34:52.326"></status>
</kw>
<msg timestamp="20201110 08:34:52.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.039" endtime="20201110 08:34:52.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.333" endtime="20201110 08:34:52.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.345" endtime="20201110 08:34:52.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.037" endtime="20201110 08:34:52.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.035" endtime="20201110 08:34:52.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.352" level="INFO">${RESULT} = [{'time': 0.022668569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.908300000000063e-05, 'source_diff': 7.908300000000063e-05}, {'time': 0.022749625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:52.349" endtime="20201110 08:34:52.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.366" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:52.354" endtime="20201110 08:34:52.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.371" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.370" endtime="20201110 08:34:52.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.374" level="INFO">VALUE: [7.908300000000063e-05, 7.937499999999958e-05, 7.923599999999989e-05, 7.887500000000255e-05, 7.957000000000103e-05, 7.912499999999933e-05, 7.947300000000004e-05, 7.894400000000093e-05, 7.907000000000053e-05, 7.95970000000007e-05, 7.926299999999956e-05, 7.881899999999734e-05, 7.869399999999721e-05, 7.886099999999951e-05, 7.89580000000005e-05, 7.868000000000111e-05, 7.923599999999989e-05, 7.873599999999939e-05, 7.879200000000114e-05, 7.926399999999903e-05, 7.949999999999971e-05, 7.965299999999897e-05, 7.92640000000025e-05, 7.958399999999713e-05, 7.872199999999982e-05, 7.874999999999896e-05, 7.873599999999939e-05, 7.948600000000014e-05, 7.89030000000017e-05, 7.929100000000217e-05, 7.872300000000276e-05, 7.876399999999853e-05, 7.902699999999888e-05, 7.906900000000106e-05, 7.934700000000044e-05, 7.89030000000017e-05, 7.884699999999994e-05, 7.912499999999933e-05, 7.894399999999746e-05, 7.93190000000013e-05, 7.908300000000063e-05, 7.92640000000025e-05, 7.919399999999771e-05, 7.9458000000001e-05, 7.930599999999774e-05, 7.961199999999974e-05, 7.87229999999993e-05, 7.905599999999749e-05, 7.873699999999886e-05, 7.930499999999827e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.372" endtime="20201110 08:34:52.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.367" endtime="20201110 08:34:52.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.377" endtime="20201110 08:34:52.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.381" endtime="20201110 08:34:52.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.380" endtime="20201110 08:34:52.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.376" endtime="20201110 08:34:52.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.001" endtime="20201110 08:34:52.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.000" endtime="20201110 08:34:52.402"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.411" endtime="20201110 08:34:52.429"></status>
</kw>
<msg timestamp="20201110 08:34:52.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.410" endtime="20201110 08:34:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.431" endtime="20201110 08:34:52.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.433" endtime="20201110 08:34:52.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.407" endtime="20201110 08:34:52.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.405" endtime="20201110 08:34:52.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.444" endtime="20201110 08:34:52.729"></status>
</kw>
<msg timestamp="20201110 08:34:52.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.442" endtime="20201110 08:34:52.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:52.734" endtime="20201110 08:34:52.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.742" endtime="20201110 08:34:52.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.439" endtime="20201110 08:34:52.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.438" endtime="20201110 08:34:52.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:52.749" level="INFO">${RESULT} = [{'time': 0.022758222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.974999999999996e-05, 'source_diff': 7.974999999999996e-05}, {'time': 0.022847264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:52.746" endtime="20201110 08:34:52.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:52.763" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:52.750" endtime="20201110 08:34:52.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.768" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:52.767" endtime="20201110 08:34:52.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.771" level="INFO">VALUE: [7.974999999999996e-05, 7.998600000000064e-05, 8.040299999999972e-05, 8.023700000000036e-05, 7.984800000000042e-05, 8.011100000000076e-05, 8.02230000000008e-05, 8.000000000000021e-05, 8.027700000000013e-05, 8.020899999999775e-05, 7.984699999999748e-05, 7.997200000000107e-05, 8.023600000000089e-05, 8.054199999999942e-05, 8.020799999999828e-05, 8.030599999999874e-05, 8.016699999999904e-05, 7.980599999999824e-05, 8.02779999999996e-05, 8.058399999999813e-05, 7.983400000000085e-05, 8.034800000000092e-05, 8.019399999999871e-05, 7.970900000000072e-05, 7.982000000000128e-05, 7.997200000000107e-05, 8.040299999999972e-05, 8.03190000000023e-05, 8.016700000000251e-05, 7.980499999999877e-05, 8.006900000000206e-05, 7.981899999999834e-05, 8.00970000000012e-05, 8.029199999999917e-05, 7.98190000000018e-05, 8.025000000000046e-05, 8.048600000000114e-05, 8.06390000000004e-05, 8.051400000000028e-05, 7.994499999999793e-05, 8.005600000000196e-05, 8.004199999999892e-05, 7.986099999999705e-05, 8.06390000000004e-05, 7.976399999999953e-05, 8.04169999999993e-05, 8.038900000000015e-05, 7.993000000000236e-05, 7.973600000000039e-05, 8.025000000000046e-05]</msg>
<status status="PASS" starttime="20201110 08:34:52.769" endtime="20201110 08:34:52.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.764" endtime="20201110 08:34:52.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.774" endtime="20201110 08:34:52.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:52.778" endtime="20201110 08:34:52.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.776" endtime="20201110 08:34:52.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.773" endtime="20201110 08:34:52.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.403" endtime="20201110 08:34:52.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.402" endtime="20201110 08:34:52.799"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.808" endtime="20201110 08:34:52.827"></status>
</kw>
<msg timestamp="20201110 08:34:52.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.806" endtime="20201110 08:34:52.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:52.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:52.828" endtime="20201110 08:34:52.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.831" endtime="20201110 08:34:52.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.804" endtime="20201110 08:34:52.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.801" endtime="20201110 08:34:52.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:52.841" endtime="20201110 08:34:53.128"></status>
</kw>
<msg timestamp="20201110 08:34:53.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02244925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:52.840" endtime="20201110 08:34:53.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02244925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:53.132" endtime="20201110 08:34:53.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.141" endtime="20201110 08:34:53.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.837" endtime="20201110 08:34:53.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.835" endtime="20201110 08:34:53.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.148" level="INFO">${RESULT} = [{'time': 0.022529958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.070799999999878e-05, 'source_diff': 8.070799999999878e-05}, {'time': 0.022621014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:53.144" endtime="20201110 08:34:53.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.162" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:53.149" endtime="20201110 08:34:53.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.167" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.166" endtime="20201110 08:34:53.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.169" level="INFO">VALUE: [8.070799999999878e-05, 8.118099999999961e-05, 8.066700000000301e-05, 8.134799999999845e-05, 8.111200000000124e-05, 8.106899999999959e-05, 8.076400000000053e-05, 8.12780000000006e-05, 8.061100000000126e-05, 8.105500000000002e-05, 8.105500000000002e-05, 8.140299999999726e-05, 8.116600000000057e-05, 8.09719999999986e-05, 8.118000000000014e-05, 8.100000000000121e-05, 8.090300000000022e-05, 8.151400000000128e-05, 8.151399999999781e-05, 8.137499999999812e-05, 8.094499999999893e-05, 8.154199999999695e-05, 8.077699999999716e-05, 8.104100000000045e-05, 8.144399999999996e-05, 8.072200000000182e-05, 8.123700000000136e-05, 8.120799999999928e-05, 8.09719999999986e-05, 8.118000000000014e-05, 8.06390000000004e-05, 8.119499999999918e-05, 8.093099999999936e-05, 8.097299999999807e-05, 8.145799999999953e-05, 8.11390000000009e-05, 8.144499999999943e-05, 8.16109999999988e-05, 8.090300000000022e-05, 8.137500000000158e-05, 8.082000000000228e-05, 8.15979999999987e-05, 8.097200000000207e-05, 8.093100000000283e-05, 8.11390000000009e-05, 8.073600000000139e-05, 8.072299999999782e-05, 8.140299999999726e-05, 8.158299999999966e-05, 8.080599999999924e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.168" endtime="20201110 08:34:53.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.163" endtime="20201110 08:34:53.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.173" endtime="20201110 08:34:53.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.177" endtime="20201110 08:34:53.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.175" endtime="20201110 08:34:53.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.171" endtime="20201110 08:34:53.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.800" endtime="20201110 08:34:53.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:52.799" endtime="20201110 08:34:53.198"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.207" endtime="20201110 08:34:53.225"></status>
</kw>
<msg timestamp="20201110 08:34:53.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.205" endtime="20201110 08:34:53.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.227" endtime="20201110 08:34:53.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.230" endtime="20201110 08:34:53.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.202" endtime="20201110 08:34:53.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.200" endtime="20201110 08:34:53.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.240" endtime="20201110 08:34:53.526"></status>
</kw>
<msg timestamp="20201110 08:34:53.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.239" endtime="20201110 08:34:53.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.530" endtime="20201110 08:34:53.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.539" endtime="20201110 08:34:53.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.236" endtime="20201110 08:34:53.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.234" endtime="20201110 08:34:53.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.546" level="INFO">${RESULT} = [{'time': 0.022503167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.243100000000086e-05, 'source_diff': 8.243100000000086e-05}, {'time': 0.022593208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:53.542" endtime="20201110 08:34:53.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.561" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:53.547" endtime="20201110 08:34:53.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.566" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.565" endtime="20201110 08:34:53.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.568" level="INFO">VALUE: [8.243100000000086e-05, 8.244400000000096e-05, 8.222199999999985e-05, 8.254099999999848e-05, 8.24720000000001e-05, 8.237499999999912e-05, 8.205600000000049e-05, 8.226299999999909e-05, 8.237499999999912e-05, 8.198599999999917e-05, 8.240199999999878e-05, 8.195800000000003e-05, 8.230600000000074e-05, 8.180500000000077e-05, 8.249999999999924e-05, 8.169400000000021e-05, 8.181900000000034e-05, 8.170799999999978e-05, 8.22910000000017e-05, 8.231900000000084e-05, 8.173599999999892e-05, 8.244400000000096e-05, 8.231899999999737e-05, 8.181999999999981e-05, 8.179200000000067e-05, 8.190300000000122e-05, 8.18329999999999e-05, 8.262499999999937e-05, 8.248599999999967e-05, 8.205500000000102e-05, 8.254199999999795e-05, 8.265199999999903e-05, 8.219499999999672e-05, 8.265199999999903e-05, 8.208300000000016e-05, 8.224999999999899e-05, 8.174999999999849e-05, 8.204200000000092e-05, 8.187499999999862e-05, 8.26109999999998e-05, 8.162499999999837e-05, 8.199999999999874e-05, 8.179200000000067e-05, 8.212499999999887e-05, 8.156999999999956e-05, 8.26529999999985e-05, 8.163899999999794e-05, 8.205600000000049e-05, 8.158399999999913e-05, 8.24720000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.567" endtime="20201110 08:34:53.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.562" endtime="20201110 08:34:53.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.572" endtime="20201110 08:34:53.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.576" endtime="20201110 08:34:53.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.574" endtime="20201110 08:34:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.570" endtime="20201110 08:34:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.199" endtime="20201110 08:34:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.198" endtime="20201110 08:34:53.597"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.606" endtime="20201110 08:34:53.624"></status>
</kw>
<msg timestamp="20201110 08:34:53.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.604" endtime="20201110 08:34:53.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:53.626" endtime="20201110 08:34:53.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.629" endtime="20201110 08:34:53.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.601" endtime="20201110 08:34:53.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.599" endtime="20201110 08:34:53.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.639" endtime="20201110 08:34:53.925"></status>
</kw>
<msg timestamp="20201110 08:34:53.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.638" endtime="20201110 08:34:53.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:53.929" endtime="20201110 08:34:53.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.938" endtime="20201110 08:34:53.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.635" endtime="20201110 08:34:53.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.633" endtime="20201110 08:34:53.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.945" level="INFO">${RESULT} = [{'time': 0.022639875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.280600000000124e-05, 'source_diff': 8.280600000000124e-05}, {'time': 0.022730917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:53.942" endtime="20201110 08:34:53.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:53.959" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:53.946" endtime="20201110 08:34:53.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.964" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:53.963" endtime="20201110 08:34:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.967" level="INFO">VALUE: [8.280600000000124e-05, 8.276399999999906e-05, 8.279200000000167e-05, 8.276399999999906e-05, 8.345799999999806e-05, 8.326400000000303e-05, 8.295800000000103e-05, 8.326399999999956e-05, 8.288899999999919e-05, 8.301399999999931e-05, 8.32919999999987e-05, 8.305599999999802e-05, 8.320799999999781e-05, 8.340299999999926e-05, 8.32780000000026e-05, 8.354199999999895e-05, 8.309700000000073e-05, 8.326399999999956e-05, 8.355599999999852e-05, 8.361200000000027e-05, 8.25979999999997e-05, 8.31659999999991e-05, 8.344499999999797e-05, 8.318000000000214e-05, 8.284700000000048e-05, 8.330599999999827e-05, 8.272200000000035e-05, 8.3152999999999e-05, 8.283400000000038e-05, 8.35980000000007e-05, 8.308300000000116e-05, 8.318099999999815e-05, 8.286100000000005e-05, 8.331999999999784e-05, 8.344500000000143e-05, 8.262499999999937e-05, 8.337500000000012e-05, 8.363899999999994e-05, 8.304199999999845e-05, 8.344400000000196e-05, 8.306899999999812e-05, 8.273599999999992e-05, 8.322200000000085e-05, 8.302799999999888e-05, 8.336099999999708e-05, 8.28049999999983e-05, 8.31659999999991e-05, 8.355500000000252e-05, 8.272200000000035e-05, 8.345799999999806e-05]</msg>
<status status="PASS" starttime="20201110 08:34:53.965" endtime="20201110 08:34:53.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.960" endtime="20201110 08:34:53.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.970" endtime="20201110 08:34:53.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:53.974" endtime="20201110 08:34:53.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.972" endtime="20201110 08:34:53.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.969" endtime="20201110 08:34:53.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.598" endtime="20201110 08:34:53.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.597" endtime="20201110 08:34:53.995"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.004" endtime="20201110 08:34:54.022"></status>
</kw>
<msg timestamp="20201110 08:34:54.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.002" endtime="20201110 08:34:54.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.024" endtime="20201110 08:34:54.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.027" endtime="20201110 08:34:54.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.000" endtime="20201110 08:34:54.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.997" endtime="20201110 08:34:54.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.037" endtime="20201110 08:34:54.324"></status>
</kw>
<msg timestamp="20201110 08:34:54.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.036" endtime="20201110 08:34:54.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.328" endtime="20201110 08:34:54.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.337" endtime="20201110 08:34:54.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.033" endtime="20201110 08:34:54.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.031" endtime="20201110 08:34:54.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.344" level="INFO">${RESULT} = [{'time': 0.022764056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.436200000000102e-05, 'source_diff': 8.436200000000102e-05}, {'time': 0.022852083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.340" endtime="20201110 08:34:54.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.358" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:54.345" endtime="20201110 08:34:54.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.363" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.362" endtime="20201110 08:34:54.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.365" level="INFO">VALUE: [8.436200000000102e-05, 8.390200000000028e-05, 8.426399999999709e-05, 8.458300000000266e-05, 8.388900000000019e-05, 8.394499999999847e-05, 8.395800000000203e-05, 8.370900000000125e-05, 8.373600000000092e-05, 8.455500000000005e-05, 8.452800000000038e-05, 8.394499999999847e-05, 8.433400000000188e-05, 8.381899999999887e-05, 8.422199999999838e-05, 8.408299999999869e-05, 8.450000000000124e-05, 8.441600000000035e-05, 8.372200000000135e-05, 8.426400000000056e-05, 8.441699999999983e-05, 8.42919999999997e-05, 8.4153e-05, 8.449999999999777e-05, 8.413900000000044e-05, 8.437500000000112e-05, 8.454199999999995e-05, 8.409799999999773e-05, 8.444499999999897e-05, 8.38049999999993e-05, 8.40980000000012e-05, 8.38049999999993e-05, 8.393000000000289e-05, 8.441600000000035e-05, 8.400000000000074e-05, 8.438900000000069e-05, 8.36110000000008e-05, 8.452800000000038e-05, 8.400000000000074e-05, 8.387500000000062e-05, 8.462500000000137e-05, 8.405599999999902e-05, 8.436200000000102e-05, 8.41110000000013e-05, 8.411099999999783e-05, 8.45980000000017e-05, 8.37919999999992e-05, 8.459799999999823e-05, 8.402799999999988e-05, 8.392999999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.364" endtime="20201110 08:34:54.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.359" endtime="20201110 08:34:54.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.369" endtime="20201110 08:34:54.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.372" endtime="20201110 08:34:54.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.371" endtime="20201110 08:34:54.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.367" endtime="20201110 08:34:54.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.996" endtime="20201110 08:34:54.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.995" endtime="20201110 08:34:54.393"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.402" endtime="20201110 08:34:54.421"></status>
</kw>
<msg timestamp="20201110 08:34:54.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.401" endtime="20201110 08:34:54.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.423" endtime="20201110 08:34:54.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.425" endtime="20201110 08:34:54.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.398" endtime="20201110 08:34:54.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.396" endtime="20201110 08:34:54.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.436" endtime="20201110 08:34:54.721"></status>
</kw>
<msg timestamp="20201110 08:34:54.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.434" endtime="20201110 08:34:54.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.725" endtime="20201110 08:34:54.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.734" endtime="20201110 08:34:54.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.431" endtime="20201110 08:34:54.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.430" endtime="20201110 08:34:54.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.741" level="INFO">${RESULT} = [{'time': 0.022592292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.566700000000108e-05, 'source_diff': 8.566700000000108e-05}, {'time': 0.022683333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:54.738" endtime="20201110 08:34:54.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:54.755" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:54.742" endtime="20201110 08:34:54.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.760" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:54.759" endtime="20201110 08:34:54.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.762" level="INFO">VALUE: [8.566700000000108e-05, 8.522199999999938e-05, 8.511099999999883e-05, 8.541700000000083e-05, 8.495799999999956e-05, 8.519499999999972e-05, 8.502800000000088e-05, 8.518100000000015e-05, 8.504200000000045e-05, 8.501399999999784e-05, 8.540300000000126e-05, 8.555500000000105e-05, 8.529199999999723e-05, 8.502699999999794e-05, 8.524999999999852e-05, 8.554199999999748e-05, 8.462500000000137e-05, 8.541700000000083e-05, 8.545800000000006e-05, 8.540300000000126e-05, 8.545800000000006e-05, 8.508299999999969e-05, 8.477800000000063e-05, 8.523600000000242e-05, 8.48330000000029e-05, 8.526400000000156e-05, 8.520799999999981e-05, 8.481999999999934e-05, 8.469499999999922e-05, 8.54310000000004e-05, 8.486200000000152e-05, 8.501400000000131e-05, 8.472199999999888e-05, 8.56669999999976e-05, 8.561099999999933e-05, 8.469400000000321e-05, 8.551400000000181e-05, 8.469399999999974e-05, 8.559699999999976e-05, 8.480599999999977e-05, 8.518100000000015e-05, 8.525000000000199e-05, 8.497199999999913e-05, 8.536099999999908e-05, 8.49720000000026e-05, 8.54310000000004e-05, 8.469499999999922e-05, 8.522199999999938e-05, 8.487500000000162e-05, 8.484799999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:34:54.761" endtime="20201110 08:34:54.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.756" endtime="20201110 08:34:54.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.766" endtime="20201110 08:34:54.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.770" endtime="20201110 08:34:54.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.768" endtime="20201110 08:34:54.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.764" endtime="20201110 08:34:54.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.394" endtime="20201110 08:34:54.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.394" endtime="20201110 08:34:54.791"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.800" endtime="20201110 08:34:54.818"></status>
</kw>
<msg timestamp="20201110 08:34:54.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.798" endtime="20201110 08:34:54.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:54.820" endtime="20201110 08:34:54.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.822" endtime="20201110 08:34:54.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.795" endtime="20201110 08:34:54.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.793" endtime="20201110 08:34:54.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.833" endtime="20201110 08:34:55.118"></status>
</kw>
<msg timestamp="20201110 08:34:55.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:54.831" endtime="20201110 08:34:55.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:55.122" endtime="20201110 08:34:55.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.131" endtime="20201110 08:34:55.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.828" endtime="20201110 08:34:55.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.827" endtime="20201110 08:34:55.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.138" level="INFO">${RESULT} = [{'time': 0.022564, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.66249999999999e-05, 'source_diff': 8.66249999999999e-05}, {'time': 0.022657042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8....</msg>
<status status="PASS" starttime="20201110 08:34:55.135" endtime="20201110 08:34:55.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.153" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:55.139" endtime="20201110 08:34:55.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.158" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.157" endtime="20201110 08:34:55.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.160" level="INFO">VALUE: [8.66249999999999e-05, 8.613899999999897e-05, 8.641700000000183e-05, 8.661100000000033e-05, 8.643000000000192e-05, 8.66249999999999e-05, 8.566599999999813e-05, 8.61249999999994e-05, 8.619399999999777e-05, 8.606900000000112e-05, 8.651399999999934e-05, 8.655599999999805e-05, 8.609700000000026e-05, 8.61669999999981e-05, 8.618100000000115e-05, 8.599999999999927e-05, 8.577799999999816e-05, 8.601399999999884e-05, 8.595800000000056e-05, 8.588899999999872e-05, 8.587499999999915e-05, 8.605499999999808e-05, 8.562500000000237e-05, 8.624999999999952e-05, 8.63470000000005e-05, 8.608300000000069e-05, 8.597200000000013e-05, 8.601399999999884e-05, 8.58050000000013e-05, 8.623599999999995e-05, 8.615299999999854e-05, 8.640199999999931e-05, 8.605600000000102e-05, 8.568100000000065e-05, 8.638899999999922e-05, 8.569500000000022e-05, 8.58059999999973e-05, 8.66249999999999e-05, 8.616599999999863e-05, 8.644400000000149e-05, 8.602800000000188e-05, 8.651399999999934e-05, 8.579100000000173e-05, 8.640299999999879e-05, 8.5847e-05, 8.625000000000299e-05, 8.624999999999952e-05, 8.572199999999988e-05, 8.577799999999816e-05, 8.643099999999793e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.159" endtime="20201110 08:34:55.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.154" endtime="20201110 08:34:55.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.164" endtime="20201110 08:34:55.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.168" endtime="20201110 08:34:55.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.166" endtime="20201110 08:34:55.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.162" endtime="20201110 08:34:55.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.791" endtime="20201110 08:34:55.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.791" endtime="20201110 08:34:55.189"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.198" endtime="20201110 08:34:55.217"></status>
</kw>
<msg timestamp="20201110 08:34:55.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.196" endtime="20201110 08:34:55.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.218" endtime="20201110 08:34:55.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.221" endtime="20201110 08:34:55.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.193" endtime="20201110 08:34:55.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.191" endtime="20201110 08:34:55.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.231" endtime="20201110 08:34:55.517"></status>
</kw>
<msg timestamp="20201110 08:34:55.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.229" endtime="20201110 08:34:55.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.521" endtime="20201110 08:34:55.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.530" endtime="20201110 08:34:55.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.227" endtime="20201110 08:34:55.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.225" endtime="20201110 08:34:55.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.537" level="INFO">${RESULT} = [{'time': 0.022546153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.675000000000002e-05, 'source_diff': 8.675000000000002e-05}, {'time': 0.022643194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.533" endtime="20201110 08:34:55.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.551" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:55.538" endtime="20201110 08:34:55.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.556" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.555" endtime="20201110 08:34:55.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.558" level="INFO">VALUE: [8.675000000000002e-05, 8.677699999999969e-05, 8.742999999999945e-05, 8.679199999999873e-05, 8.734699999999804e-05, 8.725000000000052e-05, 8.700000000000027e-05, 8.707000000000159e-05, 8.74310000000024e-05, 8.751400000000034e-05, 8.718000000000267e-05, 8.69730000000006e-05, 8.733399999999794e-05, 8.756899999999915e-05, 8.756899999999915e-05, 8.741599999999988e-05, 8.71250000000004e-05, 8.759699999999829e-05, 8.683300000000144e-05, 8.727799999999966e-05, 8.720799999999834e-05, 8.69860000000007e-05, 8.686100000000058e-05, 8.695799999999809e-05, 8.741699999999936e-05, 8.736100000000108e-05, 8.750000000000077e-05, 8.737500000000065e-05, 8.668099999999818e-05, 8.765300000000004e-05, 8.66530000000025e-05, 8.705500000000255e-05, 8.723600000000095e-05, 8.725000000000052e-05, 8.734800000000098e-05, 8.686100000000058e-05, 8.754100000000001e-05, 8.72920000000027e-05, 8.73470000000015e-05, 8.741700000000283e-05, 8.740300000000326e-05, 8.74860000000012e-05, 8.727799999999966e-05, 8.698599999999723e-05, 8.751400000000034e-05, 8.666700000000208e-05, 8.68059999999983e-05, 8.686100000000058e-05, 8.677799999999916e-05, 8.708399999999769e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.557" endtime="20201110 08:34:55.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.552" endtime="20201110 08:34:55.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.562" endtime="20201110 08:34:55.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.566" endtime="20201110 08:34:55.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.564" endtime="20201110 08:34:55.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.560" endtime="20201110 08:34:55.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.190" endtime="20201110 08:34:55.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.189" endtime="20201110 08:34:55.587"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.596" endtime="20201110 08:34:55.614"></status>
</kw>
<msg timestamp="20201110 08:34:55.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.594" endtime="20201110 08:34:55.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.616" endtime="20201110 08:34:55.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.618" endtime="20201110 08:34:55.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.591" endtime="20201110 08:34:55.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.589" endtime="20201110 08:34:55.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.629" endtime="20201110 08:34:55.915"></status>
</kw>
<msg timestamp="20201110 08:34:55.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.627" endtime="20201110 08:34:55.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:55.920" endtime="20201110 08:34:55.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.929" endtime="20201110 08:34:55.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.624" endtime="20201110 08:34:55.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.623" endtime="20201110 08:34:55.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:55.936" level="INFO">${RESULT} = [{'time': 0.022527417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.843099999999993e-05, 'source_diff': 8.843099999999993e-05}, {'time': 0.022619458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:55.932" endtime="20201110 08:34:55.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:55.950" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:55.937" endtime="20201110 08:34:55.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.954" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:55.953" endtime="20201110 08:34:55.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:55.957" level="INFO">VALUE: [8.843099999999993e-05, 8.847199999999916e-05, 8.813900000000097e-05, 8.777800000000016e-05, 8.783399999999844e-05, 8.859799999999876e-05, 8.850000000000177e-05, 8.795900000000204e-05, 8.794500000000247e-05, 8.859800000000223e-05, 8.855600000000005e-05, 8.848599999999873e-05, 8.784799999999801e-05, 8.825000000000152e-05, 8.850000000000177e-05, 8.795800000000256e-05, 8.826399999999762e-05, 8.838900000000122e-05, 8.826400000000109e-05, 8.843099999999993e-05, 8.841700000000036e-05, 8.797200000000213e-05, 8.797199999999866e-05, 8.824999999999805e-05, 8.834699999999904e-05, 8.818099999999968e-05, 8.855600000000005e-05, 8.854200000000048e-05, 8.856999999999962e-05, 8.808299999999922e-05, 8.788799999999777e-05, 8.83189999999999e-05, 8.837499999999818e-05, 8.815300000000054e-05, 8.804100000000051e-05, 8.83189999999999e-05, 8.838900000000122e-05, 8.820899999999882e-05, 8.841700000000036e-05, 8.86670000000006e-05, 8.787500000000115e-05, 8.81250000000014e-05, 8.781999999999887e-05, 8.84999999999983e-05, 8.7638999999997e-05, 8.769499999999875e-05, 8.763900000000047e-05, 8.830500000000033e-05, 8.791600000000038e-05, 8.865200000000156e-05]</msg>
<status status="PASS" starttime="20201110 08:34:55.956" endtime="20201110 08:34:55.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.951" endtime="20201110 08:34:55.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.961" endtime="20201110 08:34:55.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:55.964" endtime="20201110 08:34:55.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.963" endtime="20201110 08:34:55.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.959" endtime="20201110 08:34:55.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.588" endtime="20201110 08:34:55.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.587" endtime="20201110 08:34:55.985"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:55.994" endtime="20201110 08:34:56.013"></status>
</kw>
<msg timestamp="20201110 08:34:56.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:55.993" endtime="20201110 08:34:56.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.015" endtime="20201110 08:34:56.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.018" endtime="20201110 08:34:56.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.990" endtime="20201110 08:34:56.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.988" endtime="20201110 08:34:56.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.028" endtime="20201110 08:34:56.313"></status>
</kw>
<msg timestamp="20201110 08:34:56.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.027" endtime="20201110 08:34:56.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022922847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.318" endtime="20201110 08:34:56.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.326" endtime="20201110 08:34:56.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.024" endtime="20201110 08:34:56.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.022" endtime="20201110 08:34:56.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.333" level="INFO">${RESULT} = [{'time': 0.023011667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.881999999999987e-05, 'source_diff': 8.881999999999987e-05}, {'time': 0.023108667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:56.330" endtime="20201110 08:34:56.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.347" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:56.334" endtime="20201110 08:34:56.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.352" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.351" endtime="20201110 08:34:56.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.354" level="INFO">VALUE: [8.881999999999987e-05, 8.893100000000043e-05, 8.8945e-05, 8.873599999999898e-05, 8.870799999999984e-05, 8.906900000000065e-05, 8.902700000000194e-05, 8.904200000000098e-05, 8.934700000000004e-05, 8.901400000000184e-05, 8.873600000000245e-05, 8.940300000000179e-05, 8.859699999999929e-05, 8.89999999999988e-05, 8.877800000000116e-05, 8.89730000000026e-05, 8.911099999999936e-05, 8.95129999999994e-05, 8.934799999999951e-05, 8.886099999999911e-05, 8.94869999999992e-05, 8.884699999999954e-05, 8.879099999999779e-05, 8.913900000000197e-05, 8.895800000000009e-05, 8.91670000000011e-05, 8.952799999999844e-05, 8.956900000000115e-05, 8.876399999999812e-05, 8.887500000000215e-05, 8.94999999999993e-05, 8.937499999999918e-05, 8.934700000000004e-05, 8.907000000000012e-05, 8.941699999999789e-05, 8.872200000000288e-05, 8.897199999999966e-05, 8.866599999999766e-05, 8.927699999999872e-05, 8.924999999999905e-05, 8.890200000000181e-05, 8.93190000000009e-05, 8.915299999999807e-05, 8.958300000000072e-05, 8.869400000000027e-05, 8.945800000000059e-05, 8.955600000000105e-05, 8.865299999999757e-05, 8.934700000000004e-05, 8.932000000000037e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.353" endtime="20201110 08:34:56.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.348" endtime="20201110 08:34:56.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.362" endtime="20201110 08:34:56.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.366" endtime="20201110 08:34:56.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.364" endtime="20201110 08:34:56.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.360" endtime="20201110 08:34:56.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.986" endtime="20201110 08:34:56.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:55.986" endtime="20201110 08:34:56.387"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.396" endtime="20201110 08:34:56.416"></status>
</kw>
<msg timestamp="20201110 08:34:56.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.394" endtime="20201110 08:34:56.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.417" endtime="20201110 08:34:56.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.423" endtime="20201110 08:34:56.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.391" endtime="20201110 08:34:56.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.389" endtime="20201110 08:34:56.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.438" endtime="20201110 08:34:56.724"></status>
</kw>
<msg timestamp="20201110 08:34:56.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.436" endtime="20201110 08:34:56.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.728" endtime="20201110 08:34:56.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.737" endtime="20201110 08:34:56.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.433" endtime="20201110 08:34:56.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.430" endtime="20201110 08:34:56.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.744" level="INFO">${RESULT} = [{'time': 0.022637792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.972299999999989e-05, 'source_diff': 8.972299999999989e-05}, {'time': 0.022731819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:56.740" endtime="20201110 08:34:56.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:56.758" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:56.745" endtime="20201110 08:34:56.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.763" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:56.762" endtime="20201110 08:34:56.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.765" level="INFO">VALUE: [8.972299999999989e-05, 8.969400000000127e-05, 9.001399999999937e-05, 9.045800000000159e-05, 8.96250000000029e-05, 8.972199999999694e-05, 8.973599999999998e-05, 9.047200000000116e-05, 8.966599999999866e-05, 8.990300000000229e-05, 8.970900000000032e-05, 9.007000000000112e-05, 8.997300000000014e-05, 9.040299999999932e-05, 8.977800000000216e-05, 9.067999999999923e-05, 9.058299999999825e-05, 8.995799999999762e-05, 9.006900000000165e-05, 9.027799999999919e-05, 8.976399999999912e-05, 9.03060000000018e-05, 9.029199999999876e-05, 9.066699999999914e-05, 9.045799999999812e-05, 9.011100000000036e-05, 8.963900000000247e-05, 9.023600000000048e-05, 9.033399999999747e-05, 9.057000000000162e-05, 8.984700000000054e-05, 9.052699999999997e-05, 9.04870000000002e-05, 9.008400000000069e-05, 9.054099999999954e-05, 9.01389999999995e-05, 8.969400000000127e-05, 8.998600000000023e-05, 9.030599999999833e-05, 9.061100000000086e-05, 9.023600000000048e-05, 9.040299999999932e-05, 9.051399999999987e-05, 9.015299999999907e-05, 8.995799999999762e-05, 9.012499999999993e-05, 8.982000000000087e-05, 9.045900000000107e-05, 9.034800000000051e-05, 9.005499999999861e-05]</msg>
<status status="PASS" starttime="20201110 08:34:56.764" endtime="20201110 08:34:56.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.759" endtime="20201110 08:34:56.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.769" endtime="20201110 08:34:56.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:56.772" endtime="20201110 08:34:56.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.771" endtime="20201110 08:34:56.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.767" endtime="20201110 08:34:56.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.388" endtime="20201110 08:34:56.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.387" endtime="20201110 08:34:56.793"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.802" endtime="20201110 08:34:56.821"></status>
</kw>
<msg timestamp="20201110 08:34:56.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.800" endtime="20201110 08:34:56.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:56.825" endtime="20201110 08:34:56.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.830" endtime="20201110 08:34:56.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.798" endtime="20201110 08:34:56.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.796" endtime="20201110 08:34:56.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.851" endtime="20201110 08:34:57.143"></status>
</kw>
<msg timestamp="20201110 08:34:57.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.848" endtime="20201110 08:34:57.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.148" endtime="20201110 08:34:57.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.156" endtime="20201110 08:34:57.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.842" endtime="20201110 08:34:57.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.839" endtime="20201110 08:34:57.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.163" level="INFO">${RESULT} = [{'time': 0.022119528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.165300000000057e-05, 'source_diff': 9.165300000000057e-05}, {'time': 0.022212597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.160" endtime="20201110 08:34:57.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.177" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:57.164" endtime="20201110 08:34:57.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.182" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.181" endtime="20201110 08:34:57.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.184" level="INFO">VALUE: [9.165300000000057e-05, 9.087500000000068e-05, 9.142999999999998e-05, 9.115300000000007e-05, 9.152700000000097e-05, 9.14719999999987e-05, 9.062500000000043e-05, 9.077799999999969e-05, 9.156899999999968e-05, 9.120799999999887e-05, 9.158299999999925e-05, 9.09870000000007e-05, 9.084699999999807e-05, 9.165300000000057e-05, 9.075000000000055e-05, 9.111100000000136e-05, 9.072300000000089e-05, 9.123599999999801e-05, 9.156899999999968e-05, 9.101400000000037e-05, 9.118099999999921e-05, 9.161099999999839e-05, 9.084700000000154e-05, 9.149999999999783e-05, 9.101400000000037e-05, 9.156899999999968e-05, 9.131899999999943e-05, 9.097200000000166e-05, 9.157000000000262e-05, 9.161100000000186e-05, 9.065300000000304e-05, 9.133400000000194e-05, 9.134800000000151e-05, 9.066599999999966e-05, 9.115300000000007e-05, 9.15269999999975e-05, 9.136200000000108e-05, 9.083300000000197e-05, 9.104100000000004e-05, 9.140300000000032e-05, 9.084699999999807e-05, 9.116699999999964e-05, 9.087500000000068e-05, 9.10000000000008e-05, 9.101400000000037e-05, 9.125000000000105e-05, 9.154200000000001e-05, 9.091699999999939e-05, 9.147200000000216e-05, 9.083399999999797e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.183" endtime="20201110 08:34:57.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.178" endtime="20201110 08:34:57.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.188" endtime="20201110 08:34:57.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.192" endtime="20201110 08:34:57.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.190" endtime="20201110 08:34:57.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.186" endtime="20201110 08:34:57.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.794" endtime="20201110 08:34:57.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.793" endtime="20201110 08:34:57.213"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.222" endtime="20201110 08:34:57.240"></status>
</kw>
<msg timestamp="20201110 08:34:57.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.220" endtime="20201110 08:34:57.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.242" endtime="20201110 08:34:57.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.244" endtime="20201110 08:34:57.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.217" endtime="20201110 08:34:57.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.215" endtime="20201110 08:34:57.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.255" endtime="20201110 08:34:57.541"></status>
</kw>
<msg timestamp="20201110 08:34:57.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.253" endtime="20201110 08:34:57.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.546" endtime="20201110 08:34:57.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.554" endtime="20201110 08:34:57.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.250" endtime="20201110 08:34:57.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.249" endtime="20201110 08:34:57.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.561" level="INFO">${RESULT} = [{'time': 0.022635792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.256999999999668e-05, 'source_diff': 9.256999999999668e-05}, {'time': 0.022733833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.558" endtime="20201110 08:34:57.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.575" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:57.562" endtime="20201110 08:34:57.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.580" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.579" endtime="20201110 08:34:57.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.582" level="INFO">VALUE: [9.256999999999668e-05, 9.206899999999671e-05, 9.183399999999897e-05, 9.188899999999778e-05, 9.173599999999851e-05, 9.258399999999972e-05, 9.229199999999729e-05, 9.177700000000122e-05, 9.238899999999828e-05, 9.188900000000125e-05, 9.225000000000205e-05, 9.201400000000137e-05, 9.212499999999846e-05, 9.258300000000025e-05, 9.224999999999858e-05, 9.21659999999977e-05, 9.244400000000055e-05, 9.191700000000039e-05, 9.238899999999828e-05, 9.173700000000146e-05, 9.204200000000051e-05, 9.170899999999885e-05, 9.181899999999993e-05, 9.198699999999824e-05, 9.230500000000086e-05, 9.236199999999861e-05, 9.257000000000015e-05, 9.172299999999842e-05, 9.191600000000091e-05, 9.208299999999975e-05, 9.230500000000086e-05, 9.255499999999764e-05, 9.237499999999871e-05, 9.206900000000018e-05, 9.258300000000025e-05, 9.244400000000055e-05, 9.173600000000198e-05, 9.234799999999904e-05, 9.166700000000014e-05, 9.238900000000175e-05, 9.170799999999937e-05, 9.241600000000141e-05, 9.230600000000033e-05, 9.220900000000282e-05, 9.218100000000021e-05, 9.193000000000048e-05, 9.248699999999874e-05, 9.18199999999994e-05, 9.179100000000079e-05, 9.201400000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.581" endtime="20201110 08:34:57.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.576" endtime="20201110 08:34:57.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.586" endtime="20201110 08:34:57.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.590" endtime="20201110 08:34:57.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.588" endtime="20201110 08:34:57.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.584" endtime="20201110 08:34:57.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.214" endtime="20201110 08:34:57.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.213" endtime="20201110 08:34:57.611"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.620" endtime="20201110 08:34:57.639"></status>
</kw>
<msg timestamp="20201110 08:34:57.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.618" endtime="20201110 08:34:57.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:57.640" endtime="20201110 08:34:57.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.643" endtime="20201110 08:34:57.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.615" endtime="20201110 08:34:57.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.613" endtime="20201110 08:34:57.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.653" endtime="20201110 08:34:57.939"></status>
</kw>
<msg timestamp="20201110 08:34:57.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.652" endtime="20201110 08:34:57.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.944" endtime="20201110 08:34:57.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.953" endtime="20201110 08:34:57.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.649" endtime="20201110 08:34:57.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.647" endtime="20201110 08:34:57.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.960" level="INFO">${RESULT} = [{'time': 0.022747861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.324999999999958e-05, 'source_diff': 9.324999999999958e-05}, {'time': 0.022850917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:57.957" endtime="20201110 08:34:57.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:57.974" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:57.961" endtime="20201110 08:34:57.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.979" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:57.978" endtime="20201110 08:34:57.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.982" level="INFO">VALUE: [9.324999999999958e-05, 9.288899999999878e-05, 9.330600000000133e-05, 9.331999999999743e-05, 9.258300000000025e-05, 9.302800000000194e-05, 9.342999999999851e-05, 9.320800000000087e-05, 9.330499999999839e-05, 9.302800000000194e-05, 9.309700000000032e-05, 9.284700000000007e-05, 9.294400000000105e-05, 9.329200000000176e-05, 9.311099999999989e-05, 9.337499999999971e-05, 9.263899999999853e-05, 9.293000000000148e-05, 9.270899999999985e-05, 9.349999999999983e-05, 9.342999999999851e-05, 9.272199999999994e-05, 9.348600000000026e-05, 9.3333000000001e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.329200000000176e-05, 9.34720000000007e-05, 9.290300000000182e-05, 9.326399999999915e-05, 9.31940000000013e-05, 9.309700000000032e-05, 9.313899999999903e-05, 9.330600000000133e-05, 9.344500000000103e-05, 9.354200000000201e-05, 9.266700000000114e-05, 9.329100000000229e-05, 9.279099999999832e-05, 9.295800000000062e-05, 9.308300000000075e-05, 9.36529999999991e-05, 9.280500000000136e-05, 9.273599999999951e-05, 9.263899999999853e-05, 9.272199999999994e-05, 9.270899999999985e-05, 9.286099999999964e-05, 9.273599999999951e-05, 9.29720000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:34:57.980" endtime="20201110 08:34:57.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.975" endtime="20201110 08:34:57.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.985" endtime="20201110 08:34:57.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.989" endtime="20201110 08:34:58.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.987" endtime="20201110 08:34:58.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.984" endtime="20201110 08:34:58.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.612" endtime="20201110 08:34:58.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.611" endtime="20201110 08:34:58.010"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.020" endtime="20201110 08:34:58.039"></status>
</kw>
<msg timestamp="20201110 08:34:58.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.018" endtime="20201110 08:34:58.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.040" endtime="20201110 08:34:58.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.043" endtime="20201110 08:34:58.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.016" endtime="20201110 08:34:58.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.013" endtime="20201110 08:34:58.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.053" endtime="20201110 08:34:58.341"></status>
</kw>
<msg timestamp="20201110 08:34:58.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.052" endtime="20201110 08:34:58.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.345" endtime="20201110 08:34:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.354" endtime="20201110 08:34:58.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.049" endtime="20201110 08:34:58.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.047" endtime="20201110 08:34:58.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.361" level="INFO">${RESULT} = [{'time': 0.023547889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.422199999999797e-05, 'source_diff': 9.422199999999797e-05}, {'time': 0.023650875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.357" endtime="20201110 08:34:58.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.376" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:58.362" endtime="20201110 08:34:58.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.381" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.380" endtime="20201110 08:34:58.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.383" level="INFO">VALUE: [9.422199999999797e-05, 9.372199999999747e-05, 9.393099999999849e-05, 9.375000000000008e-05, 9.438900000000028e-05, 9.458400000000172e-05, 9.434800000000104e-05, 9.41659999999997e-05, 9.436100000000114e-05, 9.376399999999965e-05, 9.368000000000223e-05, 9.413900000000003e-05, 9.366700000000214e-05, 9.399999999999686e-05, 9.380600000000183e-05, 9.387500000000021e-05, 9.391700000000239e-05, 9.376399999999965e-05, 9.450000000000083e-05, 9.442999999999951e-05, 9.420900000000135e-05, 9.420800000000187e-05, 9.363899999999953e-05, 9.377699999999975e-05, 9.375000000000008e-05, 9.419399999999883e-05, 9.442999999999951e-05, 9.412500000000046e-05, 9.372200000000094e-05, 9.377799999999922e-05, 9.36529999999991e-05, 9.400000000000033e-05, 9.456899999999921e-05, 9.43469999999981e-05, 9.427799999999972e-05, 9.370900000000085e-05, 9.387500000000021e-05, 9.377799999999922e-05, 9.408400000000122e-05, 9.384799999999707e-05, 9.452699999999703e-05, 9.458299999999878e-05, 9.455499999999964e-05, 9.426400000000015e-05, 9.38330000000015e-05, 9.384700000000107e-05, 9.455499999999964e-05, 9.395899999999763e-05, 9.431899999999896e-05, 9.447199999999822e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.382" endtime="20201110 08:34:58.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.377" endtime="20201110 08:34:58.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.387" endtime="20201110 08:34:58.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.391" endtime="20201110 08:34:58.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.389" endtime="20201110 08:34:58.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.385" endtime="20201110 08:34:58.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.011" endtime="20201110 08:34:58.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.010" endtime="20201110 08:34:58.411"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.421" endtime="20201110 08:34:58.440"></status>
</kw>
<msg timestamp="20201110 08:34:58.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.419" endtime="20201110 08:34:58.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.442" endtime="20201110 08:34:58.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.444" endtime="20201110 08:34:58.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.416" endtime="20201110 08:34:58.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.414" endtime="20201110 08:34:58.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.455" endtime="20201110 08:34:58.742"></status>
</kw>
<msg timestamp="20201110 08:34:58.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.453" endtime="20201110 08:34:58.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.746" endtime="20201110 08:34:58.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.755" endtime="20201110 08:34:58.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.451" endtime="20201110 08:34:58.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.449" endtime="20201110 08:34:58.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:58.761" level="INFO">${RESULT} = [{'time': 0.022832458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.559699999999935e-05, 'source_diff': 9.559699999999935e-05}, {'time': 0.022931486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:58.758" endtime="20201110 08:34:58.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:58.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:58.763" endtime="20201110 08:34:58.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.780" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:58.779" endtime="20201110 08:34:58.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.783" level="INFO">VALUE: [9.559699999999935e-05, 9.480499999999989e-05, 9.488799999999784e-05, 9.559799999999882e-05, 9.472300000000142e-05, 9.511100000000189e-05, 9.516700000000017e-05, 9.475000000000108e-05, 9.555600000000011e-05, 9.559699999999935e-05, 9.511100000000189e-05, 9.473600000000151e-05, 9.534700000000257e-05, 9.537500000000171e-05, 9.497199999999872e-05, 9.559700000000282e-05, 9.522200000000244e-05, 9.543000000000051e-05, 9.526399999999768e-05, 9.477700000000075e-05, 9.463899999999706e-05, 9.494500000000253e-05, 9.477800000000022e-05, 9.508399999999875e-05, 9.483299999999903e-05, 9.494399999999958e-05, 9.527699999999778e-05, 9.483299999999903e-05, 9.46940000000028e-05, 9.486099999999817e-05, 9.543000000000051e-05, 9.509699999999885e-05, 9.483299999999903e-05, 9.556999999999968e-05, 9.537499999999824e-05, 9.516700000000017e-05, 9.511099999999842e-05, 9.518099999999974e-05, 9.543099999999999e-05, 9.5333999999999e-05, 9.555500000000064e-05, 9.504100000000057e-05, 9.462499999999749e-05, 9.533299999999953e-05, 9.523599999999854e-05, 9.525000000000158e-05, 9.488899999999731e-05, 9.472200000000194e-05, 9.516700000000017e-05, 9.480599999999936e-05]</msg>
<status status="PASS" starttime="20201110 08:34:58.781" endtime="20201110 08:34:58.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.776" endtime="20201110 08:34:58.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.786" endtime="20201110 08:34:58.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:58.790" endtime="20201110 08:34:58.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.788" endtime="20201110 08:34:58.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.785" endtime="20201110 08:34:58.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.412" endtime="20201110 08:34:58.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.412" endtime="20201110 08:34:58.811"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.820" endtime="20201110 08:34:58.840"></status>
</kw>
<msg timestamp="20201110 08:34:58.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.818" endtime="20201110 08:34:58.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:58.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:58.841" endtime="20201110 08:34:58.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.844" endtime="20201110 08:34:58.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.816" endtime="20201110 08:34:58.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.813" endtime="20201110 08:34:58.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:58.854" endtime="20201110 08:34:59.141"></status>
</kw>
<msg timestamp="20201110 08:34:59.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:58.853" endtime="20201110 08:34:59.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.146" endtime="20201110 08:34:59.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.154" endtime="20201110 08:34:59.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.850" endtime="20201110 08:34:59.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.848" endtime="20201110 08:34:59.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.161" level="INFO">${RESULT} = [{'time': 0.022792861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.63470000000001e-05, 'source_diff': 9.63470000000001e-05}, {'time': 0.022897917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:59.158" endtime="20201110 08:34:59.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.175" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:59.162" endtime="20201110 08:34:59.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.180" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.179" endtime="20201110 08:34:59.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.183" level="INFO">VALUE: [9.63470000000001e-05, 9.608399999999975e-05, 9.601399999999843e-05, 9.60140000000019e-05, 9.64019999999989e-05, 9.56660000000012e-05, 9.61660000000017e-05, 9.656900000000121e-05, 9.656899999999774e-05, 9.579200000000079e-05, 9.576400000000165e-05, 9.591699999999745e-05, 9.622199999999997e-05, 9.575000000000208e-05, 9.607000000000018e-05, 9.568100000000024e-05, 9.566700000000067e-05, 9.627799999999825e-05, 9.569499999999981e-05, 9.659700000000035e-05, 9.657000000000068e-05, 9.61669999999977e-05, 9.62080000000004e-05, 9.640300000000185e-05, 9.588900000000178e-05, 9.641699999999795e-05, 9.644400000000108e-05, 9.63059999999974e-05, 9.637499999999924e-05, 9.641699999999795e-05, 9.609799999999932e-05, 9.631900000000096e-05, 9.588900000000178e-05, 9.59019999999984e-05, 9.608399999999975e-05, 9.655500000000164e-05, 9.633300000000053e-05, 9.597199999999972e-05, 9.608300000000028e-05, 9.613899999999856e-05, 9.599999999999886e-05, 9.579200000000079e-05, 9.588900000000178e-05, 9.609699999999985e-05, 9.608300000000028e-05, 9.620899999999988e-05, 9.559699999999935e-05, 9.64859999999998e-05, 9.601399999999843e-05, 9.591699999999745e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.181" endtime="20201110 08:34:59.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.176" endtime="20201110 08:34:59.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.186" endtime="20201110 08:34:59.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.190" endtime="20201110 08:34:59.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.188" endtime="20201110 08:34:59.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.185" endtime="20201110 08:34:59.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.812" endtime="20201110 08:34:59.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:58.811" endtime="20201110 08:34:59.211"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.220" endtime="20201110 08:34:59.239"></status>
</kw>
<msg timestamp="20201110 08:34:59.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.218" endtime="20201110 08:34:59.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.241" endtime="20201110 08:34:59.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.244" endtime="20201110 08:34:59.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.215" endtime="20201110 08:34:59.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.213" endtime="20201110 08:34:59.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.254" endtime="20201110 08:34:59.541"></status>
</kw>
<msg timestamp="20201110 08:34:59.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022570847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.252" endtime="20201110 08:34:59.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022570847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.545" endtime="20201110 08:34:59.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.554" endtime="20201110 08:34:59.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.250" endtime="20201110 08:34:59.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.248" endtime="20201110 08:34:59.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.561" level="INFO">${RESULT} = [{'time': 0.022570847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.687500000000321e-05, 'source_diff': 9.687500000000321e-05}, {'time': 0.022674875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.557" endtime="20201110 08:34:59.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.575" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:59.562" endtime="20201110 08:34:59.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.580" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.579" endtime="20201110 08:34:59.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.582" level="INFO">VALUE: [9.687500000000321e-05, 9.723600000000054e-05, 9.716700000000217e-05, 9.726399999999968e-05, 9.683399999999703e-05, 9.745900000000113e-05, 9.672200000000047e-05, 9.686100000000017e-05, 9.68470000000006e-05, 9.756899999999874e-05, 9.687499999999974e-05, 9.727800000000272e-05, 9.745799999999818e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.684699999999713e-05, 9.669400000000133e-05, 9.720900000000088e-05, 9.67920000000018e-05, 9.720900000000088e-05, 9.688899999999931e-05, 9.719500000000131e-05, 9.718100000000174e-05, 9.677699999999928e-05, 9.743000000000251e-05, 9.740300000000285e-05, 9.715199999999966e-05, 9.734699999999763e-05, 9.722200000000097e-05, 9.770900000000138e-05, 9.677799999999875e-05, 9.705600000000161e-05, 9.674999999999961e-05, 9.677800000000222e-05, 9.687500000000321e-05, 9.736100000000067e-05, 9.663899999999906e-05, 9.763900000000006e-05, 9.720900000000088e-05, 9.716599999999923e-05, 9.71530000000026e-05, 9.699999999999986e-05, 9.733300000000153e-05, 9.687499999999974e-05, 9.702800000000247e-05, 9.66669999999982e-05, 9.690299999999888e-05, 9.677800000000222e-05, 9.719500000000131e-05, 9.74730000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.581" endtime="20201110 08:34:59.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.576" endtime="20201110 08:34:59.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.586" endtime="20201110 08:34:59.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.589" endtime="20201110 08:34:59.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.588" endtime="20201110 08:34:59.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.584" endtime="20201110 08:34:59.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.212" endtime="20201110 08:34:59.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.211" endtime="20201110 08:34:59.610"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.619" endtime="20201110 08:34:59.638"></status>
</kw>
<msg timestamp="20201110 08:34:59.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.618" endtime="20201110 08:34:59.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:59.639" endtime="20201110 08:34:59.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.642" endtime="20201110 08:34:59.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.615" endtime="20201110 08:34:59.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.613" endtime="20201110 08:34:59.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.652" endtime="20201110 08:34:59.938"></status>
</kw>
<msg timestamp="20201110 08:34:59.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.651" endtime="20201110 08:34:59.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.943" endtime="20201110 08:34:59.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.951" endtime="20201110 08:34:59.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.648" endtime="20201110 08:34:59.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.646" endtime="20201110 08:34:59.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.958" level="INFO">${RESULT} = [{'time': 0.022598167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.845899999999866e-05, 'source_diff': 9.845899999999866e-05}, {'time': 0.022701181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:59.955" endtime="20201110 08:34:59.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:59.974" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:34:59.959" endtime="20201110 08:34:59.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.979" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:59.978" endtime="20201110 08:34:59.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.982" level="INFO">VALUE: [9.845899999999866e-05, 9.851400000000093e-05, 9.827700000000078e-05, 9.837500000000124e-05, 9.800000000000086e-05, 9.808399999999828e-05, 9.840300000000038e-05, 9.83059999999994e-05, 9.788900000000031e-05, 9.790299999999988e-05, 9.855600000000311e-05, 9.783399999999803e-05, 9.85280000000005e-05, 9.847299999999823e-05, 9.811099999999795e-05, 9.808299999999881e-05, 9.792999999999955e-05, 9.808299999999881e-05, 9.837500000000124e-05, 9.777799999999975e-05, 9.81799999999998e-05, 9.858299999999931e-05, 9.827800000000025e-05, 9.833299999999906e-05, 9.763900000000006e-05, 9.793099999999902e-05, 9.806999999999871e-05, 9.856999999999921e-05, 9.826400000000068e-05, 9.787500000000074e-05, 9.834699999999863e-05, 9.800000000000086e-05, 9.795899999999816e-05, 9.81799999999998e-05, 9.791599999999998e-05, 9.790299999999988e-05, 9.841600000000048e-05, 9.861099999999845e-05, 9.85410000000006e-05, 9.819399999999937e-05, 9.791700000000292e-05, 9.795799999999869e-05, 9.85280000000005e-05, 9.788900000000031e-05, 9.78470000000016e-05, 9.825000000000111e-05, 9.79020000000004e-05, 9.779199999999932e-05, 9.851400000000093e-05, 9.826399999999721e-05]</msg>
<status status="PASS" starttime="20201110 08:34:59.980" endtime="20201110 08:34:59.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.975" endtime="20201110 08:34:59.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.986" endtime="20201110 08:34:59.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.989" endtime="20201110 08:35:00.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.988" endtime="20201110 08:35:00.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.984" endtime="20201110 08:35:00.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.611" endtime="20201110 08:35:00.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.611" endtime="20201110 08:35:00.010"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.019" endtime="20201110 08:35:00.039"></status>
</kw>
<msg timestamp="20201110 08:35:00.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.018" endtime="20201110 08:35:00.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.040" endtime="20201110 08:35:00.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.043" endtime="20201110 08:35:00.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.015" endtime="20201110 08:35:00.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.013" endtime="20201110 08:35:00.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.053" endtime="20201110 08:35:00.338"></status>
</kw>
<msg timestamp="20201110 08:35:00.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.052" endtime="20201110 08:35:00.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.343" endtime="20201110 08:35:00.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.352" endtime="20201110 08:35:00.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.049" endtime="20201110 08:35:00.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.047" endtime="20201110 08:35:00.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.359" level="INFO">${RESULT} = [{'time': 0.022781542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.874999999999814e-05, 'source_diff': 9.874999999999814e-05}, {'time': 0.022885569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:35:00.355" endtime="20201110 08:35:00.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:00.360" endtime="20201110 08:35:00.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.377" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.376" endtime="20201110 08:35:00.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.380" level="INFO">VALUE: [9.874999999999814e-05, 9.875000000000161e-05, 9.924999999999864e-05, 9.901400000000143e-05, 9.911099999999895e-05, 9.893100000000002e-05, 9.929200000000082e-05, 9.941700000000095e-05, 9.883300000000303e-05, 9.90419999999971e-05, 9.940300000000138e-05, 9.926400000000168e-05, 9.952799999999803e-05, 9.89159999999975e-05, 9.926299999999874e-05, 9.8721999999999e-05, 9.865200000000116e-05, 9.963900000000206e-05, 9.909699999999938e-05, 9.909699999999938e-05, 9.945800000000019e-05, 9.948599999999932e-05, 9.89860000000023e-05, 9.951399999999846e-05, 9.922200000000297e-05, 9.894499999999959e-05, 9.926399999999821e-05, 9.941700000000095e-05, 9.863900000000106e-05, 9.8721999999999e-05, 9.866600000000073e-05, 9.884699999999913e-05, 9.902700000000153e-05, 9.9028000000001e-05, 9.90410000000011e-05, 9.913900000000156e-05, 9.93609999999992e-05, 9.90419999999971e-05, 9.931900000000049e-05, 9.938900000000181e-05, 9.91800000000008e-05, 9.927800000000125e-05, 9.874999999999814e-05, 9.938900000000181e-05, 9.944399999999715e-05, 9.959699999999988e-05, 9.863900000000106e-05, 9.913899999999809e-05, 9.906900000000024e-05, 9.876400000000118e-05]</msg>
<status status="PASS" starttime="20201110 08:35:00.378" endtime="20201110 08:35:00.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.374" endtime="20201110 08:35:00.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.384" endtime="20201110 08:35:00.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.387" endtime="20201110 08:35:00.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.386" endtime="20201110 08:35:00.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.382" endtime="20201110 08:35:00.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.011" endtime="20201110 08:35:00.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.011" endtime="20201110 08:35:00.408"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.417" endtime="20201110 08:35:00.436"></status>
</kw>
<msg timestamp="20201110 08:35:00.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.415" endtime="20201110 08:35:00.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.437" endtime="20201110 08:35:00.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.440" endtime="20201110 08:35:00.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.413" endtime="20201110 08:35:00.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.411" endtime="20201110 08:35:00.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.450" endtime="20201110 08:35:00.737"></status>
</kw>
<msg timestamp="20201110 08:35:00.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.449" endtime="20201110 08:35:00.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.741" endtime="20201110 08:35:00.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.750" endtime="20201110 08:35:00.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.446" endtime="20201110 08:35:00.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.444" endtime="20201110 08:35:00.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:00.757" level="INFO">${RESULT} = [{'time': 0.022736403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010027799999999878, 'source_diff': 0.00010027799999999878}, {'time': 0.022841417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:00.753" endtime="20201110 08:35:00.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:00.771" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:00.758" endtime="20201110 08:35:00.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.775" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:35:00.774" endtime="20201110 08:35:00.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.778" level="INFO">VALUE: [0.00010027799999999878, 0.0001005419999999986, 0.0001000549999999982, 0.00010045800000000119, 0.00010006899999999777, 9.9722e-05, 9.96670000000012e-05, 0.00010055599999999817, 9.970800000000044e-05, 0.00010027800000000225, 0.00010008300000000081, 9.958399999999978e-05, 0.00010002799999999853, 9.98609999999997e-05, 0.00010015300000000213, 0.00010008400000000028, 0.00010051400000000293, 0.00010031899999999802, 0.0001002220000000005, 0.00010061100000000045, 0.00010022199999999704, 0.00010055599999999817, 9.977800000000175e-05, 9.9722e-05, 0.00010061100000000045, 0.00010051399999999946, 0.00010011099999999995, 9.990299999999841e-05, 0.00010034700000000063, 0.00010002799999999853, 0.00010004200000000157, 0.00010004200000000157, 0.00010020900000000041, 9.96800000000013e-05, 9.99159999999985e-05, 0.00010062500000000002, 9.984700000000013e-05, 0.00010029199999999835, 0.0001003610000000002, 0.00010037499999999977, 0.0001002220000000005, 0.00010011099999999995, 9.981900000000099e-05, 0.00010059800000000035, 0.00010001399999999896, 9.991700000000145e-05, 0.00010013899999999909, 0.00010045900000000066, 9.98060000000009e-05, 0.00010044400000000162]</msg>
<status status="PASS" starttime="20201110 08:35:00.777" endtime="20201110 08:35:00.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.772" endtime="20201110 08:35:00.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.782" endtime="20201110 08:35:00.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:00.785" endtime="20201110 08:35:00.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.784" endtime="20201110 08:35:00.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.780" endtime="20201110 08:35:00.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.409" endtime="20201110 08:35:00.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.408" endtime="20201110 08:35:00.806"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.815" endtime="20201110 08:35:00.835"></status>
</kw>
<msg timestamp="20201110 08:35:00.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.814" endtime="20201110 08:35:00.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:00.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:00.837" endtime="20201110 08:35:00.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.839" endtime="20201110 08:35:00.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.811" endtime="20201110 08:35:00.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.809" endtime="20201110 08:35:00.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:00.850" endtime="20201110 08:35:01.136"></status>
</kw>
<msg timestamp="20201110 08:35:01.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:00.848" endtime="20201110 08:35:01.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.140" endtime="20201110 08:35:01.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.149" endtime="20201110 08:35:01.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.845" endtime="20201110 08:35:01.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.843" endtime="20201110 08:35:01.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.156" level="INFO">${RESULT} = [{'time': 0.022755792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010144500000000209, 'source_diff': 0.00010144500000000209}, {'time': 0.022861833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:01.152" endtime="20201110 08:35:01.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.169" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:01.157" endtime="20201110 08:35:01.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.174" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.173" endtime="20201110 08:35:01.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.177" level="INFO">VALUE: [0.00010144500000000209, 0.00010155500000000317, 0.0001011939999999989, 0.0001006809999999983, 0.00010073600000000058, 0.00010116699999999923, 0.00010136099999999773, 0.00010115299999999966, 0.00010141700000000295, 0.00010080599999999842, 0.00010092999999999908, 0.00010104099999999963, 0.00010106899999999877, 0.0001008610000000007, 0.00010104099999999963, 0.0001015000000000009, 0.00010113900000000009, 0.00010079199999999885, 0.0001010419999999991, 0.00010075000000000014, 0.00010077799999999928, 0.0001008480000000006, 0.00010158299999999884, 0.00010083399999999756, 0.00010099999999999693, 0.00010066599999999926, 0.00010087500000000027, 0.00010098599999999736, 0.00010138800000000087, 0.00010152800000000003, 0.00010116599999999976, 0.00010091699999999898, 0.00010116699999999923, 0.00010075000000000014, 0.00010084700000000113, 0.00010087500000000027, 0.00010094500000000159, 0.00010095900000000116, 0.00010074999999999668, 0.00010147299999999776, 0.00010138900000000034, 0.00010159700000000188, 0.00010137500000000077, 0.00010137500000000077, 0.00010075000000000014, 0.00010072199999999754, 0.00010148600000000133, 0.00010145799999999872, 0.00010084700000000113, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201110 08:35:01.175" endtime="20201110 08:35:01.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.170" endtime="20201110 08:35:01.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.180" endtime="20201110 08:35:01.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.184" endtime="20201110 08:35:01.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.182" endtime="20201110 08:35:01.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.179" endtime="20201110 08:35:01.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.807" endtime="20201110 08:35:01.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:00.807" endtime="20201110 08:35:01.205"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.214" endtime="20201110 08:35:01.234"></status>
</kw>
<msg timestamp="20201110 08:35:01.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.212" endtime="20201110 08:35:01.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.235" endtime="20201110 08:35:01.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.238" endtime="20201110 08:35:01.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.210" endtime="20201110 08:35:01.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.208" endtime="20201110 08:35:01.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.248" endtime="20201110 08:35:01.535"></status>
</kw>
<msg timestamp="20201110 08:35:01.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.247" endtime="20201110 08:35:01.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.540" endtime="20201110 08:35:01.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.548" endtime="20201110 08:35:01.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.244" endtime="20201110 08:35:01.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.242" endtime="20201110 08:35:01.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.555" level="INFO">${RESULT} = [{'time': 0.022847056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010227800000000078, 'source_diff': 0.00010227800000000078}, {'time': 0.022958097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:01.552" endtime="20201110 08:35:01.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.570" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:01.556" endtime="20201110 08:35:01.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.574" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.573" endtime="20201110 08:35:01.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.577" level="INFO">VALUE: [0.00010227800000000078, 0.00010265300000000116, 0.00010187500000000127, 0.00010240300000000091, 0.00010212500000000152, 0.00010244499999999962, 0.00010233400000000253, 0.00010265299999999769, 0.0001020420000000001, 0.00010194399999999965, 0.00010195899999999869, 0.00010201400000000097, 0.00010216600000000076, 0.00010211100000000195, 0.00010238899999999787, 0.00010212500000000152, 0.00010238900000000134, 0.00010191699999999998, 0.00010193099999999955, 0.00010256999999999974, 0.00010220799999999947, 0.00010199999999999793, 0.00010213899999999762, 0.00010184700000000213, 0.00010194499999999912, 0.00010227700000000131, 0.00010201300000000149, 0.00010173600000000158, 0.00010209699999999891, 0.00010249999999999843, 0.0001021809999999998, 0.0001023749999999983, 0.0001020420000000001, 0.0001018749999999978, 0.00010222199999999904, 0.0001020000000000014, 0.00010186099999999823, 0.00010248699999999833, 0.00010162500000000102, 0.00010175000000000115, 0.00010224999999999818, 0.00010167999999999983, 0.0001017359999999981, 0.00010251400000000147, 0.00010194399999999965, 0.00010259699999999941, 0.00010163900000000059, 0.0001025420000000006, 0.00010197199999999879, 0.00010198599999999836]</msg>
<status status="PASS" starttime="20201110 08:35:01.576" endtime="20201110 08:35:01.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.571" endtime="20201110 08:35:01.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.588" endtime="20201110 08:35:01.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.592" endtime="20201110 08:35:01.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.590" endtime="20201110 08:35:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.586" endtime="20201110 08:35:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.206" endtime="20201110 08:35:01.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.205" endtime="20201110 08:35:01.612"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.621" endtime="20201110 08:35:01.642"></status>
</kw>
<msg timestamp="20201110 08:35:01.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.620" endtime="20201110 08:35:01.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:01.643" endtime="20201110 08:35:01.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.646" endtime="20201110 08:35:01.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.617" endtime="20201110 08:35:01.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.615" endtime="20201110 08:35:01.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.657" endtime="20201110 08:35:01.943"></status>
</kw>
<msg timestamp="20201110 08:35:01.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.655" endtime="20201110 08:35:01.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.947" endtime="20201110 08:35:01.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.956" endtime="20201110 08:35:01.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.652" endtime="20201110 08:35:01.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.650" endtime="20201110 08:35:01.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.963" level="INFO">${RESULT} = [{'time': 0.022977264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010362499999999955, 'source_diff': 0.00010362499999999955}, {'time': 0.023089319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:01.959" endtime="20201110 08:35:01.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:01.976" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:01.964" endtime="20201110 08:35:01.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.981" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:35:01.980" endtime="20201110 08:35:01.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.983" level="INFO">VALUE: [0.00010362499999999955, 0.0001027359999999991, 0.00010281899999999705, 0.00010302800000000154, 0.00010327799999999832, 0.00010357000000000074, 0.00010302799999999807, 0.00010308300000000034, 0.00010336099999999973, 0.00010358400000000031, 0.0001033200000000005, 0.00010330500000000145, 0.00010344400000000115, 0.0001033879999999994, 0.00010261199999999845, 0.00010270799999999997, 0.00010287500000000227, 0.00010275000000000215, 0.00010304199999999764, 0.00010338899999999887, 0.00010341700000000148, 0.00010334700000000016, 0.00010313899999999862, 0.00010311099999999948, 0.00010283300000000009, 0.00010313899999999862, 0.00010304199999999764, 0.00010361199999999945, 0.00010282, 0.00010270799999999997, 0.00010336200000000267, 0.0001030689999999973, 0.00010277799999999782, 0.00010344499999999715, 0.00010333300000000059, 0.00010325000000000265, 0.00010263899999999812, 0.00010348599999999986, 0.00010316699999999776, 0.00010311099999999948, 0.00010261100000000245, 0.0001026810000000003, 0.00010357000000000074, 0.00010295900000000316, 0.00010358400000000031, 0.00010355499999999823, 0.00010266700000000073, 0.00010302800000000154, 0.00010309699999999991, 0.0001028749999999988]</msg>
<status status="PASS" starttime="20201110 08:35:01.982" endtime="20201110 08:35:01.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.977" endtime="20201110 08:35:01.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.987" endtime="20201110 08:35:01.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:01.991" endtime="20201110 08:35:02.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.989" endtime="20201110 08:35:02.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.986" endtime="20201110 08:35:02.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.613" endtime="20201110 08:35:02.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.613" endtime="20201110 08:35:02.013"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.022" endtime="20201110 08:35:02.042"></status>
</kw>
<msg timestamp="20201110 08:35:02.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.020" endtime="20201110 08:35:02.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.043" endtime="20201110 08:35:02.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.046" endtime="20201110 08:35:02.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.018" endtime="20201110 08:35:02.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.015" endtime="20201110 08:35:02.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.057" endtime="20201110 08:35:02.343"></status>
</kw>
<msg timestamp="20201110 08:35:02.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.055" endtime="20201110 08:35:02.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.348" endtime="20201110 08:35:02.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.360" endtime="20201110 08:35:02.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.052" endtime="20201110 08:35:02.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.051" endtime="20201110 08:35:02.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.371" level="INFO">${RESULT} = [{'time': 0.024017111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010450000000000043, 'source_diff': 0.00010450000000000043}, {'time': 0.024127167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:02.367" endtime="20201110 08:35:02.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.390" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:02.374" endtime="20201110 08:35:02.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.394" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.393" endtime="20201110 08:35:02.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.397" level="INFO">VALUE: [0.00010450000000000043, 0.00010448600000000086, 0.00010365299999999869, 0.00010417999999999886, 0.00010408300000000134, 0.00010461100000000098, 0.00010411099999999701, 0.00010380600000000142, 0.00010434799999999717, 0.00010427800000000279, 0.00010402799999999907, 0.00010444499999999815, 0.0001043200000000015, 0.0001036949999999974, 0.0001038879999999999, 0.00010397300000000026, 0.00010390299999999894, 0.00010419399999999843, 0.00010415299999999919, 0.0001040689999999983, 0.00010417999999999886, 0.00010383300000000109, 0.00010394399999999818, 0.00010412500000000005, 0.00010457000000000174, 0.00010429199999999889, 0.00010454199999999914, 0.00010441599999999954, 0.00010452800000000304, 0.00010380600000000142, 0.00010438900000000334, 0.00010408299999999787, 0.00010415299999999919, 0.00010452800000000304, 0.00010425000000000018, 0.00010406900000000177, 0.00010458399999999785, 0.00010379200000000185, 0.00010434700000000116, 0.00010379199999999839, 0.00010440300000000291, 0.00010383300000000109, 0.00010436100000000073, 0.00010374999999999968, 0.000103820000000001, 0.00010441699999999901, 0.00010408400000000081, 0.00010445799999999825, 0.000104514, 0.00010452799999999957]</msg>
<status status="PASS" starttime="20201110 08:35:02.395" endtime="20201110 08:35:02.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.391" endtime="20201110 08:35:02.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.400" endtime="20201110 08:35:02.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.404" endtime="20201110 08:35:02.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.402" endtime="20201110 08:35:02.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.399" endtime="20201110 08:35:02.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.014" endtime="20201110 08:35:02.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.013" endtime="20201110 08:35:02.425"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.433" endtime="20201110 08:35:02.453"></status>
</kw>
<msg timestamp="20201110 08:35:02.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.432" endtime="20201110 08:35:02.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.455" endtime="20201110 08:35:02.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.457" endtime="20201110 08:35:02.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.429" endtime="20201110 08:35:02.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.427" endtime="20201110 08:35:02.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.467" endtime="20201110 08:35:02.763"></status>
</kw>
<msg timestamp="20201110 08:35:02.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:02.466" endtime="20201110 08:35:02.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:35:02.767" endtime="20201110 08:35:02.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.776" endtime="20201110 08:35:02.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.463" endtime="20201110 08:35:02.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.462" endtime="20201110 08:35:02.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.782" level="INFO">${RESULT} = [{'time': 0.02208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001055689999999998, 'source_diff': 0.0001055689999999998}, {'time': 0.022191014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0...</msg>
<status status="PASS" starttime="20201110 08:35:02.779" endtime="20201110 08:35:02.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:02.795" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:02.783" endtime="20201110 08:35:02.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.800" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:35:02.799" endtime="20201110 08:35:02.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.802" level="INFO">VALUE: [0.0001055689999999998, 0.00010509699999999844, 0.00010466699999999926, 0.00010498600000000136, 0.00010540300000000044, 0.00010504199999999964, 0.00010495899999999822, 0.00010552800000000057, 0.00010531899999999955, 0.00010492999999999961, 0.00010486100000000123, 0.00010467999999999936, 0.00010544399999999968, 0.00010518099999999933, 0.0001050140000000005, 0.000105514000000001, 0.00010494499999999865, 0.0001050140000000005, 0.00010479199999999939, 0.00010494500000000212, 0.0001050140000000005, 0.00010515200000000072, 0.00010502700000000059, 0.0001047360000000011, 0.00010515199999999725, 0.0001055279999999971, 0.00010494399999999918, 0.00010526400000000075, 0.00010515300000000019, 0.00010505499999999973, 0.00010495799999999875, 0.00010544500000000262, 0.00010507000000000224, 0.0001052360000000016, 0.0001053339999999986, 0.0001047499999999972, 0.00010508399999999835, 0.00010527700000000084, 0.00010475000000000068, 0.00010509699999999844, 0.00010495800000000222, 0.00010526400000000075, 0.00010540300000000044, 0.00010519399999999943, 0.00010501399999999703, 0.00010518099999999933, 0.00010538900000000087, 0.00010466699999999926, 0.00010502800000000007, 0.00010494500000000212]</msg>
<status status="PASS" starttime="20201110 08:35:02.801" endtime="20201110 08:35:02.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.796" endtime="20201110 08:35:02.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.806" endtime="20201110 08:35:02.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.809" endtime="20201110 08:35:02.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.808" endtime="20201110 08:35:02.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.804" endtime="20201110 08:35:02.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.426" endtime="20201110 08:35:02.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.425" endtime="20201110 08:35:02.830"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.839" endtime="20201110 08:35:02.859"></status>
</kw>
<msg timestamp="20201110 08:35:02.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.837" endtime="20201110 08:35:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:02.860" endtime="20201110 08:35:02.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.863" endtime="20201110 08:35:02.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.835" endtime="20201110 08:35:02.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.833" endtime="20201110 08:35:02.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.873" endtime="20201110 08:35:03.160"></status>
</kw>
<msg timestamp="20201110 08:35:03.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.871" endtime="20201110 08:35:03.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.164" endtime="20201110 08:35:03.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.172" endtime="20201110 08:35:03.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.869" endtime="20201110 08:35:03.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.867" endtime="20201110 08:35:03.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.178" level="INFO">${RESULT} = [{'time': 0.022561764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010658300000000037, 'source_diff': 0.00010658300000000037}, {'time': 0.022675792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:03.175" endtime="20201110 08:35:03.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.193" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:03.179" endtime="20201110 08:35:03.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.197" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.196" endtime="20201110 08:35:03.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.199" level="INFO">VALUE: [0.00010658300000000037, 0.00010659799999999942, 0.00010637499999999883, 0.00010626399999999828, 0.00010572199999999907, 0.0001058750000000018, 0.0001060279999999976, 0.00010627800000000132, 0.00010651399999999853, 0.00010648600000000286, 0.00010565300000000069, 0.00010616700000000076, 0.00010613900000000162, 0.00010625000000000218, 0.00010640300000000144, 0.00010637499999999883, 0.00010590300000000094, 0.00010634700000000316, 0.00010655499999999776, 0.0001060690000000003, 0.0001057360000000021, 0.00010597199999999932, 0.00010565300000000069, 0.00010613899999999815, 0.00010612499999999858, 0.00010575000000000168, 0.0001062499999999987, 0.00010666700000000126, 0.00010581999999999953, 0.00010655599999999724, 0.00010604200000000064, 0.0001062629999999988, 0.00010629099999999794, 0.00010632000000000003, 0.00010629100000000141, 0.00010605500000000073, 0.00010581900000000005, 0.00010647299999999929, 0.00010633300000000012, 0.00010599999999999846, 0.00010615299999999772, 0.00010584700000000266, 0.00010613900000000162, 0.00010661099999999951, 0.00010595899999999922, 0.00010661199999999899, 0.00010594499999999965, 0.00010583299999999962, 0.00010598599999999889, 0.00010588900000000137]</msg>
<status status="PASS" starttime="20201110 08:35:03.198" endtime="20201110 08:35:03.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.193" endtime="20201110 08:35:03.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.203" endtime="20201110 08:35:03.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.206" endtime="20201110 08:35:03.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.205" endtime="20201110 08:35:03.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.201" endtime="20201110 08:35:03.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.831" endtime="20201110 08:35:03.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.831" endtime="20201110 08:35:03.227"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.236" endtime="20201110 08:35:03.255"></status>
</kw>
<msg timestamp="20201110 08:35:03.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.234" endtime="20201110 08:35:03.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.257" endtime="20201110 08:35:03.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.259" endtime="20201110 08:35:03.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.232" endtime="20201110 08:35:03.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.230" endtime="20201110 08:35:03.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.269" endtime="20201110 08:35:03.569"></status>
</kw>
<msg timestamp="20201110 08:35:03.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.267" endtime="20201110 08:35:03.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.573" endtime="20201110 08:35:03.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.581" endtime="20201110 08:35:03.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.265" endtime="20201110 08:35:03.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.263" endtime="20201110 08:35:03.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.588" level="INFO">${RESULT} = [{'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010716700000000176, 'source_diff': 0.00010716700000000176}, {'time': 0.021946444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:03.585" endtime="20201110 08:35:03.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.601" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:03.589" endtime="20201110 08:35:03.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.606" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.605" endtime="20201110 08:35:03.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.608" level="INFO">VALUE: [0.00010716700000000176, 0.00010762500000000008, 0.00010752699999999962, 0.00010670899999999997, 0.00010719399999999796, 0.00010665300000000169, 0.0001070560000000012, 0.00010673599999999964, 0.00010697200000000032, 0.00010748699999999986, 0.00010748599999999692, 0.00010765299999999922, 0.00010747300000000029, 0.00010681899999999758, 0.00010679100000000191, 0.0001067360000000031, 0.00010662499999999908, 0.00010766699999999879, 0.00010665300000000169, 0.00010754200000000214, 0.00010694399999999771, 0.00010691699999999804, 0.00010740300000000244, 0.00010697199999999685, 0.00010679200000000139, 0.00010733300000000112, 0.00010673599999999964, 0.00010755499999999876, 0.00010709799999999992, 0.00010699999999999946, 0.00010692999999999814, 0.00010673599999999964, 0.00010695800000000075, 0.00010741700000000201, 0.00010690299999999847, 0.00010759699999999747, 0.00010744500000000115, 0.0001070699999999973, 0.0001073889999999994, 0.0001066950000000004, 0.00010731999999999756, 0.00010697200000000032, 0.00010673700000000258, 0.00010716600000000229, 0.00010755499999999876, 0.00010762500000000008, 0.00010744399999999821, 0.00010676399999999878, 0.00010690299999999847, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201110 08:35:03.607" endtime="20201110 08:35:03.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.602" endtime="20201110 08:35:03.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.612" endtime="20201110 08:35:03.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:03.615" endtime="20201110 08:35:03.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.613" endtime="20201110 08:35:03.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.610" endtime="20201110 08:35:03.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.228" endtime="20201110 08:35:03.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.228" endtime="20201110 08:35:03.636"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.644" endtime="20201110 08:35:03.664"></status>
</kw>
<msg timestamp="20201110 08:35:03.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.643" endtime="20201110 08:35:03.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:03.665" endtime="20201110 08:35:03.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.668" endtime="20201110 08:35:03.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.640" endtime="20201110 08:35:03.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.638" endtime="20201110 08:35:03.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.678" endtime="20201110 08:35:03.963"></status>
</kw>
<msg timestamp="20201110 08:35:03.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.676" endtime="20201110 08:35:03.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:03.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:03.968" endtime="20201110 08:35:03.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:03.976" endtime="20201110 08:35:03.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.674" endtime="20201110 08:35:03.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.672" endtime="20201110 08:35:03.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:03.982" level="INFO">${RESULT} = [{'time': 0.022010389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010845800000000225, 'source_diff': 0.00010845800000000225}, {'time': 0.022123444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:03.979" endtime="20201110 08:35:03.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:03.995" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:03.983" endtime="20201110 08:35:03.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.000" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:35:03.999" endtime="20201110 08:35:04.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.002" level="INFO">VALUE: [0.00010845800000000225, 0.00010842999999999964, 0.00010783299999999815, 0.00010767999999999889, 0.00010822200000000157, 0.00010841699999999954, 0.00010768100000000183, 0.00010861099999999804, 0.00010804200000000264, 0.00010798600000000089, 0.00010776399999999978, 0.00010812500000000058, 0.00010844500000000215, 0.00010844399999999921, 0.0001082500000000007, 0.00010837500000000083, 0.00010850000000000096, 0.00010851400000000053, 0.00010772200000000107, 0.0001085829999999989, 0.00010827799999999985, 0.00010866699999999979, 0.00010833299999999865, 0.00010841699999999954, 0.00010848599999999792, 0.00010841699999999954, 0.00010791699999999904, 0.0001080279999999996, 0.00010811099999999754, 0.00010815299999999972, 0.00010809699999999797, 0.00010791699999999904, 0.00010836099999999779, 0.00010834699999999822, 0.00010811099999999754, 0.00010772200000000107, 0.00010780600000000196, 0.00010793099999999861, 0.00010797200000000132, 0.00010777699999999987, 0.00010786100000000076, 0.00010811200000000049, 0.00010784800000000067, 0.00010794400000000218, 0.00010761199999999999, 0.00010801400000000003, 0.00010811100000000101, 0.00010770799999999803, 0.00010808300000000187, 0.00010858300000000237]</msg>
<status status="PASS" starttime="20201110 08:35:04.001" endtime="20201110 08:35:04.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.996" endtime="20201110 08:35:04.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.006" endtime="20201110 08:35:04.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.009" endtime="20201110 08:35:04.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.008" endtime="20201110 08:35:04.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.004" endtime="20201110 08:35:04.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.637" endtime="20201110 08:35:04.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:03.636" endtime="20201110 08:35:04.030"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.040" endtime="20201110 08:35:04.060"></status>
</kw>
<msg timestamp="20201110 08:35:04.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.038" endtime="20201110 08:35:04.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.062" endtime="20201110 08:35:04.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.064" endtime="20201110 08:35:04.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.035" endtime="20201110 08:35:04.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.033" endtime="20201110 08:35:04.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.074" endtime="20201110 08:35:04.359"></status>
</kw>
<msg timestamp="20201110 08:35:04.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023550653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.072" endtime="20201110 08:35:04.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023550653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023659708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.363" endtime="20201110 08:35:04.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.371" endtime="20201110 08:35:04.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.070" endtime="20201110 08:35:04.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.068" endtime="20201110 08:35:04.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.378" level="INFO">${RESULT} = [{'time': 0.023659708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010905500000000026, 'source_diff': 0.00010905500000000026}, {'time': 0.023776736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:04.375" endtime="20201110 08:35:04.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.391" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:04.379" endtime="20201110 08:35:04.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.396" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.395" endtime="20201110 08:35:04.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.399" level="INFO">VALUE: [0.00010905500000000026, 0.00010931900000000008, 0.00010866699999999979, 0.00010945899999999925, 0.00010874999999999774, 0.00010930599999999999, 0.00010883399999999863, 0.00010931900000000008, 0.00010923599999999867, 0.00010923599999999867, 0.00010915200000000125, 0.00010924999999999824, 0.00010904200000000017, 0.00010931999999999956, 0.00010886100000000176, 0.00010961100000000251, 0.00010933399999999913, 0.00010938899999999793, 0.00010876400000000078, 0.00010886199999999777, 0.00010904200000000017, 0.00010937499999999836, 0.00010923700000000161, 0.00010906899999999983, 0.00010934699999999922, 0.00010919399999999996, 0.00010923600000000214, 0.00010893099999999961, 0.00010901399999999756, 0.00010911100000000201, 0.00010943100000000011, 0.00010941700000000054, 0.00010884700000000219, 0.00010943100000000011, 0.00010894500000000265, 0.00010966599999999785, 0.00010952799999999763, 0.00010931900000000008, 0.00010923600000000214, 0.00010954100000000119, 0.00010927700000000137, 0.00010876400000000078, 0.00010875000000000121, 0.00010868100000000283, 0.00010924999999999824, 0.00010959699999999947, 0.00010905599999999974, 0.00010868099999999936, 0.00010865300000000022, 0.00010962500000000208]</msg>
<status status="PASS" starttime="20201110 08:35:04.397" endtime="20201110 08:35:04.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.392" endtime="20201110 08:35:04.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.403" endtime="20201110 08:35:04.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.407" endtime="20201110 08:35:04.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.405" endtime="20201110 08:35:04.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.401" endtime="20201110 08:35:04.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.031" endtime="20201110 08:35:04.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.031" endtime="20201110 08:35:04.428"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.437" endtime="20201110 08:35:04.457"></status>
</kw>
<msg timestamp="20201110 08:35:04.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.435" endtime="20201110 08:35:04.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.458" endtime="20201110 08:35:04.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.461" endtime="20201110 08:35:04.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.433" endtime="20201110 08:35:04.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.431" endtime="20201110 08:35:04.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.471" endtime="20201110 08:35:04.757"></status>
</kw>
<msg timestamp="20201110 08:35:04.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.469" endtime="20201110 08:35:04.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.762" endtime="20201110 08:35:04.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.770" endtime="20201110 08:35:04.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.467" endtime="20201110 08:35:04.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.465" endtime="20201110 08:35:04.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.776" level="INFO">${RESULT} = [{'time': 0.022191167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011058400000000038, 'source_diff': 0.00011058400000000038}, {'time': 0.022304181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:04.773" endtime="20201110 08:35:04.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:04.791" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:04.777" endtime="20201110 08:35:04.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.795" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:35:04.794" endtime="20201110 08:35:04.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.798" level="INFO">VALUE: [0.00011058400000000038, 0.00011029199999999795, 0.0001100700000000003, 0.00010970800000000003, 0.00010990300000000147, 0.00011026399999999881, 0.0001100280000000016, 0.00011043099999999764, 0.00010961099999999904, 0.0001100280000000016, 0.00011052799999999863, 0.00011027799999999838, 0.00010976400000000178, 0.00010977700000000187, 0.00010980600000000049, 0.0001103890000000024, 0.00011016599999999835, 0.00011047200000000035, 0.00011037499999999936, 0.00011004200000000117, 0.00011016699999999782, 0.00010965300000000122, 0.00010977799999999788, 0.00011027800000000185, 0.00010963899999999818, 0.0001100280000000016, 0.00010997299999999932, 0.00010984699999999972, 0.00010968100000000036, 0.00010999999999999899, 0.00011056900000000133, 0.00011063899999999918, 0.00011027700000000237, 0.00011006900000000083, 0.00011013899999999868, 0.0001097089999999995, 0.00010976400000000178, 0.00011008399999999988, 0.00010998599999999942, 0.00011004200000000117, 0.00010998599999999942, 0.00010987500000000233, 0.00011022299999999957, 0.00011040199999999903, 0.00010965200000000175, 0.00011054100000000219, 0.0001097089999999995, 0.00011013900000000215, 0.00010977799999999788, 0.0001102220000000001]</msg>
<status status="PASS" starttime="20201110 08:35:04.796" endtime="20201110 08:35:04.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.792" endtime="20201110 08:35:04.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.801" endtime="20201110 08:35:04.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.805" endtime="20201110 08:35:04.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.803" endtime="20201110 08:35:04.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.800" endtime="20201110 08:35:04.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.429" endtime="20201110 08:35:04.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.429" endtime="20201110 08:35:04.826"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.834" endtime="20201110 08:35:04.854"></status>
</kw>
<msg timestamp="20201110 08:35:04.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.833" endtime="20201110 08:35:04.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:04.856" endtime="20201110 08:35:04.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.858" endtime="20201110 08:35:04.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.830" endtime="20201110 08:35:04.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.828" endtime="20201110 08:35:04.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.868" endtime="20201110 08:35:05.170"></status>
</kw>
<msg timestamp="20201110 08:35:05.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.867" endtime="20201110 08:35:05.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.175" endtime="20201110 08:35:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.183" endtime="20201110 08:35:05.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.864" endtime="20201110 08:35:05.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.863" endtime="20201110 08:35:05.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.190" level="INFO">${RESULT} = [{'time': 0.022244139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011131999999999809, 'source_diff': 0.00011131999999999809}, {'time': 0.022363194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:05.187" endtime="20201110 08:35:05.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.204" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:05.191" endtime="20201110 08:35:05.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.208" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.207" endtime="20201110 08:35:05.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.211" level="INFO">VALUE: [0.00011131999999999809, 0.00011094399999999824, 0.0001114029999999995, 0.00011084700000000072, 0.00011112500000000011, 0.00011111100000000054, 0.00011113899999999968, 0.00011099999999999999, 0.00011097200000000085, 0.00011123600000000067, 0.00011154200000000267, 0.00011152799999999963, 0.000111209000000001, 0.00011106899999999836, 0.00011068000000000189, 0.00011105500000000226, 0.00011077799999999888, 0.00011111100000000054, 0.00011086099999999682, 0.00011097200000000085, 0.0001108890000000029, 0.00011088899999999943, 0.00011122199999999763, 0.00011116700000000229, 0.00011084700000000072, 0.00011104099999999922, 0.00011127799999999938, 0.0001115549999999993, 0.00011098600000000042, 0.00011087499999999986, 0.00011136100000000079, 0.0001115549999999993, 0.00011069400000000146, 0.00011109700000000097, 0.00011065300000000222, 0.00011068099999999789, 0.00011151400000000006, 0.00011125000000000024, 0.00011065299999999875, 0.00011161199999999705, 0.00011159700000000147, 0.00011161100000000104, 0.00011119399999999849, 0.00011161099999999757, 0.00011134700000000122, 0.00011147200000000135, 0.00011130499999999904, 0.00011105599999999827, 0.0001115549999999993, 0.00011162500000000061]</msg>
<status status="PASS" starttime="20201110 08:35:05.210" endtime="20201110 08:35:05.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.205" endtime="20201110 08:35:05.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.215" endtime="20201110 08:35:05.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.218" endtime="20201110 08:35:05.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.217" endtime="20201110 08:35:05.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.213" endtime="20201110 08:35:05.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.827" endtime="20201110 08:35:05.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.826" endtime="20201110 08:35:05.239"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.248" endtime="20201110 08:35:05.268"></status>
</kw>
<msg timestamp="20201110 08:35:05.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.247" endtime="20201110 08:35:05.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:05.269" endtime="20201110 08:35:05.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.272" endtime="20201110 08:35:05.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.244" endtime="20201110 08:35:05.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.242" endtime="20201110 08:35:05.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.282" endtime="20201110 08:35:05.569"></status>
</kw>
<msg timestamp="20201110 08:35:05.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.281" endtime="20201110 08:35:05.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.573" endtime="20201110 08:35:05.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.582" endtime="20201110 08:35:05.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.278" endtime="20201110 08:35:05.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.276" endtime="20201110 08:35:05.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.589" level="INFO">${RESULT} = [{'time': 0.022641486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011263899999999771, 'source_diff': 0.00011263899999999771}, {'time': 0.022763583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:35:05.585" endtime="20201110 08:35:05.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:35:05.602" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201110 08:35:05.590" endtime="20201110 08:35:05.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.607" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:35:05.606" endtime="20201110 08:35:05.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.610" level="INFO">VALUE: [0.00011263899999999771, 0.00011213900000000068, 0.00011208399999999841, 0.00011162499999999714, 0.00011191699999999957, 0.00011267999999999695, 0.00011234799999999823, 0.00011183299999999868, 0.00011181899999999911, 0.00011215300000000025, 0.00011197199999999838, 0.00011198599999999795, 0.00011169399999999899, 0.00011201399999999709, 0.00011236100000000179, 0.00011202800000000013, 0.00011169500000000193, 0.00011231999999999909, 0.00011220800000000253, 0.0001119160000000001, 0.00011213900000000068, 0.00011198600000000142, 0.0001124160000000006, 0.00011211100000000154, 0.00011169399999999899, 0.00011211100000000154, 0.00011212500000000111, 0.00011170899999999803, 0.00011252800000000063, 0.00011180599999999902, 0.00011193099999999914, 0.00011172300000000107, 0.00011223600000000167, 0.00011175000000000074, 0.00011202700000000065, 0.00011222199999999863, 0.0001125550000000003, 0.00011266600000000085, 0.00011226400000000081, 0.00011252799999999716, 0.00011172199999999813, 0.00011195799999999881, 0.00011248600000000192, 0.00011198600000000142, 0.00011255599999999977, 0.0001120549999999998, 0.00011220899999999853, 0.0001125420000000002, 0.00011169499999999846, 0.00011233299999999918]</msg>
<status status="PASS" starttime="20201110 08:35:05.608" endtime="20201110 08:35:05.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.603" endtime="20201110 08:35:05.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.613" endtime="20201110 08:35:05.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.617" endtime="20201110 08:35:05.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.615" endtime="20201110 08:35:05.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.612" endtime="20201110 08:35:05.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.240" endtime="20201110 08:35:05.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.240" endtime="20201110 08:35:05.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.756" endtime="20201110 08:35:05.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.642" endtime="20201110 08:35:05.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.641" endtime="20201110 08:35:05.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.639" endtime="20201110 08:35:05.662"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:25.688" endtime="20201110 08:35:05.663" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:44.065" endtime="20201110 08:35:05.666"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.722" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:35:05.730" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:35:06.847" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:35:05.721" endtime="20201110 08:35:06.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.850" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:35:06.849" endtime="20201110 08:35:06.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.719" endtime="20201110 08:35:06.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:06.853" endtime="20201110 08:35:07.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.852" endtime="20201110 08:35:07.040"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.053" endtime="20201110 08:35:07.066"></status>
</kw>
<msg timestamp="20201110 08:35:07.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.051" endtime="20201110 08:35:07.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.069" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.068" endtime="20201110 08:35:07.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.073" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:07.070" endtime="20201110 08:35:07.073"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:07.049" endtime="20201110 08:35:07.074"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:07.047" endtime="20201110 08:35:07.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.045" endtime="20201110 08:35:07.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:07.080" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:07.080" endtime="20201110 08:35:07.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.076" endtime="20201110 08:35:07.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.044" endtime="20201110 08:35:07.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.044" endtime="20201110 08:35:07.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.082" endtime="20201110 08:35:07.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.042" endtime="20201110 08:35:07.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.112" endtime="20201110 08:35:07.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.041" endtime="20201110 08:35:07.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.718" endtime="20201110 08:35:07.116"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.130" endtime="20201110 08:35:07.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.126" endtime="20201110 08:35:07.153"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.182" endtime="20201110 08:35:07.202"></status>
</kw>
<msg timestamp="20201110 08:35:07.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.179" endtime="20201110 08:35:07.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:35:07.205" endtime="20201110 08:35:07.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.215" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:35:07.211" endtime="20201110 08:35:07.216"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:07.173" endtime="20201110 08:35:07.217"></status>
</kw>
<status status="FAIL" starttime="20201110 08:35:07.168" endtime="20201110 08:35:07.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.165" endtime="20201110 08:35:07.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:35:07.222" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:35:07.221" endtime="20201110 08:35:07.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.219" endtime="20201110 08:35:07.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.163" endtime="20201110 08:35:07.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.162" endtime="20201110 08:35:07.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.224" endtime="20201110 08:35:07.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.158" endtime="20201110 08:35:07.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.154" endtime="20201110 08:35:07.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.124" endtime="20201110 08:35:07.227"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:07.230" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.240" endtime="20201110 08:35:09.352"></status>
</kw>
<msg timestamp="20201110 08:35:09.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108874417, 'start-iter': 1, 'wakeups': [108884422, 108894423, 10890442...</msg>
<status status="PASS" starttime="20201110 08:35:07.238" endtime="20201110 08:35:09.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108874417, 'start-iter': 1, 'wakeups': [108884422, 108894423, 10890442...</msg>
<status status="PASS" starttime="20201110 08:35:09.357" endtime="20201110 08:35:09.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.366" endtime="20201110 08:35:09.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.235" endtime="20201110 08:35:09.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.232" endtime="20201110 08:35:09.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.377" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 108874417, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [108884422, 108894423, 108904423, 108914423, 108924423, 108934423, 108944423, 108954423, 108964423, 108...</msg>
<status status="PASS" starttime="20201110 08:35:09.373" endtime="20201110 08:35:09.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.386" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:09.384" endtime="20201110 08:35:09.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:09.388" endtime="20201110 08:35:09.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.379" endtime="20201110 08:35:09.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.400" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:09.398" endtime="20201110 08:35:09.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.404" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:09.402" endtime="20201110 08:35:09.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.393" endtime="20201110 08:35:09.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.414" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.412" endtime="20201110 08:35:09.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.418" level="INFO">VALUE: 108874417</msg>
<status status="PASS" starttime="20201110 08:35:09.417" endtime="20201110 08:35:09.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.407" endtime="20201110 08:35:09.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.428" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.426" endtime="20201110 08:35:09.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.433" level="INFO">VALUE: [108884422, 108894423, 108904423, 108914423, 108924423, 108934423, 108944423, 108954423, 108964423, 108974423, 108984423, 108994423, 109004423, 109014423, 109024423, 109034423, 109044423, 109054423, 109064423, 109074423, 109084423, 109094423, 109104423, 109114423, 109124423, 109134423, 109144423, 109154423, 109164423, 109174423, 109184423, 109194423, 109204423, 109214423, 109224423, 109234423, 109244423, 109254423, 109264423, 109274423, 109284423, 109294423, 109304423, 109314423, 109324423, 109334423, 109344423, 109354423, 109364423, 109374423, 109384423, 109394423, 109404423, 109414423, 109424423, 109434423, 109444423, 109454423, 109464423, 109474423, 109484423, 109494423, 109504423, 109514423, 109524423, 109534423, 109544423, 109554423, 109564423, 109574423, 109584423, 109594423, 109604423, 109614423, 109624423, 109634423, 109644423, 109654423, 109664423, 109674423, 109684423, 109694423, 109704423, 109714423, 109724423, 109734423, 109744423, 109754423, 109764423, 109774423, 109784423, 109794423, 109804423, 109814423, 109824423, 109834423, 109844423, 109854423, 109864423, 109874423]</msg>
<status status="PASS" starttime="20201110 08:35:09.431" endtime="20201110 08:35:09.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.421" endtime="20201110 08:35:09.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.448" endtime="20201110 08:35:09.747"></status>
</kw>
<msg timestamp="20201110 08:35:09.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09946175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109468375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:09.445" endtime="20201110 08:35:09.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.09946175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109468375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:09.751" endtime="20201110 08:35:09.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.758" endtime="20201110 08:35:09.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.440" endtime="20201110 08:35:09.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.436" endtime="20201110 08:35:09.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.785" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:09.762" endtime="20201110 08:35:09.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.789" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.788" endtime="20201110 08:35:09.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.791" level="INFO">VALUE: 0.09946175</msg>
<status status="PASS" starttime="20201110 08:35:09.790" endtime="20201110 08:35:09.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.786" endtime="20201110 08:35:09.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.797" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.796" endtime="20201110 08:35:09.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.799" level="INFO">VALUE: [0.109468375, 0.119470083, 0.129470819, 0.139471361, 0.149472306, 0.159472847, 0.169473778, 0.179474319, 0.18947525, 0.199475806, 0.209476722, 0.219477264, 0.229478208, 0.23947875, 0.249479681, 0.259480222, 0.269481181, 0.279481694, 0.289482625, 0.299483181, 0.309484111, 0.319484639, 0.329485583, 0.339486111, 0.349487056, 0.359487611, 0.369488528, 0.379489083, 0.38949, 0.399490569, 0.409491486, 0.419492042, 0.429492958, 0.439493569, 0.449494431, 0.459494972, 0.469495931, 0.479496444, 0.489497403, 0.499497931, 0.509498861, 0.519499403, 0.529500347, 0.539500931, 0.549501819, 0.559502361, 0.569503306, 0.579503847, 0.589504778, 0.599505306, 0.609506264, 0.619506806, 0.62950775, 0.639508264, 0.649509194, 0.659509722, 0.669510653, 0.679511194, 0.689512139, 0.699512694, 0.709513583, 0.719514125, 0.729515056, 0.739515583, 0.749516514, 0.759517042, 0.769517986, 0.779518514, 0.789519431, 0.799520042, 0.809520903, 0.819521458, 0.829522361, 0.839522903, 0.849523847, 0.859524375, 0.869525306, 0.879525875, 0.889526778, 0.899527306, 0.909528222, 0.919528764, 0.929529694, 0.939530222, 0.949531236, 0.959531722, 0.969532625, 0.979533153, 0.989534083, 0.999534639, 1.009535542, 1.019536097, 1.029537014, 1.039537556, 1.0495385, 1.059539083, 1.069539958, 1.079540486, 1.089541458, 1.099541972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:09.798" endtime="20201110 08:35:09.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.793" endtime="20201110 08:35:09.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.802" endtime="20201110 08:35:09.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:09.808" endtime="20201110 08:35:09.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.806" endtime="20201110 08:35:09.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.800" endtime="20201110 08:35:09.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.231" endtime="20201110 08:35:09.829"></status>
</kw>
<msg timestamp="20201110 08:35:09.830" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.840" endtime="20201110 08:35:11.953"></status>
</kw>
<msg timestamp="20201110 08:35:11.954" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111475517, 'start-iter': 1, 'wakeups': [111485523, 111495523, 11150552...</msg>
<status status="PASS" starttime="20201110 08:35:09.838" endtime="20201110 08:35:11.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.960" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111475517, 'start-iter': 1, 'wakeups': [111485523, 111495523, 11150552...</msg>
<status status="PASS" starttime="20201110 08:35:11.956" endtime="20201110 08:35:11.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:11.962" endtime="20201110 08:35:11.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.835" endtime="20201110 08:35:11.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.832" endtime="20201110 08:35:11.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:11.975" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 111475517, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [111485523, 111495523, 111505523, 111515523, 111525523, 111535523, 111545523, 111555523, 111565523, 111...</msg>
<status status="PASS" starttime="20201110 08:35:11.971" endtime="20201110 08:35:11.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:11.982" endtime="20201110 08:35:11.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.988" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:11.986" endtime="20201110 08:35:11.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.977" endtime="20201110 08:35:11.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:11.998" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:11.996" endtime="20201110 08:35:11.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.003" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:12.000" endtime="20201110 08:35:12.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:11.991" endtime="20201110 08:35:12.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.014" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:12.012" endtime="20201110 08:35:12.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.018" level="INFO">VALUE: 111475517</msg>
<status status="PASS" starttime="20201110 08:35:12.016" endtime="20201110 08:35:12.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.006" endtime="20201110 08:35:12.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.028" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:12.026" endtime="20201110 08:35:12.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.032" level="INFO">VALUE: [111485523, 111495523, 111505523, 111515523, 111525523, 111535523, 111545523, 111555523, 111565523, 111575523, 111585523, 111595523, 111605523, 111615523, 111625523, 111635523, 111645523, 111655523, 111665523, 111675523, 111685523, 111695523, 111705523, 111715523, 111725523, 111735523, 111745523, 111755523, 111765523, 111775523, 111785523, 111795523, 111805523, 111815523, 111825523, 111835523, 111845523, 111855523, 111865523, 111875523, 111885523, 111895523, 111905523, 111915523, 111925523, 111935523, 111945523, 111955523, 111965523, 111975523, 111985523, 111995523, 112005523, 112015523, 112025523, 112035523, 112045523, 112055523, 112065523, 112075523, 112085523, 112095523, 112105523, 112115523, 112125523, 112135523, 112145523, 112155523, 112165523, 112175523, 112185523, 112195523, 112205523, 112215523, 112225523, 112235523, 112245523, 112255523, 112265523, 112275523, 112285523, 112295523, 112305523, 112315523, 112325523, 112335523, 112345523, 112355523, 112365523, 112375523, 112385523, 112395523, 112405523, 112415523, 112425523, 112435523, 112445523, 112455523, 112465523, 112475523]</msg>
<status status="PASS" starttime="20201110 08:35:12.030" endtime="20201110 08:35:12.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.021" endtime="20201110 08:35:12.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.046" endtime="20201110 08:35:12.336"></status>
</kw>
<msg timestamp="20201110 08:35:12.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033093347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.044" endtime="20201110 08:35:12.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033093347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.340" endtime="20201110 08:35:12.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.348" endtime="20201110 08:35:12.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.039" endtime="20201110 08:35:12.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.036" endtime="20201110 08:35:12.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.374" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:12.351" endtime="20201110 08:35:12.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.379" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:12.378" endtime="20201110 08:35:12.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.385" level="INFO">VALUE: 0.023086347</msg>
<status status="PASS" starttime="20201110 08:35:12.384" endtime="20201110 08:35:12.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.375" endtime="20201110 08:35:12.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.391" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:12.390" endtime="20201110 08:35:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.393" level="INFO">VALUE: [0.033093347, 0.043094, 0.053094764, 0.063095278, 0.073096222, 0.08309675, 0.093097708, 0.103098236, 0.113099167, 0.123099722, 0.133100653, 0.143101181, 0.153102111, 0.163102681, 0.173103597, 0.183104125, 0.193105069, 0.203105625, 0.213106528, 0.223107083, 0.233108014, 0.243108583, 0.2531095, 0.263110014, 0.273110958, 0.283111542, 0.293112431, 0.303112972, 0.313113903, 0.323114444, 0.333115389, 0.343115986, 0.353116847, 0.363117389, 0.373118333, 0.383118931, 0.393119819, 0.403120347, 0.413121292, 0.423121819, 0.43312275, 0.443123292, 0.453124236, 0.463124764, 0.473125708, 0.483126264, 0.493127181, 0.503127722, 0.513128736, 0.523129208, 0.533130153, 0.543130681, 0.553131597, 0.563132139, 0.573133069, 0.583133597, 0.593134528, 0.603135069, 0.613136, 0.623136528, 0.633137458, 0.643138, 0.653138944, 0.663139486, 0.673140417, 0.683140958, 0.693141861, 0.703142403, 0.713143361, 0.723143861, 0.733144806, 0.743145347, 0.753146306, 0.763146806, 0.77314775, 0.783148264, 0.793149194, 0.803149764, 0.813150681, 0.823151208, 0.833152139, 0.843152667, 0.853153597, 0.863154139, 0.873155083, 0.883155597, 0.893156556, 0.903157069, 0.913158014, 0.923158556, 0.933159472, 0.943160042, 0.953160944, 0.963161472, 0.973162417, 0.983162944, 0.993163875, 1.003164417, 1.013165375, 1.023165889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:12.392" endtime="20201110 08:35:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.387" endtime="20201110 08:35:12.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.396" endtime="20201110 08:35:12.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.399" endtime="20201110 08:35:12.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.398" endtime="20201110 08:35:12.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.394" endtime="20201110 08:35:12.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.831" endtime="20201110 08:35:12.420"></status>
</kw>
<msg timestamp="20201110 08:35:12.420" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.428" endtime="20201110 08:35:14.541"></status>
</kw>
<msg timestamp="20201110 08:35:14.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 114063245, 'start-iter': 1, 'wakeups': [114073251, 114083251, 11409325...</msg>
<status status="PASS" starttime="20201110 08:35:12.427" endtime="20201110 08:35:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.548" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 114063245, 'start-iter': 1, 'wakeups': [114073251, 114083251, 11409325...</msg>
<status status="PASS" starttime="20201110 08:35:14.545" endtime="20201110 08:35:14.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.551" endtime="20201110 08:35:14.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.424" endtime="20201110 08:35:14.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.422" endtime="20201110 08:35:14.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.562" level="INFO">${RESULT} = {'timer-count': 1, 'start-time': 114063245, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [114073251, 114083251, 114093251, 114103251, 114113251, 114123251, 114133251, 114143251, 114153251, 114...</msg>
<status status="PASS" starttime="20201110 08:35:14.558" endtime="20201110 08:35:14.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.570" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:14.568" endtime="20201110 08:35:14.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.577" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:14.575" endtime="20201110 08:35:14.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.563" endtime="20201110 08:35:14.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.587" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:14.585" endtime="20201110 08:35:14.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.592" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:14.590" endtime="20201110 08:35:14.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.580" endtime="20201110 08:35:14.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.602" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.600" endtime="20201110 08:35:14.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.604" level="INFO">VALUE: 114063245</msg>
<status status="PASS" starttime="20201110 08:35:14.603" endtime="20201110 08:35:14.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.595" endtime="20201110 08:35:14.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.608" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.607" endtime="20201110 08:35:14.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.611" level="INFO">VALUE: [114073251, 114083251, 114093251, 114103251, 114113251, 114123251, 114133251, 114143251, 114153251, 114163251, 114173251, 114183251, 114193251, 114203251, 114213251, 114223251, 114233251, 114243251, 114253251, 114263251, 114273251, 114283251, 114293251, 114303251, 114313251, 114323251, 114333251, 114343251, 114353251, 114363251, 114373251, 114383251, 114393251, 114403251, 114413251, 114423251, 114433251, 114443251, 114453251, 114463251, 114473251, 114483251, 114493251, 114503251, 114513251, 114523251, 114533251, 114543251, 114553251, 114563251, 114573251, 114583251, 114593251, 114603251, 114613251, 114623251, 114633251, 114643251, 114653251, 114663251, 114673251, 114683251, 114693251, 114703251, 114713251, 114723251, 114733251, 114743251, 114753251, 114763251, 114773251, 114783251, 114793251, 114803251, 114813251, 114823251, 114833251, 114843251, 114853251, 114863251, 114873251, 114883251, 114893251, 114903251, 114913251, 114923251, 114933251, 114943251, 114953251, 114963251, 114973251, 114983251, 114993251, 115003251, 115013251, 115023251, 115033251, 115043251, 115053251, 115063251]</msg>
<status status="PASS" starttime="20201110 08:35:14.610" endtime="20201110 08:35:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.605" endtime="20201110 08:35:14.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.618" endtime="20201110 08:35:14.908"></status>
</kw>
<msg timestamp="20201110 08:35:14.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029288097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.616" endtime="20201110 08:35:14.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029288097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.912" endtime="20201110 08:35:14.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.920" endtime="20201110 08:35:14.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.614" endtime="20201110 08:35:14.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.612" endtime="20201110 08:35:14.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.947" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:14.923" endtime="20201110 08:35:14.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.951" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.950" endtime="20201110 08:35:14.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.953" level="INFO">VALUE: 0.019281139</msg>
<status status="PASS" starttime="20201110 08:35:14.952" endtime="20201110 08:35:14.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.948" endtime="20201110 08:35:14.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.959" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.958" endtime="20201110 08:35:14.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.961" level="INFO">VALUE: [0.029288097, 0.039288792, 0.049289542, 0.059290167, 0.069291028, 0.079291569, 0.089292486, 0.099293042, 0.109293958, 0.1192945, 0.129295444, 0.139295972, 0.149296972, 0.159297444, 0.169298389, 0.179298917, 0.189299944, 0.199300417, 0.209301347, 0.219301875, 0.229302806, 0.239303347, 0.249304278, 0.259304819, 0.26930575, 0.279306306, 0.289307222, 0.299307764, 0.309308722, 0.31930925, 0.329310181, 0.339310722, 0.349311653, 0.359312208, 0.369313125, 0.379313694, 0.389314583, 0.399315125, 0.409316069, 0.419316583, 0.429317514, 0.439318111, 0.449318986, 0.459319514, 0.469320444, 0.479320986, 0.489321931, 0.499322444, 0.509323389, 0.519323917, 0.529324847, 0.539325431, 0.549326333, 0.559326917, 0.569327792, 0.579328319, 0.589329264, 0.599329778, 0.609330708, 0.619331264, 0.629332181, 0.639332708, 0.649333653, 0.659334181, 0.669335111, 0.679335653, 0.689336583, 0.699337125, 0.709338042, 0.719338597, 0.729339514, 0.739340056, 0.749340986, 0.759341514, 0.769342444, 0.779343, 0.789343917, 0.799344486, 0.809345389, 0.819345917, 0.829346861, 0.839347389, 0.849348361, 0.859348875, 0.869349819, 0.879350319, 0.889351264, 0.899351806, 0.909352722, 0.919353278, 0.929354194, 0.939354736, 0.949355681, 0.959356208, 0.969357181, 0.979357667, 0.989358597, 0.999359139, 1.009360069, 1.019360611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:14.960" endtime="20201110 08:35:14.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.955" endtime="20201110 08:35:14.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.964" endtime="20201110 08:35:14.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:14.968" endtime="20201110 08:35:14.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.966" endtime="20201110 08:35:14.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.963" endtime="20201110 08:35:14.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.421" endtime="20201110 08:35:14.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.228" endtime="20201110 08:35:14.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.228" endtime="20201110 08:35:14.989"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:14.991" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.000" endtime="20201110 08:35:17.112"></status>
</kw>
<msg timestamp="20201110 08:35:17.113" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116634351, 'start-iter': 1, 'wakeups': [116644361, 116654361, 11666436...</msg>
<status status="PASS" starttime="20201110 08:35:14.998" endtime="20201110 08:35:17.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.119" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116634351, 'start-iter': 1, 'wakeups': [116644361, 116654361, 11666436...</msg>
<status status="PASS" starttime="20201110 08:35:17.115" endtime="20201110 08:35:17.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.121" endtime="20201110 08:35:17.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.995" endtime="20201110 08:35:17.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.993" endtime="20201110 08:35:17.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.132" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 116634351, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [116644361, 116654361, 116664361, 116674361, 116684361, 116694361, 116704361, 116714361, 116724361, 116...</msg>
<status status="PASS" starttime="20201110 08:35:17.128" endtime="20201110 08:35:17.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.141" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:17.139" endtime="20201110 08:35:17.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.146" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:17.143" endtime="20201110 08:35:17.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.134" endtime="20201110 08:35:17.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.156" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:17.154" endtime="20201110 08:35:17.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.160" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:17.158" endtime="20201110 08:35:17.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.149" endtime="20201110 08:35:17.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.170" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:17.169" endtime="20201110 08:35:17.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.172" level="INFO">VALUE: 116634351</msg>
<status status="PASS" starttime="20201110 08:35:17.171" endtime="20201110 08:35:17.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.163" endtime="20201110 08:35:17.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.177" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:17.176" endtime="20201110 08:35:17.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.179" level="INFO">VALUE: [116644361, 116654361, 116664361, 116674361, 116684361, 116694361, 116704361, 116714361, 116724361, 116734361, 116744361, 116754361, 116764361, 116774361, 116784361, 116794361, 116804361, 116814361, 116824361, 116834361, 116844361, 116854361, 116864361, 116874361, 116884361, 116894361, 116904361, 116914361, 116924361, 116934361, 116944361, 116954361, 116964361, 116974361, 116984361, 116994361, 117004361, 117014361, 117024361, 117034361, 117044361, 117054361, 117064361, 117074361, 117084361, 117094361, 117104361, 117114361, 117124361, 117134361, 117144361, 117154361, 117164361, 117174361, 117184361, 117194361, 117204361, 117214361, 117224361, 117234361, 117244361, 117254361, 117264361, 117274361, 117284361, 117294361, 117304361, 117314361, 117324361, 117334361, 117344361, 117354361, 117364361, 117374361, 117384361, 117394361, 117404361, 117414361, 117424361, 117434361, 117444361, 117454361, 117464361, 117474361, 117484361, 117494361, 117504361, 117514361, 117524361, 117534361, 117544361, 117554361, 117564361, 117574361, 117584361, 117594361, 117604361, 117614361, 117624361, 117634361]</msg>
<status status="PASS" starttime="20201110 08:35:17.178" endtime="20201110 08:35:17.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.173" endtime="20201110 08:35:17.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.187" endtime="20201110 08:35:17.482"></status>
</kw>
<msg timestamp="20201110 08:35:17.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031906347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.185" endtime="20201110 08:35:17.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031906347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.486" endtime="20201110 08:35:17.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.494" endtime="20201110 08:35:17.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.183" endtime="20201110 08:35:17.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.181" endtime="20201110 08:35:17.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.521" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:17.498" endtime="20201110 08:35:17.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.526" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:17.525" endtime="20201110 08:35:17.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.529" level="INFO">VALUE: 0.021894681</msg>
<status status="PASS" starttime="20201110 08:35:17.528" endtime="20201110 08:35:17.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.522" endtime="20201110 08:35:17.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.534" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:17.533" endtime="20201110 08:35:17.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.537" level="INFO">VALUE: [0.031906347, 0.041907194, 0.051907861, 0.061908667, 0.071909347, 0.081910139, 0.091910819, 0.101911611, 0.111912278, 0.121913083, 0.13191375, 0.141914556, 0.151915236, 0.161916028, 0.171916708, 0.1819175, 0.191918236, 0.201919, 0.211919653, 0.221920472, 0.231921167, 0.241921931, 0.251922583, 0.261923403, 0.271924042, 0.281924861, 0.291925514, 0.301926347, 0.311926972, 0.321927792, 0.331928444, 0.34192925, 0.351929903, 0.361930708, 0.371931431, 0.381932181, 0.391932833, 0.401933639, 0.411934306, 0.421935125, 0.431935778, 0.441936583, 0.451937222, 0.461938056, 0.471938736, 0.481939514, 0.491940167, 0.501940972, 0.511941639, 0.521942444, 0.531943097, 0.541943917, 0.551944556, 0.561945389, 0.571946097, 0.581946833, 0.5919475, 0.601948319, 0.611948958, 0.621949778, 0.631950431, 0.64195125, 0.651951889, 0.661952722, 0.671953361, 0.681954167, 0.691954819, 0.701955639, 0.711956292, 0.721957111, 0.731957764, 0.741958625, 0.751959236, 0.761960056, 0.771960694, 0.781961528, 0.791962181, 0.801962972, 0.811963639, 0.821964444, 0.831965139, 0.841965972, 0.851966569, 0.861967389, 0.871968042, 0.881968847, 0.8919695, 0.901970319, 0.911970972, 0.921971778, 0.931972444, 0.94197325, 0.951973903, 0.961974736, 0.971975389, 0.981976194, 0.991976861, 1.001977653, 1.011978319, 1.021979125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:17.536" endtime="20201110 08:35:17.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.530" endtime="20201110 08:35:17.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.540" endtime="20201110 08:35:17.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.543" endtime="20201110 08:35:17.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.542" endtime="20201110 08:35:17.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.538" endtime="20201110 08:35:17.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.992" endtime="20201110 08:35:17.570"></status>
</kw>
<msg timestamp="20201110 08:35:17.570" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.579" endtime="20201110 08:35:19.691"></status>
</kw>
<msg timestamp="20201110 08:35:19.692" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 119213325, 'start-iter': 1, 'wakeups': [119223336, 119233335, 11924333...</msg>
<status status="PASS" starttime="20201110 08:35:17.577" endtime="20201110 08:35:19.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 119213325, 'start-iter': 1, 'wakeups': [119223336, 119233335, 11924333...</msg>
<status status="PASS" starttime="20201110 08:35:19.694" endtime="20201110 08:35:19.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.700" endtime="20201110 08:35:19.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.574" endtime="20201110 08:35:19.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.572" endtime="20201110 08:35:19.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.711" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 119213325, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [119223336, 119233335, 119243335, 119253335, 119263335, 119273335, 119283335, 119293335, 119303335, 119...</msg>
<status status="PASS" starttime="20201110 08:35:19.707" endtime="20201110 08:35:19.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.720" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:19.718" endtime="20201110 08:35:19.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:19.722" endtime="20201110 08:35:19.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.713" endtime="20201110 08:35:19.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.734" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:19.732" endtime="20201110 08:35:19.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.738" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:19.736" endtime="20201110 08:35:19.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.727" endtime="20201110 08:35:19.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.748" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.746" endtime="20201110 08:35:19.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.752" level="INFO">VALUE: 119213325</msg>
<status status="PASS" starttime="20201110 08:35:19.750" endtime="20201110 08:35:19.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.741" endtime="20201110 08:35:19.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.764" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.760" endtime="20201110 08:35:19.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.769" level="INFO">VALUE: [119223336, 119233335, 119243335, 119253335, 119263335, 119273335, 119283335, 119293335, 119303335, 119313335, 119323335, 119333335, 119343335, 119353335, 119363335, 119373335, 119383335, 119393335, 119403335, 119413335, 119423335, 119433335, 119443335, 119453335, 119463335, 119473335, 119483335, 119493335, 119503335, 119513335, 119523335, 119533335, 119543335, 119553335, 119563335, 119573335, 119583335, 119593335, 119603335, 119613335, 119623335, 119633335, 119643335, 119653335, 119663335, 119673335, 119683335, 119693335, 119703335, 119713335, 119723335, 119733335, 119743335, 119753335, 119763335, 119773335, 119783335, 119793335, 119803335, 119813335, 119823335, 119833335, 119843335, 119853335, 119863335, 119873335, 119883335, 119893335, 119903335, 119913335, 119923335, 119933335, 119943335, 119953335, 119963335, 119973335, 119983335, 119993335, 120003335, 120013335, 120023335, 120033335, 120043335, 120053335, 120063335, 120073335, 120083335, 120093335, 120103335, 120113335, 120123335, 120133335, 120143335, 120153335, 120163335, 120173335, 120183335, 120193335, 120203335, 120213335]</msg>
<status status="PASS" starttime="20201110 08:35:19.767" endtime="20201110 08:35:19.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.755" endtime="20201110 08:35:19.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.785" endtime="20201110 08:35:20.083"></status>
</kw>
<msg timestamp="20201110 08:35:20.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035400972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.782" endtime="20201110 08:35:20.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025388958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035400972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.087" endtime="20201110 08:35:20.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.094" endtime="20201110 08:35:20.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.777" endtime="20201110 08:35:20.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.773" endtime="20201110 08:35:20.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.121" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:20.098" endtime="20201110 08:35:20.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.126" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:20.124" endtime="20201110 08:35:20.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.128" level="INFO">VALUE: 0.025388958</msg>
<status status="PASS" starttime="20201110 08:35:20.127" endtime="20201110 08:35:20.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.122" endtime="20201110 08:35:20.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.133" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:20.132" endtime="20201110 08:35:20.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.135" level="INFO">VALUE: [0.035400972, 0.045400819, 0.055401472, 0.065402292, 0.075402958, 0.085403764, 0.095404417, 0.105405236, 0.115405889, 0.125406708, 0.135407361, 0.145408208, 0.155408833, 0.165409653, 0.175410306, 0.185411139, 0.195411792, 0.205412611, 0.215413264, 0.225414069, 0.235414736, 0.245415542, 0.255416278, 0.265417028, 0.275417694, 0.285418514, 0.295419153, 0.305419986, 0.315420639, 0.325421431, 0.335422097, 0.345422889, 0.355423542, 0.365424375, 0.375425014, 0.385425819, 0.395426472, 0.405427361, 0.415427931, 0.42542875, 0.435429403, 0.445430194, 0.455430861, 0.46543175, 0.475432375, 0.485433125, 0.495433778, 0.505434597, 0.515435236, 0.525436056, 0.535436722, 0.545437514, 0.555438181, 0.565438972, 0.575439625, 0.585440444, 0.595441097, 0.605441931, 0.615442569, 0.625443375, 0.635444042, 0.645444833, 0.655445542, 0.665446292, 0.675447, 0.68544775, 0.695448403, 0.705449222, 0.715449875, 0.725450694, 0.735451347, 0.745452153, 0.755452806, 0.765453611, 0.775454264, 0.785455083, 0.795455722, 0.805456583, 0.815457194, 0.825458, 0.835458653, 0.845459486, 0.855460139, 0.865460931, 0.875461583, 0.885462417, 0.895463056, 0.905463861, 0.915464528, 0.925465333, 0.935465972, 0.945466806, 0.955467458, 0.96546825, 0.975468972, 0.985469764, 0.995470375, 1.005471208, 1.015471875, 1.025472653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:20.134" endtime="20201110 08:35:20.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.129" endtime="20201110 08:35:20.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.138" endtime="20201110 08:35:20.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.142" endtime="20201110 08:35:20.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.140" endtime="20201110 08:35:20.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.137" endtime="20201110 08:35:20.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.571" endtime="20201110 08:35:20.163"></status>
</kw>
<msg timestamp="20201110 08:35:20.163" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.171" endtime="20201110 08:35:22.283"></status>
</kw>
<msg timestamp="20201110 08:35:22.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 121805681, 'start-iter': 1, 'wakeups': [121815692, 121825691, 12183569...</msg>
<status status="PASS" starttime="20201110 08:35:20.170" endtime="20201110 08:35:22.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.291" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 121805681, 'start-iter': 1, 'wakeups': [121815692, 121825691, 12183569...</msg>
<status status="PASS" starttime="20201110 08:35:22.287" endtime="20201110 08:35:22.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.293" endtime="20201110 08:35:22.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.167" endtime="20201110 08:35:22.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.165" endtime="20201110 08:35:22.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.304" level="INFO">${RESULT} = {'timer-count': 2, 'start-time': 121805681, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [121815692, 121825691, 121835691, 121845691, 121855691, 121865691, 121875691, 121885691, 121895691, 121...</msg>
<status status="PASS" starttime="20201110 08:35:22.300" endtime="20201110 08:35:22.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.312" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:22.310" endtime="20201110 08:35:22.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.317" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:22.315" endtime="20201110 08:35:22.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.306" endtime="20201110 08:35:22.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.327" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:22.324" endtime="20201110 08:35:22.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.331" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:22.329" endtime="20201110 08:35:22.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.320" endtime="20201110 08:35:22.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.341" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.339" endtime="20201110 08:35:22.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.345" level="INFO">VALUE: 121805681</msg>
<status status="PASS" starttime="20201110 08:35:22.343" endtime="20201110 08:35:22.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.334" endtime="20201110 08:35:22.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.355" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.353" endtime="20201110 08:35:22.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.360" level="INFO">VALUE: [121815692, 121825691, 121835691, 121845691, 121855691, 121865691, 121875691, 121885691, 121895691, 121905691, 121915691, 121925691, 121935691, 121945691, 121955691, 121965691, 121975691, 121985691, 121995691, 122005691, 122015691, 122025691, 122035691, 122045691, 122055691, 122065691, 122075691, 122085691, 122095691, 122105691, 122115691, 122125691, 122135691, 122145691, 122155691, 122165691, 122175691, 122185691, 122195691, 122205691, 122215691, 122225691, 122235691, 122245691, 122255691, 122265691, 122275691, 122285691, 122295691, 122305691, 122315691, 122325691, 122335691, 122345691, 122355691, 122365691, 122375691, 122385691, 122395691, 122405691, 122415691, 122425691, 122435691, 122445691, 122455691, 122465691, 122475691, 122485691, 122495691, 122505691, 122515691, 122525691, 122535691, 122545691, 122555691, 122565691, 122575691, 122585691, 122595691, 122605691, 122615691, 122625691, 122635691, 122645691, 122655691, 122665691, 122675691, 122685691, 122695691, 122705691, 122715691, 122725691, 122735691, 122745691, 122755691, 122765691, 122775691, 122785691, 122795691, 122805691]</msg>
<status status="PASS" starttime="20201110 08:35:22.358" endtime="20201110 08:35:22.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.348" endtime="20201110 08:35:22.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.375" endtime="20201110 08:35:22.671"></status>
</kw>
<msg timestamp="20201110 08:35:22.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028777319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.372" endtime="20201110 08:35:22.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028777319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.676" endtime="20201110 08:35:22.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.684" endtime="20201110 08:35:22.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.366" endtime="20201110 08:35:22.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.363" endtime="20201110 08:35:22.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.710" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:22.687" endtime="20201110 08:35:22.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.714" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.713" endtime="20201110 08:35:22.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.716" level="INFO">VALUE: 0.018765306</msg>
<status status="PASS" starttime="20201110 08:35:22.715" endtime="20201110 08:35:22.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.711" endtime="20201110 08:35:22.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.722" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.721" endtime="20201110 08:35:22.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.724" level="INFO">VALUE: [0.028777319, 0.038777167, 0.048777847, 0.058778653, 0.068779319, 0.078780111, 0.088780792, 0.098781625, 0.10878225, 0.118783056, 0.128783722, 0.138784542, 0.14878525, 0.158786014, 0.168786667, 0.1787875, 0.188788139, 0.198788958, 0.208789611, 0.218790458, 0.228791083, 0.238791958, 0.248792556, 0.258793375, 0.268794042, 0.278794847, 0.2887955, 0.298796306, 0.308796972, 0.318797806, 0.328798417, 0.338799236, 0.348799875, 0.358800694, 0.368801347, 0.378802167, 0.388802819, 0.398803625, 0.408804264, 0.418805069, 0.428805722, 0.438806542, 0.448807194, 0.458808014, 0.468808653, 0.478809458, 0.488810125, 0.498810931, 0.508811569, 0.518812375, 0.528813028, 0.538813833, 0.5488145, 0.558815319, 0.568815958, 0.578816764, 0.588817417, 0.598818236, 0.608818917, 0.618819778, 0.628820361, 0.638821153, 0.648821806, 0.658822625, 0.668823278, 0.678824083, 0.688824736, 0.698825542, 0.708826194, 0.718827028, 0.728827667, 0.7388285, 0.748829125, 0.758829931, 0.768830583, 0.778831389, 0.788832042, 0.798832861, 0.808833514, 0.818834361, 0.828834972, 0.838835778, 0.848836444, 0.858837278, 0.868837917, 0.878838722, 0.888839361, 0.898840194, 0.908840833, 0.918841653, 0.928842292, 0.938843167, 0.948843764, 0.958844583, 0.968845222, 0.978846069, 0.988846681, 0.998847528, 1.008848167, 1.018848972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:22.723" endtime="20201110 08:35:22.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.718" endtime="20201110 08:35:22.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.727" endtime="20201110 08:35:22.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.730" endtime="20201110 08:35:22.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.729" endtime="20201110 08:35:22.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.725" endtime="20201110 08:35:22.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.164" endtime="20201110 08:35:22.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.990" endtime="20201110 08:35:22.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.989" endtime="20201110 08:35:22.751"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:22.754" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.763" endtime="20201110 08:35:24.876"></status>
</kw>
<msg timestamp="20201110 08:35:24.877" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 124397656, 'start-iter': 1, 'wakeups': [124407672, 124417672, 12442767...</msg>
<status status="PASS" starttime="20201110 08:35:22.761" endtime="20201110 08:35:24.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.883" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 124397656, 'start-iter': 1, 'wakeups': [124407672, 124417672, 12442767...</msg>
<status status="PASS" starttime="20201110 08:35:24.879" endtime="20201110 08:35:24.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.886" endtime="20201110 08:35:24.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.758" endtime="20201110 08:35:24.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.756" endtime="20201110 08:35:24.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.897" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 124397656, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [124407672, 124417672, 124427672, 124437672, 124447672, 124457672, 124467672, 124477672, 124487672, 124...</msg>
<status status="PASS" starttime="20201110 08:35:24.893" endtime="20201110 08:35:24.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.906" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:24.904" endtime="20201110 08:35:24.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.910" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:24.908" endtime="20201110 08:35:24.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.899" endtime="20201110 08:35:24.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.920" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:24.918" endtime="20201110 08:35:24.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.925" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:24.923" endtime="20201110 08:35:24.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.913" endtime="20201110 08:35:24.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.935" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.933" endtime="20201110 08:35:24.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.939" level="INFO">VALUE: 124397656</msg>
<status status="PASS" starttime="20201110 08:35:24.937" endtime="20201110 08:35:24.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.928" endtime="20201110 08:35:24.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.949" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.947" endtime="20201110 08:35:24.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.953" level="INFO">VALUE: [124407672, 124417672, 124427672, 124437672, 124447672, 124457672, 124467672, 124477672, 124487672, 124497672, 124507672, 124517672, 124527672, 124537672, 124547672, 124557672, 124567672, 124577672, 124587672, 124597672, 124607672, 124617672, 124627672, 124637672, 124647672, 124657672, 124667672, 124677672, 124687672, 124697672, 124707672, 124717672, 124727672, 124737672, 124747672, 124757672, 124767672, 124777672, 124787672, 124797672, 124807672, 124817672, 124827672, 124837672, 124847672, 124857672, 124867672, 124877672, 124887672, 124897672, 124907672, 124917672, 124927672, 124937672, 124947672, 124957672, 124967672, 124977672, 124987672, 124997672, 125007672, 125017672, 125027672, 125037672, 125047672, 125057672, 125067672, 125077672, 125087672, 125097672, 125107672, 125117672, 125127672, 125137672, 125147672, 125157672, 125167672, 125177672, 125187672, 125197672, 125207672, 125217672, 125227672, 125237672, 125247672, 125257672, 125267672, 125277672, 125287672, 125297672, 125307672, 125317672, 125327672, 125337672, 125347672, 125357672, 125367672, 125377672, 125387672, 125397672]</msg>
<status status="PASS" starttime="20201110 08:35:24.952" endtime="20201110 08:35:24.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.942" endtime="20201110 08:35:24.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.960" endtime="20201110 08:35:25.251"></status>
</kw>
<msg timestamp="20201110 08:35:25.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032855861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.959" endtime="20201110 08:35:25.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032855861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.255" endtime="20201110 08:35:25.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.263" endtime="20201110 08:35:25.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.956" endtime="20201110 08:35:25.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.954" endtime="20201110 08:35:25.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.291" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:25.267" endtime="20201110 08:35:25.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.295" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:25.294" endtime="20201110 08:35:25.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.297" level="INFO">VALUE: 0.022838903</msg>
<status status="PASS" starttime="20201110 08:35:25.296" endtime="20201110 08:35:25.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.292" endtime="20201110 08:35:25.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.303" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:25.302" endtime="20201110 08:35:25.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.305" level="INFO">VALUE: [0.032855861, 0.042856667, 0.052857264, 0.062858139, 0.072858722, 0.082859597, 0.092860194, 0.102861069, 0.112861653, 0.122862569, 0.132863125, 0.142864014, 0.152864597, 0.162865514, 0.172866069, 0.182866972, 0.192867542, 0.202868431, 0.212869083, 0.222869917, 0.232870486, 0.242871375, 0.252871958, 0.262872847, 0.272873431, 0.282874319, 0.292874903, 0.302875792, 0.312876389, 0.322877292, 0.332877847, 0.342878736, 0.352879319, 0.362880208, 0.372880792, 0.382881681, 0.392882264, 0.402883167, 0.412883764, 0.422884653, 0.432885236, 0.442886111, 0.452886708, 0.462887583, 0.472888222, 0.482889042, 0.492889625, 0.502890514, 0.512891097, 0.522891972, 0.532892542, 0.542893431, 0.552894056, 0.562894903, 0.572895458, 0.582896347, 0.592896958, 0.602897819, 0.612898403, 0.622899264, 0.632899903, 0.642900736, 0.652901319, 0.662902208, 0.672902778, 0.682903736, 0.692904236, 0.702905111, 0.712905708, 0.722906583, 0.732907153, 0.742908042, 0.752908611, 0.762909514, 0.772910111, 0.782910972, 0.792911569, 0.802912431, 0.812913, 0.822913889, 0.832914556, 0.842915347, 0.852915931, 0.862916819, 0.872917403, 0.882918278, 0.892918875, 0.90291975, 0.912920319, 0.922921208, 0.932921778, 0.942922667, 0.952923264, 0.962924125, 0.972924708, 0.982925611, 0.992926167, 1.002927056, 1.012927653, 1.022928514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:25.304" endtime="20201110 08:35:25.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.299" endtime="20201110 08:35:25.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.308" endtime="20201110 08:35:25.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.311" endtime="20201110 08:35:25.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.310" endtime="20201110 08:35:25.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.306" endtime="20201110 08:35:25.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.755" endtime="20201110 08:35:25.332"></status>
</kw>
<msg timestamp="20201110 08:35:25.332" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.340" endtime="20201110 08:35:27.453"></status>
</kw>
<msg timestamp="20201110 08:35:27.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126975019, 'start-iter': 1, 'wakeups': [126985035, 126995035, 12700503...</msg>
<status status="PASS" starttime="20201110 08:35:25.339" endtime="20201110 08:35:27.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126975019, 'start-iter': 1, 'wakeups': [126985035, 126995035, 12700503...</msg>
<status status="PASS" starttime="20201110 08:35:27.456" endtime="20201110 08:35:27.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.462" endtime="20201110 08:35:27.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.336" endtime="20201110 08:35:27.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.334" endtime="20201110 08:35:27.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.486" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 126975019, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [126985035, 126995035, 127005035, 127015035, 127025035, 127035035, 127045035, 127055035, 127065035, 127...</msg>
<status status="PASS" starttime="20201110 08:35:27.469" endtime="20201110 08:35:27.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.496" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:27.493" endtime="20201110 08:35:27.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.500" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:27.498" endtime="20201110 08:35:27.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.488" endtime="20201110 08:35:27.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.511" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:27.509" endtime="20201110 08:35:27.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.516" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:27.514" endtime="20201110 08:35:27.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.504" endtime="20201110 08:35:27.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.526" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.524" endtime="20201110 08:35:27.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.531" level="INFO">VALUE: 126975019</msg>
<status status="PASS" starttime="20201110 08:35:27.529" endtime="20201110 08:35:27.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.519" endtime="20201110 08:35:27.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.541" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.539" endtime="20201110 08:35:27.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.546" level="INFO">VALUE: [126985035, 126995035, 127005035, 127015035, 127025035, 127035035, 127045035, 127055035, 127065035, 127075035, 127085035, 127095035, 127105035, 127115035, 127125035, 127135035, 127145035, 127155035, 127165035, 127175035, 127185035, 127195035, 127205035, 127215035, 127225035, 127235035, 127245035, 127255035, 127265035, 127275035, 127285035, 127295035, 127305035, 127315035, 127325035, 127335035, 127345035, 127355035, 127365035, 127375035, 127385035, 127395035, 127405035, 127415035, 127425035, 127435035, 127445035, 127455035, 127465035, 127475035, 127485035, 127495035, 127505035, 127515035, 127525035, 127535035, 127545035, 127555035, 127565035, 127575035, 127585035, 127595035, 127605035, 127615035, 127625035, 127635035, 127645035, 127655035, 127665035, 127675035, 127685035, 127695035, 127705035, 127715035, 127725035, 127735035, 127745035, 127755035, 127765035, 127775035, 127785035, 127795035, 127805035, 127815035, 127825035, 127835035, 127845035, 127855035, 127865035, 127875035, 127885035, 127895035, 127905035, 127915035, 127925035, 127935035, 127945035, 127955035, 127965035, 127975035]</msg>
<status status="PASS" starttime="20201110 08:35:27.543" endtime="20201110 08:35:27.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.533" endtime="20201110 08:35:27.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.561" endtime="20201110 08:35:27.857"></status>
</kw>
<msg timestamp="20201110 08:35:27.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02909225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:27.558" endtime="20201110 08:35:27.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02909225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:27.861" endtime="20201110 08:35:27.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.868" endtime="20201110 08:35:27.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.552" endtime="20201110 08:35:27.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.549" endtime="20201110 08:35:27.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.895" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:27.871" endtime="20201110 08:35:27.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.899" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.898" endtime="20201110 08:35:27.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.906" level="INFO">VALUE: 0.019074944</msg>
<status status="PASS" starttime="20201110 08:35:27.905" endtime="20201110 08:35:27.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.896" endtime="20201110 08:35:27.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.911" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.910" endtime="20201110 08:35:27.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.913" level="INFO">VALUE: [0.02909225, 0.039093042, 0.049093639, 0.059094542, 0.069095097, 0.079096014, 0.089096569, 0.099097472, 0.109098042, 0.119098944, 0.129099528, 0.139100403, 0.149100986, 0.159101875, 0.169102458, 0.179103361, 0.189103944, 0.199104819, 0.209105403, 0.219106319, 0.229106875, 0.239107806, 0.249108347, 0.25910925, 0.269109819, 0.279110708, 0.289111292, 0.299112181, 0.309112764, 0.319113667, 0.32911425, 0.339115125, 0.349115708, 0.359116597, 0.369117181, 0.379118083, 0.389118653, 0.399119542, 0.409120125, 0.419121, 0.429121597, 0.439122458, 0.449123042, 0.459123931, 0.4691245, 0.479125389, 0.489125958, 0.499126903, 0.509127417, 0.519128319, 0.529128875, 0.539129806, 0.549130333, 0.559131222, 0.569131806, 0.579132722, 0.589133278, 0.599134139, 0.609134764, 0.619135611, 0.629136181, 0.639137097, 0.649137653, 0.659138528, 0.669139111, 0.679139986, 0.689140569, 0.699141458, 0.709142028, 0.719142903, 0.7291435, 0.739144375, 0.749144958, 0.759145833, 0.769146472, 0.779147292, 0.789147875, 0.799148764, 0.809149347, 0.819150222, 0.829150806, 0.839151681, 0.849152264, 0.859153139, 0.869153792, 0.879154611, 0.889155181, 0.899156083, 0.909156653, 0.919157542, 0.929158111, 0.939159014, 0.949159569, 0.959160458, 0.969161056, 0.979161931, 0.9891625, 0.999163375, 1.009163958, 1.019164861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:27.913" endtime="20201110 08:35:27.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.907" endtime="20201110 08:35:27.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.917" endtime="20201110 08:35:27.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.920" endtime="20201110 08:35:27.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.919" endtime="20201110 08:35:27.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.915" endtime="20201110 08:35:27.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.333" endtime="20201110 08:35:27.941"></status>
</kw>
<msg timestamp="20201110 08:35:27.941" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.949" endtime="20201110 08:35:30.062"></status>
</kw>
<msg timestamp="20201110 08:35:30.063" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 129583746, 'start-iter': 1, 'wakeups': [129593762, 129603762, 12961376...</msg>
<status status="PASS" starttime="20201110 08:35:27.948" endtime="20201110 08:35:30.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.069" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 129583746, 'start-iter': 1, 'wakeups': [129593762, 129603762, 12961376...</msg>
<status status="PASS" starttime="20201110 08:35:30.065" endtime="20201110 08:35:30.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.071" endtime="20201110 08:35:30.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.945" endtime="20201110 08:35:30.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.943" endtime="20201110 08:35:30.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.082" level="INFO">${RESULT} = {'timer-count': 3, 'start-time': 129583746, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [129593762, 129603762, 129613762, 129623762, 129633762, 129643762, 129653762, 129663762, 129673762, 129...</msg>
<status status="PASS" starttime="20201110 08:35:30.078" endtime="20201110 08:35:30.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.091" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:30.089" endtime="20201110 08:35:30.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:30.093" endtime="20201110 08:35:30.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.084" endtime="20201110 08:35:30.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.108" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:30.105" endtime="20201110 08:35:30.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.113" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:30.110" endtime="20201110 08:35:30.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.098" endtime="20201110 08:35:30.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.123" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.121" endtime="20201110 08:35:30.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.127" level="INFO">VALUE: 129583746</msg>
<status status="PASS" starttime="20201110 08:35:30.125" endtime="20201110 08:35:30.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.116" endtime="20201110 08:35:30.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.137" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.135" endtime="20201110 08:35:30.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.142" level="INFO">VALUE: [129593762, 129603762, 129613762, 129623762, 129633762, 129643762, 129653762, 129663762, 129673762, 129683762, 129693762, 129703762, 129713762, 129723762, 129733762, 129743762, 129753762, 129763762, 129773762, 129783762, 129793762, 129803762, 129813762, 129823762, 129833762, 129843762, 129853762, 129863762, 129873762, 129883762, 129893762, 129903762, 129913762, 129923762, 129933762, 129943762, 129953762, 129963762, 129973762, 129983762, 129993762, 130003762, 130013762, 130023762, 130033762, 130043762, 130053762, 130063762, 130073762, 130083762, 130093762, 130103762, 130113762, 130123762, 130133762, 130143762, 130153762, 130163762, 130173762, 130183762, 130193762, 130203762, 130213762, 130223762, 130233762, 130243762, 130253762, 130263762, 130273762, 130283762, 130293762, 130303762, 130313762, 130323762, 130333762, 130343762, 130353762, 130363762, 130373762, 130383762, 130393762, 130403762, 130413762, 130423762, 130433762, 130443762, 130453762, 130463762, 130473762, 130483762, 130493762, 130503762, 130513762, 130523762, 130533762, 130543762, 130553762, 130563762, 130573762, 130583762]</msg>
<status status="PASS" starttime="20201110 08:35:30.140" endtime="20201110 08:35:30.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.130" endtime="20201110 08:35:30.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.152" endtime="20201110 08:35:30.444"></status>
</kw>
<msg timestamp="20201110 08:35:30.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029104903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.150" endtime="20201110 08:35:30.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029104903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.448" endtime="20201110 08:35:30.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.455" endtime="20201110 08:35:30.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.148" endtime="20201110 08:35:30.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.145" endtime="20201110 08:35:30.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.482" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:30.459" endtime="20201110 08:35:30.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.487" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.486" endtime="20201110 08:35:30.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.489" level="INFO">VALUE: 0.019087944</msg>
<status status="PASS" starttime="20201110 08:35:30.488" endtime="20201110 08:35:30.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.483" endtime="20201110 08:35:30.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.494" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.493" endtime="20201110 08:35:30.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.496" level="INFO">VALUE: [0.029104903, 0.039105694, 0.049106278, 0.059107167, 0.069107764, 0.079108639, 0.089109222, 0.099110111, 0.109110694, 0.119111583, 0.129112167, 0.139113056, 0.149113653, 0.159114542, 0.169115153, 0.179116, 0.189116583, 0.199117472, 0.209118069, 0.219118958, 0.229119542, 0.2391205, 0.249121014, 0.259121903, 0.269122486, 0.279123361, 0.289123944, 0.299124847, 0.309125431, 0.319126306, 0.329126889, 0.339127778, 0.349128417, 0.35912925, 0.369129847, 0.379130736, 0.389131306, 0.399132194, 0.409132778, 0.419133667, 0.42913425, 0.439135139, 0.449135722, 0.459136611, 0.469137194, 0.479138083, 0.489138681, 0.499139556, 0.509140153, 0.519141111, 0.529141625, 0.5391425, 0.549143125, 0.559143972, 0.569144542, 0.579145444, 0.589146028, 0.599146889, 0.609147486, 0.619148375, 0.629148931, 0.639149819, 0.649150389, 0.659151292, 0.669151875, 0.679152764, 0.689153333, 0.699154208, 0.709154792, 0.719155667, 0.729156278, 0.739157153, 0.749157736, 0.759158611, 0.769159194, 0.779160097, 0.789160653, 0.799161542, 0.809162125, 0.819163, 0.829163597, 0.839164472, 0.849165056, 0.859165944, 0.869166528, 0.879167417, 0.889167986, 0.899168889, 0.909169458, 0.919170347, 0.929170917, 0.939171875, 0.949172389, 0.959173278, 0.969173861, 0.97917475, 0.989175361, 0.999176208, 1.009176792, 1.019177681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:30.495" endtime="20201110 08:35:30.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.490" endtime="20201110 08:35:30.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.500" endtime="20201110 08:35:30.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.503" endtime="20201110 08:35:30.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.502" endtime="20201110 08:35:30.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.498" endtime="20201110 08:35:30.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.942" endtime="20201110 08:35:30.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.752" endtime="20201110 08:35:30.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.752" endtime="20201110 08:35:30.524"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:30.527" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.535" endtime="20201110 08:35:32.648"></status>
</kw>
<msg timestamp="20201110 08:35:32.649" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 132169723, 'start-iter': 1, 'wakeups': [132179746, 132189745, 13219974...</msg>
<status status="PASS" starttime="20201110 08:35:30.533" endtime="20201110 08:35:32.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 132169723, 'start-iter': 1, 'wakeups': [132179746, 132189745, 13219974...</msg>
<status status="PASS" starttime="20201110 08:35:32.651" endtime="20201110 08:35:32.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.658" endtime="20201110 08:35:32.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.531" endtime="20201110 08:35:32.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.529" endtime="20201110 08:35:32.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.669" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 132169723, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [132179746, 132189745, 132199745, 132209745, 132219745, 132229745, 132239745, 132249745, 132259745, 132...</msg>
<status status="PASS" starttime="20201110 08:35:32.664" endtime="20201110 08:35:32.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.677" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:32.675" endtime="20201110 08:35:32.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.681" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:32.680" endtime="20201110 08:35:32.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.670" endtime="20201110 08:35:32.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.692" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:32.690" endtime="20201110 08:35:32.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.696" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:32.694" endtime="20201110 08:35:32.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.684" endtime="20201110 08:35:32.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.707" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.704" endtime="20201110 08:35:32.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.710" level="INFO">VALUE: 132169723</msg>
<status status="PASS" starttime="20201110 08:35:32.709" endtime="20201110 08:35:32.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.699" endtime="20201110 08:35:32.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.715" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.714" endtime="20201110 08:35:32.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.718" level="INFO">VALUE: [132179746, 132189745, 132199745, 132209745, 132219745, 132229745, 132239745, 132249745, 132259745, 132269745, 132279745, 132289745, 132299745, 132309745, 132319745, 132329745, 132339745, 132349745, 132359745, 132369745, 132379745, 132389745, 132399745, 132409745, 132419745, 132429745, 132439745, 132449745, 132459745, 132469745, 132479745, 132489745, 132499745, 132509745, 132519745, 132529745, 132539745, 132549745, 132559745, 132569745, 132579745, 132589745, 132599745, 132609745, 132619745, 132629745, 132639745, 132649745, 132659745, 132669745, 132679745, 132689745, 132699745, 132709745, 132719745, 132729745, 132739745, 132749745, 132759745, 132769745, 132779745, 132789745, 132799745, 132809745, 132819745, 132829745, 132839745, 132849745, 132859745, 132869745, 132879745, 132889745, 132899745, 132909745, 132919745, 132929745, 132939745, 132949745, 132959745, 132969745, 132979745, 132989745, 132999745, 133009745, 133019745, 133029745, 133039745, 133049745, 133059745, 133069745, 133079745, 133089745, 133099745, 133109745, 133119745, 133129745, 133139745, 133149745, 133159745, 133169745]</msg>
<status status="PASS" starttime="20201110 08:35:32.716" endtime="20201110 08:35:32.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.712" endtime="20201110 08:35:32.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.725" endtime="20201110 08:35:33.015"></status>
</kw>
<msg timestamp="20201110 08:35:33.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031979375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.723" endtime="20201110 08:35:33.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031979375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:33.019" endtime="20201110 08:35:33.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.027" endtime="20201110 08:35:33.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.721" endtime="20201110 08:35:33.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.719" endtime="20201110 08:35:33.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.053" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:33.030" endtime="20201110 08:35:33.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.058" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:33.057" endtime="20201110 08:35:33.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.060" level="INFO">VALUE: 0.021955542</msg>
<status status="PASS" starttime="20201110 08:35:33.059" endtime="20201110 08:35:33.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.054" endtime="20201110 08:35:33.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.065" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:33.064" endtime="20201110 08:35:33.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.068" level="INFO">VALUE: [0.031979375, 0.041978944, 0.051979528, 0.061980417, 0.071981056, 0.081981792, 0.091982542, 0.101983347, 0.111983944, 0.121984833, 0.131985486, 0.141986222, 0.151986944, 0.161987764, 0.171988361, 0.181989264, 0.191989903, 0.201990639, 0.211991444, 0.221992194, 0.231992778, 0.241993667, 0.251994375, 0.261995069, 0.271995806, 0.281996611, 0.291997208, 0.301998097, 0.31199875, 0.321999486, 0.332000222, 0.342001042, 0.352001667, 0.362002528, 0.372003167, 0.382003903, 0.392004667, 0.402005486, 0.412006014, 0.422006917, 0.432007556, 0.442008292, 0.452009014, 0.462009833, 0.472010403, 0.482011292, 0.492011944, 0.502012681, 0.512013417, 0.522014208, 0.532014806, 0.542015694, 0.552016333, 0.562017083, 0.572017875, 0.582018611, 0.592019181, 0.602020083, 0.612020736, 0.622021472, 0.632022181, 0.642023028, 0.652023611, 0.662024472, 0.672025111, 0.682025889, 0.692026639, 0.702027389, 0.712027972, 0.722028847, 0.732029528, 0.74203025, 0.752031028, 0.762031778, 0.772032361, 0.782033264, 0.792033917, 0.802034639, 0.812035375, 0.822036194, 0.832036764, 0.842037694, 0.852038306, 0.862039056, 0.872039764, 0.882040611, 0.892041153, 0.902042042, 0.912042694, 0.922043458, 0.932044153, 0.942044972, 0.952045556, 0.962046444, 0.972047139, 0.982047833, 0.992048556, 1.002049361, 1.012049958, 1.022050833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:33.067" endtime="20201110 08:35:33.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.061" endtime="20201110 08:35:33.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.071" endtime="20201110 08:35:33.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:33.074" endtime="20201110 08:35:33.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.073" endtime="20201110 08:35:33.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.069" endtime="20201110 08:35:33.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.528" endtime="20201110 08:35:33.099"></status>
</kw>
<msg timestamp="20201110 08:35:33.099" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.107" endtime="20201110 08:35:35.220"></status>
</kw>
<msg timestamp="20201110 08:35:35.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134742077, 'start-iter': 1, 'wakeups': [134752099, 134762099, 13477209...</msg>
<status status="PASS" starttime="20201110 08:35:33.106" endtime="20201110 08:35:35.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.227" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134742077, 'start-iter': 1, 'wakeups': [134752099, 134762099, 13477209...</msg>
<status status="PASS" starttime="20201110 08:35:35.223" endtime="20201110 08:35:35.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.229" endtime="20201110 08:35:35.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.103" endtime="20201110 08:35:35.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.101" endtime="20201110 08:35:35.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.240" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 134742077, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [134752099, 134762099, 134772099, 134782099, 134792099, 134802099, 134812099, 134822099, 134832099, 134...</msg>
<status status="PASS" starttime="20201110 08:35:35.236" endtime="20201110 08:35:35.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.249" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:35.247" endtime="20201110 08:35:35.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.253" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:35.251" endtime="20201110 08:35:35.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.242" endtime="20201110 08:35:35.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.260" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:35.259" endtime="20201110 08:35:35.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.262" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:35.261" endtime="20201110 08:35:35.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.256" endtime="20201110 08:35:35.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.267" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.266" endtime="20201110 08:35:35.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.269" level="INFO">VALUE: 134742077</msg>
<status status="PASS" starttime="20201110 08:35:35.268" endtime="20201110 08:35:35.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.264" endtime="20201110 08:35:35.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.274" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.273" endtime="20201110 08:35:35.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.276" level="INFO">VALUE: [134752099, 134762099, 134772099, 134782099, 134792099, 134802099, 134812099, 134822099, 134832099, 134842099, 134852099, 134862099, 134872099, 134882099, 134892099, 134902099, 134912099, 134922099, 134932099, 134942099, 134952099, 134962099, 134972099, 134982099, 134992099, 135002099, 135012099, 135022099, 135032099, 135042099, 135052099, 135062099, 135072099, 135082099, 135092099, 135102099, 135112099, 135122099, 135132099, 135142099, 135152099, 135162099, 135172099, 135182099, 135192099, 135202099, 135212099, 135222099, 135232099, 135242099, 135252099, 135262099, 135272099, 135282099, 135292099, 135302099, 135312099, 135322099, 135332099, 135342099, 135352099, 135362099, 135372099, 135382099, 135392099, 135402099, 135412099, 135422099, 135432099, 135442099, 135452099, 135462099, 135472099, 135482099, 135492099, 135502099, 135512099, 135522099, 135532099, 135542099, 135552099, 135562099, 135572099, 135582099, 135592099, 135602099, 135612099, 135622099, 135632099, 135642099, 135652099, 135662099, 135672099, 135682099, 135692099, 135702099, 135712099, 135722099, 135732099, 135742099]</msg>
<status status="PASS" starttime="20201110 08:35:35.275" endtime="20201110 08:35:35.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.271" endtime="20201110 08:35:35.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.285" endtime="20201110 08:35:35.575"></status>
</kw>
<msg timestamp="20201110 08:35:35.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033094, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:35.283" endtime="20201110 08:35:35.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023070542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033094, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:35:35.579" endtime="20201110 08:35:35.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.586" endtime="20201110 08:35:35.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.280" endtime="20201110 08:35:35.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.278" endtime="20201110 08:35:35.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.613" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:35.590" endtime="20201110 08:35:35.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.618" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.617" endtime="20201110 08:35:35.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.620" level="INFO">VALUE: 0.023070542</msg>
<status status="PASS" starttime="20201110 08:35:35.619" endtime="20201110 08:35:35.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.614" endtime="20201110 08:35:35.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.625" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.624" endtime="20201110 08:35:35.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.627" level="INFO">VALUE: [0.033094, 0.043094597, 0.053095167, 0.063096069, 0.073096722, 0.083097458, 0.093098208, 0.103099, 0.113099611, 0.1231005, 0.133101139, 0.143101875, 0.153102625, 0.163103431, 0.173104014, 0.183104903, 0.193105556, 0.203106306, 0.213107042, 0.223107847, 0.233108431, 0.243109319, 0.25311, 0.263110736, 0.273111458, 0.283112278, 0.293112861, 0.30311375, 0.313114417, 0.323115167, 0.333115875, 0.343116694, 0.353117292, 0.363118181, 0.373118833, 0.383119583, 0.393120319, 0.403121125, 0.413121694, 0.423122583, 0.433123236, 0.443123972, 0.453124694, 0.463125514, 0.473126097, 0.483126972, 0.493127639, 0.503128375, 0.513129097, 0.523129903, 0.533130472, 0.543131375, 0.553132097, 0.563132764, 0.573133472, 0.583134278, 0.593134861, 0.60313575, 0.613136389, 0.623137153, 0.633137861, 0.643138681, 0.65313925, 0.663140139, 0.673140778, 0.683141528, 0.693142319, 0.703143056, 0.713143639, 0.723144528, 0.733145181, 0.743145931, 0.753146667, 0.763147444, 0.773148056, 0.783148917, 0.793149625, 0.803150333, 0.813151042, 0.823151847, 0.833152431, 0.843153306, 0.853153958, 0.863154694, 0.873155486, 0.88315625, 0.893156819, 0.903157708, 0.913158375, 0.923159097, 0.933159833, 0.943160722, 0.953161222, 0.963162097, 0.97316275, 0.983163486, 0.993164208, 1.003165042, 1.013165611, 1.023166486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:35.626" endtime="20201110 08:35:35.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.621" endtime="20201110 08:35:35.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.630" endtime="20201110 08:35:35.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.634" endtime="20201110 08:35:35.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.632" endtime="20201110 08:35:35.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.629" endtime="20201110 08:35:35.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.100" endtime="20201110 08:35:35.654"></status>
</kw>
<msg timestamp="20201110 08:35:35.654" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.663" endtime="20201110 08:35:37.777"></status>
</kw>
<msg timestamp="20201110 08:35:37.778" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 137298431, 'start-iter': 1, 'wakeups': [137308454, 137318453, 13732845...</msg>
<status status="PASS" starttime="20201110 08:35:35.662" endtime="20201110 08:35:37.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.784" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 137298431, 'start-iter': 1, 'wakeups': [137308454, 137318453, 13732845...</msg>
<status status="PASS" starttime="20201110 08:35:37.780" endtime="20201110 08:35:37.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.787" endtime="20201110 08:35:37.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.658" endtime="20201110 08:35:37.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.656" endtime="20201110 08:35:37.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.798" level="INFO">${RESULT} = {'timer-count': 4, 'start-time': 137298431, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [137308454, 137318453, 137328453, 137338453, 137348453, 137358453, 137368453, 137378453, 137388453, 137...</msg>
<status status="PASS" starttime="20201110 08:35:37.794" endtime="20201110 08:35:37.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.807" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:37.805" endtime="20201110 08:35:37.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.811" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:37.809" endtime="20201110 08:35:37.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.800" endtime="20201110 08:35:37.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.821" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:37.819" endtime="20201110 08:35:37.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.826" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:37.824" endtime="20201110 08:35:37.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.814" endtime="20201110 08:35:37.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.836" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.834" endtime="20201110 08:35:37.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.840" level="INFO">VALUE: 137298431</msg>
<status status="PASS" starttime="20201110 08:35:37.838" endtime="20201110 08:35:37.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.829" endtime="20201110 08:35:37.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.851" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.848" endtime="20201110 08:35:37.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.855" level="INFO">VALUE: [137308454, 137318453, 137328453, 137338453, 137348453, 137358453, 137368453, 137378453, 137388453, 137398453, 137408453, 137418453, 137428453, 137438453, 137448453, 137458453, 137468453, 137478453, 137488453, 137498453, 137508453, 137518453, 137528453, 137538453, 137548453, 137558453, 137568453, 137578453, 137588453, 137598453, 137608453, 137618453, 137628453, 137638453, 137648453, 137658453, 137668453, 137678453, 137688453, 137698453, 137708453, 137718453, 137728453, 137738453, 137748453, 137758453, 137768453, 137778453, 137788453, 137798453, 137808453, 137818453, 137828453, 137838453, 137848453, 137858453, 137868453, 137878453, 137888453, 137898453, 137908453, 137918453, 137928453, 137938453, 137948453, 137958453, 137968453, 137978453, 137988453, 137998453, 138008453, 138018453, 138028453, 138038453, 138048453, 138058453, 138068453, 138078453, 138088453, 138098453, 138108453, 138118453, 138128453, 138138453, 138148453, 138158453, 138168453, 138178453, 138188453, 138198453, 138208453, 138218453, 138228453, 138238453, 138248453, 138258453, 138268453, 138278453, 138288453, 138298453]</msg>
<status status="PASS" starttime="20201110 08:35:37.853" endtime="20201110 08:35:37.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.843" endtime="20201110 08:35:37.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.871" endtime="20201110 08:35:38.165"></status>
</kw>
<msg timestamp="20201110 08:35:38.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030356431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.867" endtime="20201110 08:35:38.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020332639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030356431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.169" endtime="20201110 08:35:38.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.177" endtime="20201110 08:35:38.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.862" endtime="20201110 08:35:38.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.858" endtime="20201110 08:35:38.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:38.204" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:38.180" endtime="20201110 08:35:38.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.208" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:38.207" endtime="20201110 08:35:38.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.210" level="INFO">VALUE: 0.020332639</msg>
<status status="PASS" starttime="20201110 08:35:38.209" endtime="20201110 08:35:38.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.205" endtime="20201110 08:35:38.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.216" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:38.215" endtime="20201110 08:35:38.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.218" level="INFO">VALUE: [0.030356431, 0.040356014, 0.050356583, 0.060357472, 0.070358139, 0.080358875, 0.090359611, 0.100360444, 0.110361083, 0.120361917, 0.130362556, 0.140363292, 0.150364028, 0.160364847, 0.170365444, 0.180366375, 0.190366972, 0.200367722, 0.210368444, 0.220369278, 0.230369847, 0.240370736, 0.250371403, 0.260372139, 0.270372875, 0.280373694, 0.290374278, 0.300375181, 0.310375833, 0.320376569, 0.330377292, 0.340378111, 0.350378694, 0.360379597, 0.370380236, 0.380381014, 0.390381708, 0.400382528, 0.410383097, 0.420384042, 0.430384639, 0.440385375, 0.450386083, 0.460386944, 0.470387472, 0.480388375, 0.490389028, 0.50038975, 0.510390472, 0.520391278, 0.530391917, 0.54039275, 0.550393403, 0.560394139, 0.570394875, 0.580395667, 0.590396278, 0.600397153, 0.610397792, 0.620398528, 0.63039925, 0.640400056, 0.650400639, 0.660401528, 0.670402181, 0.680402931, 0.690403653, 0.700404472, 0.710405028, 0.720405917, 0.730406583, 0.740407306, 0.750408069, 0.760408847, 0.770409444, 0.780410319, 0.790410958, 0.800411694, 0.810412458, 0.820413236, 0.830413819, 0.840414722, 0.850415361, 0.860416111, 0.870416819, 0.880417639, 0.89041825, 0.900419097, 0.91041975, 0.9204205, 0.930421236, 0.940422042, 0.950422625, 0.9604235, 0.970424153, 0.980424889, 0.990425625, 1.000426417, 1.010427, 1.020427889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:38.217" endtime="20201110 08:35:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.212" endtime="20201110 08:35:38.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.221" endtime="20201110 08:35:38.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:38.224" endtime="20201110 08:35:38.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.223" endtime="20201110 08:35:38.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.219" endtime="20201110 08:35:38.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.655" endtime="20201110 08:35:38.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.526" endtime="20201110 08:35:38.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.525" endtime="20201110 08:35:38.245"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:38.248" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.256" endtime="20201110 08:35:40.368"></status>
</kw>
<msg timestamp="20201110 08:35:40.370" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139890657, 'start-iter': 1, 'wakeups': [139900686, 139910685, 13992068...</msg>
<status status="PASS" starttime="20201110 08:35:38.254" endtime="20201110 08:35:40.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.376" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139890657, 'start-iter': 1, 'wakeups': [139900686, 139910685, 13992068...</msg>
<status status="PASS" starttime="20201110 08:35:40.372" endtime="20201110 08:35:40.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.379" endtime="20201110 08:35:40.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.252" endtime="20201110 08:35:40.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.250" endtime="20201110 08:35:40.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.390" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 139890657, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [139900686, 139910685, 139920685, 139930685, 139940685, 139950685, 139960685, 139970685, 139980685, 139...</msg>
<status status="PASS" starttime="20201110 08:35:40.386" endtime="20201110 08:35:40.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.400" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:40.396" endtime="20201110 08:35:40.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.405" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:40.403" endtime="20201110 08:35:40.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.391" endtime="20201110 08:35:40.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.415" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:40.413" endtime="20201110 08:35:40.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.419" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:40.417" endtime="20201110 08:35:40.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.408" endtime="20201110 08:35:40.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.429" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.427" endtime="20201110 08:35:40.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.434" level="INFO">VALUE: 139890657</msg>
<status status="PASS" starttime="20201110 08:35:40.432" endtime="20201110 08:35:40.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.422" endtime="20201110 08:35:40.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.444" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.442" endtime="20201110 08:35:40.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.449" level="INFO">VALUE: [139900686, 139910685, 139920685, 139930685, 139940685, 139950685, 139960685, 139970685, 139980685, 139990685, 140000685, 140010685, 140020685, 140030685, 140040685, 140050685, 140060685, 140070685, 140080685, 140090685, 140100685, 140110685, 140120685, 140130685, 140140685, 140150685, 140160685, 140170685, 140180685, 140190685, 140200685, 140210685, 140220685, 140230685, 140240685, 140250685, 140260685, 140270685, 140280685, 140290685, 140300685, 140310685, 140320685, 140330685, 140340685, 140350685, 140360685, 140370685, 140380685, 140390685, 140400685, 140410685, 140420685, 140430685, 140440685, 140450685, 140460685, 140470685, 140480685, 140490685, 140500685, 140510685, 140520685, 140530685, 140540685, 140550685, 140560685, 140570685, 140580685, 140590685, 140600685, 140610685, 140620685, 140630685, 140640685, 140650685, 140660685, 140670685, 140680685, 140690685, 140700685, 140710685, 140720685, 140730685, 140740685, 140750685, 140760685, 140770685, 140780685, 140790685, 140800685, 140810685, 140820685, 140830685, 140840685, 140850685, 140860685, 140870685, 140880685, 140890685]</msg>
<status status="PASS" starttime="20201110 08:35:40.446" endtime="20201110 08:35:40.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.437" endtime="20201110 08:35:40.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.464" endtime="20201110 08:35:40.760"></status>
</kw>
<msg timestamp="20201110 08:35:40.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031788528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.461" endtime="20201110 08:35:40.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031788528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.763" endtime="20201110 08:35:40.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.771" endtime="20201110 08:35:40.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.455" endtime="20201110 08:35:40.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.452" endtime="20201110 08:35:40.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.799" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:40.775" endtime="20201110 08:35:40.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.803" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.802" endtime="20201110 08:35:40.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.805" level="INFO">VALUE: 0.021758361</msg>
<status status="PASS" starttime="20201110 08:35:40.804" endtime="20201110 08:35:40.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.800" endtime="20201110 08:35:40.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.811" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.810" endtime="20201110 08:35:40.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.813" level="INFO">VALUE: [0.031788528, 0.041787903, 0.051788486, 0.061789431, 0.071789944, 0.081790889, 0.091791431, 0.101792306, 0.111792889, 0.121793778, 0.131794361, 0.14179525, 0.151795847, 0.161796722, 0.171797319, 0.181798194, 0.191798778, 0.201799667, 0.211800264, 0.221801181, 0.231801736, 0.241802639, 0.251803208, 0.261804153, 0.271804694, 0.281805569, 0.291806153, 0.301807042, 0.311807625, 0.321808514, 0.331809097, 0.341809986, 0.351810542, 0.361811444, 0.371812014, 0.381812903, 0.391813486, 0.401814389, 0.411814931, 0.421815847, 0.431816389, 0.441817278, 0.451817847, 0.46181875, 0.471819333, 0.48182025, 0.491820778, 0.501821694, 0.511822236, 0.521823139, 0.531823694, 0.541824583, 0.551825167, 0.561826042, 0.571826625, 0.5818275, 0.591828097, 0.601828972, 0.611829569, 0.621830431, 0.631831014, 0.641831917, 0.6518325, 0.661833361, 0.671833958, 0.681834819, 0.691835403, 0.701836278, 0.711836889, 0.721837778, 0.731838333, 0.741839208, 0.751839792, 0.761840681, 0.771841306, 0.781842139, 0.791842722, 0.801843625, 0.811844181, 0.821845069, 0.831845653, 0.841846542, 0.851847111, 0.861848, 0.871848569, 0.881849528, 0.891850042, 0.901850917, 0.911851514, 0.921852389, 0.931852972, 0.941853889, 0.951854458, 0.961855333, 0.971855889, 0.981856819, 0.991857361, 1.001858236, 1.011858819, 1.021859722] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:40.812" endtime="20201110 08:35:40.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.807" endtime="20201110 08:35:40.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.816" endtime="20201110 08:35:40.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.819" endtime="20201110 08:35:40.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.818" endtime="20201110 08:35:40.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.814" endtime="20201110 08:35:40.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.249" endtime="20201110 08:35:40.840"></status>
</kw>
<msg timestamp="20201110 08:35:40.840" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.849" endtime="20201110 08:35:42.962"></status>
</kw>
<msg timestamp="20201110 08:35:42.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 142484131, 'start-iter': 1, 'wakeups': [142494160, 142504159, 14251415...</msg>
<status status="PASS" starttime="20201110 08:35:40.848" endtime="20201110 08:35:42.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.969" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 142484131, 'start-iter': 1, 'wakeups': [142494160, 142504159, 14251415...</msg>
<status status="PASS" starttime="20201110 08:35:42.966" endtime="20201110 08:35:42.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:42.971" endtime="20201110 08:35:42.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.845" endtime="20201110 08:35:42.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.842" endtime="20201110 08:35:42.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:42.983" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 142484131, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [142494160, 142504159, 142514159, 142524159, 142534159, 142544159, 142554159, 142564159, 142574159, 142...</msg>
<status status="PASS" starttime="20201110 08:35:42.978" endtime="20201110 08:35:42.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.992" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:42.990" endtime="20201110 08:35:42.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:42.996" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:42.994" endtime="20201110 08:35:42.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.984" endtime="20201110 08:35:42.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.007" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:43.004" endtime="20201110 08:35:43.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.011" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:43.009" endtime="20201110 08:35:43.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:42.999" endtime="20201110 08:35:43.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.024" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.021" endtime="20201110 08:35:43.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.028" level="INFO">VALUE: 142484131</msg>
<status status="PASS" starttime="20201110 08:35:43.026" endtime="20201110 08:35:43.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.014" endtime="20201110 08:35:43.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.037" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.036" endtime="20201110 08:35:43.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.039" level="INFO">VALUE: [142494160, 142504159, 142514159, 142524159, 142534159, 142544159, 142554159, 142564159, 142574159, 142584159, 142594159, 142604159, 142614159, 142624159, 142634159, 142644159, 142654159, 142664159, 142674159, 142684159, 142694159, 142704159, 142714159, 142724159, 142734159, 142744159, 142754159, 142764159, 142774159, 142784159, 142794159, 142804159, 142814159, 142824159, 142834159, 142844159, 142854159, 142864159, 142874159, 142884159, 142894159, 142904159, 142914159, 142924159, 142934159, 142944159, 142954159, 142964159, 142974159, 142984159, 142994159, 143004159, 143014159, 143024159, 143034159, 143044159, 143054159, 143064159, 143074159, 143084159, 143094159, 143104159, 143114159, 143124159, 143134159, 143144159, 143154159, 143164159, 143174159, 143184159, 143194159, 143204159, 143214159, 143224159, 143234159, 143244159, 143254159, 143264159, 143274159, 143284159, 143294159, 143304159, 143314159, 143324159, 143334159, 143344159, 143354159, 143364159, 143374159, 143384159, 143394159, 143404159, 143414159, 143424159, 143434159, 143444159, 143454159, 143464159, 143474159, 143484159]</msg>
<status status="PASS" starttime="20201110 08:35:43.038" endtime="20201110 08:35:43.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.031" endtime="20201110 08:35:43.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.046" endtime="20201110 08:35:43.336"></status>
</kw>
<msg timestamp="20201110 08:35:43.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030464208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.045" endtime="20201110 08:35:43.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030464208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.340" endtime="20201110 08:35:43.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.348" endtime="20201110 08:35:43.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.042" endtime="20201110 08:35:43.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.040" endtime="20201110 08:35:43.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.374" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:43.351" endtime="20201110 08:35:43.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.378" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.377" endtime="20201110 08:35:43.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.387" level="INFO">VALUE: 0.020434042</msg>
<status status="PASS" starttime="20201110 08:35:43.386" endtime="20201110 08:35:43.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.375" endtime="20201110 08:35:43.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.393" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.392" endtime="20201110 08:35:43.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.395" level="INFO">VALUE: [0.030464208, 0.040463542, 0.050464125, 0.060465014, 0.070465653, 0.080466486, 0.090467083, 0.100467972, 0.110468542, 0.120469431, 0.130470028, 0.140470931, 0.150471486, 0.160472375, 0.170472972, 0.180473847, 0.190474514, 0.200475319, 0.210475903, 0.220476806, 0.230477417, 0.240478264, 0.250478847, 0.260479736, 0.270480319, 0.280481222, 0.290481792, 0.300482694, 0.310483292, 0.320484153, 0.33048475, 0.340485639, 0.350486222, 0.360487125, 0.370487694, 0.380488583, 0.390489181, 0.400490083, 0.410490639, 0.420491597, 0.430492111, 0.440492972, 0.450493556, 0.460494444, 0.470495028, 0.480495903, 0.490496472, 0.500497389, 0.510497931, 0.520498819, 0.530499403, 0.540500278, 0.550500861, 0.56050175, 0.570502319, 0.580503208, 0.590503833, 0.600504736, 0.61050525, 0.620506125, 0.630506708, 0.640507583, 0.650508167, 0.660509069, 0.670509639, 0.680510569, 0.690511111, 0.700511972, 0.710512556, 0.720513458, 0.730514014, 0.740514944, 0.750515486, 0.760516375, 0.770516944, 0.780517833, 0.790518417, 0.800519292, 0.810519875, 0.820520764, 0.830521333, 0.840522236, 0.850522806, 0.860523694, 0.870524319, 0.880525153, 0.890525736, 0.900526625, 0.910527194, 0.920528069, 0.930528653, 0.940529583, 0.950530111, 0.960531, 0.970531583, 0.9805325, 0.990533069, 1.000533931, 1.010534514, 1.020535403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:43.394" endtime="20201110 08:35:43.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.389" endtime="20201110 08:35:43.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.399" endtime="20201110 08:35:43.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.402" endtime="20201110 08:35:43.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.400" endtime="20201110 08:35:43.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.397" endtime="20201110 08:35:43.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.841" endtime="20201110 08:35:43.423"></status>
</kw>
<msg timestamp="20201110 08:35:43.423" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.431" endtime="20201110 08:35:45.544"></status>
</kw>
<msg timestamp="20201110 08:35:45.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 145065619, 'start-iter': 1, 'wakeups': [145075648, 145085647, 14509564...</msg>
<status status="PASS" starttime="20201110 08:35:43.429" endtime="20201110 08:35:45.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.551" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 145065619, 'start-iter': 1, 'wakeups': [145075648, 145085647, 14509564...</msg>
<status status="PASS" starttime="20201110 08:35:45.548" endtime="20201110 08:35:45.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.553" endtime="20201110 08:35:45.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.427" endtime="20201110 08:35:45.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.425" endtime="20201110 08:35:45.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.565" level="INFO">${RESULT} = {'timer-count': 5, 'start-time': 145065619, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [145075648, 145085647, 145095647, 145105647, 145115647, 145125647, 145135647, 145145647, 145155647, 145...</msg>
<status status="PASS" starttime="20201110 08:35:45.561" endtime="20201110 08:35:45.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.573" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:45.571" endtime="20201110 08:35:45.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.578" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:45.576" endtime="20201110 08:35:45.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.567" endtime="20201110 08:35:45.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.588" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:45.586" endtime="20201110 08:35:45.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.592" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:45.590" endtime="20201110 08:35:45.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.581" endtime="20201110 08:35:45.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.597" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.595" endtime="20201110 08:35:45.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.599" level="INFO">VALUE: 145065619</msg>
<status status="PASS" starttime="20201110 08:35:45.598" endtime="20201110 08:35:45.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.593" endtime="20201110 08:35:45.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.604" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.602" endtime="20201110 08:35:45.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.607" level="INFO">VALUE: [145075648, 145085647, 145095647, 145105647, 145115647, 145125647, 145135647, 145145647, 145155647, 145165647, 145175647, 145185647, 145195647, 145205647, 145215647, 145225647, 145235647, 145245647, 145255647, 145265647, 145275647, 145285647, 145295647, 145305647, 145315647, 145325647, 145335647, 145345647, 145355647, 145365647, 145375647, 145385647, 145395647, 145405647, 145415647, 145425647, 145435647, 145445647, 145455647, 145465647, 145475647, 145485647, 145495647, 145505647, 145515647, 145525647, 145535647, 145545647, 145555647, 145565647, 145575647, 145585647, 145595647, 145605647, 145615647, 145625647, 145635647, 145645647, 145655647, 145665647, 145675647, 145685647, 145695647, 145705647, 145715647, 145725647, 145735647, 145745647, 145755647, 145765647, 145775647, 145785647, 145795647, 145805647, 145815647, 145825647, 145835647, 145845647, 145855647, 145865647, 145875647, 145885647, 145895647, 145905647, 145915647, 145925647, 145935647, 145945647, 145955647, 145965647, 145975647, 145985647, 145995647, 146005647, 146015647, 146025647, 146035647, 146045647, 146055647, 146065647]</msg>
<status status="PASS" starttime="20201110 08:35:45.606" endtime="20201110 08:35:45.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.600" endtime="20201110 08:35:45.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.614" endtime="20201110 08:35:45.904"></status>
</kw>
<msg timestamp="20201110 08:35:45.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019147778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029177958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.613" endtime="20201110 08:35:45.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019147778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029177958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.908" endtime="20201110 08:35:45.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.916" endtime="20201110 08:35:45.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.610" endtime="20201110 08:35:45.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.608" endtime="20201110 08:35:45.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.943" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:45.919" endtime="20201110 08:35:45.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.947" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.946" endtime="20201110 08:35:45.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.949" level="INFO">VALUE: 0.019147778</msg>
<status status="PASS" starttime="20201110 08:35:45.948" endtime="20201110 08:35:45.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.944" endtime="20201110 08:35:45.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.955" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.954" endtime="20201110 08:35:45.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.957" level="INFO">VALUE: [0.029177958, 0.039177319, 0.049177889, 0.059178764, 0.069179347, 0.079180236, 0.089180819, 0.099181722, 0.109182292, 0.119183181, 0.129183778, 0.139184653, 0.149185236, 0.159186125, 0.169186708, 0.179187597, 0.189188194, 0.199189069, 0.209189708, 0.219190542, 0.229191125, 0.239192069, 0.249192597, 0.259193514, 0.269194083, 0.279194972, 0.289195569, 0.299196472, 0.309197028, 0.319197931, 0.3291985, 0.339199389, 0.349199986, 0.359200875, 0.369201458, 0.379202333, 0.389202931, 0.399203819, 0.409204417, 0.419205264, 0.429205917, 0.43920675, 0.449207306, 0.459208208, 0.469208764, 0.479209681, 0.489210236, 0.499211111, 0.509211694, 0.519212569, 0.529213153, 0.539214028, 0.549214611, 0.5592155, 0.569216083, 0.579216972, 0.589217542, 0.599218431, 0.609219042, 0.619219889, 0.629220486, 0.639221389, 0.649221917, 0.659222806, 0.669223389, 0.679224264, 0.689224875, 0.699225819, 0.709226306, 0.719227208, 0.729227792, 0.739228653, 0.74922925, 0.759230181, 0.769230708, 0.779231583, 0.789232181, 0.799233069, 0.809233625, 0.819234514, 0.829235139, 0.839236014, 0.849236556, 0.859237458, 0.869238014, 0.879238903, 0.889239486, 0.899240361, 0.909240944, 0.919241833, 0.929242417, 0.939243292, 0.949243889, 0.959244764, 0.969245347, 0.979246222, 0.989246819, 0.999247736, 1.009248264, 1.019249153] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:45.956" endtime="20201110 08:35:45.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.951" endtime="20201110 08:35:45.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.960" endtime="20201110 08:35:45.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:45.965" endtime="20201110 08:35:45.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.962" endtime="20201110 08:35:45.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.959" endtime="20201110 08:35:45.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.423" endtime="20201110 08:35:45.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.247" endtime="20201110 08:35:45.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.246" endtime="20201110 08:35:45.986"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:45.989" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.998" endtime="20201110 08:35:48.111"></status>
</kw>
<msg timestamp="20201110 08:35:48.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147632469, 'start-iter': 1, 'wakeups': [147642505, 147652504, 14766250...</msg>
<status status="PASS" starttime="20201110 08:35:45.996" endtime="20201110 08:35:48.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147632469, 'start-iter': 1, 'wakeups': [147642505, 147652504, 14766250...</msg>
<status status="PASS" starttime="20201110 08:35:48.114" endtime="20201110 08:35:48.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.120" endtime="20201110 08:35:48.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.994" endtime="20201110 08:35:48.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.991" endtime="20201110 08:35:48.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.131" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 147632469, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [147642505, 147652504, 147662504, 147672504, 147682504, 147692504, 147702504, 147712504, 147722504, 147...</msg>
<status status="PASS" starttime="20201110 08:35:48.127" endtime="20201110 08:35:48.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.140" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:48.138" endtime="20201110 08:35:48.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.144" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:48.142" endtime="20201110 08:35:48.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.133" endtime="20201110 08:35:48.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.154" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:48.152" endtime="20201110 08:35:48.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.159" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:48.157" endtime="20201110 08:35:48.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.147" endtime="20201110 08:35:48.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.169" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.167" endtime="20201110 08:35:48.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.173" level="INFO">VALUE: 147632469</msg>
<status status="PASS" starttime="20201110 08:35:48.171" endtime="20201110 08:35:48.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.162" endtime="20201110 08:35:48.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.183" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.181" endtime="20201110 08:35:48.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.189" level="INFO">VALUE: [147642505, 147652504, 147662504, 147672504, 147682504, 147692504, 147702504, 147712504, 147722504, 147732504, 147742504, 147752504, 147762504, 147772504, 147782504, 147792504, 147802504, 147812504, 147822504, 147832504, 147842504, 147852504, 147862504, 147872504, 147882504, 147892504, 147902504, 147912504, 147922504, 147932504, 147942504, 147952504, 147962504, 147972504, 147982504, 147992504, 148002504, 148012504, 148022504, 148032504, 148042504, 148052504, 148062504, 148072504, 148082504, 148092504, 148102504, 148112504, 148122504, 148132504, 148142504, 148152504, 148162504, 148172504, 148182504, 148192504, 148202504, 148212504, 148222504, 148232504, 148242504, 148252504, 148262504, 148272504, 148282504, 148292504, 148302504, 148312504, 148322504, 148332504, 148342504, 148352504, 148362504, 148372504, 148382504, 148392504, 148402504, 148412504, 148422504, 148432504, 148442504, 148452504, 148462504, 148472504, 148482504, 148492504, 148502504, 148512504, 148522504, 148532504, 148542504, 148552504, 148562504, 148572504, 148582504, 148592504, 148602504, 148612504, 148622504, 148632504]</msg>
<status status="PASS" starttime="20201110 08:35:48.186" endtime="20201110 08:35:48.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.176" endtime="20201110 08:35:48.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.206" endtime="20201110 08:35:48.504"></status>
</kw>
<msg timestamp="20201110 08:35:48.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033219306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.203" endtime="20201110 08:35:48.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033219306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.508" endtime="20201110 08:35:48.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.515" endtime="20201110 08:35:48.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.196" endtime="20201110 08:35:48.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.192" endtime="20201110 08:35:48.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.542" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:48.519" endtime="20201110 08:35:48.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.546" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.545" endtime="20201110 08:35:48.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.548" level="INFO">VALUE: 0.023182347</msg>
<status status="PASS" starttime="20201110 08:35:48.547" endtime="20201110 08:35:48.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.543" endtime="20201110 08:35:48.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.553" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.552" endtime="20201110 08:35:48.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.556" level="INFO">VALUE: [0.033219306, 0.043218792, 0.053219444, 0.063220194, 0.073220958, 0.083221667, 0.093222389, 0.103223236, 0.113223792, 0.123224694, 0.133225292, 0.143226167, 0.153226861, 0.163227569, 0.173228278, 0.183229028, 0.19322975, 0.203230569, 0.213231153, 0.223232097, 0.233232625, 0.243233514, 0.253234181, 0.263234917, 0.273235653, 0.283236389, 0.293237125, 0.303238014, 0.313238514, 0.323239403, 0.333239972, 0.343240875, 0.353241514, 0.36324225, 0.373242972, 0.383243708, 0.393244444, 0.40324525, 0.413245819, 0.423246708, 0.433247278, 0.443248181, 0.453248861, 0.463249556, 0.473250278, 0.483251014, 0.49325175, 0.503252542, 0.513253139, 0.523254014, 0.533254583, 0.543255472, 0.553256139, 0.563256861, 0.573257639, 0.583258333, 0.593259056, 0.603259861, 0.613260486, 0.623261333, 0.633261917, 0.643262792, 0.653263444, 0.663264181, 0.673264917, 0.683265653, 0.693266403, 0.703267194, 0.713267778, 0.723268667, 0.733269236, 0.743270125, 0.753270778, 0.763271583, 0.773272264, 0.783272972, 0.793273708, 0.803274514, 0.813275111, 0.823275986, 0.833276569, 0.843277444, 0.853278111, 0.863278833, 0.873279569, 0.883280306, 0.893281028, 0.903281847, 0.913282444, 0.923283319, 0.933283944, 0.943284778, 0.953285431, 0.963286181, 0.973286931, 0.983287667, 0.993288361, 1.003289167, 1.013289764, 1.023290639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:48.555" endtime="20201110 08:35:48.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.550" endtime="20201110 08:35:48.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.559" endtime="20201110 08:35:48.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:48.562" endtime="20201110 08:35:48.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.561" endtime="20201110 08:35:48.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.557" endtime="20201110 08:35:48.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.990" endtime="20201110 08:35:48.587"></status>
</kw>
<msg timestamp="20201110 08:35:48.588" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.597" endtime="20201110 08:35:50.709"></status>
</kw>
<msg timestamp="20201110 08:35:50.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 150231195, 'start-iter': 1, 'wakeups': [150241231, 150251230, 15026123...</msg>
<status status="PASS" starttime="20201110 08:35:48.595" endtime="20201110 08:35:50.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.716" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 150231195, 'start-iter': 1, 'wakeups': [150241231, 150251230, 15026123...</msg>
<status status="PASS" starttime="20201110 08:35:50.712" endtime="20201110 08:35:50.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.718" endtime="20201110 08:35:50.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.592" endtime="20201110 08:35:50.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.590" endtime="20201110 08:35:50.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.730" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 150231195, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [150241231, 150251230, 150261230, 150271230, 150281230, 150291230, 150301230, 150311230, 150321230, 150...</msg>
<status status="PASS" starttime="20201110 08:35:50.726" endtime="20201110 08:35:50.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.738" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:50.736" endtime="20201110 08:35:50.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.742" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:50.741" endtime="20201110 08:35:50.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.731" endtime="20201110 08:35:50.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.753" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:50.751" endtime="20201110 08:35:50.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.757" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:50.755" endtime="20201110 08:35:50.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.746" endtime="20201110 08:35:50.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.767" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.765" endtime="20201110 08:35:50.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.772" level="INFO">VALUE: 150231195</msg>
<status status="PASS" starttime="20201110 08:35:50.770" endtime="20201110 08:35:50.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.760" endtime="20201110 08:35:50.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.782" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.780" endtime="20201110 08:35:50.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.787" level="INFO">VALUE: [150241231, 150251230, 150261230, 150271230, 150281230, 150291230, 150301230, 150311230, 150321230, 150331230, 150341230, 150351230, 150361230, 150371230, 150381230, 150391230, 150401230, 150411230, 150421230, 150431230, 150441230, 150451230, 150461230, 150471230, 150481230, 150491230, 150501230, 150511230, 150521230, 150531230, 150541230, 150551230, 150561230, 150571230, 150581230, 150591230, 150601230, 150611230, 150621230, 150631230, 150641230, 150651230, 150661230, 150671230, 150681230, 150691230, 150701230, 150711230, 150721230, 150731230, 150741230, 150751230, 150761230, 150771230, 150781230, 150791230, 150801230, 150811230, 150821230, 150831230, 150841230, 150851230, 150861230, 150871230, 150881230, 150891230, 150901230, 150911230, 150921230, 150931230, 150941230, 150951230, 150961230, 150971230, 150981230, 150991230, 151001230, 151011230, 151021230, 151031230, 151041230, 151051230, 151061230, 151071230, 151081230, 151091230, 151101230, 151111230, 151121230, 151131230, 151141230, 151151230, 151161230, 151171230, 151181230, 151191230, 151201230, 151211230, 151221230, 151231230]</msg>
<status status="PASS" starttime="20201110 08:35:50.784" endtime="20201110 08:35:50.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.775" endtime="20201110 08:35:50.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.803" endtime="20201110 08:35:51.096"></status>
</kw>
<msg timestamp="20201110 08:35:51.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034675278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:50.800" endtime="20201110 08:35:51.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024638319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034675278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.100" endtime="20201110 08:35:51.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.108" endtime="20201110 08:35:51.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.794" endtime="20201110 08:35:51.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.791" endtime="20201110 08:35:51.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.135" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:51.111" endtime="20201110 08:35:51.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.140" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:51.139" endtime="20201110 08:35:51.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.142" level="INFO">VALUE: 0.024638319</msg>
<status status="PASS" starttime="20201110 08:35:51.141" endtime="20201110 08:35:51.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.136" endtime="20201110 08:35:51.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.147" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:51.146" endtime="20201110 08:35:51.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.149" level="INFO">VALUE: [0.034675278, 0.04467475, 0.054675417, 0.064676153, 0.074676889, 0.084677611, 0.094678361, 0.104679153, 0.114679764, 0.124680639, 0.134681208, 0.144682111, 0.154682764, 0.1646835, 0.174684236, 0.184684972, 0.194685694, 0.204686514, 0.214687125, 0.224687986, 0.234688583, 0.244689472, 0.254690111, 0.264690861, 0.274691625, 0.284692319, 0.294693111, 0.304693861, 0.314694444, 0.324695333, 0.334695903, 0.344696792, 0.354697444, 0.364698167, 0.374698917, 0.384699625, 0.394700375, 0.404701167, 0.414701819, 0.424702639, 0.434703208, 0.444704097, 0.454704764, 0.464705486, 0.474706208, 0.484706958, 0.494707681, 0.5047085, 0.514709083, 0.524709958, 0.534710542, 0.544711431, 0.554712069, 0.564712806, 0.574713528, 0.584714292, 0.594714986, 0.604715806, 0.614716375, 0.624717264, 0.634717861, 0.644718778, 0.654719403, 0.664720125, 0.674720875, 0.684721583, 0.694722319, 0.704723125, 0.714723722, 0.724724653, 0.734725181, 0.744726056, 0.754726708, 0.764727458, 0.774728194, 0.784728931, 0.794729653, 0.804730472, 0.814731028, 0.824731917, 0.834732528, 0.844733389, 0.854734042, 0.864734819, 0.8747355, 0.88473625, 0.894736986, 0.904737847, 0.914738361, 0.924739306, 0.934739833, 0.944740722, 0.954741361, 0.964742111, 0.974742833, 0.984743569, 0.994744306, 1.004745125, 1.014745681, 1.024746569] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:51.148" endtime="20201110 08:35:51.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.143" endtime="20201110 08:35:51.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.152" endtime="20201110 08:35:51.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:51.156" endtime="20201110 08:35:51.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.154" endtime="20201110 08:35:51.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.151" endtime="20201110 08:35:51.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.588" endtime="20201110 08:35:51.176"></status>
</kw>
<msg timestamp="20201110 08:35:51.177" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.184" endtime="20201110 08:35:53.298"></status>
</kw>
<msg timestamp="20201110 08:35:53.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 152819677, 'start-iter': 1, 'wakeups': [152829713, 152839712, 15284971...</msg>
<status status="PASS" starttime="20201110 08:35:51.183" endtime="20201110 08:35:53.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 152819677, 'start-iter': 1, 'wakeups': [152829713, 152839712, 15284971...</msg>
<status status="PASS" starttime="20201110 08:35:53.301" endtime="20201110 08:35:53.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.307" endtime="20201110 08:35:53.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.180" endtime="20201110 08:35:53.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.179" endtime="20201110 08:35:53.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.320" level="INFO">${RESULT} = {'timer-count': 6, 'start-time': 152819677, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [152829713, 152839712, 152849712, 152859712, 152869712, 152879712, 152889712, 152899712, 152909712, 152...</msg>
<status status="PASS" starttime="20201110 08:35:53.316" endtime="20201110 08:35:53.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.329" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:53.327" endtime="20201110 08:35:53.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.333" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:53.331" endtime="20201110 08:35:53.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.322" endtime="20201110 08:35:53.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.343" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:53.341" endtime="20201110 08:35:53.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.347" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:53.346" endtime="20201110 08:35:53.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.336" endtime="20201110 08:35:53.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.352" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:53.351" endtime="20201110 08:35:53.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.354" level="INFO">VALUE: 152819677</msg>
<status status="PASS" starttime="20201110 08:35:53.353" endtime="20201110 08:35:53.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.349" endtime="20201110 08:35:53.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.359" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:53.358" endtime="20201110 08:35:53.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.361" level="INFO">VALUE: [152829713, 152839712, 152849712, 152859712, 152869712, 152879712, 152889712, 152899712, 152909712, 152919712, 152929712, 152939712, 152949712, 152959712, 152969712, 152979712, 152989712, 152999712, 153009712, 153019712, 153029712, 153039712, 153049712, 153059712, 153069712, 153079712, 153089712, 153099712, 153109712, 153119712, 153129712, 153139712, 153149712, 153159712, 153169712, 153179712, 153189712, 153199712, 153209712, 153219712, 153229712, 153239712, 153249712, 153259712, 153269712, 153279712, 153289712, 153299712, 153309712, 153319712, 153329712, 153339712, 153349712, 153359712, 153369712, 153379712, 153389712, 153399712, 153409712, 153419712, 153429712, 153439712, 153449712, 153459712, 153469712, 153479712, 153489712, 153499712, 153509712, 153519712, 153529712, 153539712, 153549712, 153559712, 153569712, 153579712, 153589712, 153599712, 153609712, 153619712, 153629712, 153639712, 153649712, 153659712, 153669712, 153679712, 153689712, 153699712, 153709712, 153719712, 153729712, 153739712, 153749712, 153759712, 153769712, 153779712, 153789712, 153799712, 153809712, 153819712]</msg>
<status status="PASS" starttime="20201110 08:35:53.360" endtime="20201110 08:35:53.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.356" endtime="20201110 08:35:53.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.369" endtime="20201110 08:35:53.659"></status>
</kw>
<msg timestamp="20201110 08:35:53.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029518181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.367" endtime="20201110 08:35:53.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029518181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:53.663" endtime="20201110 08:35:53.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.671" endtime="20201110 08:35:53.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.365" endtime="20201110 08:35:53.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.363" endtime="20201110 08:35:53.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:53.698" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:53.674" endtime="20201110 08:35:53.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.702" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:53.701" endtime="20201110 08:35:53.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.704" level="INFO">VALUE: 0.019481194</msg>
<status status="PASS" starttime="20201110 08:35:53.703" endtime="20201110 08:35:53.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.699" endtime="20201110 08:35:53.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.710" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:53.709" endtime="20201110 08:35:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:53.712" level="INFO">VALUE: [0.029518181, 0.039517639, 0.049518292, 0.059519097, 0.069519792, 0.079520528, 0.089521236, 0.099522056, 0.109522639, 0.119523528, 0.129524181, 0.139525, 0.149525667, 0.159526417, 0.169527153, 0.179527875, 0.189528611, 0.199529431, 0.209530014, 0.219530903, 0.2295315, 0.239532375, 0.249533042, 0.259533792, 0.269534514, 0.279535278, 0.289536, 0.299536833, 0.309537389, 0.319538292, 0.329538861, 0.339539764, 0.349540417, 0.359541181, 0.369541889, 0.379542639, 0.389543375, 0.399544181, 0.409544778, 0.419545667, 0.429546278, 0.439547125, 0.449547778, 0.4595485, 0.469549292, 0.479549972, 0.489550694, 0.4995515, 0.509552083, 0.519552972, 0.529553542, 0.539554444, 0.549555083, 0.559555819, 0.569556556, 0.579557292, 0.589558028, 0.599558819, 0.609559458, 0.619560292, 0.629560875, 0.639561778, 0.649562403, 0.659563139, 0.669563875, 0.679564611, 0.689565333, 0.699566167, 0.70956675, 0.719567625, 0.729568208, 0.739569083, 0.749569736, 0.759570472, 0.769571208, 0.779571944, 0.789572722, 0.799573472, 0.809574056, 0.819574958, 0.829575611, 0.839576417, 0.849577069, 0.859577806, 0.869578528, 0.879579264, 0.88958, 0.899580806, 0.909581431, 0.919582278, 0.929582861, 0.939583736, 0.949584417, 0.959585139, 0.969585861, 0.979586611, 0.989587347, 0.999588139, 1.009588722, 1.019589611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:53.711" endtime="20201110 08:35:53.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.706" endtime="20201110 08:35:53.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.715" endtime="20201110 08:35:53.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:53.718" endtime="20201110 08:35:53.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.717" endtime="20201110 08:35:53.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.713" endtime="20201110 08:35:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.177" endtime="20201110 08:35:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.988" endtime="20201110 08:35:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.987" endtime="20201110 08:35:53.740"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:53.742" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:53.750" endtime="20201110 08:35:55.863"></status>
</kw>
<msg timestamp="20201110 08:35:55.864" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 155384777, 'start-iter': 1, 'wakeups': [155394820, 155404819, 15541481...</msg>
<status status="PASS" starttime="20201110 08:35:53.749" endtime="20201110 08:35:55.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.870" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 155384777, 'start-iter': 1, 'wakeups': [155394820, 155404819, 15541481...</msg>
<status status="PASS" starttime="20201110 08:35:55.866" endtime="20201110 08:35:55.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.873" endtime="20201110 08:35:55.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.746" endtime="20201110 08:35:55.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.744" endtime="20201110 08:35:55.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:55.884" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 155384777, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [155394820, 155404819, 155414819, 155424819, 155434819, 155444819, 155454819, 155464819, 155474819, 155...</msg>
<status status="PASS" starttime="20201110 08:35:55.880" endtime="20201110 08:35:55.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.895" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:55.891" endtime="20201110 08:35:55.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.899" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:55.897" endtime="20201110 08:35:55.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.886" endtime="20201110 08:35:55.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.909" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:55.907" endtime="20201110 08:35:55.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.913" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:55.912" endtime="20201110 08:35:55.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.902" endtime="20201110 08:35:55.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.918" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:55.917" endtime="20201110 08:35:55.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.920" level="INFO">VALUE: 155384777</msg>
<status status="PASS" starttime="20201110 08:35:55.919" endtime="20201110 08:35:55.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.915" endtime="20201110 08:35:55.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.925" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:55.924" endtime="20201110 08:35:55.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:55.927" level="INFO">VALUE: [155394820, 155404819, 155414819, 155424819, 155434819, 155444819, 155454819, 155464819, 155474819, 155484819, 155494819, 155504819, 155514819, 155524819, 155534819, 155544819, 155554819, 155564819, 155574819, 155584819, 155594819, 155604819, 155614819, 155624819, 155634819, 155644819, 155654819, 155664819, 155674819, 155684819, 155694819, 155704819, 155714819, 155724819, 155734819, 155744819, 155754819, 155764819, 155774819, 155784819, 155794819, 155804819, 155814819, 155824819, 155834819, 155844819, 155854819, 155864819, 155874819, 155884819, 155894819, 155904819, 155914819, 155924819, 155934819, 155944819, 155954819, 155964819, 155974819, 155984819, 155994819, 156004819, 156014819, 156024819, 156034819, 156044819, 156054819, 156064819, 156074819, 156084819, 156094819, 156104819, 156114819, 156124819, 156134819, 156144819, 156154819, 156164819, 156174819, 156184819, 156194819, 156204819, 156214819, 156224819, 156234819, 156244819, 156254819, 156264819, 156274819, 156284819, 156294819, 156304819, 156314819, 156324819, 156334819, 156344819, 156354819, 156364819, 156374819, 156384819]</msg>
<status status="PASS" starttime="20201110 08:35:55.926" endtime="20201110 08:35:55.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.922" endtime="20201110 08:35:55.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:55.935" endtime="20201110 08:35:56.227"></status>
</kw>
<msg timestamp="20201110 08:35:56.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031870931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:55.933" endtime="20201110 08:35:56.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031870931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.231" endtime="20201110 08:35:56.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.239" endtime="20201110 08:35:56.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.931" endtime="20201110 08:35:56.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:55.929" endtime="20201110 08:35:56.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:56.267" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:56.243" endtime="20201110 08:35:56.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.272" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:56.271" endtime="20201110 08:35:56.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.274" level="INFO">VALUE: 0.021826583</msg>
<status status="PASS" starttime="20201110 08:35:56.273" endtime="20201110 08:35:56.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.268" endtime="20201110 08:35:56.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.279" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:56.278" endtime="20201110 08:35:56.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.281" level="INFO">VALUE: [0.031870931, 0.041871069, 0.051871639, 0.061872569, 0.071873111, 0.081874, 0.091874583, 0.101875472, 0.111876111, 0.121876944, 0.131877528, 0.141878431, 0.151879028, 0.161879917, 0.171880486, 0.181881375, 0.191881958, 0.201882861, 0.211883431, 0.221884319, 0.231884903, 0.241885792, 0.251886389, 0.261887264, 0.271887861, 0.281888819, 0.291889361, 0.301890222, 0.311890847, 0.321891722, 0.331892306, 0.341893194, 0.35189375, 0.361894653, 0.371895236, 0.381896125, 0.391896722, 0.401897597, 0.411898181, 0.421899056, 0.431899639, 0.441900528, 0.451901111, 0.461902042, 0.471902556, 0.481903444, 0.491904014, 0.501904903, 0.511905486, 0.521906361, 0.531906944, 0.541907847, 0.551908403, 0.561909361, 0.571909875, 0.581910764, 0.591911333, 0.601912222, 0.611912819, 0.621913681, 0.631914278, 0.641915153, 0.651915722, 0.661916611, 0.671917194, 0.681918097, 0.691918653, 0.701919556, 0.711920139, 0.721921014, 0.731921597, 0.741922472, 0.751923056, 0.761923931, 0.771924528, 0.781925403, 0.791925986, 0.801926875, 0.811927444, 0.821928333, 0.831928917, 0.841929819, 0.851930375, 0.861931264, 0.871931847, 0.881932736, 0.891933306, 0.901934194, 0.911934778, 0.921935667, 0.931936236, 0.941937125, 0.951937708, 0.961938597, 0.971939167, 0.981940056, 0.991940653, 1.001941542, 1.011942097, 1.021943] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:56.280" endtime="20201110 08:35:56.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.275" endtime="20201110 08:35:56.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.285" endtime="20201110 08:35:56.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:56.288" endtime="20201110 08:35:56.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.287" endtime="20201110 08:35:56.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.283" endtime="20201110 08:35:56.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.743" endtime="20201110 08:35:56.309"></status>
</kw>
<msg timestamp="20201110 08:35:56.309" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.317" endtime="20201110 08:35:58.430"></status>
</kw>
<msg timestamp="20201110 08:35:58.431" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157951757, 'start-iter': 1, 'wakeups': [157961800, 157971799, 15798179...</msg>
<status status="PASS" starttime="20201110 08:35:56.315" endtime="20201110 08:35:58.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.437" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157951757, 'start-iter': 1, 'wakeups': [157961800, 157971799, 15798179...</msg>
<status status="PASS" starttime="20201110 08:35:58.433" endtime="20201110 08:35:58.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.440" endtime="20201110 08:35:58.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.313" endtime="20201110 08:35:58.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.311" endtime="20201110 08:35:58.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.451" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 157951757, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [157961800, 157971799, 157981799, 157991799, 158001799, 158011799, 158021799, 158031799, 158041799, 158...</msg>
<status status="PASS" starttime="20201110 08:35:58.447" endtime="20201110 08:35:58.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.460" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:58.458" endtime="20201110 08:35:58.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.464" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:58.462" endtime="20201110 08:35:58.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.452" endtime="20201110 08:35:58.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.474" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:58.472" endtime="20201110 08:35:58.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.476" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:58.475" endtime="20201110 08:35:58.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.467" endtime="20201110 08:35:58.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.482" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.481" endtime="20201110 08:35:58.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.484" level="INFO">VALUE: 157951757</msg>
<status status="PASS" starttime="20201110 08:35:58.483" endtime="20201110 08:35:58.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.477" endtime="20201110 08:35:58.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.489" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.488" endtime="20201110 08:35:58.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.491" level="INFO">VALUE: [157961800, 157971799, 157981799, 157991799, 158001799, 158011799, 158021799, 158031799, 158041799, 158051799, 158061799, 158071799, 158081799, 158091799, 158101799, 158111799, 158121799, 158131799, 158141799, 158151799, 158161799, 158171799, 158181799, 158191799, 158201799, 158211799, 158221799, 158231799, 158241799, 158251799, 158261799, 158271799, 158281799, 158291799, 158301799, 158311799, 158321799, 158331799, 158341799, 158351799, 158361799, 158371799, 158381799, 158391799, 158401799, 158411799, 158421799, 158431799, 158441799, 158451799, 158461799, 158471799, 158481799, 158491799, 158501799, 158511799, 158521799, 158531799, 158541799, 158551799, 158561799, 158571799, 158581799, 158591799, 158601799, 158611799, 158621799, 158631799, 158641799, 158651799, 158661799, 158671799, 158681799, 158691799, 158701799, 158711799, 158721799, 158731799, 158741799, 158751799, 158761799, 158771799, 158781799, 158791799, 158801799, 158811799, 158821799, 158831799, 158841799, 158851799, 158861799, 158871799, 158881799, 158891799, 158901799, 158911799, 158921799, 158931799, 158941799, 158951799]</msg>
<status status="PASS" starttime="20201110 08:35:58.490" endtime="20201110 08:35:58.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.485" endtime="20201110 08:35:58.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.498" endtime="20201110 08:35:58.789"></status>
</kw>
<msg timestamp="20201110 08:35:58.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029260306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.497" endtime="20201110 08:35:58.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029260306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:58.793" endtime="20201110 08:35:58.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.800" endtime="20201110 08:35:58.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.494" endtime="20201110 08:35:58.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.492" endtime="20201110 08:35:58.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:58.827" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:35:58.804" endtime="20201110 08:35:58.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.831" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:58.830" endtime="20201110 08:35:58.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.834" level="INFO">VALUE: 0.019215986</msg>
<status status="PASS" starttime="20201110 08:35:58.833" endtime="20201110 08:35:58.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.828" endtime="20201110 08:35:58.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.840" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:58.838" endtime="20201110 08:35:58.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:58.842" level="INFO">VALUE: [0.029260306, 0.039260472, 0.049261042, 0.059261944, 0.069262514, 0.079263403, 0.089263986, 0.099264889, 0.109265458, 0.119266361, 0.129266931, 0.139267819, 0.149268403, 0.159269292, 0.169269875, 0.179270778, 0.189271361, 0.19927225, 0.209272833, 0.219273722, 0.229274306, 0.239275194, 0.249275806, 0.259276667, 0.26927725, 0.279278125, 0.289278708, 0.299279597, 0.309280194, 0.319281056, 0.329281639, 0.339282528, 0.349283097, 0.359283986, 0.369284583, 0.379285444, 0.389286028, 0.399286917, 0.409287486, 0.419288375, 0.429288972, 0.439289847, 0.449290431, 0.459291306, 0.469291944, 0.479292778, 0.489293347, 0.499294236, 0.509294833, 0.519295708, 0.529296278, 0.539297167, 0.54929775, 0.559298653, 0.569299208, 0.579300111, 0.589300708, 0.599301583, 0.609302194, 0.619303042, 0.629303611, 0.6393045, 0.649305083, 0.659305958, 0.669306542, 0.679307444, 0.689308014, 0.699308917, 0.709309486, 0.719310361, 0.729310944, 0.739311833, 0.749312417, 0.759313306, 0.769313875, 0.779314764, 0.789315347, 0.79931625, 0.809316847, 0.819317694, 0.829318292, 0.839319181, 0.849319778, 0.859320639, 0.86932125, 0.879322111, 0.889322681, 0.899323569, 0.909324167, 0.919325042, 0.929325611, 0.939326542, 0.949327083, 0.959327986, 0.969328556, 0.979329431, 0.989330028, 0.999330917, 1.009331486, 1.019332417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:58.841" endtime="20201110 08:35:58.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.835" endtime="20201110 08:35:58.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.845" endtime="20201110 08:35:58.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:58.849" endtime="20201110 08:35:58.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.847" endtime="20201110 08:35:58.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.844" endtime="20201110 08:35:58.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.310" endtime="20201110 08:35:58.869"></status>
</kw>
<msg timestamp="20201110 08:35:58.870" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:58.878" endtime="20201110 08:36:00.991"></status>
</kw>
<msg timestamp="20201110 08:36:00.992" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 160512479, 'start-iter': 1, 'wakeups': [160522523, 160532521, 16054252...</msg>
<status status="PASS" starttime="20201110 08:35:58.876" endtime="20201110 08:36:00.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 160512479, 'start-iter': 1, 'wakeups': [160522523, 160532521, 16054252...</msg>
<status status="PASS" starttime="20201110 08:36:00.994" endtime="20201110 08:36:00.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.000" endtime="20201110 08:36:01.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.874" endtime="20201110 08:36:01.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.872" endtime="20201110 08:36:01.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:01.012" level="INFO">${RESULT} = {'timer-count': 7, 'start-time': 160512479, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [160522523, 160532521, 160542521, 160552521, 160562521, 160572521, 160582521, 160592521, 160602521, 160...</msg>
<status status="PASS" starttime="20201110 08:36:01.008" endtime="20201110 08:36:01.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.020" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:01.018" endtime="20201110 08:36:01.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.025" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:01.023" endtime="20201110 08:36:01.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.013" endtime="20201110 08:36:01.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.035" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:01.033" endtime="20201110 08:36:01.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.040" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:01.038" endtime="20201110 08:36:01.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.028" endtime="20201110 08:36:01.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.050" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:01.048" endtime="20201110 08:36:01.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.055" level="INFO">VALUE: 160512479</msg>
<status status="PASS" starttime="20201110 08:36:01.053" endtime="20201110 08:36:01.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.043" endtime="20201110 08:36:01.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.065" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:01.063" endtime="20201110 08:36:01.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.070" level="INFO">VALUE: [160522523, 160532521, 160542521, 160552521, 160562521, 160572521, 160582521, 160592521, 160602521, 160612521, 160622521, 160632521, 160642521, 160652521, 160662521, 160672521, 160682521, 160692521, 160702521, 160712521, 160722521, 160732521, 160742521, 160752521, 160762521, 160772521, 160782521, 160792521, 160802521, 160812521, 160822521, 160832521, 160842521, 160852521, 160862521, 160872521, 160882521, 160892521, 160902521, 160912521, 160922521, 160932521, 160942521, 160952521, 160962521, 160972521, 160982521, 160992521, 161002521, 161012521, 161022521, 161032521, 161042521, 161052521, 161062521, 161072521, 161082521, 161092521, 161102521, 161112521, 161122521, 161132521, 161142521, 161152521, 161162521, 161172521, 161182521, 161192521, 161202521, 161212521, 161222521, 161232521, 161242521, 161252521, 161262521, 161272521, 161282521, 161292521, 161302521, 161312521, 161322521, 161332521, 161342521, 161352521, 161362521, 161372521, 161382521, 161392521, 161402521, 161412521, 161422521, 161432521, 161442521, 161452521, 161462521, 161472521, 161482521, 161492521, 161502521, 161512521]</msg>
<status status="PASS" starttime="20201110 08:36:01.067" endtime="20201110 08:36:01.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.058" endtime="20201110 08:36:01.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.087" endtime="20201110 08:36:01.384"></status>
</kw>
<msg timestamp="20201110 08:36:01.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019167875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029212556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.084" endtime="20201110 08:36:01.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019167875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029212556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:01.389" endtime="20201110 08:36:01.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.398" endtime="20201110 08:36:01.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.076" endtime="20201110 08:36:01.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.073" endtime="20201110 08:36:01.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:01.427" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:01.402" endtime="20201110 08:36:01.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.431" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:36:01.430" endtime="20201110 08:36:01.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.433" level="INFO">VALUE: 0.019167875</msg>
<status status="PASS" starttime="20201110 08:36:01.432" endtime="20201110 08:36:01.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.428" endtime="20201110 08:36:01.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.438" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:01.437" endtime="20201110 08:36:01.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:01.441" level="INFO">VALUE: [0.029212556, 0.039211681, 0.049212264, 0.059213153, 0.069213736, 0.079214625, 0.089215278, 0.099216097, 0.109216681, 0.119217569, 0.129218153, 0.139219069, 0.149219625, 0.159220528, 0.169221097, 0.179222014, 0.189222569, 0.199223472, 0.209224111, 0.219224944, 0.229225528, 0.239226417, 0.249227, 0.259227903, 0.269228472, 0.279229375, 0.289229944, 0.299230847, 0.309231431, 0.319232319, 0.329232889, 0.339233847, 0.349234375, 0.359235333, 0.369235847, 0.379236736, 0.389237319, 0.399238264, 0.409238806, 0.419239764, 0.429240264, 0.439241153, 0.44924175, 0.459242639, 0.469243236, 0.479244125, 0.489244667, 0.499245569, 0.509246125, 0.519247014, 0.529247653, 0.539248486, 0.549249056, 0.559249958, 0.569250514, 0.579251417, 0.589251972, 0.599252875, 0.609253444, 0.619254319, 0.629254958, 0.639255833, 0.649256375, 0.65925725, 0.669257833, 0.679258722, 0.689259292, 0.699260236, 0.70926075, 0.719261653, 0.729262222, 0.739263139, 0.749263694, 0.759264583, 0.769265153, 0.779266056, 0.789266611, 0.7992675, 0.809268069, 0.819268958, 0.829269542, 0.839270431, 0.849271, 0.859271889, 0.869272486, 0.879273361, 0.889273931, 0.899274847, 0.909275417, 0.919276278, 0.929276875, 0.93927775, 0.949278347, 0.959279208, 0.969279792, 0.979280694, 0.989281264, 0.999282139, 1.009282764, 1.019283625] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:01.440" endtime="20201110 08:36:01.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.434" endtime="20201110 08:36:01.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.444" endtime="20201110 08:36:01.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:01.448" endtime="20201110 08:36:01.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.446" endtime="20201110 08:36:01.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.443" endtime="20201110 08:36:01.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:58.870" endtime="20201110 08:36:01.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.741" endtime="20201110 08:36:01.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:53.740" endtime="20201110 08:36:01.469"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:01.471" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:01.481" endtime="20201110 08:36:03.592"></status>
</kw>
<msg timestamp="20201110 08:36:03.594" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 163115088, 'start-iter': 1, 'wakeups': [163125139, 163135138, 16314513...</msg>
<status status="PASS" starttime="20201110 08:36:01.479" endtime="20201110 08:36:03.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 163115088, 'start-iter': 1, 'wakeups': [163125139, 163135138, 16314513...</msg>
<status status="PASS" starttime="20201110 08:36:03.596" endtime="20201110 08:36:03.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.602" endtime="20201110 08:36:03.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.476" endtime="20201110 08:36:03.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.473" endtime="20201110 08:36:03.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:03.613" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 163115088, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [163125139, 163135138, 163145138, 163155138, 163165138, 163175138, 163185138, 163195138, 163205138, 163...</msg>
<status status="PASS" starttime="20201110 08:36:03.609" endtime="20201110 08:36:03.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.622" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:03.620" endtime="20201110 08:36:03.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.626" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:03.624" endtime="20201110 08:36:03.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.615" endtime="20201110 08:36:03.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.636" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:03.634" endtime="20201110 08:36:03.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.641" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:03.639" endtime="20201110 08:36:03.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.629" endtime="20201110 08:36:03.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.651" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:03.649" endtime="20201110 08:36:03.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.655" level="INFO">VALUE: 163115088</msg>
<status status="PASS" starttime="20201110 08:36:03.653" endtime="20201110 08:36:03.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.644" endtime="20201110 08:36:03.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.666" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:03.664" endtime="20201110 08:36:03.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.671" level="INFO">VALUE: [163125139, 163135138, 163145138, 163155138, 163165138, 163175138, 163185138, 163195138, 163205138, 163215138, 163225138, 163235138, 163245138, 163255138, 163265138, 163275138, 163285138, 163295138, 163305138, 163315138, 163325138, 163335138, 163345138, 163355138, 163365138, 163375138, 163385138, 163395138, 163405138, 163415138, 163425138, 163435138, 163445138, 163455138, 163465138, 163475138, 163485138, 163495138, 163505138, 163515138, 163525138, 163535138, 163545138, 163555138, 163565138, 163575138, 163585138, 163595138, 163605138, 163615138, 163625138, 163635138, 163645138, 163655138, 163665138, 163675138, 163685138, 163695138, 163705138, 163715138, 163725138, 163735138, 163745138, 163755138, 163765138, 163775138, 163785138, 163795138, 163805138, 163815138, 163825138, 163835138, 163845138, 163855138, 163865138, 163875138, 163885138, 163895138, 163905138, 163915138, 163925138, 163935138, 163945138, 163955138, 163965138, 163975138, 163985138, 163995138, 164005138, 164015138, 164025138, 164035138, 164045138, 164055138, 164065138, 164075138, 164085138, 164095138, 164105138, 164115138]</msg>
<status status="PASS" starttime="20201110 08:36:03.668" endtime="20201110 08:36:03.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.658" endtime="20201110 08:36:03.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.680" endtime="20201110 08:36:03.971"></status>
</kw>
<msg timestamp="20201110 08:36:03.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032819153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:03.679" endtime="20201110 08:36:03.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:03.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02276725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032819153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:03.975" endtime="20201110 08:36:03.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:03.983" endtime="20201110 08:36:03.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.676" endtime="20201110 08:36:03.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:03.674" endtime="20201110 08:36:03.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:04.010" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:03.986" endtime="20201110 08:36:04.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.014" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:04.013" endtime="20201110 08:36:04.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.016" level="INFO">VALUE: 0.02276725</msg>
<status status="PASS" starttime="20201110 08:36:04.015" endtime="20201110 08:36:04.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.011" endtime="20201110 08:36:04.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.022" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:04.021" endtime="20201110 08:36:04.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:04.024" level="INFO">VALUE: [0.032819153, 0.042819111, 0.052819667, 0.062820542, 0.072821125, 0.082822014, 0.092822667, 0.102823403, 0.112824181, 0.122824917, 0.132825653, 0.142826389, 0.152827083, 0.162827903, 0.1728285, 0.182829444, 0.192829958, 0.202830861, 0.212831431, 0.222832319, 0.232832986, 0.242833722, 0.252834472, 0.262835208, 0.272835931, 0.282836681, 0.292837403, 0.302838208, 0.312838792, 0.322839667, 0.332840264, 0.342841125, 0.352841708, 0.362842597, 0.372843236, 0.382844042, 0.392844708, 0.402845472, 0.412846167, 0.422846903, 0.432847625, 0.442848472, 0.452849042, 0.462849917, 0.472850472, 0.482851361, 0.492851944, 0.502852819, 0.512853472, 0.522854236, 0.532855028, 0.542855681, 0.552856403, 0.562857139, 0.572857861, 0.582858681, 0.59285925, 0.602860139, 0.612860722, 0.622861597, 0.632862208, 0.642863069, 0.652863722, 0.662864458, 0.672865222, 0.682865917, 0.692866681, 0.702867417, 0.712868111, 0.722868944, 0.732869514, 0.742870389, 0.752870958, 0.762871847, 0.772872431, 0.782873375, 0.792874, 0.802874708, 0.812875444, 0.822876194, 0.832876903, 0.842877639, 0.852878361, 0.862879167, 0.87287975, 0.882880639, 0.892881222, 0.902882125, 0.912882681, 0.922883556, 0.932884222, 0.942884958, 0.952885694, 0.962886417, 0.972887139, 0.982887917, 0.992888611, 1.002889417, 1.01289, 1.022890889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:04.023" endtime="20201110 08:36:04.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.018" endtime="20201110 08:36:04.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.027" endtime="20201110 08:36:04.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:04.030" endtime="20201110 08:36:04.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.029" endtime="20201110 08:36:04.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.025" endtime="20201110 08:36:04.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.472" endtime="20201110 08:36:04.051"></status>
</kw>
<msg timestamp="20201110 08:36:04.052" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:04.060" endtime="20201110 08:36:06.173"></status>
</kw>
<msg timestamp="20201110 08:36:06.174" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165694687, 'start-iter': 1, 'wakeups': [165704738, 165714737, 16572473...</msg>
<status status="PASS" starttime="20201110 08:36:04.058" endtime="20201110 08:36:06.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165694687, 'start-iter': 1, 'wakeups': [165704738, 165714737, 16572473...</msg>
<status status="PASS" starttime="20201110 08:36:06.177" endtime="20201110 08:36:06.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.183" endtime="20201110 08:36:06.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.056" endtime="20201110 08:36:06.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.054" endtime="20201110 08:36:06.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.194" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 165694687, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [165704738, 165714737, 165724737, 165734737, 165744737, 165754737, 165764737, 165774737, 165784737, 165...</msg>
<status status="PASS" starttime="20201110 08:36:06.190" endtime="20201110 08:36:06.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.204" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:06.200" endtime="20201110 08:36:06.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.209" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:06.207" endtime="20201110 08:36:06.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.195" endtime="20201110 08:36:06.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.219" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:06.217" endtime="20201110 08:36:06.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.223" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:06.221" endtime="20201110 08:36:06.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.212" endtime="20201110 08:36:06.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.230" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:06.229" endtime="20201110 08:36:06.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.232" level="INFO">VALUE: 165694687</msg>
<status status="PASS" starttime="20201110 08:36:06.231" endtime="20201110 08:36:06.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.227" endtime="20201110 08:36:06.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.237" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:06.236" endtime="20201110 08:36:06.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.239" level="INFO">VALUE: [165704738, 165714737, 165724737, 165734737, 165744737, 165754737, 165764737, 165774737, 165784737, 165794737, 165804737, 165814737, 165824737, 165834737, 165844737, 165854737, 165864737, 165874737, 165884737, 165894737, 165904737, 165914737, 165924737, 165934737, 165944737, 165954737, 165964737, 165974737, 165984737, 165994737, 166004737, 166014737, 166024737, 166034737, 166044737, 166054737, 166064737, 166074737, 166084737, 166094737, 166104737, 166114737, 166124737, 166134737, 166144737, 166154737, 166164737, 166174737, 166184737, 166194737, 166204737, 166214737, 166224737, 166234737, 166244737, 166254737, 166264737, 166274737, 166284737, 166294737, 166304737, 166314737, 166324737, 166334737, 166344737, 166354737, 166364737, 166374737, 166384737, 166394737, 166404737, 166414737, 166424737, 166434737, 166444737, 166454737, 166464737, 166474737, 166484737, 166494737, 166504737, 166514737, 166524737, 166534737, 166544737, 166554737, 166564737, 166574737, 166584737, 166594737, 166604737, 166614737, 166624737, 166634737, 166644737, 166654737, 166664737, 166674737, 166684737, 166694737]</msg>
<status status="PASS" starttime="20201110 08:36:06.238" endtime="20201110 08:36:06.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.234" endtime="20201110 08:36:06.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.247" endtime="20201110 08:36:06.538"></status>
</kw>
<msg timestamp="20201110 08:36:06.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030101319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.246" endtime="20201110 08:36:06.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030101319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:06.542" endtime="20201110 08:36:06.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.550" endtime="20201110 08:36:06.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.243" endtime="20201110 08:36:06.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.241" endtime="20201110 08:36:06.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:06.577" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:06.553" endtime="20201110 08:36:06.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.582" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:06.581" endtime="20201110 08:36:06.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.584" level="INFO">VALUE: 0.020049056</msg>
<status status="PASS" starttime="20201110 08:36:06.583" endtime="20201110 08:36:06.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.578" endtime="20201110 08:36:06.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.589" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:06.588" endtime="20201110 08:36:06.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:06.591" level="INFO">VALUE: [0.030101319, 0.040101222, 0.050101819, 0.060102694, 0.070103292, 0.080104181, 0.090104819, 0.100105569, 0.110106292, 0.120107042, 0.130107764, 0.1401085, 0.15010925, 0.160110056, 0.170110639, 0.180111528, 0.190112111, 0.200113, 0.210113597, 0.220114486, 0.230115125, 0.240115903, 0.250116639, 0.260117333, 0.270118069, 0.280118806, 0.290119556, 0.300120375, 0.310120944, 0.320121833, 0.330122417, 0.340123306, 0.350123889, 0.360124778, 0.370125431, 0.380126181, 0.390126931, 0.400127681, 0.410128389, 0.420129125, 0.430129875, 0.440130667, 0.45013125, 0.460132125, 0.470132722, 0.480133597, 0.490134167, 0.500135056, 0.510135708, 0.520136458, 0.530137194, 0.540137903, 0.550138653, 0.560139375, 0.570140097, 0.580140944, 0.590141486, 0.600142389, 0.610142958, 0.620143833, 0.630144417, 0.640145319, 0.650145986, 0.660146736, 0.670147417, 0.680148153, 0.690148889, 0.700149639, 0.710150347, 0.720151181, 0.730151764, 0.740152653, 0.750153208, 0.760154097, 0.770154694, 0.780155556, 0.790156222, 0.800156972, 0.810157694, 0.820158417, 0.830159167, 0.840159889, 0.850160611, 0.860161431, 0.870162, 0.880162903, 0.890163486, 0.900164361, 0.910164958, 0.920165847, 0.9301665, 0.940167236, 0.950167944, 0.960168722, 0.970169431, 0.980170153, 0.990170875, 1.000171764, 1.010172278, 1.020173153] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:06.590" endtime="20201110 08:36:06.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.585" endtime="20201110 08:36:06.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.595" endtime="20201110 08:36:06.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:06.598" endtime="20201110 08:36:06.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.597" endtime="20201110 08:36:06.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.593" endtime="20201110 08:36:06.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:04.052" endtime="20201110 08:36:06.619"></status>
</kw>
<msg timestamp="20201110 08:36:06.619" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:06.627" endtime="20201110 08:36:08.740"></status>
</kw>
<msg timestamp="20201110 08:36:08.742" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 168261675, 'start-iter': 1, 'wakeups': [168271727, 168281725, 16829172...</msg>
<status status="PASS" starttime="20201110 08:36:06.625" endtime="20201110 08:36:08.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 168261675, 'start-iter': 1, 'wakeups': [168271727, 168281725, 16829172...</msg>
<status status="PASS" starttime="20201110 08:36:08.744" endtime="20201110 08:36:08.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.750" endtime="20201110 08:36:08.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.623" endtime="20201110 08:36:08.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.621" endtime="20201110 08:36:08.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.761" level="INFO">${RESULT} = {'timer-count': 8, 'start-time': 168261675, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [168271727, 168281725, 168291725, 168301725, 168311725, 168321725, 168331725, 168341725, 168351725, 168...</msg>
<status status="PASS" starttime="20201110 08:36:08.757" endtime="20201110 08:36:08.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.770" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:08.768" endtime="20201110 08:36:08.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.774" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:08.772" endtime="20201110 08:36:08.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.763" endtime="20201110 08:36:08.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.784" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:08.782" endtime="20201110 08:36:08.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.789" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:08.787" endtime="20201110 08:36:08.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.777" endtime="20201110 08:36:08.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.797" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:08.796" endtime="20201110 08:36:08.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.800" level="INFO">VALUE: 168261675</msg>
<status status="PASS" starttime="20201110 08:36:08.799" endtime="20201110 08:36:08.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.792" endtime="20201110 08:36:08.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.805" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:08.804" endtime="20201110 08:36:08.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.807" level="INFO">VALUE: [168271727, 168281725, 168291725, 168301725, 168311725, 168321725, 168331725, 168341725, 168351725, 168361725, 168371725, 168381725, 168391725, 168401725, 168411725, 168421725, 168431725, 168441725, 168451725, 168461725, 168471725, 168481725, 168491725, 168501725, 168511725, 168521725, 168531725, 168541725, 168551725, 168561725, 168571725, 168581725, 168591725, 168601725, 168611725, 168621725, 168631725, 168641725, 168651725, 168661725, 168671725, 168681725, 168691725, 168701725, 168711725, 168721725, 168731725, 168741725, 168751725, 168761725, 168771725, 168781725, 168791725, 168801725, 168811725, 168821725, 168831725, 168841725, 168851725, 168861725, 168871725, 168881725, 168891725, 168901725, 168911725, 168921725, 168931725, 168941725, 168951725, 168961725, 168971725, 168981725, 168991725, 169001725, 169011725, 169021725, 169031725, 169041725, 169051725, 169061725, 169071725, 169081725, 169091725, 169101725, 169111725, 169121725, 169131725, 169141725, 169151725, 169161725, 169171725, 169181725, 169191725, 169201725, 169211725, 169221725, 169231725, 169241725, 169251725, 169261725]</msg>
<status status="PASS" starttime="20201110 08:36:08.806" endtime="20201110 08:36:08.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.801" endtime="20201110 08:36:08.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.814" endtime="20201110 08:36:09.105"></status>
</kw>
<msg timestamp="20201110 08:36:09.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019156042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029208653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.812" endtime="20201110 08:36:09.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019156042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029208653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:09.143" endtime="20201110 08:36:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.151" endtime="20201110 08:36:09.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.810" endtime="20201110 08:36:09.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.808" endtime="20201110 08:36:09.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:09.177" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:09.154" endtime="20201110 08:36:09.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.181" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:36:09.180" endtime="20201110 08:36:09.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.184" level="INFO">VALUE: 0.019156042</msg>
<status status="PASS" starttime="20201110 08:36:09.183" endtime="20201110 08:36:09.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.178" endtime="20201110 08:36:09.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.190" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:09.188" endtime="20201110 08:36:09.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.192" level="INFO">VALUE: [0.029208653, 0.039207639, 0.049208153, 0.059209042, 0.069209611, 0.0792105, 0.089211167, 0.099211931, 0.109212639, 0.119213389, 0.129214111, 0.139214847, 0.149215569, 0.159216389, 0.169216972, 0.179217861, 0.189218514, 0.199219333, 0.209219931, 0.219220833, 0.229221458, 0.239222222, 0.249222931, 0.259223681, 0.269224403, 0.279225153, 0.289225944, 0.299226694, 0.309227278, 0.319228194, 0.32922875, 0.339229639, 0.349230222, 0.359231125, 0.369231778, 0.379232528, 0.38923325, 0.399233986, 0.409234736, 0.419235458, 0.429236194, 0.439237014, 0.449237569, 0.459238472, 0.469239042, 0.479239931, 0.489240514, 0.499241389, 0.509242028, 0.519242778, 0.529243542, 0.539244222, 0.549244944, 0.559245681, 0.569246417, 0.579247222, 0.589247833, 0.599248681, 0.609249264, 0.619250139, 0.629250764, 0.639251597, 0.649252264, 0.659252986, 0.669253708, 0.679254444, 0.689255194, 0.699255903, 0.709256653, 0.719257444, 0.729258028, 0.739258903, 0.7492595, 0.759260375, 0.769261, 0.779261847, 0.789262486, 0.799263222, 0.809263958, 0.819264681, 0.829265417, 0.839266167, 0.849266889, 0.859267681, 0.869268264, 0.879269167, 0.889269736, 0.899270611, 0.909271181, 0.919272069, 0.929272736, 0.939273514, 0.949274208, 0.959274917, 0.969275667, 0.979276389, 0.989277125, 0.999277931, 1.009278514, 1.019279389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:09.191" endtime="20201110 08:36:09.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.185" endtime="20201110 08:36:09.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.195" endtime="20201110 08:36:09.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:09.198" endtime="20201110 08:36:09.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.197" endtime="20201110 08:36:09.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.193" endtime="20201110 08:36:09.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:06.620" endtime="20201110 08:36:09.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.470" endtime="20201110 08:36:09.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:01.469" endtime="20201110 08:36:09.219"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:09.222" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:09.230" endtime="20201110 08:36:11.343"></status>
</kw>
<msg timestamp="20201110 08:36:11.344" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170864648, 'start-iter': 1, 'wakeups': [170874707, 170884706, 17089470...</msg>
<status status="PASS" starttime="20201110 08:36:09.228" endtime="20201110 08:36:11.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170864648, 'start-iter': 1, 'wakeups': [170874707, 170884706, 17089470...</msg>
<status status="PASS" starttime="20201110 08:36:11.346" endtime="20201110 08:36:11.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.353" endtime="20201110 08:36:11.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.226" endtime="20201110 08:36:11.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.224" endtime="20201110 08:36:11.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.364" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 170864648, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [170874707, 170884706, 170894706, 170904706, 170914706, 170924706, 170934706, 170944706, 170954706, 170...</msg>
<status status="PASS" starttime="20201110 08:36:11.360" endtime="20201110 08:36:11.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.373" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:11.371" endtime="20201110 08:36:11.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.377" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:11.375" endtime="20201110 08:36:11.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.366" endtime="20201110 08:36:11.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.387" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:11.385" endtime="20201110 08:36:11.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.392" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:11.390" endtime="20201110 08:36:11.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.380" endtime="20201110 08:36:11.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.402" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:11.400" endtime="20201110 08:36:11.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.406" level="INFO">VALUE: 170864648</msg>
<status status="PASS" starttime="20201110 08:36:11.404" endtime="20201110 08:36:11.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.395" endtime="20201110 08:36:11.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.417" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:11.414" endtime="20201110 08:36:11.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.421" level="INFO">VALUE: [170874707, 170884706, 170894706, 170904706, 170914706, 170924706, 170934706, 170944706, 170954706, 170964706, 170974706, 170984706, 170994706, 171004706, 171014706, 171024706, 171034706, 171044706, 171054706, 171064706, 171074706, 171084706, 171094706, 171104706, 171114706, 171124706, 171134706, 171144706, 171154706, 171164706, 171174706, 171184706, 171194706, 171204706, 171214706, 171224706, 171234706, 171244706, 171254706, 171264706, 171274706, 171284706, 171294706, 171304706, 171314706, 171324706, 171334706, 171344706, 171354706, 171364706, 171374706, 171384706, 171394706, 171404706, 171414706, 171424706, 171434706, 171444706, 171454706, 171464706, 171474706, 171484706, 171494706, 171504706, 171514706, 171524706, 171534706, 171544706, 171554706, 171564706, 171574706, 171584706, 171594706, 171604706, 171614706, 171624706, 171634706, 171644706, 171654706, 171664706, 171674706, 171684706, 171694706, 171704706, 171714706, 171724706, 171734706, 171744706, 171754706, 171764706, 171774706, 171784706, 171794706, 171804706, 171814706, 171824706, 171834706, 171844706, 171854706, 171864706]</msg>
<status status="PASS" starttime="20201110 08:36:11.419" endtime="20201110 08:36:11.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.409" endtime="20201110 08:36:11.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.438" endtime="20201110 08:36:11.729"></status>
</kw>
<msg timestamp="20201110 08:36:11.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031928153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.436" endtime="20201110 08:36:11.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031928153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.733" endtime="20201110 08:36:11.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.741" endtime="20201110 08:36:11.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.428" endtime="20201110 08:36:11.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.424" endtime="20201110 08:36:11.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.767" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:11.744" endtime="20201110 08:36:11.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.772" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:11.771" endtime="20201110 08:36:11.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.774" level="INFO">VALUE: 0.021867819</msg>
<status status="PASS" starttime="20201110 08:36:11.773" endtime="20201110 08:36:11.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.768" endtime="20201110 08:36:11.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.779" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:11.778" endtime="20201110 08:36:11.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.781" level="INFO">VALUE: [0.031928153, 0.041928097, 0.051928681, 0.061929583, 0.071930153, 0.081931042, 0.091931625, 0.101932514, 0.111933097, 0.121933986, 0.131934583, 0.141935472, 0.151936083, 0.161936931, 0.171937528, 0.181938403, 0.191938986, 0.201939889, 0.211940458, 0.221941361, 0.231941944, 0.241942819, 0.251943403, 0.261944306, 0.271944875, 0.281945778, 0.291946347, 0.301947236, 0.311947819, 0.321948722, 0.331949292, 0.341950194, 0.351950778, 0.361951667, 0.371952236, 0.381953125, 0.391953736, 0.401954611, 0.411955181, 0.421956097, 0.431956653, 0.441957542, 0.451958125, 0.461959028, 0.471959639, 0.481960486, 0.491961056, 0.501961944, 0.511962569, 0.521963403, 0.531963986, 0.541964861, 0.551965486, 0.561966333, 0.571966903, 0.581967792, 0.591968389, 0.60196925, 0.611969819, 0.621970722, 0.631971292, 0.641972167, 0.651972764, 0.661973625, 0.671974222, 0.681975083, 0.691975681, 0.701976556, 0.711977181, 0.721978028, 0.731978597, 0.741979542, 0.751980069, 0.761980944, 0.771981514, 0.781982417, 0.791982972, 0.801983861, 0.811984444, 0.821985333, 0.831985903, 0.841986806, 0.851987375, 0.861988264, 0.871988847, 0.881989708, 0.891990306, 0.901991222, 0.91199175, 0.921992667, 0.931993208, 0.941994097, 0.951994681, 0.961995569, 0.971996139, 0.981997042, 0.991997611, 1.001998486, 1.011999083, 1.021999972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:11.780" endtime="20201110 08:36:11.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.775" endtime="20201110 08:36:11.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.784" endtime="20201110 08:36:11.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.788" endtime="20201110 08:36:11.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.786" endtime="20201110 08:36:11.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.783" endtime="20201110 08:36:11.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.223" endtime="20201110 08:36:11.808"></status>
</kw>
<msg timestamp="20201110 08:36:11.809" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.818" endtime="20201110 08:36:13.931"></status>
</kw>
<msg timestamp="20201110 08:36:13.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 173453009, 'start-iter': 1, 'wakeups': [173463068, 173473067, 17348306...</msg>
<status status="PASS" starttime="20201110 08:36:11.817" endtime="20201110 08:36:13.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 173453009, 'start-iter': 1, 'wakeups': [173463068, 173473067, 17348306...</msg>
<status status="PASS" starttime="20201110 08:36:13.934" endtime="20201110 08:36:13.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.940" endtime="20201110 08:36:13.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.814" endtime="20201110 08:36:13.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.811" endtime="20201110 08:36:13.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.951" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 173453009, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [173463068, 173473067, 173483067, 173493067, 173503067, 173513067, 173523067, 173533067, 173543067, 173...</msg>
<status status="PASS" starttime="20201110 08:36:13.947" endtime="20201110 08:36:13.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.961" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:13.959" endtime="20201110 08:36:13.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:13.963" endtime="20201110 08:36:13.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.953" endtime="20201110 08:36:13.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.975" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:13.973" endtime="20201110 08:36:13.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.980" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:13.978" endtime="20201110 08:36:13.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.968" endtime="20201110 08:36:13.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.990" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:13.988" endtime="20201110 08:36:13.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.994" level="INFO">VALUE: 173453009</msg>
<status status="PASS" starttime="20201110 08:36:13.992" endtime="20201110 08:36:13.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.983" endtime="20201110 08:36:13.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.002" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:14.001" endtime="20201110 08:36:14.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.004" level="INFO">VALUE: [173463068, 173473067, 173483067, 173493067, 173503067, 173513067, 173523067, 173533067, 173543067, 173553067, 173563067, 173573067, 173583067, 173593067, 173603067, 173613067, 173623067, 173633067, 173643067, 173653067, 173663067, 173673067, 173683067, 173693067, 173703067, 173713067, 173723067, 173733067, 173743067, 173753067, 173763067, 173773067, 173783067, 173793067, 173803067, 173813067, 173823067, 173833067, 173843067, 173853067, 173863067, 173873067, 173883067, 173893067, 173903067, 173913067, 173923067, 173933067, 173943067, 173953067, 173963067, 173973067, 173983067, 173993067, 174003067, 174013067, 174023067, 174033067, 174043067, 174053067, 174063067, 174073067, 174083067, 174093067, 174103067, 174113067, 174123067, 174133067, 174143067, 174153067, 174163067, 174173067, 174183067, 174193067, 174203067, 174213067, 174223067, 174233067, 174243067, 174253067, 174263067, 174273067, 174283067, 174293067, 174303067, 174313067, 174323067, 174333067, 174343067, 174353067, 174363067, 174373067, 174383067, 174393067, 174403067, 174413067, 174423067, 174433067, 174443067, 174453067]</msg>
<status status="PASS" starttime="20201110 08:36:14.003" endtime="20201110 08:36:14.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.997" endtime="20201110 08:36:14.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.012" endtime="20201110 08:36:14.303"></status>
</kw>
<msg timestamp="20201110 08:36:14.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030953347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.010" endtime="20201110 08:36:14.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020892653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030953347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.307" endtime="20201110 08:36:14.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.315" endtime="20201110 08:36:14.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.008" endtime="20201110 08:36:14.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.006" endtime="20201110 08:36:14.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.342" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:14.318" endtime="20201110 08:36:14.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.346" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:14.345" endtime="20201110 08:36:14.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.349" level="INFO">VALUE: 0.020892653</msg>
<status status="PASS" starttime="20201110 08:36:14.348" endtime="20201110 08:36:14.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.343" endtime="20201110 08:36:14.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.354" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:14.353" endtime="20201110 08:36:14.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.356" level="INFO">VALUE: [0.030953347, 0.040953292, 0.050953875, 0.060954778, 0.070955417, 0.08095625, 0.090956847, 0.100957708, 0.110958333, 0.120959194, 0.130959778, 0.140960667, 0.150961236, 0.160962125, 0.170962708, 0.180963597, 0.190964181, 0.200965083, 0.210965708, 0.220966569, 0.230967125, 0.240968028, 0.250968611, 0.260969486, 0.270970111, 0.280970958, 0.290971542, 0.300972444, 0.310973014, 0.320973903, 0.330974486, 0.340975417, 0.350975958, 0.360976847, 0.370977444, 0.380978333, 0.390978903, 0.400979792, 0.410980389, 0.420981278, 0.430981847, 0.440982764, 0.450983319, 0.460984181, 0.47098475, 0.480985639, 0.490986208, 0.500987097, 0.510987667, 0.520988556, 0.530989139, 0.540990028, 0.550990611, 0.560991472, 0.570992056, 0.580992931, 0.590993514, 0.600994417, 0.610994972, 0.620995875, 0.630996444, 0.640997319, 0.650997972, 0.660998792, 0.670999361, 0.681000236, 0.691000833, 0.701001708, 0.711002347, 0.721003181, 0.731003736, 0.741004625, 0.751005208, 0.761006083, 0.771006667, 0.781007556, 0.791008125, 0.801009014, 0.811009597, 0.821010472, 0.831011056, 0.841011931, 0.851012514, 0.861013403, 0.871013972, 0.881014861, 0.891015458, 0.901016319, 0.911016903, 0.921017806, 0.931018361, 0.941019292, 0.951019833, 0.961020722, 0.971021292, 0.981022181, 0.991022764, 1.001023639, 1.011024278, 1.021025111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:14.355" endtime="20201110 08:36:14.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.350" endtime="20201110 08:36:14.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.360" endtime="20201110 08:36:14.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.363" endtime="20201110 08:36:14.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.361" endtime="20201110 08:36:14.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.358" endtime="20201110 08:36:14.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.809" endtime="20201110 08:36:14.384"></status>
</kw>
<msg timestamp="20201110 08:36:14.384" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.392" endtime="20201110 08:36:16.504"></status>
</kw>
<msg timestamp="20201110 08:36:16.506" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 176026359, 'start-iter': 1, 'wakeups': [176036418, 176046417, 17605641...</msg>
<status status="PASS" starttime="20201110 08:36:14.390" endtime="20201110 08:36:16.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 176026359, 'start-iter': 1, 'wakeups': [176036418, 176046417, 17605641...</msg>
<status status="PASS" starttime="20201110 08:36:16.508" endtime="20201110 08:36:16.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.514" endtime="20201110 08:36:16.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.388" endtime="20201110 08:36:16.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.386" endtime="20201110 08:36:16.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.525" level="INFO">${RESULT} = {'timer-count': 9, 'start-time': 176026359, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [176036418, 176046417, 176056417, 176066417, 176076417, 176086417, 176096417, 176106417, 176116417, 176...</msg>
<status status="PASS" starttime="20201110 08:36:16.521" endtime="20201110 08:36:16.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.536" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:16.534" endtime="20201110 08:36:16.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.540" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:16.538" endtime="20201110 08:36:16.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.527" endtime="20201110 08:36:16.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.550" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:16.548" endtime="20201110 08:36:16.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.552" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:16.551" endtime="20201110 08:36:16.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.543" endtime="20201110 08:36:16.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.557" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:16.556" endtime="20201110 08:36:16.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.559" level="INFO">VALUE: 176026359</msg>
<status status="PASS" starttime="20201110 08:36:16.558" endtime="20201110 08:36:16.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.553" endtime="20201110 08:36:16.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.564" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:16.563" endtime="20201110 08:36:16.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.566" level="INFO">VALUE: [176036418, 176046417, 176056417, 176066417, 176076417, 176086417, 176096417, 176106417, 176116417, 176126417, 176136417, 176146417, 176156417, 176166417, 176176417, 176186417, 176196417, 176206417, 176216417, 176226417, 176236417, 176246417, 176256417, 176266417, 176276417, 176286417, 176296417, 176306417, 176316417, 176326417, 176336417, 176346417, 176356417, 176366417, 176376417, 176386417, 176396417, 176406417, 176416417, 176426417, 176436417, 176446417, 176456417, 176466417, 176476417, 176486417, 176496417, 176506417, 176516417, 176526417, 176536417, 176546417, 176556417, 176566417, 176576417, 176586417, 176596417, 176606417, 176616417, 176626417, 176636417, 176646417, 176656417, 176666417, 176676417, 176686417, 176696417, 176706417, 176716417, 176726417, 176736417, 176746417, 176756417, 176766417, 176776417, 176786417, 176796417, 176806417, 176816417, 176826417, 176836417, 176846417, 176856417, 176866417, 176876417, 176886417, 176896417, 176906417, 176916417, 176926417, 176936417, 176946417, 176956417, 176966417, 176976417, 176986417, 176996417, 177006417, 177016417, 177026417]</msg>
<status status="PASS" starttime="20201110 08:36:16.565" endtime="20201110 08:36:16.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.560" endtime="20201110 08:36:16.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.574" endtime="20201110 08:36:16.865"></status>
</kw>
<msg timestamp="20201110 08:36:16.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018944875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029005556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.572" endtime="20201110 08:36:16.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018944875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029005556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.869" endtime="20201110 08:36:16.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.876" endtime="20201110 08:36:16.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.569" endtime="20201110 08:36:16.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.568" endtime="20201110 08:36:16.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.903" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:16.880" endtime="20201110 08:36:16.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.907" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:16.906" endtime="20201110 08:36:16.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.909" level="INFO">VALUE: 0.018944875</msg>
<status status="PASS" starttime="20201110 08:36:16.908" endtime="20201110 08:36:16.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.904" endtime="20201110 08:36:16.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.915" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:16.914" endtime="20201110 08:36:16.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.917" level="INFO">VALUE: [0.029005556, 0.0390055, 0.049006069, 0.059006972, 0.069007542, 0.079008431, 0.089009014, 0.099009903, 0.109010486, 0.119011375, 0.129011958, 0.139012861, 0.149013431, 0.159014333, 0.169014917, 0.179015792, 0.189016389, 0.199017264, 0.209017819, 0.219018708, 0.229019292, 0.239020167, 0.249020764, 0.259021639, 0.269022208, 0.279023097, 0.289023667, 0.299024556, 0.309025139, 0.319026042, 0.329026597, 0.339027486, 0.349028111, 0.359028986, 0.369029528, 0.379030472, 0.389031, 0.399031889, 0.409032458, 0.419033333, 0.429033917, 0.439034806, 0.449035375, 0.459036278, 0.469036861, 0.479037764, 0.489038306, 0.499039208, 0.509039792, 0.519040653, 0.529041236, 0.539042139, 0.549042708, 0.559043597, 0.569044181, 0.579045056, 0.589045653, 0.599046514, 0.609047097, 0.619047986, 0.629048569, 0.639049444, 0.649050028, 0.659050917, 0.669051542, 0.679052389, 0.689052958, 0.699053889, 0.709054417, 0.719055319, 0.729055903, 0.739056806, 0.749057375, 0.759058236, 0.769058819, 0.779059708, 0.789060292, 0.799061167, 0.80906175, 0.819062639, 0.829063208, 0.839064111, 0.849064708, 0.859065583, 0.869066153, 0.879067028, 0.889067681, 0.899068514, 0.909069069, 0.919069958, 0.929070556, 0.939071444, 0.949072014, 0.959072903, 0.969073486, 0.979074361, 0.989074944, 0.999075819, 1.009076403, 1.019077292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:16.916" endtime="20201110 08:36:16.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.911" endtime="20201110 08:36:16.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.921" endtime="20201110 08:36:16.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.924" endtime="20201110 08:36:16.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.922" endtime="20201110 08:36:16.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.919" endtime="20201110 08:36:16.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.384" endtime="20201110 08:36:16.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.221" endtime="20201110 08:36:16.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.220" endtime="20201110 08:36:16.945"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:16.948" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.956" endtime="20201110 08:36:19.069"></status>
</kw>
<msg timestamp="20201110 08:36:19.070" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178590552, 'start-iter': 1, 'wakeups': [178600620, 178610619, 178620...</msg>
<status status="PASS" starttime="20201110 08:36:16.954" endtime="20201110 08:36:19.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178590552, 'start-iter': 1, 'wakeups': [178600620, 178610619, 178620...</msg>
<status status="PASS" starttime="20201110 08:36:19.073" endtime="20201110 08:36:19.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.079" endtime="20201110 08:36:19.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.952" endtime="20201110 08:36:19.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.950" endtime="20201110 08:36:19.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.090" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 178590552, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [178600620, 178610619, 178620619, 178630617, 178640619, 178650617, 178660617, 178670619, 178680619, 17...</msg>
<status status="PASS" starttime="20201110 08:36:19.086" endtime="20201110 08:36:19.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.098" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:19.096" endtime="20201110 08:36:19.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.103" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:19.101" endtime="20201110 08:36:19.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.091" endtime="20201110 08:36:19.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.113" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:19.111" endtime="20201110 08:36:19.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.117" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:19.116" endtime="20201110 08:36:19.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.106" endtime="20201110 08:36:19.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.122" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:19.121" endtime="20201110 08:36:19.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.124" level="INFO">VALUE: 178590552</msg>
<status status="PASS" starttime="20201110 08:36:19.123" endtime="20201110 08:36:19.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.118" endtime="20201110 08:36:19.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.129" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:19.128" endtime="20201110 08:36:19.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.132" levelmsg>
<status status="PASS" starttime="20201110 08:36:19.130" endtime="20201110 08:36:19.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.125" endtime="20201110 08:36:19.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.139" endtime="20201110 08:36:19.429"></status>
</kw>
<msg timestamp="20201110 08:36:19.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032283986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.137" endtime="20201110 08:36:19.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032283986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.433" endtime="20201110 08:36:19.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.441" endtime="20201110 08:36:19.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.135" endtime="20201110 08:36:19.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.133" endtime="20201110 08:36:19.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.467" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:19.444" endtime="20201110 08:36:19.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.472" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:19.471" endtime="20201110 08:36:19.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.474" level="INFO">VALUE: 0.022214583</msg>
<status status="PASS" starttime="20201110 08:36:19.473" endtime="20201110 08:36:19.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.468" endtime="20201110 08:36:19.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.480" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:19.479" endtime="20201110 08:36:19.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.482" level="INFO">VALUE: [0.032283986, 0.042283903, 0.052284569, 0.062283667, 0.072286042, 0.082285125, 0.092285792, 0.102288319, 0.112288986, 0.122288069, 0.132290458, 0.142289556, 0.152290222, 0.16229275, 0.172293403, 0.1822925, 0.192294889, 0.202293986, 0.212294667, 0.222297194, 0.232297833, 0.242296917, 0.252299292, 0.262298389, 0.272299042, 0.282301583, 0.292302306, 0.302301389, 0.312303722, 0.322302806, 0.3323035, 0.342306028, 0.352306667, 0.362305764, 0.372308194, 0.382307236, 0.392307903, 0.402310431, 0.412311125, 0.422310181, 0.432312556, 0.442311653, 0.452312306, 0.462314833, 0.472315486, 0.482314583, 0.492316944, 0.502316028, 0.512316681, 0.522319222, 0.532319875, 0.542318958, 0.552321333, 0.562320417, 0.572321069, 0.582323597, 0.592324264, 0.602323347, 0.612325778, 0.622324861, 0.632325458, 0.642327986, 0.652328639, 0.662327736, 0.672330125, 0.682329194, 0.692329847, 0.702332375, 0.712333042, 0.722332125, 0.732334542, 0.742333583, 0.75233425, 0.762336764, 0.772337417, 0.782336514, 0.792338889, 0.802337986, 0.812338625, 0.822341222, 0.832341833, 0.842340931, 0.852343292, 0.862342403, 0.872343014, 0.882345583, 0.892346208, 0.902345292, 0.912347681, 0.922346792, 0.932347417, 0.942349944, 0.952350597, 0.962349708, 0.972352069, 0.982351153, 0.992351806, 1.002354347, 1.012354986, 1.022354097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:19.481" endtime="20201110 08:36:19.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.476" endtime="20201110 08:36:19.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.485" endtime="20201110 08:36:19.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.488" endtime="20201110 08:36:19.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.487" endtime="20201110 08:36:19.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.483" endtime="20201110 08:36:19.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.948" endtime="20201110 08:36:19.513"></status>
</kw>
<msg timestamp="20201110 08:36:19.513" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.521" endtime="20201110 08:36:21.634"></status>
</kw>
<msg timestamp="20201110 08:36:21.636" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 181156032, 'start-iter': 1, 'wakeups': [181166101, 181176099, 181186...</msg>
<status status="PASS" starttime="20201110 08:36:19.520" endtime="20201110 08:36:21.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.642" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 181156032, 'start-iter': 1, 'wakeups': [181166101, 181176099, 181186...</msg>
<status status="PASS" starttime="20201110 08:36:21.638" endtime="20201110 08:36:21.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.644" endtime="20201110 08:36:21.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.517" endtime="20201110 08:36:21.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.515" endtime="20201110 08:36:21.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.655" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 181156032, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [181166101, 181176099, 181186099, 181196097, 181206099, 181216097, 181226097, 181236099, 181246099, 18...</msg>
<status status="PASS" starttime="20201110 08:36:21.651" endtime="20201110 08:36:21.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.663" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:21.661" endtime="20201110 08:36:21.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.668" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:21.666" endtime="20201110 08:36:21.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.657" endtime="20201110 08:36:21.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.678" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:21.676" endtime="20201110 08:36:21.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.683" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:21.681" endtime="20201110 08:36:21.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.671" endtime="20201110 08:36:21.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.693" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:21.691" endtime="20201110 08:36:21.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.697" level="INFO">VALUE: 181156032</msg>
<status status="PASS" starttime="20201110 08:36:21.695" endtime="20201110 08:36:21.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.686" endtime="20201110 08:36:21.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.709" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:21.707" endtime="20201110 08:36:21.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.714" levelmsg>
<status status="PASS" starttime="20201110 08:36:21.712" endtime="20201110 08:36:21.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.700" endtime="20201110 08:36:21.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.730" endtime="20201110 08:36:22.026"></status>
</kw>
<msg timestamp="20201110 08:36:22.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.727" endtime="20201110 08:36:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.030" endtime="20201110 08:36:22.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.038" endtime="20201110 08:36:22.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.721" endtime="20201110 08:36:22.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.718" endtime="20201110 08:36:22.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.064" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:22.041" endtime="20201110 08:36:22.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.069" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:22.068" endtime="20201110 08:36:22.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.071" level="INFO">VALUE: 0.023262486</msg>
<status status="PASS" starttime="20201110 08:36:22.070" endtime="20201110 08:36:22.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.065" endtime="20201110 08:36:22.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.076" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:22.075" endtime="20201110 08:36:22.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.078" level="INFO">VALUE: [0.033332208, 0.043331111, 0.053331778, 0.063330875, 0.07333325, 0.083332333, 0.093333014, 0.103335528, 0.113336208, 0.123335278, 0.133337667, 0.14333675, 0.153337444, 0.163339944, 0.173340611, 0.183339708, 0.193342097, 0.203341167, 0.213341847, 0.223344361, 0.233345028, 0.243344153, 0.253346514, 0.263345611, 0.27334625, 0.283348847, 0.293349444, 0.303348542, 0.313350931, 0.323350014, 0.333350681, 0.343353208, 0.353353958, 0.363352986, 0.373355347, 0.383354444, 0.393355097, 0.403357653, 0.413358306, 0.423357389, 0.433359764, 0.443358875, 0.453359514, 0.463362056, 0.473362722, 0.483361806, 0.493364208, 0.503363278, 0.513363917, 0.523366444, 0.533367097, 0.543366264, 0.553368569, 0.563367653, 0.573368319, 0.583370875, 0.593371486, 0.603370569, 0.613372944, 0.623372028, 0.633372708, 0.643375222, 0.653375875, 0.663374958, 0.673377333, 0.683376417, 0.693377111, 0.703379625, 0.713380278, 0.723379375, 0.733381722, 0.743380847, 0.753381458, 0.763384014, 0.773384681, 0.78338375, 0.793386139, 0.803385208, 0.813385861, 0.823388403, 0.833389056, 0.843388125, 0.853390514, 0.863389597, 0.873390264, 0.883392806, 0.893393431, 0.903392528, 0.913394889, 0.923393986, 0.933394681, 0.943397181, 0.953397819, 0.963396917, 0.973399292, 0.983398389, 0.993399083, 1.003401556, 1.013402222, 1.023401306] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:22.077" endtime="20201110 08:36:22.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.072" endtime="20201110 08:36:22.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.081" endtime="20201110 08:36:22.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.086" endtime="20201110 08:36:22.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.084" endtime="20201110 08:36:22.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.080" endtime="20201110 08:36:22.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.514" endtime="20201110 08:36:22.106"></status>
</kw>
<msg timestamp="20201110 08:36:22.107" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.114" endtime="20201110 08:36:24.228"></status>
</kw>
<msg timestamp="20201110 08:36:24.229" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 183749766, 'start-iter': 1, 'wakeups': [183759835, 183769833, 183779...</msg>
<status status="PASS" starttime="20201110 08:36:22.113" endtime="20201110 08:36:24.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 183749766, 'start-iter': 1, 'wakeups': [183759835, 183769833, 183779...</msg>
<status status="PASS" starttime="20201110 08:36:24.231" endtime="20201110 08:36:24.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.238" endtime="20201110 08:36:24.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.110" endtime="20201110 08:36:24.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.108" endtime="20201110 08:36:24.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.249" level="INFO">${RESULT} = {'timer-count': 10, 'start-time': 183749766, 'timer-interval': 10000, 'start-iter': 1, 'wakeups': [183759835, 183769833, 183779833, 183789831, 183799833, 183809831, 183819831, 183829833, 183839833, 18...</msg>
<status status="PASS" starttime="20201110 08:36:24.245" endtime="20201110 08:36:24.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.257" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:24.255" endtime="20201110 08:36:24.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:24.260" endtime="20201110 08:36:24.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.250" endtime="20201110 08:36:24.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.272" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:24.270" endtime="20201110 08:36:24.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.276" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:24.274" endtime="20201110 08:36:24.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.264" endtime="20201110 08:36:24.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.286" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:24.284" endtime="20201110 08:36:24.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.291" level="INFO">VALUE: 183749766</msg>
<status status="PASS" starttime="20201110 08:36:24.289" endtime="20201110 08:36:24.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.279" endtime="20201110 08:36:24.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.301" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:24.299" endtime="20201110 08:36:24.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.305" levelmsg>
<status status="PASS" starttime="20201110 08:36:24.303" endtime="20201110 08:36:24.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.294" endtime="20201110 08:36:24.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.324" endtime="20201110 08:36:24.617"></status>
</kw>
<msg timestamp="20201110 08:36:24.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029734764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.318" endtime="20201110 08:36:24.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029734764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.621" endtime="20201110 08:36:24.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.629" endtime="20201110 08:36:24.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.312" endtime="20201110 08:36:24.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.309" endtime="20201110 08:36:24.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.655" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201110 08:36:24.632" endtime="20201110 08:36:24.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.660" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:24.659" endtime="20201110 08:36:24.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.662" level="INFO">VALUE: 0.019665083</msg>
<status status="PASS" starttime="20201110 08:36:24.661" endtime="20201110 08:36:24.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.656" endtime="20201110 08:36:24.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.667" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:24.666" endtime="20201110 08:36:24.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.669" level="INFO">VALUE: [0.029734764, 0.039733708, 0.049734361, 0.059733486, 0.069735833, 0.079734931, 0.089735569, 0.099738111, 0.109738764, 0.119737861, 0.12974025, 0.139739319, 0.149739986, 0.159742528, 0.16974325, 0.179742292, 0.189744653, 0.199743764, 0.209744403, 0.219746972, 0.229747597, 0.239746694, 0.249749069, 0.259748167, 0.269748847, 0.279751361, 0.289752014, 0.299751111, 0.309753486, 0.319752583, 0.32975325, 0.339755847, 0.349756431, 0.359755528, 0.369757917, 0.379757, 0.389757653, 0.399760194, 0.409760875, 0.419759958, 0.429762333, 0.439761431, 0.449762069, 0.459764611, 0.469765264, 0.479764347, 0.489766736, 0.499765819, 0.509766458, 0.519768986, 0.529769639, 0.539768736, 0.549771153, 0.559770194, 0.569770889, 0.579773431, 0.589774028, 0.599773111, 0.609775486, 0.619774583, 0.629775222, 0.63977775, 0.649778403, 0.6597775, 0.669779861, 0.679778972, 0.689779625, 0.699782167, 0.709782792, 0.719781875, 0.729784306, 0.739783361, 0.749784014, 0.759786528, 0.769787181, 0.779786264, 0.789788639, 0.799787736, 0.809788444, 0.819790944, 0.829791583, 0.839790653, 0.849793028, 0.859792125, 0.869792778, 0.879795306, 0.889795958, 0.899795042, 0.909797417, 0.919796528, 0.929797167, 0.939799694, 0.949800361, 0.959799431, 0.969801819, 0.979800903, 0.989801597, 0.999804083, 1.009804736, 1.019803833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:24.668" endtime="20201110 08:36:24.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.663" endtime="20201110 08:36:24.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.672" endtime="20201110 08:36:24.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.676" endtime="20201110 08:36:24.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.674" endtime="20201110 08:36:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.670" endtime="20201110 08:36:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.107" endtime="20201110 08:36:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.946" endtime="20201110 08:36:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.945" endtime="20201110 08:36:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.227" endtime="20201110 08:36:24.697"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:35:07.117" endtime="20201110 08:36:24.697" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:35:05.675" endtime="20201110 08:36:24.700"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:33:21.146" endtime="20201110 08:36:24.716"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
