<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:36:42.680" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.250" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:43.258" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:44.414" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:43.249" endtime="20201110 08:36:44.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.421" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:44.418" endtime="20201110 08:36:44.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.247" endtime="20201110 08:36:44.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.427" endtime="20201110 08:36:44.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.424" endtime="20201110 08:36:44.633"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.645" endtime="20201110 08:36:44.659"></status>
</kw>
<msg timestamp="20201110 08:36:44.660" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.644" endtime="20201110 08:36:44.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.663" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.661" endtime="20201110 08:36:44.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.667" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:44.664" endtime="20201110 08:36:44.667"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:44.641" endtime="20201110 08:36:44.668"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:44.639" endtime="20201110 08:36:44.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.638" endtime="20201110 08:36:44.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:44.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:44.674" endtime="20201110 08:36:44.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.670" endtime="20201110 08:36:44.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.637" endtime="20201110 08:36:44.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.636" endtime="20201110 08:36:44.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.676" endtime="20201110 08:36:44.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.635" endtime="20201110 08:36:44.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.679" endtime="20201110 08:36:44.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.633" endtime="20201110 08:36:44.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.246" endtime="20201110 08:36:44.681"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.687" endtime="20201110 08:36:44.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.686" endtime="20201110 08:36:44.707"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.721" endtime="20201110 08:36:44.735"></status>
</kw>
<msg timestamp="20201110 08:36:44.735" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.719" endtime="20201110 08:36:44.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.737" endtime="20201110 08:36:44.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.742" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:44.740" endtime="20201110 08:36:44.742"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:44.717" endtime="20201110 08:36:44.743"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:44.714" endtime="20201110 08:36:44.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.712" endtime="20201110 08:36:44.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:44.747" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:44.747" endtime="20201110 08:36:44.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.745" endtime="20201110 08:36:44.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.712" endtime="20201110 08:36:44.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.711" endtime="20201110 08:36:44.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.749" endtime="20201110 08:36:44.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.710" endtime="20201110 08:36:44.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.708" endtime="20201110 08:36:44.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.685" endtime="20201110 08:36:44.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.760" endtime="20201110 08:36:44.771"></status>
</kw>
<msg timestamp="20201110 08:36:44.771" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.759" endtime="20201110 08:36:44.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.774" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.772" endtime="20201110 08:36:44.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.775" endtime="20201110 08:36:44.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.755" endtime="20201110 08:36:44.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.753" endtime="20201110 08:36:44.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.782" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:36:44.781" endtime="20201110 08:36:44.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.784" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:36:44.783" endtime="20201110 08:36:44.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.778" endtime="20201110 08:36:44.784"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:44.682" endtime="20201110 08:36:44.785" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:42.799" endtime="20201110 08:36:44.787"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.848" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:44.857" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:46.074" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:44.847" endtime="20201110 08:36:46.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.081" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:46.078" endtime="20201110 08:36:46.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.846" endtime="20201110 08:36:46.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.087" endtime="20201110 08:36:46.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.084" endtime="20201110 08:36:46.321"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.333" endtime="20201110 08:36:46.346"></status>
</kw>
<msg timestamp="20201110 08:36:46.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.331" endtime="20201110 08:36:46.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.349" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.348" endtime="20201110 08:36:46.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:46.356" endtime="20201110 08:36:46.359"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:46.329" endtime="20201110 08:36:46.359"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:46.327" endtime="20201110 08:36:46.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.326" endtime="20201110 08:36:46.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:46.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:46.364" endtime="20201110 08:36:46.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.361" endtime="20201110 08:36:46.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.325" endtime="20201110 08:36:46.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.324" endtime="20201110 08:36:46.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.366" endtime="20201110 08:36:46.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.323" endtime="20201110 08:36:46.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.369" endtime="20201110 08:36:46.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.321" endtime="20201110 08:36:46.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.844" endtime="20201110 08:36:46.371"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.378" endtime="20201110 08:36:46.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.376" endtime="20201110 08:36:46.398"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.411" endtime="20201110 08:36:46.424"></status>
</kw>
<msg timestamp="20201110 08:36:46.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.409" endtime="20201110 08:36:46.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.426" endtime="20201110 08:36:46.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:46.429" endtime="20201110 08:36:46.431"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:46.407" endtime="20201110 08:36:46.432"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:46.404" endtime="20201110 08:36:46.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.403" endtime="20201110 08:36:46.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:46.437" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:46.436" endtime="20201110 08:36:46.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.434" endtime="20201110 08:36:46.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.402" endtime="20201110 08:36:46.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.402" endtime="20201110 08:36:46.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.438" endtime="20201110 08:36:46.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.400" endtime="20201110 08:36:46.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.399" endtime="20201110 08:36:46.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.374" endtime="20201110 08:36:46.441"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:46.443" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.451" endtime="20201110 08:36:46.461"></status>
</kw>
<msg timestamp="20201110 08:36:46.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.449" endtime="20201110 08:36:46.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.463" endtime="20201110 08:36:46.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.465" endtime="20201110 08:36:46.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.446" endtime="20201110 08:36:46.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.445" endtime="20201110 08:36:46.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.474" endtime="20201110 08:36:46.748"></status>
</kw>
<msg timestamp="20201110 08:36:46.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063418153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063420097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.473" endtime="20201110 08:36:46.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063418153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063420097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.751" endtime="20201110 08:36:46.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.757" endtime="20201110 08:36:46.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.470" endtime="20201110 08:36:46.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.469" endtime="20201110 08:36:46.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.763" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:46.762" endtime="20201110 08:36:46.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.768" level="INFO">VALUE: [{'time': 0.063418153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063420097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999898427e-06, 'source_diff': 1.9439999999898427e-06}, {'time': 0.063421694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.063423264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999924108e-06, 'source_diff': 1.5699999999924108e-06}, {'time': 0.063424806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000071488e-06, 'source_diff': 1.5420000000071488e-06}, {'time': 0.06342625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.063428139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.063429903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.06343125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.063433167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9170000000040543e-06, 'source_diff': 1.9170000000040543e-06}, {'time': 0.063434861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.063436597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.063438472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.063439944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.0634415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.063443403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.063445222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.063446611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3890000000044145e-06, 'source_diff': 1.3890000000044145e-06}, {'time': 0.063448097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999949913e-06, 'source_diff': 1.4859999999949913e-06}, {'time': 0.063450014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9170000000040543e-06, 'source_diff': 1.9170000000040543e-06}, {'time': 0.063451583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.569000000006815e-06, 'source_diff': 1.569000000006815e-06}, {'time': 0.063453278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.063454639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999913969e-06, 'source_diff': 1.3609999999913969e-06}, {'time': 0.063456375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.063458083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.063459472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3890000000044145e-06, 'source_diff': 1.3890000000044145e-06}, {'time': 0.063460861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999905367e-06, 'source_diff': 1.3889999999905367e-06}, {'time': 0.063462417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.063464042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.063465972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.063467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.063469167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4310000000100631e-06, 'source_diff': 1.4310000000100631e-06}, {'time': 0.063471014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.063472375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999913969e-06, 'source_diff': 1.3609999999913969e-06}, {'time': 0.06347425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.063476042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.063477917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.063479444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.063481278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8340000000061085e-06, 'source_diff': 1.8340000000061085e-06}, {'time': 0.063482722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.063484514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.063486083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5689999999929372e-06, 'source_diff': 1.5689999999929372e-06}, {'time': 0.063487611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.063489319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.063491222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.063493056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8340000000061085e-06, 'source_diff': 1.8340000000061085e-06}, {'time': 0.06349475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.063496319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5689999999929372e-06, 'source_diff': 1.5689999999929372e-06}, {'time': 0.063497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5980000000054284e-06, 'source_diff': 1.5980000000054284e-06}, {'time': 0.063499542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:46.764" endtime="20201110 08:36:46.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.760" endtime="20201110 08:36:46.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:46.783" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:46.770" endtime="20201110 08:36:46.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.787" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:46.786" endtime="20201110 08:36:46.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.790" level="INFO">VALUE: {'sourcediff': [0, 1.9439999999898427e-06, 1.5970000000059548e-06, 1.5699999999924108e-06, 1.5420000000071488e-06, 1.4440000000032205e-06, 1.8889999999910367e-06, 1.76400000000132e-06, 1.3469999999987659e-06, 1.9170000000040543e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.8749999999984057e-06, 1.4720000000023603e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.3890000000044145e-06, 1.4859999999949913e-06, 1.9170000000040543e-06, 1.569000000006815e-06, 1.6949999999960053e-06, 1.3609999999913969e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.3890000000044145e-06, 1.3889999999905367e-06, 1.5559999999997798e-06, 1.6250000000050946e-06, 1.9299999999972117e-06, 1.76400000000132e-06, 1.4310000000100631e-06, 1.846999999999266e-06, 1.3609999999913969e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.8749999999984057e-06, 1.5270000000011663e-06, 1.8340000000061085e-06, 1.4440000000032205e-06, 1.7920000000004599e-06, 1.5689999999929372e-06, 1.52800000000064e-06, 1.7080000000030404e-06, 1.9029999999975455e-06, 1.8340000000061085e-06, 1.6939999999965316e-06, 1.5689999999929372e-06, 1.5980000000054284e-06, 1.6250000000050946e-06], 'eventsource_diff': [0, 1.9439999999898427e-06, 1.5970000000059548e-06, 1.5699999999924108e-06, 1.5420000000071488e-06, 1.4440000000032205e-06, 1.8889999999910367e-06, 1.76400000000132e-06, 1.3469999999987659e-06, 1.9170000000040543e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.8749999999984057e-06, 1.4720000000023603e-06, 1.5559999999997798e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.3890000000044145e-06, 1.4859999999949913e-06, 1.9170000000040543e-06, 1.569000000006815e-06, 1.6949999999960053e-06, 1.3609999999913969e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.3890000000044145e-06, 1.3889999999905367e-06, 1.5559999999997798e-06, 1.6250000000050946e-06, 1.9299999999972117e-06, 1.76400000000132e-06, 1.4310000000100631e-06, 1.846999999999266e-06, 1.3609999999913969e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.8749999999984057e-06, 1.5270000000011663e-06, 1.8340000000061085e-06, 1.4440000000032205e-06, 1.7920000000004599e-06, 1.5689999999929372e-06, 1.52800000000064e-06, 1.7080000000030404e-06, 1.9029999999975455e-06, 1.8340000000061085e-06, 1.6939999999965316e-06, 1.5689999999929372e-06, 1.5980000000054284e-06, 1.6250000000050946e-06], 'time': [0.063418153, 0.063420097, 0.063421694, 0.063423264, 0.063424806, 0.06342625, 0.063428139, 0.063429903, 0.06343125, 0.063433167, 0.063434861, 0.063436597, 0.063438472, 0.063439944, 0.0634415, 0.063443403, 0.063445222, 0.063446611, 0.063448097, 0.063450014, 0.063451583, 0.063453278, 0.063454639, 0.063456375, 0.063458083, 0.063459472, 0.063460861, 0.063462417, 0.063464042, 0.063465972, 0.063467736, 0.063469167, 0.063471014, 0.063472375, 0.06347425, 0.063476042, 0.063477917, 0.063479444, 0.063481278, 0.063482722, 0.063484514, 0.063486083, 0.063487611, 0.063489319, 0.063491222, 0.063493056, 0.06349475, 0.063496319, 0.063497917, 0.063499542]}</msg>
<status status="PASS" starttime="20201110 08:36:46.788" endtime="20201110 08:36:46.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.784" endtime="20201110 08:36:46.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.795" level="INFO">${RESULT} = [{'time': 0.063420097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999898427e-06, 'source_diff': 1.9439999999898427e-06}, {'time': 0.063423264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:46.792" endtime="20201110 08:36:46.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:46.805" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:46.796" endtime="20201110 08:36:46.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.809" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:46.808" endtime="20201110 08:36:46.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.811" level="INFO">VALUE: [1.9439999999898427e-06, 1.5699999999924108e-06, 1.4440000000032205e-06, 1.76400000000132e-06, 1.9170000000040543e-06, 1.7360000000021802e-06, 1.4720000000023603e-06, 1.9029999999975455e-06, 1.3890000000044145e-06, 1.9170000000040543e-06, 1.6949999999960053e-06, 1.7360000000021802e-06, 1.3890000000044145e-06, 1.5559999999997798e-06, 1.9299999999972117e-06, 1.4310000000100631e-06, 1.3609999999913969e-06, 1.7920000000004599e-06, 1.5270000000011663e-06, 1.4440000000032205e-06, 1.5689999999929372e-06, 1.7080000000030404e-06, 1.8340000000061085e-06, 1.5689999999929372e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201110 08:36:46.810" endtime="20201110 08:36:46.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.806" endtime="20201110 08:36:46.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.814" endtime="20201110 08:36:46.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.818" endtime="20201110 08:36:46.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.816" endtime="20201110 08:36:46.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.813" endtime="20201110 08:36:46.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.443" endtime="20201110 08:36:46.841"></status>
</kw>
<msg timestamp="20201110 08:36:46.842" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.862" endtime="20201110 08:36:46.875"></status>
</kw>
<msg timestamp="20201110 08:36:46.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.858" endtime="20201110 08:36:46.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.878" endtime="20201110 08:36:46.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.884" endtime="20201110 08:36:46.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.851" endtime="20201110 08:36:46.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.846" endtime="20201110 08:36:46.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.904" endtime="20201110 08:36:47.179"></status>
</kw>
<msg timestamp="20201110 08:36:47.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034791889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034793806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.900" endtime="20201110 08:36:47.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034791889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034793806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.182" endtime="20201110 08:36:47.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.188" endtime="20201110 08:36:47.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.894" endtime="20201110 08:36:47.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.891" endtime="20201110 08:36:47.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.195" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:47.194" endtime="20201110 08:36:47.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.200" level="INFO">VALUE: [{'time': 0.034791889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034793806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.034795667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000057747e-06, 'source_diff': 1.8610000000057747e-06}, {'time': 0.034797028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.034798833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.034800306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.034801653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.034803264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.034804625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.034806167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.034808153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.034809514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.034811236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.034813014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.034814833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.034816639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.034818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4439999999962816e-06, 'source_diff': 1.4439999999962816e-06}, {'time': 0.034819875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.034821403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.034822875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.034824556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999964353e-06, 'source_diff': 1.6809999999964353e-06}, {'time': 0.034826361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.034827736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.034829583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.034830944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3610000000052747e-06, 'source_diff': 1.3610000000052747e-06}, {'time': 0.034832861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.034834653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.034836014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.034837417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4030000000039844e-06, 'source_diff': 1.4030000000039844e-06}, {'time': 0.034839403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9859999999954914e-06, 'source_diff': 1.9859999999954914e-06}, {'time': 0.034840694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2910000000004862e-06, 'source_diff': 1.2910000000004862e-06}, {'time': 0.034842222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.034844069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.034845736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000038043e-06, 'source_diff': 1.6670000000038043e-06}, {'time': 0.034847056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3199999999990997e-06, 'source_diff': 1.3199999999990997e-06}, {'time': 0.034849208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.151999999998322e-06, 'source_diff': 2.151999999998322e-06}, {'time': 0.034850625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000035543e-06, 'source_diff': 1.4170000000035543e-06}, {'time': 0.034852375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.034854306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9310000000036243e-06, 'source_diff': 1.9310000000036243e-06}, {'time': 0.034856181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.034857903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.0348595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.034860889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.034862611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.034864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999956714e-06, 'source_diff': 1.7219999999956714e-06}, {'time': 0.034866097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.0348675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4030000000039844e-06, 'source_diff': 1.4030000000039844e-06}, {'time': 0.034869403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.034870792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.034872681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8890000000049145e-06, 'source_diff': 1.8890000000049145e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:47.196" endtime="20201110 08:36:47.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.191" endtime="20201110 08:36:47.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:47.215" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:47.202" endtime="20201110 08:36:47.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.219" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:47.218" endtime="20201110 08:36:47.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.223" level="INFO">VALUE: {'sourcediff': [0, 1.9169999999971155e-06, 1.8610000000057747e-06, 1.3609999999983358e-06, 1.8050000000005562e-06, 1.473000000001834e-06, 1.3469999999987659e-06, 1.6109999999985858e-06, 1.3609999999983358e-06, 1.5420000000002099e-06, 1.9860000000024303e-06, 1.3609999999983358e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.4439999999962816e-06, 1.7920000000004599e-06, 1.52800000000064e-06, 1.4720000000023603e-06, 1.6809999999964353e-06, 1.8050000000005562e-06, 1.3749999999979057e-06, 1.846999999999266e-06, 1.3610000000052747e-06, 1.9169999999971155e-06, 1.7920000000004599e-06, 1.3609999999983358e-06, 1.4030000000039844e-06, 1.9859999999954914e-06, 1.2910000000004862e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.6670000000038043e-06, 1.3199999999990997e-06, 2.151999999998322e-06, 1.4170000000035543e-06, 1.7499999999948113e-06, 1.9310000000036243e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5969999999990159e-06, 1.3889999999974756e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.4030000000039844e-06, 1.9029999999975455e-06, 1.3889999999974756e-06, 1.8890000000049145e-06], 'eventsource_diff': [0, 1.9169999999971155e-06, 1.8610000000057747e-06, 1.3609999999983358e-06, 1.8050000000005562e-06, 1.473000000001834e-06, 1.3469999999987659e-06, 1.6109999999985858e-06, 1.3609999999983358e-06, 1.5420000000002099e-06, 1.9860000000024303e-06, 1.3609999999983358e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.4439999999962816e-06, 1.7920000000004599e-06, 1.52800000000064e-06, 1.4720000000023603e-06, 1.6809999999964353e-06, 1.8050000000005562e-06, 1.3749999999979057e-06, 1.846999999999266e-06, 1.3610000000052747e-06, 1.9169999999971155e-06, 1.7920000000004599e-06, 1.3609999999983358e-06, 1.4030000000039844e-06, 1.9859999999954914e-06, 1.2910000000004862e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.6670000000038043e-06, 1.3199999999990997e-06, 2.151999999998322e-06, 1.4170000000035543e-06, 1.7499999999948113e-06, 1.9310000000036243e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.5969999999990159e-06, 1.3889999999974756e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.76400000000132e-06, 1.4030000000039844e-06, 1.9029999999975455e-06, 1.3889999999974756e-06, 1.8890000000049145e-06], 'time': [0.034791889, 0.034793806, 0.034795667, 0.034797028, 0.034798833, 0.034800306, 0.034801653, 0.034803264, 0.034804625, 0.034806167, 0.034808153, 0.034809514, 0.034811236, 0.034813014, 0.034814833, 0.034816639, 0.034818083, 0.034819875, 0.034821403, 0.034822875, 0.034824556, 0.034826361, 0.034827736, 0.034829583, 0.034830944, 0.034832861, 0.034834653, 0.034836014, 0.034837417, 0.034839403, 0.034840694, 0.034842222, 0.034844069, 0.034845736, 0.034847056, 0.034849208, 0.034850625, 0.034852375, 0.034854306, 0.034856181, 0.034857903, 0.0348595, 0.034860889, 0.034862611, 0.034864333, 0.034866097, 0.0348675, 0.034869403, 0.034870792, 0.034872681]}</msg>
<status status="PASS" starttime="20201110 08:36:47.220" endtime="20201110 08:36:47.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.216" endtime="20201110 08:36:47.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.227" level="INFO">${RESULT} = [{'time': 0.034793806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.034797028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:47.224" endtime="20201110 08:36:47.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:47.236" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:47.228" endtime="20201110 08:36:47.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.241" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:47.240" endtime="20201110 08:36:47.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.243" level="INFO">VALUE: [1.9169999999971155e-06, 1.3609999999983358e-06, 1.473000000001834e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.3609999999983358e-06, 1.77800000000089e-06, 1.8060000000000298e-06, 1.7920000000004599e-06, 1.4720000000023603e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.3609999999983358e-06, 1.9859999999954914e-06, 1.52800000000064e-06, 1.6670000000038043e-06, 2.151999999998322e-06, 1.7499999999948113e-06, 1.8749999999984057e-06, 1.5969999999990159e-06, 1.7220000000026103e-06, 1.76400000000132e-06, 1.9029999999975455e-06, 1.8890000000049145e-06]</msg>
<status status="PASS" starttime="20201110 08:36:47.242" endtime="20201110 08:36:47.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.237" endtime="20201110 08:36:47.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.247" endtime="20201110 08:36:47.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.250" endtime="20201110 08:36:47.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.249" endtime="20201110 08:36:47.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.245" endtime="20201110 08:36:47.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.843" endtime="20201110 08:36:47.273"></status>
</kw>
<msg timestamp="20201110 08:36:47.273" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.285" endtime="20201110 08:36:47.296"></status>
</kw>
<msg timestamp="20201110 08:36:47.297" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.282" endtime="20201110 08:36:47.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.299" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.298" endtime="20201110 08:36:47.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.300" endtime="20201110 08:36:47.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.278" endtime="20201110 08:36:47.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.276" endtime="20201110 08:36:47.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.310" endtime="20201110 08:36:47.580"></status>
</kw>
<msg timestamp="20201110 08:36:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.308" endtime="20201110 08:36:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025103542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.583" endtime="20201110 08:36:47.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.589" endtime="20201110 08:36:47.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.305" endtime="20201110 08:36:47.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.304" endtime="20201110 08:36:47.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.596" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:47.594" endtime="20201110 08:36:47.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.600" level="INFO">VALUE: [{'time': 0.025103542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025105625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.025107292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.025108833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.025110528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.025112333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.025113861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.025115639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.025116986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.025119236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.025120694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.025122292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.025124139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.02512575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.025127222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.025129069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.025130486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.025132222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.025133639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.025135389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.025137153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.025138875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.025140514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.025142292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.025144111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.025146, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.025147667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.025149583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.025151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.025152861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.025154361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.025156208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.025157931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.02515925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.318999999999626e-06, 'source_diff': 1.318999999999626e-06}, {'time': 0.025160625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.025162125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.025163806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.025165722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.0251675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.025169125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.025170792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.0251725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.025174111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.025175972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.025177597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.025179056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.025180583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.025181958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.025183861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.025185486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:47.597" endtime="20201110 08:36:47.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.592" endtime="20201110 08:36:47.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:47.616" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:47.603" endtime="20201110 08:36:47.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.620" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:47.619" endtime="20201110 08:36:47.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.623" level="INFO">VALUE: {'sourcediff': [0, 2.082999999999946e-06, 1.6670000000003349e-06, 1.5410000000007362e-06, 1.6949999999994747e-06, 1.8050000000005562e-06, 1.52800000000064e-06, 1.7779999999974205e-06, 1.3470000000022353e-06, 2.2499999999987808e-06, 1.457999999999321e-06, 1.598000000001959e-06, 1.846999999999266e-06, 1.6109999999985858e-06, 1.4720000000023603e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.7359999999987108e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.6669999999968654e-06, 1.9160000000011113e-06, 1.51400000000107e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.846999999999266e-06, 1.723000000002084e-06, 1.318999999999626e-06, 1.3749999999979057e-06, 1.5000000000015001e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.7779999999974205e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6109999999985858e-06, 1.8610000000023053e-06, 1.6249999999981557e-06, 1.4589999999987946e-06, 1.5270000000011663e-06, 1.3750000000013751e-06, 1.9029999999975455e-06, 1.6250000000016251e-06], 'eventsource_diff': [0, 2.082999999999946e-06, 1.6670000000003349e-06, 1.5410000000007362e-06, 1.6949999999994747e-06, 1.8050000000005562e-06, 1.52800000000064e-06, 1.7779999999974205e-06, 1.3470000000022353e-06, 2.2499999999987808e-06, 1.457999999999321e-06, 1.598000000001959e-06, 1.846999999999266e-06, 1.6109999999985858e-06, 1.4720000000023603e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.7359999999987108e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.6669999999968654e-06, 1.9160000000011113e-06, 1.51400000000107e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.846999999999266e-06, 1.723000000002084e-06, 1.318999999999626e-06, 1.3749999999979057e-06, 1.5000000000015001e-06, 1.6809999999999048e-06, 1.9160000000011113e-06, 1.7779999999974205e-06, 1.6250000000016251e-06, 1.6670000000003349e-06, 1.707999999999571e-06, 1.6109999999985858e-06, 1.8610000000023053e-06, 1.6249999999981557e-06, 1.4589999999987946e-06, 1.5270000000011663e-06, 1.3750000000013751e-06, 1.9029999999975455e-06, 1.6250000000016251e-06], 'time': [0.025103542, 0.025105625, 0.025107292, 0.025108833, 0.025110528, 0.025112333, 0.025113861, 0.025115639, 0.025116986, 0.025119236, 0.025120694, 0.025122292, 0.025124139, 0.02512575, 0.025127222, 0.025129069, 0.025130486, 0.025132222, 0.025133639, 0.025135389, 0.025137153, 0.025138875, 0.025140514, 0.025142292, 0.025144111, 0.025146, 0.025147667, 0.025149583, 0.025151097, 0.025152861, 0.025154361, 0.025156208, 0.025157931, 0.02515925, 0.025160625, 0.025162125, 0.025163806, 0.025165722, 0.0251675, 0.025169125, 0.025170792, 0.0251725, 0.025174111, 0.025175972, 0.025177597, 0.025179056, 0.025180583, 0.025181958, 0.025183861, 0.025185486]}</msg>
<status status="PASS" starttime="20201110 08:36:47.621" endtime="20201110 08:36:47.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.617" endtime="20201110 08:36:47.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.628" level="INFO">${RESULT} = [{'time': 0.025105625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.025108833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:47.625" endtime="20201110 08:36:47.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:47.637" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:47.629" endtime="20201110 08:36:47.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.641" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:47.640" endtime="20201110 08:36:47.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.644" level="INFO">VALUE: [2.082999999999946e-06, 1.5410000000007362e-06, 1.8050000000005562e-06, 1.7779999999974205e-06, 2.2499999999987808e-06, 1.598000000001959e-06, 1.6109999999985858e-06, 1.846999999999266e-06, 1.7359999999987108e-06, 1.7500000000017502e-06, 1.7220000000026103e-06, 1.77800000000089e-06, 1.889000000001445e-06, 1.9160000000011113e-06, 1.7639999999978506e-06, 1.846999999999266e-06, 1.318999999999626e-06, 1.5000000000015001e-06, 1.9160000000011113e-06, 1.6250000000016251e-06, 1.707999999999571e-06, 1.8610000000023053e-06, 1.4589999999987946e-06, 1.3750000000013751e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201110 08:36:47.642" endtime="20201110 08:36:47.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.638" endtime="20201110 08:36:47.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.647" endtime="20201110 08:36:47.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.651" endtime="20201110 08:36:47.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.649" endtime="20201110 08:36:47.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.646" endtime="20201110 08:36:47.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.274" endtime="20201110 08:36:47.672"></status>
</kw>
<msg timestamp="20201110 08:36:47.672" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.684" endtime="20201110 08:36:47.695"></status>
</kw>
<msg timestamp="20201110 08:36:47.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.681" endtime="20201110 08:36:47.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.696" endtime="20201110 08:36:47.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.699" endtime="20201110 08:36:47.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.677" endtime="20201110 08:36:47.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.675" endtime="20201110 08:36:47.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.709" endtime="20201110 08:36:47.973"></status>
</kw>
<msg timestamp="20201110 08:36:47.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.707" endtime="20201110 08:36:47.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023915042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.976" endtime="20201110 08:36:47.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.982" endtime="20201110 08:36:47.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.704" endtime="20201110 08:36:47.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.702" endtime="20201110 08:36:47.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.989" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:47.987" endtime="20201110 08:36:47.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.992" level="INFO">VALUE: [{'time': 0.023915042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.023918306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.023920236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.023921722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.023923556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.023925444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.023927056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6119999999980594e-06, 'source_diff': 1.6119999999980594e-06}, {'time': 0.023928986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.023930458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.023932083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.0239335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.023935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.023937111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.023938583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.023940278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.023941694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.023943486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.023945417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.023947125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.023948569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.023950444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.023952167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.023954042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.023955847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.023957458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.023958847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.023960208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.023961875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.023963333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.023964847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.023966736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.023968458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.023969819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.023971278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.023972708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.023974542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.023976458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.023978042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.023979458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.023981236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.023982917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.023984708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.023986153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.02398775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.023989569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.023991028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.023992819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.023994486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.023995847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:47.990" endtime="20201110 08:36:47.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.985" endtime="20201110 08:36:48.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:48.015" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.001" endtime="20201110 08:36:48.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.019" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:48.018" endtime="20201110 08:36:48.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.022" level="INFO">VALUE: {'sourcediff': [0, 1.8050000000005562e-06, 1.4589999999987946e-06, 1.930000000000681e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.8880000000019714e-06, 1.6119999999980594e-06, 1.930000000000681e-06, 1.4720000000023603e-06, 1.6249999999981557e-06, 1.4170000000000849e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.4160000000006112e-06, 1.7920000000004599e-06, 1.931000000000155e-06, 1.707999999999571e-06, 1.443999999999751e-06, 1.8750000000018752e-06, 1.7229999999986145e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.6110000000020552e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.6670000000003349e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.8889999999979756e-06, 1.7220000000026103e-06, 1.3609999999983358e-06, 1.4589999999987946e-06, 1.4300000000001811e-06, 1.834000000002639e-06, 1.915999999997642e-06, 1.584000000002389e-06, 1.4159999999971418e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.4449999999992247e-06, 1.5969999999990159e-06, 1.819000000000126e-06, 1.459000000002264e-06, 1.7909999999975168e-06, 1.6670000000003349e-06, 1.3610000000018052e-06], 'eventsource_diff': [0, 1.8050000000005562e-06, 1.4589999999987946e-06, 1.930000000000681e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.8880000000019714e-06, 1.6119999999980594e-06, 1.930000000000681e-06, 1.4720000000023603e-06, 1.6249999999981557e-06, 1.4170000000000849e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.4160000000006112e-06, 1.7920000000004599e-06, 1.931000000000155e-06, 1.707999999999571e-06, 1.443999999999751e-06, 1.8750000000018752e-06, 1.7229999999986145e-06, 1.8749999999984057e-06, 1.8050000000005562e-06, 1.6110000000020552e-06, 1.3889999999974756e-06, 1.3610000000018052e-06, 1.6670000000003349e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.8889999999979756e-06, 1.7220000000026103e-06, 1.3609999999983358e-06, 1.4589999999987946e-06, 1.4300000000001811e-06, 1.834000000002639e-06, 1.915999999997642e-06, 1.584000000002389e-06, 1.4159999999971418e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.7910000000009862e-06, 1.4449999999992247e-06, 1.5969999999990159e-06, 1.819000000000126e-06, 1.459000000002264e-06, 1.7909999999975168e-06, 1.6670000000003349e-06, 1.3610000000018052e-06], 'time': [0.023915042, 0.023916847, 0.023918306, 0.023920236, 0.023921722, 0.023923556, 0.023925444, 0.023927056, 0.023928986, 0.023930458, 0.023932083, 0.0239335, 0.023935417, 0.023937111, 0.023938583, 0.023940278, 0.023941694, 0.023943486, 0.023945417, 0.023947125, 0.023948569, 0.023950444, 0.023952167, 0.023954042, 0.023955847, 0.023957458, 0.023958847, 0.023960208, 0.023961875, 0.023963333, 0.023964847, 0.023966736, 0.023968458, 0.023969819, 0.023971278, 0.023972708, 0.023974542, 0.023976458, 0.023978042, 0.023979458, 0.023981236, 0.023982917, 0.023984708, 0.023986153, 0.02398775, 0.023989569, 0.023991028, 0.023992819, 0.023994486, 0.023995847]}</msg>
<status status="PASS" starttime="20201110 08:36:48.020" endtime="20201110 08:36:48.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.016" endtime="20201110 08:36:48.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.027" level="INFO">${RESULT} = [{'time': 0.023916847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.023920236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:48.024" endtime="20201110 08:36:48.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:48.036" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.028" endtime="20201110 08:36:48.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:48.039" endtime="20201110 08:36:48.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.043" level="INFO">VALUE: [1.8050000000005562e-06, 1.930000000000681e-06, 1.8339999999991696e-06, 1.6119999999980594e-06, 1.4720000000023603e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.6110000000020552e-06, 1.3610000000018052e-06, 1.457999999999321e-06, 1.8889999999979756e-06, 1.3609999999983358e-06, 1.4300000000001811e-06, 1.915999999997642e-06, 1.4159999999971418e-06, 1.6809999999999048e-06, 1.4449999999992247e-06, 1.819000000000126e-06, 1.7909999999975168e-06, 1.3610000000018052e-06]</msg>
<status status="PASS" starttime="20201110 08:36:48.042" endtime="20201110 08:36:48.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.037" endtime="20201110 08:36:48.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.046" endtime="20201110 08:36:48.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.050" endtime="20201110 08:36:48.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.048" endtime="20201110 08:36:48.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.044" endtime="20201110 08:36:48.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.673" endtime="20201110 08:36:48.070"></status>
</kw>
<msg timestamp="20201110 08:36:48.071" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.078" endtime="20201110 08:36:48.089"></status>
</kw>
<msg timestamp="20201110 08:36:48.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.077" endtime="20201110 08:36:48.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.090" endtime="20201110 08:36:48.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.093" endtime="20201110 08:36:48.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.074" endtime="20201110 08:36:48.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.072" endtime="20201110 08:36:48.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.102" endtime="20201110 08:36:48.372"></status>
</kw>
<msg timestamp="20201110 08:36:48.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.100" endtime="20201110 08:36:48.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.379" endtime="20201110 08:36:48.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.391" endtime="20201110 08:36:48.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.098" endtime="20201110 08:36:48.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.096" endtime="20201110 08:36:48.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.406" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:48.403" endtime="20201110 08:36:48.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.414" level="INFO">VALUE: [{'time': 0.018480014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.01848325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018485028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018486583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018488472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018490181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018491625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018492972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.018494778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018496194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018497972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018499722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.0185015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018503111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018504611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018506125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018507833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.018509472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018511306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.01851275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018514514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018515972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018517528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018519028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018520417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018522222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018523847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018525458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018527264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018528736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018530583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018533722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018535431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018537264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018539194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018540708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018542417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018543792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.01854525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018546694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018550139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018551667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018553514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018555236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018556625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018558264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018559972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:48.408" endtime="20201110 08:36:48.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.398" endtime="20201110 08:36:48.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:48.450" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.419" endtime="20201110 08:36:48.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.457" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:48.456" endtime="20201110 08:36:48.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.461" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.694000000000001e-06, 1.5420000000002099e-06, 1.77800000000089e-06, 1.5550000000003061e-06, 1.8889999999979756e-06, 1.709000000002514e-06, 1.443999999999751e-06, 1.3469999999987659e-06, 1.8060000000000298e-06, 1.4160000000006112e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.6109999999985858e-06, 1.5000000000015001e-06, 1.5139999999976006e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.834000000002639e-06, 1.443999999999751e-06, 1.7639999999978506e-06, 1.457999999999321e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.389000000000945e-06, 1.8050000000005562e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 1.653000000000765e-06, 1.4859999999984608e-06, 1.709000000002514e-06, 1.832999999999696e-06, 1.9299999999972117e-06, 1.51400000000107e-06, 1.7089999999990446e-06, 1.3750000000013751e-06, 1.457999999999321e-06, 1.443999999999751e-06, 1.584000000002389e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.7219999999991409e-06, 1.389000000000945e-06, 1.639000000001195e-06, 1.707999999999571e-06], 'eventsource_diff': [0, 1.694000000000001e-06, 1.5420000000002099e-06, 1.77800000000089e-06, 1.5550000000003061e-06, 1.8889999999979756e-06, 1.709000000002514e-06, 1.443999999999751e-06, 1.3469999999987659e-06, 1.8060000000000298e-06, 1.4160000000006112e-06, 1.77800000000089e-06, 1.7499999999982807e-06, 1.77800000000089e-06, 1.6109999999985858e-06, 1.5000000000015001e-06, 1.5139999999976006e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.834000000002639e-06, 1.443999999999751e-06, 1.7639999999978506e-06, 1.457999999999321e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.389000000000945e-06, 1.8050000000005562e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 1.653000000000765e-06, 1.4859999999984608e-06, 1.709000000002514e-06, 1.832999999999696e-06, 1.9299999999972117e-06, 1.51400000000107e-06, 1.7089999999990446e-06, 1.3750000000013751e-06, 1.457999999999321e-06, 1.443999999999751e-06, 1.584000000002389e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.7219999999991409e-06, 1.389000000000945e-06, 1.639000000001195e-06, 1.707999999999571e-06], 'time': [0.018480014, 0.018481708, 0.01848325, 0.018485028, 0.018486583, 0.018488472, 0.018490181, 0.018491625, 0.018492972, 0.018494778, 0.018496194, 0.018497972, 0.018499722, 0.0185015, 0.018503111, 0.018504611, 0.018506125, 0.018507833, 0.018509472, 0.018511306, 0.01851275, 0.018514514, 0.018515972, 0.018517528, 0.018519028, 0.018520417, 0.018522222, 0.018523847, 0.018525458, 0.018527264, 0.018528736, 0.018530583, 0.018532236, 0.018533722, 0.018535431, 0.018537264, 0.018539194, 0.018540708, 0.018542417, 0.018543792, 0.01854525, 0.018546694, 0.018548278, 0.018550139, 0.018551667, 0.018553514, 0.018555236, 0.018556625, 0.018558264, 0.018559972]}</msg>
<status status="PASS" starttime="20201110 08:36:48.458" endtime="20201110 08:36:48.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.452" endtime="20201110 08:36:48.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.465" level="INFO">${RESULT} = [{'time': 0.018481708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018485028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:48.462" endtime="20201110 08:36:48.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:48.473" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.466" endtime="20201110 08:36:48.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.477" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:48.476" endtime="20201110 08:36:48.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.480" level="INFO">VALUE: [1.694000000000001e-06, 1.77800000000089e-06, 1.8889999999979756e-06, 1.443999999999751e-06, 1.8060000000000298e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.5000000000015001e-06, 1.7080000000030404e-06, 1.834000000002639e-06, 1.7639999999978506e-06, 1.5559999999997798e-06, 1.389000000000945e-06, 1.6249999999981557e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.4859999999984608e-06, 1.832999999999696e-06, 1.51400000000107e-06, 1.3750000000013751e-06, 1.443999999999751e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.389000000000945e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201110 08:36:48.478" endtime="20201110 08:36:48.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.474" endtime="20201110 08:36:48.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.483" endtime="20201110 08:36:48.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.487" endtime="20201110 08:36:48.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.485" endtime="20201110 08:36:48.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.481" endtime="20201110 08:36:48.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.071" endtime="20201110 08:36:48.507"></status>
</kw>
<msg timestamp="20201110 08:36:48.507" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.515" endtime="20201110 08:36:48.524"></status>
</kw>
<msg timestamp="20201110 08:36:48.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.514" endtime="20201110 08:36:48.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.525" endtime="20201110 08:36:48.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.528" endtime="20201110 08:36:48.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.511" endtime="20201110 08:36:48.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.509" endtime="20201110 08:36:48.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.538" endtime="20201110 08:36:48.803"></status>
</kw>
<msg timestamp="20201110 08:36:48.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.536" endtime="20201110 08:36:48.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.806" endtime="20201110 08:36:48.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.811" endtime="20201110 08:36:48.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.533" endtime="20201110 08:36:48.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.531" endtime="20201110 08:36:48.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.818" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:48.817" endtime="20201110 08:36:48.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.821" level="INFO">VALUE: [{'time': 0.018396361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018399444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018401125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018402542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018404278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018405694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018407056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.018408472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.018410167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018411833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018413278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018414819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.018416569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018418319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018420069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018421597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018423389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018425264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.01842675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018428264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018430111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018431986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018433861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018435778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018437375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018438792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018440417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018442194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018443569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018445347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018446944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018450611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018452111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018453583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018455167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018457028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018458708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018460222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018462069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018463431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3619999999978094e-06, 'source_diff': 1.3619999999978094e-06}, {'time': 0.018464972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018466597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018467972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.018469375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018471028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018472722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018474125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018475597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:48.819" endtime="20201110 08:36:48.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.814" endtime="20201110 08:36:48.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:48.836" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.824" endtime="20201110 08:36:48.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.840" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:48.839" endtime="20201110 08:36:48.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.843" level="INFO">VALUE: {'sourcediff': [0, 1.5969999999990159e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.4170000000000849e-06, 1.7359999999987108e-06, 1.4160000000006112e-06, 1.3620000000012789e-06, 1.4159999999971418e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.4450000000026941e-06, 1.5409999999972668e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.52800000000064e-06, 1.7919999999969904e-06, 1.8750000000018752e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.6250000000016251e-06, 1.7769999999979469e-06, 1.3750000000013751e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.77800000000089e-06, 1.8889999999979756e-06, 1.5000000000015001e-06, 1.4719999999988909e-06, 1.584000000002389e-06, 1.8609999999988358e-06, 1.6800000000004311e-06, 1.5139999999976006e-06, 1.8470000000027353e-06, 1.3619999999978094e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.3749999999979057e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.403000000000515e-06, 1.4719999999988909e-06], 'eventsource_diff': [0, 1.5969999999990159e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.4170000000000849e-06, 1.7359999999987108e-06, 1.4160000000006112e-06, 1.3620000000012789e-06, 1.4159999999971418e-06, 1.6950000000029442e-06, 1.6659999999973918e-06, 1.4450000000026941e-06, 1.5409999999972668e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.52800000000064e-06, 1.7919999999969904e-06, 1.8750000000018752e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.6250000000016251e-06, 1.7769999999979469e-06, 1.3750000000013751e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.77800000000089e-06, 1.8889999999979756e-06, 1.5000000000015001e-06, 1.4719999999988909e-06, 1.584000000002389e-06, 1.8609999999988358e-06, 1.6800000000004311e-06, 1.5139999999976006e-06, 1.8470000000027353e-06, 1.3619999999978094e-06, 1.5410000000007362e-06, 1.6250000000016251e-06, 1.3749999999979057e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.403000000000515e-06, 1.4719999999988909e-06], 'time': [0.018396361, 0.018397958, 0.018399444, 0.018401125, 0.018402542, 0.018404278, 0.018405694, 0.018407056, 0.018408472, 0.018410167, 0.018411833, 0.018413278, 0.018414819, 0.018416569, 0.018418319, 0.018420069, 0.018421597, 0.018423389, 0.018425264, 0.01842675, 0.018428264, 0.018430111, 0.018431986, 0.018433861, 0.018435778, 0.018437375, 0.018438792, 0.018440417, 0.018442194, 0.018443569, 0.018445347, 0.018446944, 0.018448722, 0.018450611, 0.018452111, 0.018453583, 0.018455167, 0.018457028, 0.018458708, 0.018460222, 0.018462069, 0.018463431, 0.018464972, 0.018466597, 0.018467972, 0.018469375, 0.018471028, 0.018472722, 0.018474125, 0.018475597]}</msg>
<status status="PASS" starttime="20201110 08:36:48.841" endtime="20201110 08:36:48.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.837" endtime="20201110 08:36:48.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.848" level="INFO">${RESULT} = [{'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018401125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:48.845" endtime="20201110 08:36:48.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:48.856" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:48.849" endtime="20201110 08:36:48.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.860" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:48.859" endtime="20201110 08:36:48.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.862" level="INFO">VALUE: [1.5969999999990159e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.3620000000012789e-06, 1.6950000000029442e-06, 1.4450000000026941e-06, 1.7500000000017502e-06, 1.7500000000017502e-06, 1.7919999999969904e-06, 1.4859999999984608e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.5969999999990159e-06, 1.6250000000016251e-06, 1.3750000000013751e-06, 1.5969999999990159e-06, 1.8889999999979756e-06, 1.4719999999988909e-06, 1.8609999999988358e-06, 1.5139999999976006e-06, 1.3619999999978094e-06, 1.6250000000016251e-06, 1.403000000000515e-06, 1.694000000000001e-06, 1.4719999999988909e-06]</msg>
<status status="PASS" starttime="20201110 08:36:48.861" endtime="20201110 08:36:48.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.857" endtime="20201110 08:36:48.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.865" endtime="20201110 08:36:48.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.869" endtime="20201110 08:36:48.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.867" endtime="20201110 08:36:48.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.864" endtime="20201110 08:36:48.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.508" endtime="20201110 08:36:48.889"></status>
</kw>
<msg timestamp="20201110 08:36:48.890" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.897" endtime="20201110 08:36:48.907"></status>
</kw>
<msg timestamp="20201110 08:36:48.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.896" endtime="20201110 08:36:48.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.909" endtime="20201110 08:36:48.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.911" endtime="20201110 08:36:48.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.893" endtime="20201110 08:36:48.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.891" endtime="20201110 08:36:48.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.920" endtime="20201110 08:36:49.190"></status>
</kw>
<msg timestamp="20201110 08:36:49.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019223069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.919" endtime="20201110 08:36:49.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019223069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.196" endtime="20201110 08:36:49.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.208" endtime="20201110 08:36:49.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.916" endtime="20201110 08:36:49.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.914" endtime="20201110 08:36:49.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.221" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:49.219" endtime="20201110 08:36:49.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.229" level="INFO">VALUE: [{'time': 0.019221014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019223069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0549999999973367e-06, 'source_diff': 2.0549999999973367e-06}, {'time': 0.019224667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.019226181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019227944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.019229306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019231069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.019232736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019234486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019236167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019239056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019240514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019242083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019243694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019245389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.019246764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019248542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019250333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019251833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019253736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019255639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019257306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.019259139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.019260806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.019262528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.019264417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019266028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019267694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.019269125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4310000000031242e-06, 'source_diff': 1.4310000000031242e-06}, {'time': 0.019270764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019272389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019274181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019275542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019276903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019278889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019280444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019282028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019283611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019285375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019288764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019290375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019292014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019293694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019295056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019296694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.019298597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.01930025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019302042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:49.223" endtime="20201110 08:36:49.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.214" endtime="20201110 08:36:49.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:49.262" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:49.233" endtime="20201110 08:36:49.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.269" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:49.268" endtime="20201110 08:36:49.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.272" level="INFO">VALUE: {'sourcediff': [0, 2.0549999999973367e-06, 1.598000000001959e-06, 1.5139999999976006e-06, 1.7630000000018464e-06, 1.3620000000012789e-06, 1.762999999998377e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.51400000000107e-06, 1.3750000000013751e-06, 1.457999999999321e-06, 1.568999999999876e-06, 1.6109999999985858e-06, 1.6950000000029442e-06, 1.3749999999979057e-06, 1.77800000000089e-06, 1.7910000000009862e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.6669999999968654e-06, 1.8330000000031654e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.8889999999979756e-06, 1.6110000000020552e-06, 1.6659999999973918e-06, 1.4310000000031242e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.7920000000004599e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.985999999998961e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.3620000000012789e-06, 1.637999999998252e-06, 1.903000000001015e-06, 1.653000000000765e-06, 1.7919999999969904e-06], 'eventsource_diff': [0, 2.0549999999973367e-06, 1.598000000001959e-06, 1.5139999999976006e-06, 1.7630000000018464e-06, 1.3620000000012789e-06, 1.762999999998377e-06, 1.6670000000003349e-06, 1.7499999999982807e-06, 1.6809999999999048e-06, 1.51400000000107e-06, 1.3750000000013751e-06, 1.457999999999321e-06, 1.568999999999876e-06, 1.6109999999985858e-06, 1.6950000000029442e-06, 1.3749999999979057e-06, 1.77800000000089e-06, 1.7910000000009862e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.6669999999968654e-06, 1.8330000000031654e-06, 1.6669999999968654e-06, 1.7220000000026103e-06, 1.8889999999979756e-06, 1.6110000000020552e-06, 1.6659999999973918e-06, 1.4310000000031242e-06, 1.6389999999977256e-06, 1.6250000000016251e-06, 1.7920000000004599e-06, 1.3609999999983358e-06, 1.3610000000018052e-06, 1.985999999998961e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.6249999999981557e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.3620000000012789e-06, 1.637999999998252e-06, 1.903000000001015e-06, 1.653000000000765e-06, 1.7919999999969904e-06], 'time': [0.019221014, 0.019223069, 0.019224667, 0.019226181, 0.019227944, 0.019229306, 0.019231069, 0.019232736, 0.019234486, 0.019236167, 0.019237681, 0.019239056, 0.019240514, 0.019242083, 0.019243694, 0.019245389, 0.019246764, 0.019248542, 0.019250333, 0.019251833, 0.019253736, 0.019255639, 0.019257306, 0.019259139, 0.019260806, 0.019262528, 0.019264417, 0.019266028, 0.019267694, 0.019269125, 0.019270764, 0.019272389, 0.019274181, 0.019275542, 0.019276903, 0.019278889, 0.019280444, 0.019282028, 0.019283611, 0.019285375, 0.019287, 0.019288764, 0.019290375, 0.019292014, 0.019293694, 0.019295056, 0.019296694, 0.019298597, 0.01930025, 0.019302042]}</msg>
<status status="PASS" starttime="20201110 08:36:49.270" endtime="20201110 08:36:49.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.264" endtime="20201110 08:36:49.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.276" level="INFO">${RESULT} = [{'time': 0.019223069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0549999999973367e-06, 'source_diff': 2.0549999999973367e-06}, {'time': 0.019226181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:49.274" endtime="20201110 08:36:49.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:49.284" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:49.277" endtime="20201110 08:36:49.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.288" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:49.287" endtime="20201110 08:36:49.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.291" level="INFO">VALUE: [2.0549999999973367e-06, 1.5139999999976006e-06, 1.3620000000012789e-06, 1.6670000000003349e-06, 1.6809999999999048e-06, 1.3750000000013751e-06, 1.568999999999876e-06, 1.6950000000029442e-06, 1.77800000000089e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.8330000000031654e-06, 1.7220000000026103e-06, 1.6110000000020552e-06, 1.4310000000031242e-06, 1.6250000000016251e-06, 1.3609999999983358e-06, 1.985999999998961e-06, 1.5839999999989196e-06, 1.76400000000132e-06, 1.76400000000132e-06, 1.639000000001195e-06, 1.3620000000012789e-06, 1.903000000001015e-06, 1.7919999999969904e-06]</msg>
<status status="PASS" starttime="20201110 08:36:49.289" endtime="20201110 08:36:49.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.285" endtime="20201110 08:36:49.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.294" endtime="20201110 08:36:49.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.297" endtime="20201110 08:36:49.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.296" endtime="20201110 08:36:49.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.292" endtime="20201110 08:36:49.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.890" endtime="20201110 08:36:49.318"></status>
</kw>
<msg timestamp="20201110 08:36:49.318" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.327" endtime="20201110 08:36:49.340"></status>
</kw>
<msg timestamp="20201110 08:36:49.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.325" endtime="20201110 08:36:49.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.343" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.341" endtime="20201110 08:36:49.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.347" endtime="20201110 08:36:49.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.322" endtime="20201110 08:36:49.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.320" endtime="20201110 08:36:49.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.359" endtime="20201110 08:36:49.629"></status>
</kw>
<msg timestamp="20201110 08:36:49.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.358" endtime="20201110 08:36:49.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.632" endtime="20201110 08:36:49.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.637" endtime="20201110 08:36:49.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.353" endtime="20201110 08:36:49.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.351" endtime="20201110 08:36:49.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.643" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:49.642" endtime="20201110 08:36:49.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.647" level="INFO">VALUE: [{'time': 0.019690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019693694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.019695625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019697167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.01969875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019700111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019701806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019703708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.019705458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019707083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019708847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019710375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019712292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.01971375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019715139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019716556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019718014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.0197195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019721014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.019724486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019725847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019727431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019729292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019731042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019732833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019734361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.01973575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019737625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019741194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019742694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019744125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019745556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019747236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019749097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019750514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019752319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019754222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019756014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019757722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019759472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019760958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019762569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019764472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019766042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.019767806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019769167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019771042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:49.644" endtime="20201110 08:36:49.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.640" endtime="20201110 08:36:49.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:49.663" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:49.650" endtime="20201110 08:36:49.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.667" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:49.666" endtime="20201110 08:36:49.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.670" level="INFO">VALUE: {'sourcediff': [0, 1.7229999999986145e-06, 1.6380000000017214e-06, 1.931000000000155e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.3609999999983358e-06, 1.6949999999994747e-06, 1.9020000000015413e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.917000000000585e-06, 1.457999999999321e-06, 1.389000000000945e-06, 1.4170000000000849e-06, 1.457999999999321e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.5830000000029154e-06, 1.8889999999979756e-06, 1.3610000000018052e-06, 1.5839999999989196e-06, 1.8609999999988358e-06, 1.7500000000017502e-06, 1.7910000000009862e-06, 1.5279999999971705e-06, 1.389000000000945e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.6800000000004311e-06, 1.5000000000015001e-06, 1.4309999999996548e-06, 1.4309999999996548e-06, 1.6800000000004311e-06, 1.8609999999988358e-06, 1.4170000000000849e-06, 1.8050000000005562e-06, 1.9029999999975455e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.4859999999984608e-06, 1.6110000000020552e-06, 1.903000000001015e-06, 1.5699999999993497e-06, 1.7639999999978506e-06, 1.3610000000018052e-06, 1.8749999999984057e-06], 'eventsource_diff': [0, 1.7229999999986145e-06, 1.6380000000017214e-06, 1.931000000000155e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.3609999999983358e-06, 1.6949999999994747e-06, 1.9020000000015413e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.917000000000585e-06, 1.457999999999321e-06, 1.389000000000945e-06, 1.4170000000000849e-06, 1.457999999999321e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.5830000000029154e-06, 1.8889999999979756e-06, 1.3610000000018052e-06, 1.5839999999989196e-06, 1.8609999999988358e-06, 1.7500000000017502e-06, 1.7910000000009862e-06, 1.5279999999971705e-06, 1.389000000000945e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.6800000000004311e-06, 1.5000000000015001e-06, 1.4309999999996548e-06, 1.4309999999996548e-06, 1.6800000000004311e-06, 1.8609999999988358e-06, 1.4170000000000849e-06, 1.8050000000005562e-06, 1.9029999999975455e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.4859999999984608e-06, 1.6110000000020552e-06, 1.903000000001015e-06, 1.5699999999993497e-06, 1.7639999999978506e-06, 1.3610000000018052e-06, 1.8749999999984057e-06], 'time': [0.019690333, 0.019692056, 0.019693694, 0.019695625, 0.019697167, 0.01969875, 0.019700111, 0.019701806, 0.019703708, 0.019705458, 0.019707083, 0.019708847, 0.019710375, 0.019712292, 0.01971375, 0.019715139, 0.019716556, 0.019718014, 0.0197195, 0.019721014, 0.019722597, 0.019724486, 0.019725847, 0.019727431, 0.019729292, 0.019731042, 0.019732833, 0.019734361, 0.01973575, 0.019737625, 0.019739514, 0.019741194, 0.019742694, 0.019744125, 0.019745556, 0.019747236, 0.019749097, 0.019750514, 0.019752319, 0.019754222, 0.019756014, 0.019757722, 0.019759472, 0.019760958, 0.019762569, 0.019764472, 0.019766042, 0.019767806, 0.019769167, 0.019771042]}</msg>
<status status="PASS" starttime="20201110 08:36:49.668" endtime="20201110 08:36:49.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.664" endtime="20201110 08:36:49.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.675" level="INFO">${RESULT} = [{'time': 0.019692056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019695625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:49.672" endtime="20201110 08:36:49.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:49.683" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:49.676" endtime="20201110 08:36:49.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.687" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:49.686" endtime="20201110 08:36:49.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.689" level="INFO">VALUE: [1.7229999999986145e-06, 1.931000000000155e-06, 1.582999999999446e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.389000000000945e-06, 1.457999999999321e-06, 1.5139999999976006e-06, 1.8889999999979756e-06, 1.5839999999989196e-06, 1.7500000000017502e-06, 1.5279999999971705e-06, 1.8750000000018752e-06, 1.6800000000004311e-06, 1.4309999999996548e-06, 1.6800000000004311e-06, 1.4170000000000849e-06, 1.9029999999975455e-06, 1.707999999999571e-06, 1.4859999999984608e-06, 1.903000000001015e-06, 1.7639999999978506e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201110 08:36:49.688" endtime="20201110 08:36:49.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.684" endtime="20201110 08:36:49.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.693" endtime="20201110 08:36:49.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.696" endtime="20201110 08:36:49.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.694" endtime="20201110 08:36:49.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.691" endtime="20201110 08:36:49.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.319" endtime="20201110 08:36:49.717"></status>
</kw>
<msg timestamp="20201110 08:36:49.718" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.725" endtime="20201110 08:36:49.735"></status>
</kw>
<msg timestamp="20201110 08:36:49.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.724" endtime="20201110 08:36:49.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.738" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.737" endtime="20201110 08:36:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.739" endtime="20201110 08:36:49.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.721" endtime="20201110 08:36:49.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.719" endtime="20201110 08:36:49.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.748" endtime="20201110 08:36:50.020"></status>
</kw>
<msg timestamp="20201110 08:36:50.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.747" endtime="20201110 08:36:50.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.027" endtime="20201110 08:36:50.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.038" endtime="20201110 08:36:50.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.744" endtime="20201110 08:36:50.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.742" endtime="20201110 08:36:50.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.051" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:50.049" endtime="20201110 08:36:50.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.059" level="INFO">VALUE: [{'time': 0.018327097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018330944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018332361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018334139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018335806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018337417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.01833925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018341125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018342986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018344375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018345847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018347472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018348903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018350694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018352208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018353986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018355778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018357139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.018358847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018362028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.018363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018364889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018366458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018368042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018369486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018370833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.018372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018374403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018376319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018378097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018380028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018381875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.01838375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018385167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018386569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4019999999975719e-06, 'source_diff': 1.4019999999975719e-06}, {'time': 0.01838825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018389667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018391042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018392514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018394139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018395986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018397556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018398972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018400583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018402111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018403847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018405472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018407, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:50.054" endtime="20201110 08:36:50.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.045" endtime="20201110 08:36:50.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:50.084" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.064" endtime="20201110 08:36:50.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.088" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:50.087" endtime="20201110 08:36:50.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.091" level="INFO">VALUE: {'sourcediff': [0, 1.4999999999980307e-06, 2.346999999999766e-06, 1.4170000000000849e-06, 1.77800000000089e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.389000000000945e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.4309999999996548e-06, 1.7910000000009862e-06, 1.5139999999976006e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.3610000000018052e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.3749999999979057e-06, 1.4160000000006112e-06, 1.4449999999992247e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.443999999999751e-06, 1.3469999999987659e-06, 2.153000000001265e-06, 1.4170000000000849e-06, 1.915999999997642e-06, 1.77800000000089e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.4170000000000849e-06, 1.4019999999975719e-06, 1.6809999999999048e-06, 1.4170000000000849e-06, 1.3750000000013751e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.5699999999993497e-06, 1.4160000000006112e-06, 1.6110000000020552e-06, 1.5279999999971705e-06, 1.7360000000021802e-06, 1.6249999999981557e-06, 1.52800000000064e-06], 'eventsource_diff': [0, 1.4999999999980307e-06, 2.346999999999766e-06, 1.4170000000000849e-06, 1.77800000000089e-06, 1.6670000000003349e-06, 1.6110000000020552e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.389000000000945e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.4309999999996548e-06, 1.7910000000009862e-06, 1.5139999999976006e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.3610000000018052e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.3749999999979057e-06, 1.4160000000006112e-06, 1.4449999999992247e-06, 1.568999999999876e-06, 1.584000000002389e-06, 1.443999999999751e-06, 1.3469999999987659e-06, 2.153000000001265e-06, 1.4170000000000849e-06, 1.915999999997642e-06, 1.77800000000089e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.4170000000000849e-06, 1.4019999999975719e-06, 1.6809999999999048e-06, 1.4170000000000849e-06, 1.3750000000013751e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.5699999999993497e-06, 1.4160000000006112e-06, 1.6110000000020552e-06, 1.5279999999971705e-06, 1.7360000000021802e-06, 1.6249999999981557e-06, 1.52800000000064e-06], 'time': [0.018327097, 0.018328597, 0.018330944, 0.018332361, 0.018334139, 0.018335806, 0.018337417, 0.01833925, 0.018341125, 0.018342986, 0.018344375, 0.018345847, 0.018347472, 0.018348903, 0.018350694, 0.018352208, 0.018353986, 0.018355778, 0.018357139, 0.018358847, 0.018360653, 0.018362028, 0.018363444, 0.018364889, 0.018366458, 0.018368042, 0.018369486, 0.018370833, 0.018372986, 0.018374403, 0.018376319, 0.018378097, 0.018380028, 0.018381875, 0.01838375, 0.018385167, 0.018386569, 0.01838825, 0.018389667, 0.018391042, 0.018392514, 0.018394139, 0.018395986, 0.018397556, 0.018398972, 0.018400583, 0.018402111, 0.018403847, 0.018405472, 0.018407]}</msg>
<status status="PASS" starttime="20201110 08:36:50.089" endtime="20201110 08:36:50.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.085" endtime="20201110 08:36:50.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.096" level="INFO">${RESULT} = [{'time': 0.018328597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018332361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:50.093" endtime="20201110 08:36:50.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:50.104" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.097" endtime="20201110 08:36:50.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.110" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:50.109" endtime="20201110 08:36:50.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.114" level="INFO">VALUE: [1.4999999999980307e-06, 1.4170000000000849e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.4719999999988909e-06, 1.4309999999996548e-06, 1.5139999999976006e-06, 1.7920000000004599e-06, 1.707999999999571e-06, 1.3749999999979057e-06, 1.4449999999992247e-06, 1.584000000002389e-06, 1.3469999999987659e-06, 1.4170000000000849e-06, 1.77800000000089e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.6809999999999048e-06, 1.3750000000013751e-06, 1.6250000000016251e-06, 1.5699999999993497e-06, 1.6110000000020552e-06, 1.7360000000021802e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201110 08:36:50.112" endtime="20201110 08:36:50.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.106" endtime="20201110 08:36:50.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.119" endtime="20201110 08:36:50.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.123" endtime="20201110 08:36:50.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.121" endtime="20201110 08:36:50.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.117" endtime="20201110 08:36:50.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.718" endtime="20201110 08:36:50.145"></status>
</kw>
<msg timestamp="20201110 08:36:50.145" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.152" endtime="20201110 08:36:50.162"></status>
</kw>
<msg timestamp="20201110 08:36:50.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.151" endtime="20201110 08:36:50.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.164" endtime="20201110 08:36:50.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.166" endtime="20201110 08:36:50.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.148" endtime="20201110 08:36:50.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.147" endtime="20201110 08:36:50.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.175" endtime="20201110 08:36:50.439"></status>
</kw>
<msg timestamp="20201110 08:36:50.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018391264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.173" endtime="20201110 08:36:50.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018391264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.442" endtime="20201110 08:36:50.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.447" endtime="20201110 08:36:50.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.171" endtime="20201110 08:36:50.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.169" endtime="20201110 08:36:50.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.454" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:50.453" endtime="20201110 08:36:50.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.457" level="INFO">VALUE: [{'time': 0.018389653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018391264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018392819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018394361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018395958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018397375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018399125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018400639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018402292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018403986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018405917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018407278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018408958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018410361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018412014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018413375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018415236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018416708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018418264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018419889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018421694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018423528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.834000000002639e-06, 'source_diff': 1.834000000002639e-06}, {'time': 0.018424917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018426736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018428444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01843025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018431667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018433153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018434611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018435986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018437556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018439444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.018440944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018442417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018444181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018445972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018447472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018449014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018450528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018452444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018454264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.018456, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018457347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.018458681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.018460764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.018462639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018464431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018466153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018467611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018469278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:50.455" endtime="20201110 08:36:50.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.451" endtime="20201110 08:36:50.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:50.473" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.460" endtime="20201110 08:36:50.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:50.477" endtime="20201110 08:36:50.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.482" level="INFO">VALUE: {'sourcediff': [0, 1.6110000000020552e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.7499999999982807e-06, 1.51400000000107e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.3609999999983358e-06, 1.6800000000004311e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.3609999999983358e-06, 1.8610000000023053e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.834000000002639e-06, 1.3889999999974756e-06, 1.819000000000126e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.4170000000000849e-06, 1.4860000000019302e-06, 1.457999999999321e-06, 1.3750000000013751e-06, 1.5699999999993497e-06, 1.887999999998502e-06, 1.5000000000015001e-06, 1.4729999999983645e-06, 1.76400000000132e-06, 1.7910000000009862e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.915999999997642e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.3469999999987659e-06, 1.334000000002139e-06, 2.082999999999946e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.457999999999321e-06, 1.6670000000003349e-06], 'eventsource_diff': [0, 1.6110000000020552e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.7499999999982807e-06, 1.51400000000107e-06, 1.653000000000765e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.3609999999983358e-06, 1.6800000000004311e-06, 1.403000000000515e-06, 1.653000000000765e-06, 1.3609999999983358e-06, 1.8610000000023053e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.8050000000005562e-06, 1.834000000002639e-06, 1.3889999999974756e-06, 1.819000000000126e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.4170000000000849e-06, 1.4860000000019302e-06, 1.457999999999321e-06, 1.3750000000013751e-06, 1.5699999999993497e-06, 1.887999999998502e-06, 1.5000000000015001e-06, 1.4729999999983645e-06, 1.76400000000132e-06, 1.7910000000009862e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.915999999997642e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.3469999999987659e-06, 1.334000000002139e-06, 2.082999999999946e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.7219999999991409e-06, 1.457999999999321e-06, 1.6670000000003349e-06], 'time': [0.018389653, 0.018391264, 0.018392819, 0.018394361, 0.018395958, 0.018397375, 0.018399125, 0.018400639, 0.018402292, 0.018403986, 0.018405917, 0.018407278, 0.018408958, 0.018410361, 0.018412014, 0.018413375, 0.018415236, 0.018416708, 0.018418264, 0.018419889, 0.018421694, 0.018423528, 0.018424917, 0.018426736, 0.018428444, 0.01843025, 0.018431667, 0.018433153, 0.018434611, 0.018435986, 0.018437556, 0.018439444, 0.018440944, 0.018442417, 0.018444181, 0.018445972, 0.018447472, 0.018449014, 0.018450528, 0.018452444, 0.018454264, 0.018456, 0.018457347, 0.018458681, 0.018460764, 0.018462639, 0.018464431, 0.018466153, 0.018467611, 0.018469278]}</msg>
<status status="PASS" starttime="20201110 08:36:50.480" endtime="20201110 08:36:50.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.474" endtime="20201110 08:36:50.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.486" level="INFO">${RESULT} = [{'time': 0.018391264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018394361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:50.484" endtime="20201110 08:36:50.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:50.494" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.487" endtime="20201110 08:36:50.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:50.498" endtime="20201110 08:36:50.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.501" level="INFO">VALUE: [1.6110000000020552e-06, 1.5420000000002099e-06, 1.4170000000000849e-06, 1.51400000000107e-06, 1.694000000000001e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.3609999999983358e-06, 1.4719999999988909e-06, 1.6249999999981557e-06, 1.834000000002639e-06, 1.819000000000126e-06, 1.8060000000000298e-06, 1.4860000000019302e-06, 1.3750000000013751e-06, 1.887999999998502e-06, 1.4729999999983645e-06, 1.7910000000009862e-06, 1.5420000000002099e-06, 1.915999999997642e-06, 1.7359999999987108e-06, 1.334000000002139e-06, 1.8749999999984057e-06, 1.7219999999991409e-06, 1.6670000000003349e-06]</msg>
<status status="PASS" starttime="20201110 08:36:50.500" endtime="20201110 08:36:50.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.495" endtime="20201110 08:36:50.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.504" endtime="20201110 08:36:50.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.508" endtime="20201110 08:36:50.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.506" endtime="20201110 08:36:50.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.503" endtime="20201110 08:36:50.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.145" endtime="20201110 08:36:50.528"></status>
</kw>
<msg timestamp="20201110 08:36:50.529" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.536" endtime="20201110 08:36:50.546"></status>
</kw>
<msg timestamp="20201110 08:36:50.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.535" endtime="20201110 08:36:50.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.549" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.547" endtime="20201110 08:36:50.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.550" endtime="20201110 08:36:50.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.532" endtime="20201110 08:36:50.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.530" endtime="20201110 08:36:50.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.559" endtime="20201110 08:36:50.823"></status>
</kw>
<msg timestamp="20201110 08:36:50.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018289083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018291097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.557" endtime="20201110 08:36:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018289083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018291097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.826" endtime="20201110 08:36:50.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.831" endtime="20201110 08:36:50.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.554" endtime="20201110 08:36:50.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.553" endtime="20201110 08:36:50.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.838" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:50.837" endtime="20201110 08:36:50.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.841" level="INFO">VALUE: [{'time': 0.018289083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018292806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018294264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018295708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.01829725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018298778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018300639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.0183025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018303917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018305444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018307125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.01831025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018311611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018313028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018314542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018316361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018318139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018319958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018321403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018322931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018324375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018325903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018327597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018329167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018331014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018332431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018334347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018336264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018337764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018339319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018341125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018342486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.018344014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018345569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018346917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.018349069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.151999999998322e-06, 'source_diff': 2.151999999998322e-06}, {'time': 0.018350847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018352236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018354014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018355861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018357611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018358944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.018360639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018362389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018364278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018365875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018367458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018369042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:50.839" endtime="20201110 08:36:50.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.835" endtime="20201110 08:36:50.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:50.857" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.844" endtime="20201110 08:36:50.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.861" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:50.860" endtime="20201110 08:36:50.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.864" level="INFO">VALUE: {'sourcediff': [0, 2.0139999999981006e-06, 1.709000000002514e-06, 1.457999999999321e-06, 1.443999999999751e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.4170000000000849e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.3609999999983358e-06, 1.4170000000000849e-06, 1.51400000000107e-06, 1.819000000000126e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.4449999999992247e-06, 1.52800000000064e-06, 1.443999999999751e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.9160000000011113e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.5550000000003061e-06, 1.8060000000000298e-06, 1.3610000000018052e-06, 1.5279999999971705e-06, 1.5550000000003061e-06, 1.348000000001709e-06, 2.151999999998322e-06, 1.77800000000089e-06, 1.389000000000945e-06, 1.7779999999974205e-06, 1.8470000000027353e-06, 1.7499999999982807e-06, 1.332999999999196e-06, 1.6950000000029442e-06, 1.7499999999982807e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.5839999999989196e-06], 'eventsource_diff': [0, 2.0139999999981006e-06, 1.709000000002514e-06, 1.457999999999321e-06, 1.443999999999751e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.4170000000000849e-06, 1.5270000000011663e-06, 1.6809999999999048e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.3609999999983358e-06, 1.4170000000000849e-06, 1.51400000000107e-06, 1.819000000000126e-06, 1.77800000000089e-06, 1.819000000000126e-06, 1.4449999999992247e-06, 1.52800000000064e-06, 1.443999999999751e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.5699999999993497e-06, 1.846999999999266e-06, 1.4170000000000849e-06, 1.9160000000011113e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.5550000000003061e-06, 1.8060000000000298e-06, 1.3610000000018052e-06, 1.5279999999971705e-06, 1.5550000000003061e-06, 1.348000000001709e-06, 2.151999999998322e-06, 1.77800000000089e-06, 1.389000000000945e-06, 1.7779999999974205e-06, 1.8470000000027353e-06, 1.7499999999982807e-06, 1.332999999999196e-06, 1.6950000000029442e-06, 1.7499999999982807e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.5839999999989196e-06], 'time': [0.018289083, 0.018291097, 0.018292806, 0.018294264, 0.018295708, 0.01829725, 0.018298778, 0.018300639, 0.0183025, 0.018303917, 0.018305444, 0.018307125, 0.018308708, 0.01831025, 0.018311611, 0.018313028, 0.018314542, 0.018316361, 0.018318139, 0.018319958, 0.018321403, 0.018322931, 0.018324375, 0.018325903, 0.018327597, 0.018329167, 0.018331014, 0.018332431, 0.018334347, 0.018336264, 0.018337764, 0.018339319, 0.018341125, 0.018342486, 0.018344014, 0.018345569, 0.018346917, 0.018349069, 0.018350847, 0.018352236, 0.018354014, 0.018355861, 0.018357611, 0.018358944, 0.018360639, 0.018362389, 0.018364278, 0.018365875, 0.018367458, 0.018369042]}</msg>
<status status="PASS" starttime="20201110 08:36:50.862" endtime="20201110 08:36:50.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.858" endtime="20201110 08:36:50.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.868" level="INFO">${RESULT} = [{'time': 0.018291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018294264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:50.866" endtime="20201110 08:36:50.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:50.876" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:50.869" endtime="20201110 08:36:50.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.880" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:50.879" endtime="20201110 08:36:50.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.883" level="INFO">VALUE: [2.0139999999981006e-06, 1.457999999999321e-06, 1.5420000000002099e-06, 1.8609999999988358e-06, 1.4170000000000849e-06, 1.6809999999999048e-06, 1.5420000000002099e-06, 1.4170000000000849e-06, 1.819000000000126e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.4170000000000849e-06, 1.917000000000585e-06, 1.5550000000003061e-06, 1.3610000000018052e-06, 1.5550000000003061e-06, 2.151999999998322e-06, 1.389000000000945e-06, 1.8470000000027353e-06, 1.332999999999196e-06, 1.7499999999982807e-06, 1.5969999999990159e-06, 1.5839999999989196e-06]</msg>
<status status="PASS" starttime="20201110 08:36:50.882" endtime="20201110 08:36:50.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.877" endtime="20201110 08:36:50.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.886" endtime="20201110 08:36:50.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.889" endtime="20201110 08:36:50.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.888" endtime="20201110 08:36:50.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.884" endtime="20201110 08:36:50.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.529" endtime="20201110 08:36:50.910"></status>
</kw>
<msg timestamp="20201110 08:36:50.910" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.918" endtime="20201110 08:36:50.928"></status>
</kw>
<msg timestamp="20201110 08:36:50.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.916" endtime="20201110 08:36:50.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.929" endtime="20201110 08:36:50.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.932" endtime="20201110 08:36:50.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.914" endtime="20201110 08:36:50.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.912" endtime="20201110 08:36:50.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.942" endtime="20201110 08:36:51.210"></status>
</kw>
<msg timestamp="20201110 08:36:51.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.940" endtime="20201110 08:36:51.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.213" endtime="20201110 08:36:51.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.219" endtime="20201110 08:36:51.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.937" endtime="20201110 08:36:51.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.935" endtime="20201110 08:36:51.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.225" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:51.224" endtime="20201110 08:36:51.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.229" level="INFO">VALUE: [{'time': 0.018131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018135417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018137194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018138972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018140472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018142389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018144014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018145542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018147306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018150611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018152111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018154014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018155917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018157736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018159264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018160861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.01816225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018163653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.018165236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018167111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018168556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018170278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018171806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018173292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018174972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018176694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018178167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018179792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018181403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018182972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018184472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018185903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018187403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018189153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018190903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018192542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018194139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018195958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018197583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018199153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018200778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018202278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018204194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018206097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018207639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018209417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018210736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3190000000030955e-06, 'source_diff': 1.3190000000030955e-06}, {'time': 0.018212167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:51.226" endtime="20201110 08:36:51.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.222" endtime="20201110 08:36:51.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:51.244" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:51.231" endtime="20201110 08:36:51.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.247" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:51.246" endtime="20201110 08:36:51.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.251" level="INFO">VALUE: {'sourcediff': [0, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.7769999999979469e-06, 1.77800000000089e-06, 1.5000000000015001e-06, 1.9169999999971155e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.7639999999978506e-06, 1.6380000000017214e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.389000000000945e-06, 1.4029999999970455e-06, 1.5830000000029154e-06, 1.8749999999984057e-06, 1.4449999999992247e-06, 1.7220000000026103e-06, 1.5279999999971705e-06, 1.4860000000019302e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.4729999999983645e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.4309999999996548e-06, 1.5000000000015001e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.6389999999977256e-06, 1.5970000000024853e-06, 1.819000000000126e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.9160000000011113e-06, 1.903000000001015e-06, 1.5420000000002099e-06, 1.7779999999974205e-06, 1.3190000000030955e-06, 1.4309999999996548e-06], 'eventsource_diff': [0, 1.8199999999995997e-06, 1.7500000000017502e-06, 1.7769999999979469e-06, 1.77800000000089e-06, 1.5000000000015001e-06, 1.9169999999971155e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.7639999999978506e-06, 1.6380000000017214e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.389000000000945e-06, 1.4029999999970455e-06, 1.5830000000029154e-06, 1.8749999999984057e-06, 1.4449999999992247e-06, 1.7220000000026103e-06, 1.5279999999971705e-06, 1.4860000000019302e-06, 1.6800000000004311e-06, 1.7219999999991409e-06, 1.4729999999983645e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.4309999999996548e-06, 1.5000000000015001e-06, 1.7499999999982807e-06, 1.7500000000017502e-06, 1.6389999999977256e-06, 1.5970000000024853e-06, 1.819000000000126e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.9160000000011113e-06, 1.903000000001015e-06, 1.5420000000002099e-06, 1.7779999999974205e-06, 1.3190000000030955e-06, 1.4309999999996548e-06], 'time': [0.018131847, 0.018133667, 0.018135417, 0.018137194, 0.018138972, 0.018140472, 0.018142389, 0.018144014, 0.018145542, 0.018147306, 0.018148944, 0.018150611, 0.018152111, 0.018154014, 0.018155917, 0.018157736, 0.018159264, 0.018160861, 0.01816225, 0.018163653, 0.018165236, 0.018167111, 0.018168556, 0.018170278, 0.018171806, 0.018173292, 0.018174972, 0.018176694, 0.018178167, 0.018179792, 0.018181403, 0.018182972, 0.018184472, 0.018185903, 0.018187403, 0.018189153, 0.018190903, 0.018192542, 0.018194139, 0.018195958, 0.018197583, 0.018199153, 0.018200778, 0.018202278, 0.018204194, 0.018206097, 0.018207639, 0.018209417, 0.018210736, 0.018212167]}</msg>
<status status="PASS" starttime="20201110 08:36:51.248" endtime="20201110 08:36:51.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.244" endtime="20201110 08:36:51.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.255" level="INFO">${RESULT} = [{'time': 0.018133667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018137194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:51.252" endtime="20201110 08:36:51.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:51.263" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:51.256" endtime="20201110 08:36:51.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.267" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:51.266" endtime="20201110 08:36:51.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.269" level="INFO">VALUE: [1.8199999999995997e-06, 1.7769999999979469e-06, 1.5000000000015001e-06, 1.6250000000016251e-06, 1.7639999999978506e-06, 1.6670000000003349e-06, 1.903000000001015e-06, 1.819000000000126e-06, 1.5969999999990159e-06, 1.4029999999970455e-06, 1.8749999999984057e-06, 1.7220000000026103e-06, 1.4860000000019302e-06, 1.7219999999991409e-06, 1.6250000000016251e-06, 1.568999999999876e-06, 1.4309999999996548e-06, 1.7499999999982807e-06, 1.6389999999977256e-06, 1.819000000000126e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.7779999999974205e-06, 1.4309999999996548e-06]</msg>
<status status="PASS" starttime="20201110 08:36:51.268" endtime="20201110 08:36:51.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.264" endtime="20201110 08:36:51.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.273" endtime="20201110 08:36:51.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.276" endtime="20201110 08:36:51.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.274" endtime="20201110 08:36:51.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.271" endtime="20201110 08:36:51.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.911" endtime="20201110 08:36:51.297"></status>
</kw>
<msg timestamp="20201110 08:36:51.297" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.304" endtime="20201110 08:36:51.315"></status>
</kw>
<msg timestamp="20201110 08:36:51.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.303" endtime="20201110 08:36:51.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.316" endtime="20201110 08:36:51.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.319" endtime="20201110 08:36:51.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.300" endtime="20201110 08:36:51.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.299" endtime="20201110 08:36:51.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.328" endtime="20201110 08:36:51.596"></status>
</kw>
<msg timestamp="20201110 08:36:51.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.326" endtime="20201110 08:36:51.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.599" endtime="20201110 08:36:51.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.605" endtime="20201110 08:36:51.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.324" endtime="20201110 08:36:51.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.322" endtime="20201110 08:36:51.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.611" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:51.610" endtime="20201110 08:36:51.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.615" level="INFO">VALUE: [{'time': 0.018938431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018941653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018943069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018946597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018948139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018949542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018950958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018952583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018954222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018956139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018957792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018959181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018960917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018962708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018964319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018966208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018967986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018969667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018971153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018972847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018974389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018976014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018977681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018978972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2910000000004862e-06, 'source_diff': 1.2910000000004862e-06}, {'time': 0.018980667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018982083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018983528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018985125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018986569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018988292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018989889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018991389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018993264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018995083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018996681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018998556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019000222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019002028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019003875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019005431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019007319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.019008736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4169999999966154e-06, 'source_diff': 1.4169999999966154e-06}, {'time': 0.019010486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019012278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019013694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.019015458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019017333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019018903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:51.612" endtime="20201110 08:36:51.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.608" endtime="20201110 08:36:51.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:51.630" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:51.617" endtime="20201110 08:36:51.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.634" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:51.633" endtime="20201110 08:36:51.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.637" level="INFO">VALUE: {'sourcediff': [0, 1.5830000000029154e-06, 1.6389999999977256e-06, 1.4160000000006112e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.4160000000006112e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.3889999999974756e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.6109999999985858e-06, 1.8889999999979756e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.4860000000019302e-06, 1.694000000000001e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.2910000000004862e-06, 1.6949999999994747e-06, 1.4160000000006112e-06, 1.4449999999992247e-06, 1.5969999999990159e-06, 1.443999999999751e-06, 1.723000000002084e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.598000000001959e-06, 1.8749999999984057e-06, 1.6660000000008612e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.5559999999997798e-06, 1.8880000000019714e-06, 1.4169999999966154e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.4160000000006112e-06, 1.7639999999978506e-06, 1.8750000000018752e-06, 1.5699999999993497e-06], 'eventsource_diff': [0, 1.5830000000029154e-06, 1.6389999999977256e-06, 1.4160000000006112e-06, 1.653000000000765e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.4160000000006112e-06, 1.6249999999981557e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.3889999999974756e-06, 1.7360000000021802e-06, 1.7910000000009862e-06, 1.6109999999985858e-06, 1.8889999999979756e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.4860000000019302e-06, 1.694000000000001e-06, 1.5420000000002099e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.2910000000004862e-06, 1.6949999999994747e-06, 1.4160000000006112e-06, 1.4449999999992247e-06, 1.5969999999990159e-06, 1.443999999999751e-06, 1.723000000002084e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.598000000001959e-06, 1.8749999999984057e-06, 1.6660000000008612e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.5559999999997798e-06, 1.8880000000019714e-06, 1.4169999999966154e-06, 1.7500000000017502e-06, 1.7920000000004599e-06, 1.4160000000006112e-06, 1.7639999999978506e-06, 1.8750000000018752e-06, 1.5699999999993497e-06], 'time': [0.018938431, 0.018940014, 0.018941653, 0.018943069, 0.018944722, 0.018946597, 0.018948139, 0.018949542, 0.018950958, 0.018952583, 0.018954222, 0.018956139, 0.018957792, 0.018959181, 0.018960917, 0.018962708, 0.018964319, 0.018966208, 0.018967986, 0.018969667, 0.018971153, 0.018972847, 0.018974389, 0.018976014, 0.018977681, 0.018978972, 0.018980667, 0.018982083, 0.018983528, 0.018985125, 0.018986569, 0.018988292, 0.018989889, 0.018991389, 0.018993264, 0.018995083, 0.018996681, 0.018998556, 0.019000222, 0.019002028, 0.019003875, 0.019005431, 0.019007319, 0.019008736, 0.019010486, 0.019012278, 0.019013694, 0.019015458, 0.019017333, 0.019018903]}</msg>
<status status="PASS" starttime="20201110 08:36:51.635" endtime="20201110 08:36:51.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.631" endtime="20201110 08:36:51.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.641" level="INFO">${RESULT} = [{'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018943069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:51.639" endtime="20201110 08:36:51.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:51.649" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:51.642" endtime="20201110 08:36:51.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.653" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:51.652" endtime="20201110 08:36:51.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.656" level="INFO">VALUE: [1.5830000000029154e-06, 1.4160000000006112e-06, 1.8749999999984057e-06, 1.403000000000515e-06, 1.6249999999981557e-06, 1.917000000000585e-06, 1.3889999999974756e-06, 1.7910000000009862e-06, 1.8889999999979756e-06, 1.6809999999999048e-06, 1.694000000000001e-06, 1.6249999999981557e-06, 1.2910000000004862e-06, 1.4160000000006112e-06, 1.5969999999990159e-06, 1.723000000002084e-06, 1.5000000000015001e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.5559999999997798e-06, 1.4169999999966154e-06, 1.7920000000004599e-06, 1.7639999999978506e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201110 08:36:51.654" endtime="20201110 08:36:51.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.650" endtime="20201110 08:36:51.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.659" endtime="20201110 08:36:51.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.662" endtime="20201110 08:36:51.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.661" endtime="20201110 08:36:51.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.657" endtime="20201110 08:36:51.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.297" endtime="20201110 08:36:51.683"></status>
</kw>
<msg timestamp="20201110 08:36:51.683" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.692" endtime="20201110 08:36:51.702"></status>
</kw>
<msg timestamp="20201110 08:36:51.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.690" endtime="20201110 08:36:51.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.703" endtime="20201110 08:36:51.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.706" endtime="20201110 08:36:51.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.687" endtime="20201110 08:36:51.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.685" endtime="20201110 08:36:51.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.715" endtime="20201110 08:36:51.978"></status>
</kw>
<msg timestamp="20201110 08:36:51.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019143167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019145111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.713" endtime="20201110 08:36:51.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019143167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019145111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.981" endtime="20201110 08:36:51.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.986" endtime="20201110 08:36:51.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.711" endtime="20201110 08:36:51.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.709" endtime="20201110 08:36:51.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.993" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:51.991" endtime="20201110 08:36:51.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.996" level="INFO">VALUE: [{'time': 0.019143167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019145111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019146708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019148375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019149861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019151778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.0191535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019155278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019156722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019158208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019160042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.0191615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019162861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.01916475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019166236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019168153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019170083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019171833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.019175347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019177194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.01917875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019180194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019181694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019183042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.019184944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.019186292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.019188014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019189694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.019191431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7369999999981844e-06, 'source_diff': 1.7369999999981844e-06}, {'time': 0.019193347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.019194931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019196458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019198153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019200014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019201556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019203333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.019205097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019206819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019208417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019210125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.019211944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019213861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.019215431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.019217, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019218931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.019220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.019222222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019223833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:51.994" endtime="20201110 08:36:51.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.989" endtime="20201110 08:36:51.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:52.012" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:51.998" endtime="20201110 08:36:52.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.016" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:52.015" endtime="20201110 08:36:52.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.019" level="INFO">VALUE: {'sourcediff': [0, 1.944000000000251e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.4860000000019302e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.443999999999751e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.4580000000027904e-06, 1.3609999999983358e-06, 1.889000000001445e-06, 1.4859999999984608e-06, 1.917000000000585e-06, 1.930000000000681e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.915999999997642e-06, 1.8470000000027353e-06, 1.5559999999997798e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.348000000001709e-06, 1.901999999998072e-06, 1.348000000001709e-06, 1.7219999999991409e-06, 1.6800000000004311e-06, 1.7369999999981844e-06, 1.9160000000011113e-06, 1.5839999999989196e-06, 1.5270000000011663e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.5420000000002099e-06, 1.7769999999979469e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.5979999999984895e-06, 1.7080000000030404e-06, 1.819000000000126e-06, 1.9169999999971155e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.8049999999970867e-06, 1.4860000000019302e-06, 1.6109999999985858e-06, 1.848000000002209e-06], 'eventsource_diff': [0, 1.944000000000251e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.4860000000019302e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.77800000000089e-06, 1.443999999999751e-06, 1.4859999999984608e-06, 1.8339999999991696e-06, 1.4580000000027904e-06, 1.3609999999983358e-06, 1.889000000001445e-06, 1.4859999999984608e-06, 1.917000000000585e-06, 1.930000000000681e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.915999999997642e-06, 1.8470000000027353e-06, 1.5559999999997798e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.348000000001709e-06, 1.901999999998072e-06, 1.348000000001709e-06, 1.7219999999991409e-06, 1.6800000000004311e-06, 1.7369999999981844e-06, 1.9160000000011113e-06, 1.5839999999989196e-06, 1.5270000000011663e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.5420000000002099e-06, 1.7769999999979469e-06, 1.76400000000132e-06, 1.7219999999991409e-06, 1.5979999999984895e-06, 1.7080000000030404e-06, 1.819000000000126e-06, 1.9169999999971155e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.8049999999970867e-06, 1.4860000000019302e-06, 1.6109999999985858e-06, 1.848000000002209e-06], 'time': [0.019143167, 0.019145111, 0.019146708, 0.019148375, 0.019149861, 0.019151778, 0.0191535, 0.019155278, 0.019156722, 0.019158208, 0.019160042, 0.0191615, 0.019162861, 0.01916475, 0.019166236, 0.019168153, 0.019170083, 0.019171833, 0.019173431, 0.019175347, 0.019177194, 0.01917875, 0.019180194, 0.019181694, 0.019183042, 0.019184944, 0.019186292, 0.019188014, 0.019189694, 0.019191431, 0.019193347, 0.019194931, 0.019196458, 0.019198153, 0.019200014, 0.019201556, 0.019203333, 0.019205097, 0.019206819, 0.019208417, 0.019210125, 0.019211944, 0.019213861, 0.019215431, 0.019217, 0.019218931, 0.019220736, 0.019222222, 0.019223833, 0.019225681]}</msg>
<status status="PASS" starttime="20201110 08:36:52.017" endtime="20201110 08:36:52.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.013" endtime="20201110 08:36:52.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.023" level="INFO">${RESULT} = [{'time': 0.019145111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019148375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:52.021" endtime="20201110 08:36:52.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:52.031" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:52.024" endtime="20201110 08:36:52.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.036" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:52.035" endtime="20201110 08:36:52.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.038" level="INFO">VALUE: [1.944000000000251e-06, 1.6670000000003349e-06, 1.917000000000585e-06, 1.77800000000089e-06, 1.4859999999984608e-06, 1.4580000000027904e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.7499999999982807e-06, 1.915999999997642e-06, 1.5559999999997798e-06, 1.4999999999980307e-06, 1.901999999998072e-06, 1.7219999999991409e-06, 1.7369999999981844e-06, 1.5839999999989196e-06, 1.6949999999994747e-06, 1.5420000000002099e-06, 1.76400000000132e-06, 1.5979999999984895e-06, 1.819000000000126e-06, 1.5700000000028191e-06, 1.931000000000155e-06, 1.4860000000019302e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201110 08:36:52.037" endtime="20201110 08:36:52.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.032" endtime="20201110 08:36:52.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.041" endtime="20201110 08:36:52.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.045" endtime="20201110 08:36:52.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.043" endtime="20201110 08:36:52.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.040" endtime="20201110 08:36:52.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.684" endtime="20201110 08:36:52.066"></status>
</kw>
<msg timestamp="20201110 08:36:52.066" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.074" endtime="20201110 08:36:52.083"></status>
</kw>
<msg timestamp="20201110 08:36:52.083" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.072" endtime="20201110 08:36:52.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.084" endtime="20201110 08:36:52.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.087" endtime="20201110 08:36:52.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.070" endtime="20201110 08:36:52.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.068" endtime="20201110 08:36:52.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.096" endtime="20201110 08:36:52.366"></status>
</kw>
<msg timestamp="20201110 08:36:52.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018147792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.094" endtime="20201110 08:36:52.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018147792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.369" endtime="20201110 08:36:52.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.374" endtime="20201110 08:36:52.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.091" endtime="20201110 08:36:52.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.090" endtime="20201110 08:36:52.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.381" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:52.380" endtime="20201110 08:36:52.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.384" level="INFO">VALUE: [{'time': 0.018146125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018147792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.0181495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018151069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018152472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018153903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018155458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018157111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018159028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018160458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018162375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018164069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.01816575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018167403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018169097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018170694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018172347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018174194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018175958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018177653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018179528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018181111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018182514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018184431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018185833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4019999999975719e-06, 'source_diff': 1.4019999999975719e-06}, {'time': 0.018187681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018189361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018190722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018192125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018193944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.0181955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018197264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018199083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018200986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018202847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018204208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018205736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018207444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018209042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018212486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018214361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.01821625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018217736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018219208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018220903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018222611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018223972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.018225611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018227403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:52.382" endtime="20201110 08:36:52.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.378" endtime="20201110 08:36:52.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:52.400" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:52.387" endtime="20201110 08:36:52.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.403" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:52.403" endtime="20201110 08:36:52.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.407" level="INFO">VALUE: {'sourcediff': [0, 1.6670000000003349e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.403000000000515e-06, 1.4309999999996548e-06, 1.5550000000003061e-06, 1.653000000000765e-06, 1.917000000000585e-06, 1.4300000000001811e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.8470000000027353e-06, 1.7639999999978506e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.582999999999446e-06, 1.403000000000515e-06, 1.917000000000585e-06, 1.4019999999975719e-06, 1.848000000002209e-06, 1.6800000000004311e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.819000000000126e-06, 1.5559999999997798e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.3609999999983358e-06, 1.52800000000064e-06, 1.707999999999571e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.3610000000018052e-06, 1.6389999999977256e-06, 1.7920000000004599e-06], 'eventsource_diff': [0, 1.6670000000003349e-06, 1.707999999999571e-06, 1.568999999999876e-06, 1.403000000000515e-06, 1.4309999999996548e-06, 1.5550000000003061e-06, 1.653000000000765e-06, 1.917000000000585e-06, 1.4300000000001811e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.6809999999999048e-06, 1.6529999999972955e-06, 1.694000000000001e-06, 1.5970000000024853e-06, 1.6529999999972955e-06, 1.8470000000027353e-06, 1.7639999999978506e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.582999999999446e-06, 1.403000000000515e-06, 1.917000000000585e-06, 1.4019999999975719e-06, 1.848000000002209e-06, 1.6800000000004311e-06, 1.3609999999983358e-06, 1.403000000000515e-06, 1.819000000000126e-06, 1.5559999999997798e-06, 1.76400000000132e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.3609999999983358e-06, 1.52800000000064e-06, 1.707999999999571e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.3610000000018052e-06, 1.6389999999977256e-06, 1.7920000000004599e-06], 'time': [0.018146125, 0.018147792, 0.0181495, 0.018151069, 0.018152472, 0.018153903, 0.018155458, 0.018157111, 0.018159028, 0.018160458, 0.018162375, 0.018164069, 0.01816575, 0.018167403, 0.018169097, 0.018170694, 0.018172347, 0.018174194, 0.018175958, 0.018177653, 0.018179528, 0.018181111, 0.018182514, 0.018184431, 0.018185833, 0.018187681, 0.018189361, 0.018190722, 0.018192125, 0.018193944, 0.0181955, 0.018197264, 0.018199083, 0.018200986, 0.018202847, 0.018204208, 0.018205736, 0.018207444, 0.018209042, 0.018210667, 0.018212486, 0.018214361, 0.01821625, 0.018217736, 0.018219208, 0.018220903, 0.018222611, 0.018223972, 0.018225611, 0.018227403]}</msg>
<status status="PASS" starttime="20201110 08:36:52.405" endtime="20201110 08:36:52.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.401" endtime="20201110 08:36:52.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.411" level="INFO">${RESULT} = [{'time': 0.018147792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018151069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:52.408" endtime="20201110 08:36:52.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:52.420" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:52.412" endtime="20201110 08:36:52.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.424" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:52.423" endtime="20201110 08:36:52.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.426" level="INFO">VALUE: [1.6670000000003349e-06, 1.568999999999876e-06, 1.4309999999996548e-06, 1.653000000000765e-06, 1.4300000000001811e-06, 1.694000000000001e-06, 1.6529999999972955e-06, 1.5970000000024853e-06, 1.8470000000027353e-06, 1.6949999999994747e-06, 1.582999999999446e-06, 1.917000000000585e-06, 1.848000000002209e-06, 1.3609999999983358e-06, 1.819000000000126e-06, 1.76400000000132e-06, 1.9029999999975455e-06, 1.3609999999983358e-06, 1.707999999999571e-06, 1.6249999999981557e-06, 1.8749999999984057e-06, 1.4860000000019302e-06, 1.6949999999994747e-06, 1.3610000000018052e-06, 1.7920000000004599e-06]</msg>
<status status="PASS" starttime="20201110 08:36:52.425" endtime="20201110 08:36:52.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.421" endtime="20201110 08:36:52.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.430" endtime="20201110 08:36:52.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.433" endtime="20201110 08:36:52.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.432" endtime="20201110 08:36:52.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.428" endtime="20201110 08:36:52.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.067" endtime="20201110 08:36:52.454"></status>
</kw>
<msg timestamp="20201110 08:36:52.454" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.462" endtime="20201110 08:36:52.472"></status>
</kw>
<msg timestamp="20201110 08:36:52.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.461" endtime="20201110 08:36:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.474" endtime="20201110 08:36:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.476" endtime="20201110 08:36:52.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.458" endtime="20201110 08:36:52.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.456" endtime="20201110 08:36:52.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.485" endtime="20201110 08:36:52.750"></status>
</kw>
<msg timestamp="20201110 08:36:52.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.484" endtime="20201110 08:36:52.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019193056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.753" endtime="20201110 08:36:52.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.758" endtime="20201110 08:36:52.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.481" endtime="20201110 08:36:52.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.480" endtime="20201110 08:36:52.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.764" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:52.763" endtime="20201110 08:36:52.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.768" level="INFO">VALUE: [{'time': 0.019193056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019196236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019198083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019199861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.019201458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019203181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019204833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019208444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.019209944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019211597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019213014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.0192145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019216125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019217556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019218903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019220389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019221917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019223472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.019225028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.019226667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019228139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.019230056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.019231389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3330000000026654e-06, 'source_diff': 1.3330000000026654e-06}, {'time': 0.019233431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0419999999972405e-06, 'source_diff': 2.0419999999972405e-06}, {'time': 0.019235292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019237, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019240389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019241903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019243319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.019245181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.019246694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.019248417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.019250069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019251694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019253292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.019255042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019256778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019258333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019259889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019261486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019262972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019264819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019266556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.019268403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.01927, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019271556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019273292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:52.766" endtime="20201110 08:36:52.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.761" endtime="20201110 08:36:52.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:52.784" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:52.770" endtime="20201110 08:36:52.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.788" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:52.787" endtime="20201110 08:36:52.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.791" level="INFO">VALUE: {'sourcediff': [0, 1.5550000000003061e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.7779999999974205e-06, 1.5970000000024853e-06, 1.7229999999986145e-06, 1.6520000000012913e-06, 1.7229999999986145e-06, 1.8880000000019714e-06, 1.4999999999980307e-06, 1.653000000000765e-06, 1.4170000000000849e-06, 1.4859999999984608e-06, 1.6250000000016251e-06, 1.4309999999996548e-06, 1.3469999999987659e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5549999999968367e-06, 1.5560000000032492e-06, 1.6389999999977256e-06, 1.4720000000023603e-06, 1.9169999999971155e-06, 1.3330000000026654e-06, 2.0419999999972405e-06, 1.8610000000023053e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.4159999999971418e-06, 1.862000000001779e-06, 1.5130000000015964e-06, 1.7229999999986145e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5970000000024853e-06, 1.4859999999984608e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.846999999999266e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.7360000000021802e-06], 'eventsource_diff': [0, 1.5550000000003061e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.7779999999974205e-06, 1.5970000000024853e-06, 1.7229999999986145e-06, 1.6520000000012913e-06, 1.7229999999986145e-06, 1.8880000000019714e-06, 1.4999999999980307e-06, 1.653000000000765e-06, 1.4170000000000849e-06, 1.4859999999984608e-06, 1.6250000000016251e-06, 1.4309999999996548e-06, 1.3469999999987659e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5549999999968367e-06, 1.5560000000032492e-06, 1.6389999999977256e-06, 1.4720000000023603e-06, 1.9169999999971155e-06, 1.3330000000026654e-06, 2.0419999999972405e-06, 1.8610000000023053e-06, 1.707999999999571e-06, 1.846999999999266e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.4159999999971418e-06, 1.862000000001779e-06, 1.5130000000015964e-06, 1.7229999999986145e-06, 1.6520000000012913e-06, 1.6249999999981557e-06, 1.598000000001959e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5970000000024853e-06, 1.4859999999984608e-06, 1.846999999999266e-06, 1.7370000000016539e-06, 1.846999999999266e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.7360000000021802e-06], 'time': [0.019193056, 0.019194611, 0.019196236, 0.019198083, 0.019199861, 0.019201458, 0.019203181, 0.019204833, 0.019206556, 0.019208444, 0.019209944, 0.019211597, 0.019213014, 0.0192145, 0.019216125, 0.019217556, 0.019218903, 0.019220389, 0.019221917, 0.019223472, 0.019225028, 0.019226667, 0.019228139, 0.019230056, 0.019231389, 0.019233431, 0.019235292, 0.019237, 0.019238847, 0.019240389, 0.019241903, 0.019243319, 0.019245181, 0.019246694, 0.019248417, 0.019250069, 0.019251694, 0.019253292, 0.019255042, 0.019256778, 0.019258333, 0.019259889, 0.019261486, 0.019262972, 0.019264819, 0.019266556, 0.019268403, 0.01927, 0.019271556, 0.019273292]}</msg>
<status status="PASS" starttime="20201110 08:36:52.789" endtime="20201110 08:36:52.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.785" endtime="20201110 08:36:52.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.795" level="INFO">${RESULT} = [{'time': 0.019194611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019198083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:52.792" endtime="20201110 08:36:52.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:52.803" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:52.796" endtime="20201110 08:36:52.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:52.806" endtime="20201110 08:36:52.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.809" level="INFO">VALUE: [1.5550000000003061e-06, 1.8470000000027353e-06, 1.5970000000024853e-06, 1.6520000000012913e-06, 1.8880000000019714e-06, 1.653000000000765e-06, 1.4859999999984608e-06, 1.4309999999996548e-06, 1.4860000000019302e-06, 1.5549999999968367e-06, 1.6389999999977256e-06, 1.9169999999971155e-06, 2.0419999999972405e-06, 1.707999999999571e-06, 1.5420000000002099e-06, 1.4159999999971418e-06, 1.5130000000015964e-06, 1.6520000000012913e-06, 1.598000000001959e-06, 1.7359999999987108e-06, 1.5559999999997798e-06, 1.4859999999984608e-06, 1.7370000000016539e-06, 1.5969999999990159e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201110 08:36:52.808" endtime="20201110 08:36:52.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.804" endtime="20201110 08:36:52.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.813" endtime="20201110 08:36:52.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.816" endtime="20201110 08:36:52.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.815" endtime="20201110 08:36:52.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.811" endtime="20201110 08:36:52.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.455" endtime="20201110 08:36:52.837"></status>
</kw>
<msg timestamp="20201110 08:36:52.837" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.845" endtime="20201110 08:36:52.854"></status>
</kw>
<msg timestamp="20201110 08:36:52.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.843" endtime="20201110 08:36:52.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.856" endtime="20201110 08:36:52.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.858" endtime="20201110 08:36:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.841" endtime="20201110 08:36:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.839" endtime="20201110 08:36:52.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.867" endtime="20201110 08:36:53.130"></status>
</kw>
<msg timestamp="20201110 08:36:53.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.866" endtime="20201110 08:36:53.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.133" endtime="20201110 08:36:53.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.139" endtime="20201110 08:36:53.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.863" endtime="20201110 08:36:53.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.861" endtime="20201110 08:36:53.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.145" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:53.144" endtime="20201110 08:36:53.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.149" level="INFO">VALUE: [{'time': 0.018195306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018197139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018198986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018200611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018202222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018204, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018205472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018207194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018208736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018210139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018211736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018213556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018215264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018216847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018218417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018219986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018221875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018223514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018225375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018227056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018228792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018230625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018232056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018233597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018235458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018236958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018238319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018240042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018241778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018243403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018245097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018246625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018248389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018249903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018251278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.018253014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018254778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018256514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018258194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018259764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018261208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018262569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018264375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018266056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018267542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018269069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.0182705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018272403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018274167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018275611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:53.146" endtime="20201110 08:36:53.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.142" endtime="20201110 08:36:53.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:53.164" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.151" endtime="20201110 08:36:53.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.168" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:53.167" endtime="20201110 08:36:53.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.171" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 1.832999999999696e-06, 1.846999999999266e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.77800000000089e-06, 1.4719999999988909e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.5969999999990159e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.6809999999999048e-06, 1.7360000000021802e-06, 1.832999999999696e-06, 1.4309999999996548e-06, 1.5410000000007362e-06, 1.8609999999988358e-06, 1.5000000000015001e-06, 1.3609999999983358e-06, 1.723000000002084e-06, 1.7359999999987108e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.76400000000132e-06, 1.51400000000107e-06, 1.3749999999979057e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.6799999999969617e-06, 1.5700000000028191e-06, 1.443999999999751e-06, 1.3609999999983358e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.4860000000019302e-06, 1.5269999999976969e-06, 1.4309999999996548e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.443999999999751e-06], 'eventsource_diff': [0, 1.832999999999696e-06, 1.846999999999266e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.77800000000089e-06, 1.4719999999988909e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.5969999999990159e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.5830000000029154e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.8889999999979756e-06, 1.639000000001195e-06, 1.8609999999988358e-06, 1.6809999999999048e-06, 1.7360000000021802e-06, 1.832999999999696e-06, 1.4309999999996548e-06, 1.5410000000007362e-06, 1.8609999999988358e-06, 1.5000000000015001e-06, 1.3609999999983358e-06, 1.723000000002084e-06, 1.7359999999987108e-06, 1.6249999999981557e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.76400000000132e-06, 1.51400000000107e-06, 1.3749999999979057e-06, 1.7360000000021802e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 1.6799999999969617e-06, 1.5700000000028191e-06, 1.443999999999751e-06, 1.3609999999983358e-06, 1.8060000000000298e-06, 1.6809999999999048e-06, 1.4860000000019302e-06, 1.5269999999976969e-06, 1.4309999999996548e-06, 1.903000000001015e-06, 1.76400000000132e-06, 1.443999999999751e-06], 'time': [0.018195306, 0.018197139, 0.018198986, 0.018200611, 0.018202222, 0.018204, 0.018205472, 0.018207194, 0.018208736, 0.018210139, 0.018211736, 0.018213556, 0.018215264, 0.018216847, 0.018218417, 0.018219986, 0.018221875, 0.018223514, 0.018225375, 0.018227056, 0.018228792, 0.018230625, 0.018232056, 0.018233597, 0.018235458, 0.018236958, 0.018238319, 0.018240042, 0.018241778, 0.018243403, 0.018245097, 0.018246625, 0.018248389, 0.018249903, 0.018251278, 0.018253014, 0.018254778, 0.018256514, 0.018258194, 0.018259764, 0.018261208, 0.018262569, 0.018264375, 0.018266056, 0.018267542, 0.018269069, 0.0182705, 0.018272403, 0.018274167, 0.018275611]}</msg>
<status status="PASS" starttime="20201110 08:36:53.169" endtime="20201110 08:36:53.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.165" endtime="20201110 08:36:53.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.175" level="INFO">${RESULT} = [{'time': 0.018197139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018200611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.173" endtime="20201110 08:36:53.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:53.183" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.176" endtime="20201110 08:36:53.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.187" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:53.186" endtime="20201110 08:36:53.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.190" level="INFO">VALUE: [1.832999999999696e-06, 1.6249999999981557e-06, 1.77800000000089e-06, 1.7219999999991409e-06, 1.403000000000515e-06, 1.8199999999995997e-06, 1.5830000000029154e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.723000000002084e-06, 1.6249999999981557e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.5700000000028191e-06, 1.3609999999983358e-06, 1.6809999999999048e-06, 1.5269999999976969e-06, 1.903000000001015e-06, 1.443999999999751e-06]</msg>
<status status="PASS" starttime="20201110 08:36:53.188" endtime="20201110 08:36:53.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.184" endtime="20201110 08:36:53.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.193" endtime="20201110 08:36:53.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.196" endtime="20201110 08:36:53.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.195" endtime="20201110 08:36:53.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.191" endtime="20201110 08:36:53.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.838" endtime="20201110 08:36:53.217"></status>
</kw>
<msg timestamp="20201110 08:36:53.217" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.225" endtime="20201110 08:36:53.235"></status>
</kw>
<msg timestamp="20201110 08:36:53.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.223" endtime="20201110 08:36:53.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.237" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.236" endtime="20201110 08:36:53.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.238" endtime="20201110 08:36:53.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.221" endtime="20201110 08:36:53.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.219" endtime="20201110 08:36:53.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.248" endtime="20201110 08:36:53.518"></status>
</kw>
<msg timestamp="20201110 08:36:53.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018065403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018067111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.247" endtime="20201110 08:36:53.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018065403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018067111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.521" endtime="20201110 08:36:53.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.526" endtime="20201110 08:36:53.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.243" endtime="20201110 08:36:53.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.242" endtime="20201110 08:36:53.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.532" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:53.531" endtime="20201110 08:36:53.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.536" level="INFO">VALUE: [{'time': 0.018065403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018067111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018068778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018070611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018072208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018074111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018075722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018077375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018078806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018080417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018082153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018083597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018085222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018086875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018088347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018090042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018091431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018093042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018094875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018096667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018100042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018101889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018103514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018105, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018106542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018108028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018109806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018112806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018114139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3330000000026654e-06, 'source_diff': 1.3330000000026654e-06}, {'time': 0.018115903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018117542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018119417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018121153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018122778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018124153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018125722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018127653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018129139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018130514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018131861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.018133778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018135556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018137208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018138556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.018139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.01814175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018143208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018144986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:53.533" endtime="20201110 08:36:53.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.529" endtime="20201110 08:36:53.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:53.551" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.538" endtime="20201110 08:36:53.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.555" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:53.554" endtime="20201110 08:36:53.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.558" level="INFO">VALUE: {'sourcediff': [0, 1.707999999999571e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.5969999999990159e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.4309999999996548e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.443999999999751e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.4720000000023603e-06, 1.6949999999994747e-06, 1.389000000000945e-06, 1.6109999999985858e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.6250000000016251e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.7779999999974205e-06, 1.5410000000007362e-06, 1.4589999999987946e-06, 1.3330000000026654e-06, 1.7639999999978506e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.7360000000021802e-06, 1.6249999999981557e-06, 1.3750000000013751e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.4859999999984608e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.917000000000585e-06, 1.77800000000089e-06, 1.6519999999978219e-06, 1.348000000001709e-06, 1.3750000000013751e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.7779999999974205e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 1.707999999999571e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.5969999999990159e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.653000000000765e-06, 1.4309999999996548e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.443999999999751e-06, 1.6250000000016251e-06, 1.6529999999972955e-06, 1.4720000000023603e-06, 1.6949999999994747e-06, 1.389000000000945e-06, 1.6109999999985858e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.846999999999266e-06, 1.6250000000016251e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.7779999999974205e-06, 1.5410000000007362e-06, 1.4589999999987946e-06, 1.3330000000026654e-06, 1.7639999999978506e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.7360000000021802e-06, 1.6249999999981557e-06, 1.3750000000013751e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.4859999999984608e-06, 1.3750000000013751e-06, 1.3469999999987659e-06, 1.917000000000585e-06, 1.77800000000089e-06, 1.6519999999978219e-06, 1.348000000001709e-06, 1.3750000000013751e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.7779999999974205e-06], 'time': [0.018065403, 0.018067111, 0.018068778, 0.018070611, 0.018072208, 0.018074111, 0.018075722, 0.018077375, 0.018078806, 0.018080417, 0.018082153, 0.018083597, 0.018085222, 0.018086875, 0.018088347, 0.018090042, 0.018091431, 0.018093042, 0.018094875, 0.018096667, 0.018098417, 0.018100042, 0.018101889, 0.018103514, 0.018105, 0.018106542, 0.018108028, 0.018109806, 0.018111347, 0.018112806, 0.018114139, 0.018115903, 0.018117542, 0.018119417, 0.018121153, 0.018122778, 0.018124153, 0.018125722, 0.018127653, 0.018129139, 0.018130514, 0.018131861, 0.018133778, 0.018135556, 0.018137208, 0.018138556, 0.018139931, 0.01814175, 0.018143208, 0.018144986]}</msg>
<status status="PASS" starttime="20201110 08:36:53.556" endtime="20201110 08:36:53.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.552" endtime="20201110 08:36:53.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.562" level="INFO">${RESULT} = [{'time': 0.018067111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018070611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.560" endtime="20201110 08:36:53.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:53.570" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.563" endtime="20201110 08:36:53.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.574" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:53.573" endtime="20201110 08:36:53.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.577" level="INFO">VALUE: [1.707999999999571e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.653000000000765e-06, 1.6110000000020552e-06, 1.443999999999751e-06, 1.6529999999972955e-06, 1.6949999999994747e-06, 1.6109999999985858e-06, 1.7920000000004599e-06, 1.6250000000016251e-06, 1.6250000000016251e-06, 1.5420000000002099e-06, 1.7779999999974205e-06, 1.4589999999987946e-06, 1.7639999999978506e-06, 1.8749999999984057e-06, 1.6249999999981557e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.3469999999987659e-06, 1.77800000000089e-06, 1.348000000001709e-06, 1.819000000000126e-06, 1.7779999999974205e-06]</msg>
<status status="PASS" starttime="20201110 08:36:53.576" endtime="20201110 08:36:53.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.571" endtime="20201110 08:36:53.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.580" endtime="20201110 08:36:53.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.584" endtime="20201110 08:36:53.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.582" endtime="20201110 08:36:53.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.579" endtime="20201110 08:36:53.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.218" endtime="20201110 08:36:53.604"></status>
</kw>
<msg timestamp="20201110 08:36:53.604" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.612" endtime="20201110 08:36:53.622"></status>
</kw>
<msg timestamp="20201110 08:36:53.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.610" endtime="20201110 08:36:53.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.624" endtime="20201110 08:36:53.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.626" endtime="20201110 08:36:53.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.608" endtime="20201110 08:36:53.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.606" endtime="20201110 08:36:53.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.635" endtime="20201110 08:36:53.904"></status>
</kw>
<msg timestamp="20201110 08:36:53.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.634" endtime="20201110 08:36:53.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.907" endtime="20201110 08:36:53.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.912" endtime="20201110 08:36:53.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.631" endtime="20201110 08:36:53.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.629" endtime="20201110 08:36:53.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.918" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:53.917" endtime="20201110 08:36:53.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.922" level="INFO">VALUE: [{'time': 0.018937889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018939958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.069000000000376e-06, 'source_diff': 2.069000000000376e-06}, {'time': 0.018941708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018943639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018945292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018946931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018948833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.0189505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.018951972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018953333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.018954972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018956597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018958042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018959764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018961583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018963028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018964708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018966278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018968153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018970083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018971986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018973903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018975764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018977347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018978931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018980778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018982569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018984319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018986167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018987819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018989361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018990875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018992639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.01899425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018995903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018997236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.018998944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019000333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019001764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019003653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019005194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019006556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019008403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019010069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019011417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3479999999982395e-06, 'source_diff': 1.3479999999982395e-06}, {'time': 0.019012764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019014972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.019016806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019018472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.01902, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:53.919" endtime="20201110 08:36:53.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.915" endtime="20201110 08:36:53.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:53.937" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.924" endtime="20201110 08:36:53.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.941" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:53.940" endtime="20201110 08:36:53.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.944" level="INFO">VALUE: {'sourcediff': [0, 2.069000000000376e-06, 1.7500000000017502e-06, 1.931000000000155e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.9020000000015413e-06, 1.6669999999968654e-06, 1.4720000000023603e-06, 1.3609999999983358e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.4450000000026941e-06, 1.7219999999991409e-06, 1.819000000000126e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.5699999999993497e-06, 1.8750000000018752e-06, 1.9299999999972117e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.846999999999266e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.7639999999978506e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.332999999999196e-06, 1.707999999999571e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.8889999999979756e-06, 1.5410000000007362e-06, 1.3620000000012789e-06, 1.846999999999266e-06, 1.6660000000008612e-06, 1.3479999999982395e-06, 1.3470000000022353e-06, 2.208000000000071e-06, 1.8339999999991696e-06, 1.6660000000008612e-06, 1.5279999999971705e-06], 'eventsource_diff': [0, 2.069000000000376e-06, 1.7500000000017502e-06, 1.931000000000155e-06, 1.6529999999972955e-06, 1.639000000001195e-06, 1.9020000000015413e-06, 1.6669999999968654e-06, 1.4720000000023603e-06, 1.3609999999983358e-06, 1.639000000001195e-06, 1.6249999999981557e-06, 1.4450000000026941e-06, 1.7219999999991409e-06, 1.819000000000126e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.5699999999993497e-06, 1.8750000000018752e-06, 1.9299999999972117e-06, 1.903000000001015e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.846999999999266e-06, 1.7910000000009862e-06, 1.7499999999982807e-06, 1.848000000002209e-06, 1.6519999999978219e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.7639999999978506e-06, 1.6110000000020552e-06, 1.653000000000765e-06, 1.332999999999196e-06, 1.707999999999571e-06, 1.389000000000945e-06, 1.4309999999996548e-06, 1.8889999999979756e-06, 1.5410000000007362e-06, 1.3620000000012789e-06, 1.846999999999266e-06, 1.6660000000008612e-06, 1.3479999999982395e-06, 1.3470000000022353e-06, 2.208000000000071e-06, 1.8339999999991696e-06, 1.6660000000008612e-06, 1.5279999999971705e-06], 'time': [0.018937889, 0.018939958, 0.018941708, 0.018943639, 0.018945292, 0.018946931, 0.018948833, 0.0189505, 0.018951972, 0.018953333, 0.018954972, 0.018956597, 0.018958042, 0.018959764, 0.018961583, 0.018963028, 0.018964708, 0.018966278, 0.018968153, 0.018970083, 0.018971986, 0.018973903, 0.018975764, 0.018977347, 0.018978931, 0.018980778, 0.018982569, 0.018984319, 0.018986167, 0.018987819, 0.018989361, 0.018990875, 0.018992639, 0.01899425, 0.018995903, 0.018997236, 0.018998944, 0.019000333, 0.019001764, 0.019003653, 0.019005194, 0.019006556, 0.019008403, 0.019010069, 0.019011417, 0.019012764, 0.019014972, 0.019016806, 0.019018472, 0.01902]}</msg>
<status status="PASS" starttime="20201110 08:36:53.942" endtime="20201110 08:36:53.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.938" endtime="20201110 08:36:53.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.948" level="INFO">${RESULT} = [{'time': 0.018939958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.069000000000376e-06, 'source_diff': 2.069000000000376e-06}, {'time': 0.018943639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.946" endtime="20201110 08:36:53.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:53.956" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:53.949" endtime="20201110 08:36:53.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.960" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:53.959" endtime="20201110 08:36:53.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.963" level="INFO">VALUE: [2.069000000000376e-06, 1.931000000000155e-06, 1.639000000001195e-06, 1.6669999999968654e-06, 1.3609999999983358e-06, 1.6249999999981557e-06, 1.7219999999991409e-06, 1.4449999999992247e-06, 1.5699999999993497e-06, 1.9299999999972117e-06, 1.917000000000585e-06, 1.582999999999446e-06, 1.846999999999266e-06, 1.7499999999982807e-06, 1.6519999999978219e-06, 1.51400000000107e-06, 1.6110000000020552e-06, 1.332999999999196e-06, 1.389000000000945e-06, 1.8889999999979756e-06, 1.3620000000012789e-06, 1.6660000000008612e-06, 1.3470000000022353e-06, 1.8339999999991696e-06, 1.5279999999971705e-06]</msg>
<status status="PASS" starttime="20201110 08:36:53.962" endtime="20201110 08:36:53.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.957" endtime="20201110 08:36:53.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.966" endtime="20201110 08:36:53.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.970" endtime="20201110 08:36:53.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.968" endtime="20201110 08:36:53.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.964" endtime="20201110 08:36:53.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.605" endtime="20201110 08:36:53.990"></status>
</kw>
<msg timestamp="20201110 08:36:53.990" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.999" endtime="20201110 08:36:54.009"></status>
</kw>
<msg timestamp="20201110 08:36:54.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.998" endtime="20201110 08:36:54.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.010" endtime="20201110 08:36:54.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.013" endtime="20201110 08:36:54.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.994" endtime="20201110 08:36:54.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.992" endtime="20201110 08:36:54.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.021" endtime="20201110 08:36:54.289"></status>
</kw>
<msg timestamp="20201110 08:36:54.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.020" endtime="20201110 08:36:54.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.292" endtime="20201110 08:36:54.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.298" endtime="20201110 08:36:54.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.017" endtime="20201110 08:36:54.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.016" endtime="20201110 08:36:54.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.304" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:54.303" endtime="20201110 08:36:54.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.308" level="INFO">VALUE: [{'time': 0.019830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019833944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019835708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019837306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019838792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019840708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019842583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019844056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.019845486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019846861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019848736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.01985025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019852056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019853653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019855153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019856583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019857931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3479999999982395e-06, 'source_diff': 1.3479999999982395e-06}, {'time': 0.0198595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019861125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019862653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019864569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019865931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019867972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.019869319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019871194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019872569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019874347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019875806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.019877194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3880000000014714e-06, 'source_diff': 1.3880000000014714e-06}, {'time': 0.019879069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019880444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019883847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019885181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3339999999986696e-06, 'source_diff': 1.3339999999986696e-06}, {'time': 0.019886569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3880000000014714e-06, 'source_diff': 1.3880000000014714e-06}, {'time': 0.019888389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019889778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.019891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019893389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019894847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.0198965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019898111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019899639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019901194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019902861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019904361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019906181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019907722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019909222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:54.305" endtime="20201110 08:36:54.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.301" endtime="20201110 08:36:54.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:54.323" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:54.310" endtime="20201110 08:36:54.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.327" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:54.326" endtime="20201110 08:36:54.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.330" level="INFO">VALUE: {'sourcediff': [0, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.5979999999984895e-06, 1.4860000000019302e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.4729999999983645e-06, 1.4300000000001811e-06, 1.3750000000013751e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1.4300000000001811e-06, 1.3479999999982395e-06, 1.568999999999876e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.915999999997642e-06, 1.3620000000012789e-06, 2.0410000000012363e-06, 1.3469999999987659e-06, 1.8749999999984057e-06, 1.3750000000013751e-06, 1.77800000000089e-06, 1.4589999999987946e-06, 1.3880000000014714e-06, 1.8749999999984057e-06, 1.3750000000013751e-06, 1.6249999999981557e-06, 1.77800000000089e-06, 1.3339999999986696e-06, 1.3880000000014714e-06, 1.8199999999995997e-06, 1.389000000000945e-06, 1.694000000000001e-06, 1.917000000000585e-06, 1.457999999999321e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.8199999999995997e-06, 1.5410000000007362e-06, 1.5000000000015001e-06], 'eventsource_diff': [0, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.5979999999984895e-06, 1.4860000000019302e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.4729999999983645e-06, 1.4300000000001811e-06, 1.3750000000013751e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.8060000000000298e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1.4300000000001811e-06, 1.3479999999982395e-06, 1.568999999999876e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.915999999997642e-06, 1.3620000000012789e-06, 2.0410000000012363e-06, 1.3469999999987659e-06, 1.8749999999984057e-06, 1.3750000000013751e-06, 1.77800000000089e-06, 1.4589999999987946e-06, 1.3880000000014714e-06, 1.8749999999984057e-06, 1.3750000000013751e-06, 1.6249999999981557e-06, 1.77800000000089e-06, 1.3339999999986696e-06, 1.3880000000014714e-06, 1.8199999999995997e-06, 1.389000000000945e-06, 1.694000000000001e-06, 1.917000000000585e-06, 1.457999999999321e-06, 1.653000000000765e-06, 1.6109999999985858e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.8199999999995997e-06, 1.5410000000007362e-06, 1.5000000000015001e-06], 'time': [0.019830208, 0.019832069, 0.019833944, 0.019835708, 0.019837306, 0.019838792, 0.019840708, 0.019842583, 0.019844056, 0.019845486, 0.019846861, 0.019848736, 0.01985025, 0.019852056, 0.019853653, 0.019855153, 0.019856583, 0.019857931, 0.0198595, 0.019861125, 0.019862653, 0.019864569, 0.019865931, 0.019867972, 0.019869319, 0.019871194, 0.019872569, 0.019874347, 0.019875806, 0.019877194, 0.019879069, 0.019880444, 0.019882069, 0.019883847, 0.019885181, 0.019886569, 0.019888389, 0.019889778, 0.019891472, 0.019893389, 0.019894847, 0.0198965, 0.019898111, 0.019899639, 0.019901194, 0.019902861, 0.019904361, 0.019906181, 0.019907722, 0.019909222]}</msg>
<status status="PASS" starttime="20201110 08:36:54.328" endtime="20201110 08:36:54.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.324" endtime="20201110 08:36:54.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.334" level="INFO">${RESULT} = [{'time': 0.019832069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019835708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:54.332" endtime="20201110 08:36:54.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:54.342" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:54.335" endtime="20201110 08:36:54.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.347" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:54.346" endtime="20201110 08:36:54.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.349" level="INFO">VALUE: [1.8610000000023053e-06, 1.76400000000132e-06, 1.4860000000019302e-06, 1.8750000000018752e-06, 1.4300000000001811e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.5000000000015001e-06, 1.3479999999982395e-06, 1.6250000000016251e-06, 1.915999999997642e-06, 2.0410000000012363e-06, 1.8749999999984057e-06, 1.77800000000089e-06, 1.3880000000014714e-06, 1.3750000000013751e-06, 1.77800000000089e-06, 1.3880000000014714e-06, 1.389000000000945e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.6670000000003349e-06, 1.8199999999995997e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201110 08:36:54.348" endtime="20201110 08:36:54.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.343" endtime="20201110 08:36:54.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.352" endtime="20201110 08:36:54.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.356" endtime="20201110 08:36:54.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.354" endtime="20201110 08:36:54.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.351" endtime="20201110 08:36:54.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.991" endtime="20201110 08:36:54.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.442" endtime="20201110 08:36:54.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.380" endtime="20201110 08:36:54.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.379" endtime="20201110 08:36:54.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.378" endtime="20201110 08:36:54.400"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:46.372" endtime="20201110 08:36:54.401" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.408" endtime="20201110 08:36:54.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.406" endtime="20201110 08:36:54.428"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.441" endtime="20201110 08:36:54.454"></status>
</kw>
<msg timestamp="20201110 08:36:54.454" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.439" endtime="20201110 08:36:54.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.455" endtime="20201110 08:36:54.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.460" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:54.458" endtime="20201110 08:36:54.460"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:54.437" endtime="20201110 08:36:54.461"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:54.434" endtime="20201110 08:36:54.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.433" endtime="20201110 08:36:54.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:54.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:54.464" endtime="20201110 08:36:54.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.462" endtime="20201110 08:36:54.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.432" endtime="20201110 08:36:54.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.432" endtime="20201110 08:36:54.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.467" endtime="20201110 08:36:54.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.430" endtime="20201110 08:36:54.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.429" endtime="20201110 08:36:54.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.405" endtime="20201110 08:36:54.470"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:54.471" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.479" endtime="20201110 08:36:54.492"></status>
</kw>
<msg timestamp="20201110 08:36:54.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.477" endtime="20201110 08:36:54.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.494" endtime="20201110 08:36:54.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.496" endtime="20201110 08:36:54.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.475" endtime="20201110 08:36:54.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.473" endtime="20201110 08:36:54.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.506" endtime="20201110 08:36:54.791"></status>
</kw>
<msg timestamp="20201110 08:36:54.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063113556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063114528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.505" endtime="20201110 08:36:54.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063113556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063114528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.795" endtime="20201110 08:36:54.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.803" endtime="20201110 08:36:54.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.502" endtime="20201110 08:36:54.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.500" endtime="20201110 08:36:54.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.810" level="INFO">${RESULT} = [{'time': 0.063114528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.063116597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:54.807" endtime="20201110 08:36:54.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:54.824" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:54.811" endtime="20201110 08:36:54.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.828" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:54.827" endtime="20201110 08:36:54.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.831" level="INFO">VALUE: [9.720000000018603e-07, 8.32999999991757e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.32999999991757e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000047746e-07, 8.469999999982658e-07, 9.160000000035806e-07, 8.32999999991757e-07, 8.619999999903705e-07, 8.470000000121436e-07, 8.609999999908968e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.479999999977395e-07, 8.18999999999126e-07, 8.32999999991757e-07, 8.610000000047746e-07, 8.469999999982658e-07, 8.470000000121436e-07, 8.470000000121436e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.199999999985996e-07, 8.749999999974056e-07, 8.340000000051084e-07, 8.610000000047746e-07, 8.749999999974056e-07, 8.339999999912306e-07, 8.479999999977395e-07, 8.480000000116172e-07, 8.469999999982658e-07, 8.32999999991757e-07, 8.610000000047746e-07, 8.469999999982658e-07, 8.060000000059686e-07, 8.469999999982658e-07, 8.340000000051084e-07]</msg>
<status status="PASS" starttime="20201110 08:36:54.829" endtime="20201110 08:36:54.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.824" endtime="20201110 08:36:54.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.834" endtime="20201110 08:36:54.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.837" endtime="20201110 08:36:54.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.836" endtime="20201110 08:36:54.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.832" endtime="20201110 08:36:54.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.472" endtime="20201110 08:36:54.858"></status>
</kw>
<msg timestamp="20201110 08:36:54.858" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.866" endtime="20201110 08:36:54.878"></status>
</kw>
<msg timestamp="20201110 08:36:54.878" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.865" endtime="20201110 08:36:54.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.879" endtime="20201110 08:36:54.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.882" endtime="20201110 08:36:54.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.862" endtime="20201110 08:36:54.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.860" endtime="20201110 08:36:54.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.892" endtime="20201110 08:36:55.174"></status>
</kw>
<msg timestamp="20201110 08:36:55.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:54.890" endtime="20201110 08:36:55.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01996725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:55.178" endtime="20201110 08:36:55.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.186" endtime="20201110 08:36:55.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.887" endtime="20201110 08:36:55.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.885" endtime="20201110 08:36:55.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.193" level="INFO">${RESULT} = [{'time': 0.019968208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019970722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.190" endtime="20201110 08:36:55.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:55.206" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:55.194" endtime="20201110 08:36:55.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.210" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:55.209" endtime="20201110 08:36:55.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.213" level="INFO">VALUE: [9.580000000022904e-07, 7.909999999999862e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.18999999999126e-07, 8.470000000017353e-07, 7.920000000029292e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.330000000021653e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.610000000013052e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201110 08:36:55.211" endtime="20201110 08:36:55.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.207" endtime="20201110 08:36:55.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.216" endtime="20201110 08:36:55.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.220" endtime="20201110 08:36:55.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.218" endtime="20201110 08:36:55.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.214" endtime="20201110 08:36:55.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.859" endtime="20201110 08:36:55.241"></status>
</kw>
<msg timestamp="20201110 08:36:55.241" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.248" endtime="20201110 08:36:55.259"></status>
</kw>
<msg timestamp="20201110 08:36:55.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.247" endtime="20201110 08:36:55.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.261" endtime="20201110 08:36:55.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.263" endtime="20201110 08:36:55.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.244" endtime="20201110 08:36:55.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.243" endtime="20201110 08:36:55.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.273" endtime="20201110 08:36:55.564"></status>
</kw>
<msg timestamp="20201110 08:36:55.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.271" endtime="20201110 08:36:55.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.568" endtime="20201110 08:36:55.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.576" endtime="20201110 08:36:55.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.268" endtime="20201110 08:36:55.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.267" endtime="20201110 08:36:55.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.583" level="INFO">${RESULT} = [{'time': 0.019550028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.019552667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.579" endtime="20201110 08:36:55.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:55.597" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:55.584" endtime="20201110 08:36:55.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.601" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:55.600" endtime="20201110 08:36:55.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.603" level="INFO">VALUE: [9.720000000018603e-07, 8.89000000000445e-07, 8.049999999995561e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.620000000007788e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.749999999974056e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.339999999981695e-07, 9.030000000000149e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.750000000008751e-07, 7.919999999994598e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.479999999977395e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.620000000007788e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.470000000017353e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201110 08:36:55.602" endtime="20201110 08:36:55.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.598" endtime="20201110 08:36:55.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.607" endtime="20201110 08:36:55.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.610" endtime="20201110 08:36:55.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.609" endtime="20201110 08:36:55.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.605" endtime="20201110 08:36:55.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.241" endtime="20201110 08:36:55.631"></status>
</kw>
<msg timestamp="20201110 08:36:55.631" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.639" endtime="20201110 08:36:55.650"></status>
</kw>
<msg timestamp="20201110 08:36:55.650" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.637" endtime="20201110 08:36:55.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.651" endtime="20201110 08:36:55.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.654" endtime="20201110 08:36:55.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.635" endtime="20201110 08:36:55.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.633" endtime="20201110 08:36:55.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.663" endtime="20201110 08:36:55.945"></status>
</kw>
<msg timestamp="20201110 08:36:55.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019296944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.661" endtime="20201110 08:36:55.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019296944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.949" endtime="20201110 08:36:55.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.957" endtime="20201110 08:36:55.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.659" endtime="20201110 08:36:55.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.657" endtime="20201110 08:36:55.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.964" level="INFO">${RESULT} = [{'time': 0.019296944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019299, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:36:55.960" endtime="20201110 08:36:55.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:55.977" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:55.965" endtime="20201110 08:36:55.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.981" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:55.980" endtime="20201110 08:36:55.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.984" level="INFO">VALUE: [9.719999999983908e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.609999999978357e-07, 9.169999999995848e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.609999999978357e-07, 7.909999999999862e-07, 8.34000000001639e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.469999999982658e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.059999999990297e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201110 08:36:55.982" endtime="20201110 08:36:55.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.978" endtime="20201110 08:36:55.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.987" endtime="20201110 08:36:55.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.991" endtime="20201110 08:36:56.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.989" endtime="20201110 08:36:56.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.986" endtime="20201110 08:36:56.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.632" endtime="20201110 08:36:56.011"></status>
</kw>
<msg timestamp="20201110 08:36:56.011" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.019" endtime="20201110 08:36:56.030"></status>
</kw>
<msg timestamp="20201110 08:36:56.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.018" endtime="20201110 08:36:56.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.032" endtime="20201110 08:36:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.034" endtime="20201110 08:36:56.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.015" endtime="20201110 08:36:56.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.013" endtime="20201110 08:36:56.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.043" endtime="20201110 08:36:56.329"></status>
</kw>
<msg timestamp="20201110 08:36:56.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.042" endtime="20201110 08:36:56.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.333" endtime="20201110 08:36:56.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.341" endtime="20201110 08:36:56.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.039" endtime="20201110 08:36:56.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.037" endtime="20201110 08:36:56.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.348" level="INFO">${RESULT} = [{'time': 0.019409722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019411931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:56.345" endtime="20201110 08:36:56.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:56.361" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:56.349" endtime="20201110 08:36:56.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.366" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:56.364" endtime="20201110 08:36:56.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.368" level="INFO">VALUE: [1.02800000000014e-06, 8.620000000007788e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.610000000013052e-07, 7.779999999998899e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.059999999990297e-07, 8.480000000012089e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.89000000000445e-07, 8.469999999982658e-07, 8.620000000007788e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999978357e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.190000000025954e-07, 8.609999999978357e-07, 8.049999999995561e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201110 08:36:56.367" endtime="20201110 08:36:56.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.362" endtime="20201110 08:36:56.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.372" endtime="20201110 08:36:56.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.375" endtime="20201110 08:36:56.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.373" endtime="20201110 08:36:56.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.370" endtime="20201110 08:36:56.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.012" endtime="20201110 08:36:56.396"></status>
</kw>
<msg timestamp="20201110 08:36:56.396" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.403" endtime="20201110 08:36:56.414"></status>
</kw>
<msg timestamp="20201110 08:36:56.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.402" endtime="20201110 08:36:56.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.415" endtime="20201110 08:36:56.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.418" endtime="20201110 08:36:56.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.399" endtime="20201110 08:36:56.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.398" endtime="20201110 08:36:56.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.427" endtime="20201110 08:36:56.714"></status>
</kw>
<msg timestamp="20201110 08:36:56.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019414056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.425" endtime="20201110 08:36:56.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019414056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.718" endtime="20201110 08:36:56.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.726" endtime="20201110 08:36:56.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.423" endtime="20201110 08:36:56.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.421" endtime="20201110 08:36:56.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.733" level="INFO">${RESULT} = [{'time': 0.019414056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729999999978645e-07, 'source_diff': 9.729999999978645e-07}, {'time': 0.019416569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:56.729" endtime="20201110 08:36:56.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:56.746" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:56.734" endtime="20201110 08:36:56.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.750" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:56.749" endtime="20201110 08:36:56.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.753" level="INFO">VALUE: [9.729999999978645e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.879999999975019e-07, 8.329999999986959e-07, 8.200000000020691e-07, 9.310000000026242e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.609999999978357e-07, 8.339999999981695e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.480000000012089e-07]</msg>
<status status="PASS" starttime="20201110 08:36:56.751" endtime="20201110 08:36:56.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.747" endtime="20201110 08:36:56.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.756" endtime="20201110 08:36:56.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.759" endtime="20201110 08:36:56.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.758" endtime="20201110 08:36:56.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.754" endtime="20201110 08:36:56.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.396" endtime="20201110 08:36:56.780"></status>
</kw>
<msg timestamp="20201110 08:36:56.780" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.788" endtime="20201110 08:36:56.799"></status>
</kw>
<msg timestamp="20201110 08:36:56.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.786" endtime="20201110 08:36:56.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.801" endtime="20201110 08:36:56.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.803" endtime="20201110 08:36:56.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.784" endtime="20201110 08:36:56.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.782" endtime="20201110 08:36:56.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.812" endtime="20201110 08:36:57.094"></status>
</kw>
<msg timestamp="20201110 08:36:57.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019326986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:56.811" endtime="20201110 08:36:57.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019326986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:57.100" endtime="20201110 08:36:57.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.112" endtime="20201110 08:36:57.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.808" endtime="20201110 08:36:57.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.806" endtime="20201110 08:36:57.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.121" level="INFO">${RESULT} = [{'time': 0.019326986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019329042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:57.117" endtime="20201110 08:36:57.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:57.135" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:57.122" endtime="20201110 08:36:57.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.140" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:57.139" endtime="20201110 08:36:57.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.142" level="INFO">VALUE: [9.860000000014302e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.329999999986959e-07, 7.919999999994598e-07, 8.89000000000445e-07, 8.879999999975019e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.609999999978357e-07, 7.779999999998899e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.479999999977395e-07, 8.049999999995561e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.34000000001639e-07, 8.480000000012089e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.480000000012089e-07, 8.610000000013052e-07]</msg>
<status status="PASS" starttime="20201110 08:36:57.141" endtime="20201110 08:36:57.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.136" endtime="20201110 08:36:57.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.146" endtime="20201110 08:36:57.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.149" endtime="20201110 08:36:57.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.147" endtime="20201110 08:36:57.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.144" endtime="20201110 08:36:57.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.781" endtime="20201110 08:36:57.170"></status>
</kw>
<msg timestamp="20201110 08:36:57.170" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.177" endtime="20201110 08:36:57.188"></status>
</kw>
<msg timestamp="20201110 08:36:57.189" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.176" endtime="20201110 08:36:57.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.191" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.190" endtime="20201110 08:36:57.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.192" endtime="20201110 08:36:57.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.173" endtime="20201110 08:36:57.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.172" endtime="20201110 08:36:57.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.201" endtime="20201110 08:36:57.490"></status>
</kw>
<msg timestamp="20201110 08:36:57.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.200" endtime="20201110 08:36:57.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.495" endtime="20201110 08:36:57.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.503" endtime="20201110 08:36:57.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.197" endtime="20201110 08:36:57.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.195" endtime="20201110 08:36:57.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.509" level="INFO">${RESULT} = [{'time': 0.019570181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019572222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:57.506" endtime="20201110 08:36:57.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:57.523" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:57.510" endtime="20201110 08:36:57.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.527" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:57.526" endtime="20201110 08:36:57.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.529" level="INFO">VALUE: [1.01400000000057e-06, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.469999999982658e-07, 7.779999999998899e-07, 8.610000000013052e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.339999999981695e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.750000000008751e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.620000000007788e-07, 8.479999999977395e-07, 8.18999999999126e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.470000000017353e-07, 7.919999999994598e-07, 9.030000000000149e-07, 8.34000000001639e-07, 8.479999999977395e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.18999999999126e-07]</msg>
<status status="PASS" starttime="20201110 08:36:57.528" endtime="20201110 08:36:57.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.524" endtime="20201110 08:36:57.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.533" endtime="20201110 08:36:57.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.537" endtime="20201110 08:36:57.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.535" endtime="20201110 08:36:57.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.531" endtime="20201110 08:36:57.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.170" endtime="20201110 08:36:57.558"></status>
</kw>
<msg timestamp="20201110 08:36:57.558" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.565" endtime="20201110 08:36:57.576"></status>
</kw>
<msg timestamp="20201110 08:36:57.576" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.564" endtime="20201110 08:36:57.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.577" endtime="20201110 08:36:57.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.580" endtime="20201110 08:36:57.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.561" endtime="20201110 08:36:57.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.560" endtime="20201110 08:36:57.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.589" endtime="20201110 08:36:57.879"></status>
</kw>
<msg timestamp="20201110 08:36:57.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.587" endtime="20201110 08:36:57.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019504556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.883" endtime="20201110 08:36:57.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.892" endtime="20201110 08:36:57.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.585" endtime="20201110 08:36:57.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.583" endtime="20201110 08:36:57.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.898" level="INFO">${RESULT} = [{'time': 0.019504556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019506764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:57.895" endtime="20201110 08:36:57.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:57.912" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:57.899" endtime="20201110 08:36:57.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.916" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:57.915" endtime="20201110 08:36:57.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.918" level="INFO">VALUE: [9.309999999991547e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.199999999985996e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.480000000012089e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.329999999986959e-07, 9.020000000005413e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.749999999974056e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.480000000012089e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 9.020000000005413e-07, 8.469999999982658e-07, 8.330000000021653e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.190000000025954e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201110 08:36:57.917" endtime="20201110 08:36:57.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.912" endtime="20201110 08:36:57.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.922" endtime="20201110 08:36:57.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.925" endtime="20201110 08:36:57.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.924" endtime="20201110 08:36:57.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.920" endtime="20201110 08:36:57.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.558" endtime="20201110 08:36:57.946"></status>
</kw>
<msg timestamp="20201110 08:36:57.946" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.954" endtime="20201110 08:36:57.964"></status>
</kw>
<msg timestamp="20201110 08:36:57.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.952" endtime="20201110 08:36:57.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.967" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.966" endtime="20201110 08:36:57.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.969" endtime="20201110 08:36:57.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.950" endtime="20201110 08:36:57.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.948" endtime="20201110 08:36:57.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.977" endtime="20201110 08:36:58.259"></status>
</kw>
<msg timestamp="20201110 08:36:58.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.976" endtime="20201110 08:36:58.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.263" endtime="20201110 08:36:58.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.271" endtime="20201110 08:36:58.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.973" endtime="20201110 08:36:58.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.972" endtime="20201110 08:36:58.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.278" level="INFO">${RESULT} = [{'time': 0.019347556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.869999999974344e-07, 'source_diff': 9.869999999974344e-07}, {'time': 0.019349653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:58.274" endtime="20201110 08:36:58.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:58.291" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:58.279" endtime="20201110 08:36:58.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.295" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:58.294" endtime="20201110 08:36:58.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.298" level="INFO">VALUE: [9.869999999974344e-07, 8.200000000020691e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.749999999974056e-07, 8.18999999999126e-07, 8.059999999990297e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.049999999995561e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.749999999974056e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.190000000025954e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.750000000008751e-07]</msg>
<status status="PASS" starttime="20201110 08:36:58.296" endtime="20201110 08:36:58.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.292" endtime="20201110 08:36:58.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.305" endtime="20201110 08:36:58.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.308" endtime="20201110 08:36:58.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.307" endtime="20201110 08:36:58.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.303" endtime="20201110 08:36:58.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.947" endtime="20201110 08:36:58.329"></status>
</kw>
<msg timestamp="20201110 08:36:58.329" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.337" endtime="20201110 08:36:58.347"></status>
</kw>
<msg timestamp="20201110 08:36:58.348" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.335" endtime="20201110 08:36:58.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.349" endtime="20201110 08:36:58.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.351" endtime="20201110 08:36:58.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.333" endtime="20201110 08:36:58.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.331" endtime="20201110 08:36:58.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.360" endtime="20201110 08:36:58.642"></status>
</kw>
<msg timestamp="20201110 08:36:58.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01926275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:58.359" endtime="20201110 08:36:58.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01926275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:58.646" endtime="20201110 08:36:58.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.654" endtime="20201110 08:36:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.356" endtime="20201110 08:36:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.355" endtime="20201110 08:36:58.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.661" level="INFO">${RESULT} = [{'time': 0.019263736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019265972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:58.657" endtime="20201110 08:36:58.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:58.675" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:58.662" endtime="20201110 08:36:58.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.679" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:58.678" endtime="20201110 08:36:58.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.682" level="INFO">VALUE: [9.860000000014302e-07, 8.469999999982658e-07, 8.34000000001639e-07, 8.89000000000445e-07, 8.060000000024992e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.199999999985996e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.750000000008751e-07, 9.020000000005413e-07, 8.470000000017353e-07, 8.749999999974056e-07, 8.480000000012089e-07, 9.299999999996811e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201110 08:36:58.681" endtime="20201110 08:36:58.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.676" endtime="20201110 08:36:58.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.685" endtime="20201110 08:36:58.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.689" endtime="20201110 08:36:58.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.687" endtime="20201110 08:36:58.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.684" endtime="20201110 08:36:58.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.330" endtime="20201110 08:36:58.709"></status>
</kw>
<msg timestamp="20201110 08:36:58.710" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.717" endtime="20201110 08:36:58.729"></status>
</kw>
<msg timestamp="20201110 08:36:58.729" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.716" endtime="20201110 08:36:58.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.732" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.730" endtime="20201110 08:36:58.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.733" endtime="20201110 08:36:58.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.713" endtime="20201110 08:36:58.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.711" endtime="20201110 08:36:58.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.742" endtime="20201110 08:36:59.023"></status>
</kw>
<msg timestamp="20201110 08:36:59.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.740" endtime="20201110 08:36:59.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.027" endtime="20201110 08:36:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.035" endtime="20201110 08:36:59.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.738" endtime="20201110 08:36:59.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.736" endtime="20201110 08:36:59.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.042" level="INFO">${RESULT} = [{'time': 0.019323042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729999999978645e-07, 'source_diff': 9.729999999978645e-07}, {'time': 0.019325514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.039" endtime="20201110 08:36:59.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:59.055" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.043" endtime="20201110 08:36:59.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:59.058" endtime="20201110 08:36:59.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.062" level="INFO">VALUE: [9.729999999978645e-07, 8.199999999985996e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.190000000025954e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.059999999990297e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.329999999986959e-07, 9.160000000001112e-07, 8.330000000021653e-07, 8.609999999978357e-07, 8.190000000025954e-07, 8.620000000007788e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.200000000020691e-07, 8.470000000017353e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999978357e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201110 08:36:59.060" endtime="20201110 08:36:59.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.056" endtime="20201110 08:36:59.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.065" endtime="20201110 08:36:59.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.069" endtime="20201110 08:36:59.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.067" endtime="20201110 08:36:59.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.064" endtime="20201110 08:36:59.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.710" endtime="20201110 08:36:59.089"></status>
</kw>
<msg timestamp="20201110 08:36:59.090" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.097" endtime="20201110 08:36:59.108"></status>
</kw>
<msg timestamp="20201110 08:36:59.109" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.096" endtime="20201110 08:36:59.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.110" endtime="20201110 08:36:59.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.112" endtime="20201110 08:36:59.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.093" endtime="20201110 08:36:59.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.091" endtime="20201110 08:36:59.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.121" endtime="20201110 08:36:59.403"></status>
</kw>
<msg timestamp="20201110 08:36:59.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019277097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.120" endtime="20201110 08:36:59.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019276181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019277097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.407" endtime="20201110 08:36:59.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.415" endtime="20201110 08:36:59.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.117" endtime="20201110 08:36:59.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.115" endtime="20201110 08:36:59.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.422" level="INFO">${RESULT} = [{'time': 0.019277097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019279222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.419" endtime="20201110 08:36:59.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:59.435" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.423" endtime="20201110 08:36:59.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.439" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:59.438" endtime="20201110 08:36:59.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.442" level="INFO">VALUE: [9.160000000001112e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.620000000007788e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.049999999995561e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.059999999990297e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.479999999977395e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201110 08:36:59.441" endtime="20201110 08:36:59.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.436" endtime="20201110 08:36:59.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.445" endtime="20201110 08:36:59.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.449" endtime="20201110 08:36:59.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.447" endtime="20201110 08:36:59.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.444" endtime="20201110 08:36:59.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.090" endtime="20201110 08:36:59.470"></status>
</kw>
<msg timestamp="20201110 08:36:59.471" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.481" endtime="20201110 08:36:59.493"></status>
</kw>
<msg timestamp="20201110 08:36:59.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.479" endtime="20201110 08:36:59.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.495" endtime="20201110 08:36:59.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.499" endtime="20201110 08:36:59.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.475" endtime="20201110 08:36:59.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.473" endtime="20201110 08:36:59.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.509" endtime="20201110 08:36:59.799"></status>
</kw>
<msg timestamp="20201110 08:36:59.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.508" endtime="20201110 08:36:59.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023158819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.804" endtime="20201110 08:36:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.812" endtime="20201110 08:36:59.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.505" endtime="20201110 08:36:59.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.503" endtime="20201110 08:36:59.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.818" level="INFO">${RESULT} = [{'time': 0.023159792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729999999978645e-07, 'source_diff': 9.729999999978645e-07}, {'time': 0.023161847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.815" endtime="20201110 08:36:59.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:59.832" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.819" endtime="20201110 08:36:59.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.836" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:59.835" endtime="20201110 08:36:59.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.838" level="INFO">VALUE: [9.729999999978645e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.199999999985996e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.049999999995561e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.89000000000445e-07, 8.200000000020691e-07, 8.470000000017353e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.34000000001639e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201110 08:36:59.837" endtime="20201110 08:36:59.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.833" endtime="20201110 08:36:59.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.842" endtime="20201110 08:36:59.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.845" endtime="20201110 08:36:59.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.844" endtime="20201110 08:36:59.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.840" endtime="20201110 08:36:59.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.471" endtime="20201110 08:36:59.866"></status>
</kw>
<msg timestamp="20201110 08:36:59.866" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.874" endtime="20201110 08:36:59.886"></status>
</kw>
<msg timestamp="20201110 08:36:59.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.872" endtime="20201110 08:36:59.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.887" endtime="20201110 08:36:59.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.889" endtime="20201110 08:36:59.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.870" endtime="20201110 08:36:59.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.868" endtime="20201110 08:36:59.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.898" endtime="20201110 08:37:00.188"></status>
</kw>
<msg timestamp="20201110 08:37:00.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.897" endtime="20201110 08:37:00.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.192" endtime="20201110 08:37:00.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.201" endtime="20201110 08:37:00.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.894" endtime="20201110 08:37:00.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.893" endtime="20201110 08:37:00.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.207" level="INFO">${RESULT} = [{'time': 0.019503764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019506236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:00.204" endtime="20201110 08:37:00.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.222" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.208" endtime="20201110 08:37:00.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:00.225" endtime="20201110 08:37:00.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.228" level="INFO">VALUE: [9.57999999998821e-07, 7.779999999998899e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.480000000012089e-07, 7.909999999999862e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.199999999985996e-07, 8.34000000001639e-07, 9.020000000005413e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.620000000007788e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.749999999974056e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.339999999981695e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.619999999973094e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.227" endtime="20201110 08:37:00.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.223" endtime="20201110 08:37:00.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.232" endtime="20201110 08:37:00.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.235" endtime="20201110 08:37:00.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.234" endtime="20201110 08:37:00.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.230" endtime="20201110 08:37:00.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.867" endtime="20201110 08:37:00.256"></status>
</kw>
<msg timestamp="20201110 08:37:00.256" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.264" endtime="20201110 08:37:00.275"></status>
</kw>
<msg timestamp="20201110 08:37:00.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.262" endtime="20201110 08:37:00.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.277" endtime="20201110 08:37:00.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.279" endtime="20201110 08:37:00.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.260" endtime="20201110 08:37:00.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.258" endtime="20201110 08:37:00.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.288" endtime="20201110 08:37:00.569"></status>
</kw>
<msg timestamp="20201110 08:37:00.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019334597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.287" endtime="20201110 08:37:00.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019334597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.573" endtime="20201110 08:37:00.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.582" endtime="20201110 08:37:00.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.284" endtime="20201110 08:37:00.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.282" endtime="20201110 08:37:00.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.591" level="INFO">${RESULT} = [{'time': 0.019334597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.019336861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.587" endtime="20201110 08:37:00.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.607" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.593" endtime="20201110 08:37:00.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.613" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:00.612" endtime="20201110 08:37:00.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.616" level="INFO">VALUE: [9.999999999975306e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.749999999974056e-07, 9.020000000005413e-07, 8.620000000007788e-07, 8.329999999986959e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.620000000007788e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.609999999978357e-07, 8.18999999999126e-07, 8.609999999978357e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.610000000013052e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.614" endtime="20201110 08:37:00.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.609" endtime="20201110 08:37:00.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.621" endtime="20201110 08:37:00.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.624" endtime="20201110 08:37:00.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.623" endtime="20201110 08:37:00.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.619" endtime="20201110 08:37:00.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.257" endtime="20201110 08:37:00.645"></status>
</kw>
<msg timestamp="20201110 08:37:00.645" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.653" endtime="20201110 08:37:00.664"></status>
</kw>
<msg timestamp="20201110 08:37:00.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.651" endtime="20201110 08:37:00.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.667" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.665" endtime="20201110 08:37:00.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.668" endtime="20201110 08:37:00.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.649" endtime="20201110 08:37:00.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.647" endtime="20201110 08:37:00.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.677" endtime="20201110 08:37:00.959"></status>
</kw>
<msg timestamp="20201110 08:37:00.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019280486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.675" endtime="20201110 08:37:00.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019280486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.963" endtime="20201110 08:37:00.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.971" endtime="20201110 08:37:00.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.673" endtime="20201110 08:37:00.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.671" endtime="20201110 08:37:00.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.978" level="INFO">${RESULT} = [{'time': 0.019281458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.019283583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.974" endtime="20201110 08:37:00.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.991" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.979" endtime="20201110 08:37:00.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:00.994" endtime="20201110 08:37:00.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.998" level="INFO">VALUE: [9.720000000018603e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.750000000008751e-07, 8.749999999974056e-07, 8.190000000025954e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 7.909999999999862e-07, 9.020000000005413e-07, 8.469999999982658e-07, 8.620000000007788e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.060000000024992e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.619999999973094e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.996" endtime="20201110 08:37:00.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.992" endtime="20201110 08:37:00.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.001" endtime="20201110 08:37:01.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.005" endtime="20201110 08:37:01.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.003" endtime="20201110 08:37:01.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.000" endtime="20201110 08:37:01.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.646" endtime="20201110 08:37:01.025"></status>
</kw>
<msg timestamp="20201110 08:37:01.026" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.033" endtime="20201110 08:37:01.044"></status>
</kw>
<msg timestamp="20201110 08:37:01.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.032" endtime="20201110 08:37:01.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.046" endtime="20201110 08:37:01.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.048" endtime="20201110 08:37:01.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.029" endtime="20201110 08:37:01.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.027" endtime="20201110 08:37:01.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.057" endtime="20201110 08:37:01.339"></status>
</kw>
<msg timestamp="20201110 08:37:01.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019158764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.056" endtime="20201110 08:37:01.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019157792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019158764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.343" endtime="20201110 08:37:01.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.351" endtime="20201110 08:37:01.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.053" endtime="20201110 08:37:01.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.051" endtime="20201110 08:37:01.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.358" level="INFO">${RESULT} = [{'time': 0.019158764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019161042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:01.354" endtime="20201110 08:37:01.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:01.371" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:01.359" endtime="20201110 08:37:01.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.375" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:01.374" endtime="20201110 08:37:01.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.378" level="INFO">VALUE: [9.719999999983908e-07, 8.610000000013052e-07, 8.200000000020691e-07, 8.609999999978357e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.620000000007788e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 9.310000000026242e-07, 8.470000000017353e-07, 8.060000000024992e-07, 8.610000000013052e-07, 8.620000000007788e-07, 8.470000000017353e-07, 8.059999999990297e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.339999999981695e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.049999999995561e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.480000000012089e-07]</msg>
<status status="PASS" starttime="20201110 08:37:01.376" endtime="20201110 08:37:01.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.372" endtime="20201110 08:37:01.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.381" endtime="20201110 08:37:01.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.385" endtime="20201110 08:37:01.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.383" endtime="20201110 08:37:01.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.380" endtime="20201110 08:37:01.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.026" endtime="20201110 08:37:01.405"></status>
</kw>
<msg timestamp="20201110 08:37:01.406" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.415" endtime="20201110 08:37:01.426"></status>
</kw>
<msg timestamp="20201110 08:37:01.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.412" endtime="20201110 08:37:01.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.428" endtime="20201110 08:37:01.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.431" endtime="20201110 08:37:01.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.409" endtime="20201110 08:37:01.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.408" endtime="20201110 08:37:01.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.443" endtime="20201110 08:37:01.735"></status>
</kw>
<msg timestamp="20201110 08:37:01.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.441" endtime="20201110 08:37:01.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.739" endtime="20201110 08:37:01.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.747" endtime="20201110 08:37:01.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.438" endtime="20201110 08:37:01.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.436" endtime="20201110 08:37:01.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.754" level="INFO">${RESULT} = [{'time': 0.021457097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.021459403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:01.750" endtime="20201110 08:37:01.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:01.768" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:01.755" endtime="20201110 08:37:01.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.773" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:01.772" endtime="20201110 08:37:01.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.775" level="INFO">VALUE: [9.860000000014302e-07, 8.339999999981695e-07, 8.34000000001639e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.620000000007788e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.199999999985996e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.199999999985996e-07, 8.059999999990297e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.050000000030255e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.89000000000445e-07, 8.479999999977395e-07, 8.330000000021653e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.609999999978357e-07, 8.479999999977395e-07, 8.34000000001639e-07, 9.030000000000149e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.89000000000445e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.480000000012089e-07]</msg>
<status status="PASS" starttime="20201110 08:37:01.774" endtime="20201110 08:37:01.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.769" endtime="20201110 08:37:01.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.779" endtime="20201110 08:37:01.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.782" endtime="20201110 08:37:01.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.780" endtime="20201110 08:37:01.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.777" endtime="20201110 08:37:01.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.406" endtime="20201110 08:37:01.803"></status>
</kw>
<msg timestamp="20201110 08:37:01.803" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.810" endtime="20201110 08:37:01.821"></status>
</kw>
<msg timestamp="20201110 08:37:01.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.809" endtime="20201110 08:37:01.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.823" endtime="20201110 08:37:01.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.825" endtime="20201110 08:37:01.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.806" endtime="20201110 08:37:01.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.805" endtime="20201110 08:37:01.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.834" endtime="20201110 08:37:02.137"></status>
</kw>
<msg timestamp="20201110 08:37:02.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.833" endtime="20201110 08:37:02.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.141" endtime="20201110 08:37:02.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.152" endtime="20201110 08:37:02.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.830" endtime="20201110 08:37:02.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.829" endtime="20201110 08:37:02.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.159" level="INFO">${RESULT} = [{'time': 0.019520625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019523014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.155" endtime="20201110 08:37:02.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.174" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.161" endtime="20201110 08:37:02.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.178" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:02.177" endtime="20201110 08:37:02.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.181" level="INFO">VALUE: [9.719999999983908e-07, 8.060000000024992e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.470000000017353e-07, 7.779999999998899e-07, 8.330000000021653e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.89000000000445e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.330000000021653e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.609999999978357e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.469999999982658e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.470000000017353e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201110 08:37:02.179" endtime="20201110 08:37:02.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.175" endtime="20201110 08:37:02.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.185" endtime="20201110 08:37:02.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.189" endtime="20201110 08:37:02.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.187" endtime="20201110 08:37:02.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.183" endtime="20201110 08:37:02.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.803" endtime="20201110 08:37:02.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.470" endtime="20201110 08:37:02.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.214" endtime="20201110 08:37:02.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.212" endtime="20201110 08:37:02.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.211" endtime="20201110 08:37:02.234"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:54.402" endtime="20201110 08:37:02.234" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.241" endtime="20201110 08:37:02.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.240" endtime="20201110 08:37:02.261"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.274" endtime="20201110 08:37:02.289"></status>
</kw>
<msg timestamp="20201110 08:37:02.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.272" endtime="20201110 08:37:02.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.291" endtime="20201110 08:37:02.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.295" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:02.293" endtime="20201110 08:37:02.296"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:02.270" endtime="20201110 08:37:02.296"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:02.268" endtime="20201110 08:37:02.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.266" endtime="20201110 08:37:02.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:02.301" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:02.300" endtime="20201110 08:37:02.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.298" endtime="20201110 08:37:02.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.266" endtime="20201110 08:37:02.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.265" endtime="20201110 08:37:02.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.303" endtime="20201110 08:37:02.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.263" endtime="20201110 08:37:02.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.262" endtime="20201110 08:37:02.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.238" endtime="20201110 08:37:02.305"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.314" endtime="20201110 08:37:02.333"></status>
</kw>
<msg timestamp="20201110 08:37:02.333" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.312" endtime="20201110 08:37:02.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.336" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.334" endtime="20201110 08:37:02.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.337" endtime="20201110 08:37:02.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.309" endtime="20201110 08:37:02.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.307" endtime="20201110 08:37:02.340"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.342" endtime="20201110 08:37:02.344"></status>
</kw>
<msg timestamp="20201110 08:37:02.344" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:02.340" endtime="20201110 08:37:02.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.348" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:02.347" endtime="20201110 08:37:02.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.350" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:02.349" endtime="20201110 08:37:02.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.345" endtime="20201110 08:37:02.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.355" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:02.354" endtime="20201110 08:37:02.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.357" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:02.356" endtime="20201110 08:37:02.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.352" endtime="20201110 08:37:02.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.364" endtime="20201110 08:37:02.647"></status>
</kw>
<msg timestamp="20201110 08:37:02.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06548225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065486125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:02.363" endtime="20201110 08:37:02.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06548225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065486125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:02.651" endtime="20201110 08:37:02.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.659" endtime="20201110 08:37:02.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.360" endtime="20201110 08:37:02.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.358" endtime="20201110 08:37:02.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.666" level="INFO">${RESULT} = [{'time': 0.065486125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.065491528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.663" endtime="20201110 08:37:02.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.680" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.667" endtime="20201110 08:37:02.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.684" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:02.683" endtime="20201110 08:37:02.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.687" level="INFO">VALUE: [3.875000000000406e-06, 3.583999999987042e-06, 3.2229999999966452e-06, 2.8340000000071086e-06, 3.2220000000110494e-06, 2.832999999993757e-06, 3.2360000000036804e-06, 2.847000000000266e-06, 3.2630000000033466e-06, 2.832999999993757e-06, 3.2360000000036804e-06, 2.8049999999946174e-06, 3.2219999999971716e-06, 2.832999999993757e-06, 3.2360000000036804e-06, 2.8200000000006e-06, 3.2219999999971716e-06, 2.833000000007635e-06, 3.2359999999898026e-06, 2.833999999993231e-06, 3.237000000003154e-06, 2.833000000007635e-06, 3.2630000000033466e-06, 2.8340000000071086e-06, 3.2499999999963114e-06, 2.833999999993231e-06, 3.2359999999898026e-06, 2.833000000007635e-06, 3.223000000010523e-06, 2.8189999999872484e-06, 3.29200000000196e-06, 2.76400000000232e-06, 3.2360000000036804e-06, 2.832999999993757e-06, 3.2359999999898026e-06, 2.847000000000266e-06, 3.2360000000036804e-06, 2.8200000000006e-06, 3.2229999999966452e-06, 2.832999999993757e-06, 3.2219999999971716e-06, 2.819000000001126e-06, 3.2219999999971716e-06, 2.832999999993757e-06, 3.2360000000036804e-06, 2.8479999999997396e-06, 3.2219999999971716e-06, 2.847000000000266e-06, 3.1939999999980317e-06, 2.778000000008829e-06]</msg>
<status status="PASS" starttime="20201110 08:37:02.686" endtime="20201110 08:37:02.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.681" endtime="20201110 08:37:02.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.691" endtime="20201110 08:37:02.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.694" endtime="20201110 08:37:02.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.693" endtime="20201110 08:37:02.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.689" endtime="20201110 08:37:02.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.306" endtime="20201110 08:37:02.715"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:02.236" endtime="20201110 08:37:02.715" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.722" endtime="20201110 08:37:02.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.720" endtime="20201110 08:37:02.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.756" endtime="20201110 08:37:02.769"></status>
</kw>
<msg timestamp="20201110 08:37:02.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.754" endtime="20201110 08:37:02.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.771" endtime="20201110 08:37:02.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.775" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:02.773" endtime="20201110 08:37:02.776"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:02.751" endtime="20201110 08:37:02.776"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:02.748" endtime="20201110 08:37:02.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.747" endtime="20201110 08:37:02.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:02.781" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:02.780" endtime="20201110 08:37:02.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.778" endtime="20201110 08:37:02.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.746" endtime="20201110 08:37:02.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.746" endtime="20201110 08:37:02.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.783" endtime="20201110 08:37:02.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.744" endtime="20201110 08:37:02.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.742" endtime="20201110 08:37:02.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.719" endtime="20201110 08:37:02.785"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.794" endtime="20201110 08:37:02.820"></status>
</kw>
<msg timestamp="20201110 08:37:02.820" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.793" endtime="20201110 08:37:02.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.823" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.821" endtime="20201110 08:37:02.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.824" endtime="20201110 08:37:02.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.790" endtime="20201110 08:37:02.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.788" endtime="20201110 08:37:02.827"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.829" endtime="20201110 08:37:02.830"></status>
</kw>
<msg timestamp="20201110 08:37:02.831" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:02.827" endtime="20201110 08:37:02.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.835" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:02.834" endtime="20201110 08:37:02.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.837" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:02.836" endtime="20201110 08:37:02.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.831" endtime="20201110 08:37:02.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.842" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:02.841" endtime="20201110 08:37:02.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.844" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:02.843" endtime="20201110 08:37:02.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.838" endtime="20201110 08:37:02.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.852" endtime="20201110 08:37:03.138"></status>
</kw>
<msg timestamp="20201110 08:37:03.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065284458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065287181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.849" endtime="20201110 08:37:03.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065284458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065287181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.142" endtime="20201110 08:37:03.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.150" endtime="20201110 08:37:03.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.847" endtime="20201110 08:37:03.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.845" endtime="20201110 08:37:03.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.157" level="INFO">${RESULT} = [{'time': 0.065287181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722999999996145e-06, 'source_diff': 2.722999999996145e-06}, {'time': 0.065422069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.153" endtime="20201110 08:37:03.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.172" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.158" endtime="20201110 08:37:03.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.178" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:03.176" endtime="20201110 08:37:03.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.180" level="INFO">VALUE: [2.722999999996145e-06, 4.332999999995257e-06, 4.2639999999899425e-06, 4.124999999993717e-06, 4.08400000000142e-06, 4.193999999999032e-06, 4.180000000006401e-06, 4.111000000001086e-06, 4.124999999993717e-06, 4.2220000000120494e-06, 4.180000000006401e-06, 4.139000000000226e-06, 4.1810000000058745e-06, 4.165999999999892e-06, 4.180000000006401e-06, 4.1670000000132434e-06, 4.1810000000058745e-06, 4.193999999999032e-06, 4.124999999993717e-06, 4.1810000000058745e-06, 4.1949999999985055e-06, 4.1810000000058745e-06, 4.08400000000142e-06, 4.207999999991663e-06, 4.180000000006401e-06, 4.139000000000226e-06, 4.195000000012383e-06, 4.1810000000058745e-06, 4.209000000005014e-06, 4.1810000000058745e-06, 4.139000000000226e-06, 4.139000000000226e-06, 4.111000000001086e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.096999999994577e-06, 4.193999999999032e-06, 4.111000000001086e-06, 4.111000000001086e-06, 4.179999999992523e-06, 4.139000000000226e-06, 4.124999999993717e-06, 4.19400000001291e-06, 4.1810000000058745e-06, 4.069999999994911e-06, 4.124999999993717e-06, 4.1949999999985055e-06, 4.097000000008455e-06, 4.165999999999892e-06, 4.19400000001291e-06]</msg>
<status status="PASS" starttime="20201110 08:37:03.179" endtime="20201110 08:37:03.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.174" endtime="20201110 08:37:03.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.183" endtime="20201110 08:37:03.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.186" endtime="20201110 08:37:03.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.185" endtime="20201110 08:37:03.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.181" endtime="20201110 08:37:03.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.786" endtime="20201110 08:37:03.207"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:02.717" endtime="20201110 08:37:03.208" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.214" endtime="20201110 08:37:03.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.213" endtime="20201110 08:37:03.234"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.248" endtime="20201110 08:37:03.263"></status>
</kw>
<msg timestamp="20201110 08:37:03.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.246" endtime="20201110 08:37:03.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.264" endtime="20201110 08:37:03.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.269" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:03.267" endtime="20201110 08:37:03.269"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:03.243" endtime="20201110 08:37:03.270"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:03.241" endtime="20201110 08:37:03.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.240" endtime="20201110 08:37:03.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:03.275" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:03.274" endtime="20201110 08:37:03.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.272" endtime="20201110 08:37:03.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.239" endtime="20201110 08:37:03.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.238" endtime="20201110 08:37:03.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.276" endtime="20201110 08:37:03.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.237" endtime="20201110 08:37:03.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.235" endtime="20201110 08:37:03.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.211" endtime="20201110 08:37:03.280"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.288" endtime="20201110 08:37:03.324"></status>
</kw>
<msg timestamp="20201110 08:37:03.324" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.287" endtime="20201110 08:37:03.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.327" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.326" endtime="20201110 08:37:03.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.328" endtime="20201110 08:37:03.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.284" endtime="20201110 08:37:03.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.282" endtime="20201110 08:37:03.331"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.333" endtime="20201110 08:37:03.335"></status>
</kw>
<msg timestamp="20201110 08:37:03.335" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:03.332" endtime="20201110 08:37:03.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.340" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:03.338" endtime="20201110 08:37:03.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.342" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:03.341" endtime="20201110 08:37:03.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.336" endtime="20201110 08:37:03.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.347" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:03.346" endtime="20201110 08:37:03.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.349" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:03.348" endtime="20201110 08:37:03.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.343" endtime="20201110 08:37:03.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.356" endtime="20201110 08:37:03.669"></status>
</kw>
<msg timestamp="20201110 08:37:03.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065967625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065971736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.355" endtime="20201110 08:37:03.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065967625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065971736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.673" endtime="20201110 08:37:03.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.681" endtime="20201110 08:37:03.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.352" endtime="20201110 08:37:03.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.350" endtime="20201110 08:37:03.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.688" level="INFO">${RESULT} = [{'time': 0.065971736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.066340181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.685" endtime="20201110 08:37:03.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.763" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.750" endtime="20201110 08:37:03.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.767" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:03.766" endtime="20201110 08:37:03.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.770" level="INFO">VALUE: [4.111000000001086e-06, 6.499999999992623e-06, 6.403000000002046e-06, 6.249999999999312e-06, 6.263999999991943e-06, 6.2640000000058205e-06, 6.276999999998978e-06, 6.208000000007541e-06, 6.263999999991943e-06, 6.263999999991943e-06, 6.2640000000058205e-06, 6.2779999999984515e-06, 6.2919999999910825e-06, 6.2640000000058205e-06, 6.263999999991943e-06, 6.276999999998978e-06, 6.2640000000058205e-06, 6.304999999998118e-06, 6.236000000006681e-06, 6.2640000000058205e-06, 6.249999999999312e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.276999999998978e-06, 6.236000000006681e-06, 6.2779999999984515e-06, 6.263999999991943e-06, 6.235999999992803e-06, 6.263999999991943e-06, 6.2640000000058205e-06, 6.277000000012856e-06, 6.263999999991943e-06, 6.222000000000172e-06, 6.2779999999984515e-06, 6.263999999991943e-06, 6.2919999999910825e-06, 6.290999999991609e-06, 6.2640000000058205e-06, 6.263999999991943e-06, 6.2779999999984515e-06, 6.2779999999984515e-06, 6.3329999999972575e-06, 6.3190000000046265e-06, 6.291000000005487e-06, 6.2779999999984515e-06, 6.263999999991943e-06, 6.208000000007541e-06, 6.249999999999312e-06]</msg>
<status status="PASS" starttime="20201110 08:37:03.769" endtime="20201110 08:37:03.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.764" endtime="20201110 08:37:03.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.773" endtime="20201110 08:37:03.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.777" endtime="20201110 08:37:03.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.775" endtime="20201110 08:37:03.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.772" endtime="20201110 08:37:03.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.280" endtime="20201110 08:37:03.799"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:03.209" endtime="20201110 08:37:03.800" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.808" endtime="20201110 08:37:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.806" endtime="20201110 08:37:03.829"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.843" endtime="20201110 08:37:03.858"></status>
</kw>
<msg timestamp="20201110 08:37:03.859" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.842" endtime="20201110 08:37:03.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.860" endtime="20201110 08:37:03.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.865" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:03.863" endtime="20201110 08:37:03.865"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:03.839" endtime="20201110 08:37:03.866"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:03.836" endtime="20201110 08:37:03.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.835" endtime="20201110 08:37:03.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:03.871" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:03.870" endtime="20201110 08:37:03.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.868" endtime="20201110 08:37:03.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.834" endtime="20201110 08:37:03.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.833" endtime="20201110 08:37:03.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.873" endtime="20201110 08:37:03.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.832" endtime="20201110 08:37:03.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.830" endtime="20201110 08:37:03.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.804" endtime="20201110 08:37:03.876"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.885" endtime="20201110 08:37:03.904"></status>
</kw>
<msg timestamp="20201110 08:37:03.905" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.883" endtime="20201110 08:37:03.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.907" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.906" endtime="20201110 08:37:03.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.908" endtime="20201110 08:37:03.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.880" endtime="20201110 08:37:03.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.878" endtime="20201110 08:37:03.911"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.913" endtime="20201110 08:37:03.915"></status>
</kw>
<msg timestamp="20201110 08:37:03.915" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:03.912" endtime="20201110 08:37:03.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.920" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:03.919" endtime="20201110 08:37:03.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.922" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:03.921" endtime="20201110 08:37:03.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.916" endtime="20201110 08:37:03.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.927" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:03.926" endtime="20201110 08:37:03.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.929" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:03.928" endtime="20201110 08:37:03.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.923" endtime="20201110 08:37:03.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.937" endtime="20201110 08:37:04.227"></status>
</kw>
<msg timestamp="20201110 08:37:04.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068563597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.935" endtime="20201110 08:37:04.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068563597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.231" endtime="20201110 08:37:04.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.240" endtime="20201110 08:37:04.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.932" endtime="20201110 08:37:04.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.930" endtime="20201110 08:37:04.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.247" level="INFO">${RESULT} = [{'time': 0.068563597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2360000000036804e-06, 'source_diff': 3.2360000000036804e-06}, {'time': 0.068571958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:04.244" endtime="20201110 08:37:04.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:04.261" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:04.248" endtime="20201110 08:37:04.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.266" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:04.265" endtime="20201110 08:37:04.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.269" level="INFO">VALUE: [3.2360000000036804e-06, 2.916000000005581e-06, 2.5279999999877623e-06, 2.929999999998212e-06, 2.5279999999877623e-06, 2.9859999999964915e-06, 2.542000000008149e-06, 2.943999999990843e-06, 2.5139999999951312e-06, 2.9579999999973516e-06, 2.5269999999882886e-06, 2.888999999992037e-06, 2.52800000000164e-06, 2.9720000000038604e-06, 2.52800000000164e-06, 3.014000000009509e-06, 2.4720000000033604e-06, 2.9450000000041943e-06, 2.52800000000164e-06, 2.9450000000041943e-06, 2.542000000008149e-06, 2.9440000000047206e-06, 2.5129999999956576e-06, 2.9450000000041943e-06, 2.52800000000164e-06, 2.9309999999976855e-06, 2.4719999999894826e-06, 2.9449999999903165e-06, 2.5980000000064285e-06, 2.9309999999976855e-06, 2.5129999999956576e-06, 2.9310000000115632e-06, 2.514000000009009e-06, 2.9720000000038604e-06, 2.5139999999951312e-06, 2.9859999999964915e-06, 2.5139999999951312e-06, 2.9440000000047206e-06, 2.5000000000025002e-06, 2.9440000000047206e-06, 2.4580000000107294e-06, 2.9859999999964915e-06, 2.5270000000021664e-06, 2.9309999999976855e-06, 2.5270000000021664e-06, 2.9300000000120896e-06, 2.5000000000025002e-06, 2.9720000000038604e-06, 2.52800000000164e-06, 2.9309999999976855e-06]</msg>
<status status="PASS" starttime="20201110 08:37:04.267" endtime="20201110 08:37:04.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.262" endtime="20201110 08:37:04.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.272" endtime="20201110 08:37:04.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.275" endtime="20201110 08:37:04.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.274" endtime="20201110 08:37:04.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.270" endtime="20201110 08:37:04.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.877" endtime="20201110 08:37:04.296"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:03.802" endtime="20201110 08:37:04.297" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.304" endtime="20201110 08:37:04.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.302" endtime="20201110 08:37:04.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.338" endtime="20201110 08:37:04.352"></status>
</kw>
<msg timestamp="20201110 08:37:04.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.336" endtime="20201110 08:37:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.353" endtime="20201110 08:37:04.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:04.356" endtime="20201110 08:37:04.358"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:04.333" endtime="20201110 08:37:04.359"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:04.330" endtime="20201110 08:37:04.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.329" endtime="20201110 08:37:04.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:04.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:04.363" endtime="20201110 08:37:04.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.361" endtime="20201110 08:37:04.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.328" endtime="20201110 08:37:04.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.328" endtime="20201110 08:37:04.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.366" endtime="20201110 08:37:04.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.326" endtime="20201110 08:37:04.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.324" endtime="20201110 08:37:04.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.301" endtime="20201110 08:37:04.369"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.378" endtime="20201110 08:37:04.404"></status>
</kw>
<msg timestamp="20201110 08:37:04.404" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.376" endtime="20201110 08:37:04.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.407" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.406" endtime="20201110 08:37:04.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.408" endtime="20201110 08:37:04.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.373" endtime="20201110 08:37:04.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.371" endtime="20201110 08:37:04.411"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.413" endtime="20201110 08:37:04.415"></status>
</kw>
<msg timestamp="20201110 08:37:04.415" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:04.412" endtime="20201110 08:37:04.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.419" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:04.418" endtime="20201110 08:37:04.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.422" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:04.421" endtime="20201110 08:37:04.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.416" endtime="20201110 08:37:04.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.426" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:04.425" endtime="20201110 08:37:04.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.429" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:04.428" endtime="20201110 08:37:04.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.423" endtime="20201110 08:37:04.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.437" endtime="20201110 08:37:04.727"></status>
</kw>
<msg timestamp="20201110 08:37:04.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066843375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066847556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.435" endtime="20201110 08:37:04.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066843375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066847556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.731" endtime="20201110 08:37:04.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.740" endtime="20201110 08:37:04.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.432" endtime="20201110 08:37:04.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.430" endtime="20201110 08:37:04.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.748" level="INFO">${RESULT} = [{'time': 0.066847556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1810000000058745e-06, 'source_diff': 4.1810000000058745e-06}, {'time': 0.066985917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:04.744" endtime="20201110 08:37:04.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:04.767" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:04.750" endtime="20201110 08:37:04.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.773" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:04.772" endtime="20201110 08:37:04.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.776" level="INFO">VALUE: [4.1810000000058745e-06, 3.9170000000060545e-06, 3.9999999999901226e-06, 3.875000000000406e-06, 3.9999999999901226e-06, 3.875000000000406e-06, 4.041999999995771e-06, 3.889000000006915e-06, 4.000000000004e-06, 3.832999999994757e-06, 4.02800000000314e-06, 3.889000000006915e-06, 4.068999999995437e-06, 3.889000000006915e-06, 4.041999999995771e-06, 3.916000000006581e-06, 4.027999999989262e-06, 3.902999999999546e-06, 4.02800000000314e-06, 3.875000000000406e-06, 4.02800000000314e-06, 3.819000000002126e-06, 4.041999999995771e-06, 3.902999999999546e-06, 4.041000000010175e-06, 3.916999999992177e-06, 4.000000000004e-06, 3.9170000000060545e-06, 3.9720000000048605e-06, 3.888999999993037e-06, 4.02800000000314e-06, 3.875000000000406e-06, 4.097999999994051e-06, 3.902000000000072e-06, 4.02800000000314e-06, 3.888999999993037e-06, 4.05600000000228e-06, 3.888999999993037e-06, 4.02800000000314e-06, 3.875000000000406e-06, 4.02800000000314e-06, 3.875000000000406e-06, 4.042000000009649e-06, 3.875000000000406e-06, 4.0270000000036665e-06, 3.902999999999546e-06, 4.014000000010509e-06, 3.888999999993037e-06, 4.013999999996631e-06, 3.9030000000134235e-06]</msg>
<status status="PASS" starttime="20201110 08:37:04.774" endtime="20201110 08:37:04.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.768" endtime="20201110 08:37:04.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.780" endtime="20201110 08:37:04.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.784" endtime="20201110 08:37:04.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.782" endtime="20201110 08:37:04.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.778" endtime="20201110 08:37:04.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.369" endtime="20201110 08:37:04.805"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:04.298" endtime="20201110 08:37:04.805" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.812" endtime="20201110 08:37:04.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.810" endtime="20201110 08:37:04.832"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.846" endtime="20201110 08:37:04.860"></status>
</kw>
<msg timestamp="20201110 08:37:04.861" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.844" endtime="20201110 08:37:04.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.862" endtime="20201110 08:37:04.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.867" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:04.864" endtime="20201110 08:37:04.867"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:04.841" endtime="20201110 08:37:04.868"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:04.839" endtime="20201110 08:37:04.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.837" endtime="20201110 08:37:04.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:04.872" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:04.872" endtime="20201110 08:37:04.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.869" endtime="20201110 08:37:04.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.836" endtime="20201110 08:37:04.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.836" endtime="20201110 08:37:04.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.874" endtime="20201110 08:37:04.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.834" endtime="20201110 08:37:04.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.833" endtime="20201110 08:37:04.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.809" endtime="20201110 08:37:04.877"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.885" endtime="20201110 08:37:04.922"></status>
</kw>
<msg timestamp="20201110 08:37:04.923" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.884" endtime="20201110 08:37:04.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.926" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.924" endtime="20201110 08:37:04.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.927" endtime="20201110 08:37:04.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.881" endtime="20201110 08:37:04.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.879" endtime="20201110 08:37:04.930"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.932" endtime="20201110 08:37:04.934"></status>
</kw>
<msg timestamp="20201110 08:37:04.934" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201110 08:37:04.930" endtime="20201110 08:37:04.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.939" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:04.937" endtime="20201110 08:37:04.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.941" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:04.940" endtime="20201110 08:37:04.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.935" endtime="20201110 08:37:04.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.946" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:04.945" endtime="20201110 08:37:04.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.948" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:04.947" endtime="20201110 08:37:04.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.942" endtime="20201110 08:37:04.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.956" endtime="20201110 08:37:05.258"></status>
</kw>
<msg timestamp="20201110 08:37:05.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066130653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066135486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.954" endtime="20201110 08:37:05.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066130653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066135486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.263" endtime="20201110 08:37:05.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.271" endtime="20201110 08:37:05.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.952" endtime="20201110 08:37:05.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.950" endtime="20201110 08:37:05.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.278" level="INFO">${RESULT} = [{'time': 0.066135486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.066507681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:05.274" endtime="20201110 08:37:05.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.291" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:05.279" endtime="20201110 08:37:05.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.296" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:05.295" endtime="20201110 08:37:05.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.298" level="INFO">VALUE: [4.832999999995757e-06, 4.58400000000192e-06, 4.721999999998672e-06, 4.583000000002446e-06, 4.708000000006041e-06, 4.58400000000192e-06, 4.708000000006041e-06, 4.597000000008955e-06, 4.7360000000051805e-06, 4.5829999999885684e-06, 4.6949999999990055e-06, 4.583000000002446e-06, 4.7499999999978115e-06, 4.597000000008955e-06, 4.721999999998672e-06, 4.583000000002446e-06, 4.7360000000051805e-06, 4.596999999995077e-06, 4.7360000000051805e-06, 4.5829999999885684e-06, 4.7360000000051805e-06, 4.596999999995077e-06, 4.721999999998672e-06, 4.540999999996798e-06, 4.721999999998672e-06, 4.583000000002446e-06, 4.805999999996091e-06, 4.583000000002446e-06, 4.7220000000125495e-06, 4.666999999999866e-06, 4.721999999998672e-06, 4.583000000002446e-06, 4.7089999999916365e-06, 4.58400000000192e-06, 4.7360000000051805e-06, 4.58400000000192e-06, 4.707999999992163e-06, 4.611000000001586e-06, 4.709000000005514e-06, 4.540999999996798e-06, 4.707999999992163e-06, 4.596999999995077e-06, 4.707999999992163e-06, 4.568999999995937e-06, 4.707999999992163e-06, 4.611000000001586e-06, 4.722999999998145e-06, 4.569000000009815e-06, 4.721999999998672e-06, 4.58400000000192e-06]</msg>
<status status="PASS" starttime="20201110 08:37:05.297" endtime="20201110 08:37:05.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.292" endtime="20201110 08:37:05.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.301" endtime="20201110 08:37:05.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.305" endtime="20201110 08:37:05.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.303" endtime="20201110 08:37:05.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.300" endtime="20201110 08:37:05.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.877" endtime="20201110 08:37:05.326"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:04.807" endtime="20201110 08:37:05.326" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:44.792" endtime="20201110 08:37:05.333"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.398" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:05.407" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:06.829" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:05.396" endtime="20201110 08:37:06.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.832" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:06.831" endtime="20201110 08:37:06.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.395" endtime="20201110 08:37:06.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.835" endtime="20201110 08:37:07.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.834" endtime="20201110 08:37:07.032"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.044" endtime="20201110 08:37:07.058"></status>
</kw>
<msg timestamp="20201110 08:37:07.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.043" endtime="20201110 08:37:07.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.060" endtime="20201110 08:37:07.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.065" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:07.063" endtime="20201110 08:37:07.065"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:07.040" endtime="20201110 08:37:07.066"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:07.038" endtime="20201110 08:37:07.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.037" endtime="20201110 08:37:07.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:07.072" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:07.070" endtime="20201110 08:37:07.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.068" endtime="20201110 08:37:07.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.036" endtime="20201110 08:37:07.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.035" endtime="20201110 08:37:07.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.074" endtime="20201110 08:37:07.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.034" endtime="20201110 08:37:07.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.076" endtime="20201110 08:37:07.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.032" endtime="20201110 08:37:07.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.394" endtime="20201110 08:37:07.079"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.085" endtime="20201110 08:37:07.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.083" endtime="20201110 08:37:07.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.119" endtime="20201110 08:37:07.132"></status>
</kw>
<msg timestamp="20201110 08:37:07.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.117" endtime="20201110 08:37:07.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.133" endtime="20201110 08:37:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.138" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:07.136" endtime="20201110 08:37:07.138"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:07.114" endtime="20201110 08:37:07.139"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:07.112" endtime="20201110 08:37:07.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.111" endtime="20201110 08:37:07.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:07.144" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:07.143" endtime="20201110 08:37:07.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.141" endtime="20201110 08:37:07.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.110" endtime="20201110 08:37:07.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.109" endtime="20201110 08:37:07.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.146" endtime="20201110 08:37:07.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.108" endtime="20201110 08:37:07.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.106" endtime="20201110 08:37:07.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.082" endtime="20201110 08:37:07.149"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.160" endtime="20201110 08:37:07.174"></status>
</kw>
<msg timestamp="20201110 08:37:07.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.158" endtime="20201110 08:37:07.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.176" endtime="20201110 08:37:07.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.178" endtime="20201110 08:37:07.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.154" endtime="20201110 08:37:07.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.152" endtime="20201110 08:37:07.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.188" endtime="20201110 08:37:07.478"></status>
</kw>
<msg timestamp="20201110 08:37:07.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067187333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067193208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.186" endtime="20201110 08:37:07.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067187333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067193208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.488" endtime="20201110 08:37:07.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.512" endtime="20201110 08:37:07.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.183" endtime="20201110 08:37:07.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.182" endtime="20201110 08:37:07.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.533" level="INFO">${RESULT} = [{'time': 0.067193208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.067203931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:07.523" endtime="20201110 08:37:07.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.576" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.536" endtime="20201110 08:37:07.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.581" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.580" endtime="20201110 08:37:07.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.583" level="INFO">VALUE: [5.875000000002406e-06, 5.152999999993857e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.125000000008595e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.152999999993857e-06, 5.069999999995911e-06, 5.152000000008261e-06, 5.139000000001226e-06, 5.152999999993857e-06, 5.125000000008595e-06, 5.111000000002086e-06, 5.111000000002086e-06, 5.125000000008595e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000008595e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.179999999993523e-06, 5.152000000008261e-06, 5.139000000001226e-06, 5.096999999995577e-06, 5.138000000001752e-06, 5.152999999993857e-06, 5.110999999988208e-06, 5.139000000001226e-06, 5.083000000002946e-06, 5.125000000008595e-06, 5.125000000008595e-06, 5.139000000001226e-06, 5.151999999994383e-06, 5.096999999995577e-06, 5.0829999999890685e-06, 5.167000000000366e-06, 5.125000000008595e-06, 5.125000000008595e-06, 5.151999999994383e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000007735e-06, 5.139000000001226e-06, 5.151999999994383e-06, 5.111000000002086e-06, 5.152999999993857e-06, 5.139000000001226e-06, 5.111000000002086e-06]</msg>
<status status="PASS" starttime="20201110 08:37:07.582" endtime="20201110 08:37:07.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.577" endtime="20201110 08:37:07.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.587" endtime="20201110 08:37:07.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.590" endtime="20201110 08:37:07.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.588" endtime="20201110 08:37:07.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.585" endtime="20201110 08:37:07.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.151" endtime="20201110 08:37:07.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.150" endtime="20201110 08:37:07.611"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.619" endtime="20201110 08:37:07.634"></status>
</kw>
<msg timestamp="20201110 08:37:07.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.618" endtime="20201110 08:37:07.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.636" endtime="20201110 08:37:07.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.638" endtime="20201110 08:37:07.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.615" endtime="20201110 08:37:07.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.613" endtime="20201110 08:37:07.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.647" endtime="20201110 08:37:07.936"></status>
</kw>
<msg timestamp="20201110 08:37:07.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:07.646" endtime="20201110 08:37:07.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:07.941" endtime="20201110 08:37:07.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.950" endtime="20201110 08:37:07.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.643" endtime="20201110 08:37:07.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.641" endtime="20201110 08:37:07.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.957" level="INFO">${RESULT} = [{'time': 0.022648194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.022659, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:07.953" endtime="20201110 08:37:07.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.972" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.958" endtime="20201110 08:37:07.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.977" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.975" endtime="20201110 08:37:07.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.979" level="INFO">VALUE: [5.944000000000782e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.166000000000892e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.152999999997326e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.180000000000462e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.096999999999047e-06, 5.137999999998283e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.11199999999809e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.194000000000032e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.166000000000892e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.125000000001656e-06, 5.068999999999907e-06]</msg>
<status status="PASS" starttime="20201110 08:37:07.978" endtime="20201110 08:37:07.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.973" endtime="20201110 08:37:07.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.983" endtime="20201110 08:37:07.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.986" endtime="20201110 08:37:08.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.985" endtime="20201110 08:37:08.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.981" endtime="20201110 08:37:08.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.612" endtime="20201110 08:37:08.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.611" endtime="20201110 08:37:08.007"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.017" endtime="20201110 08:37:08.031"></status>
</kw>
<msg timestamp="20201110 08:37:08.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.015" endtime="20201110 08:37:08.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.033" endtime="20201110 08:37:08.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.036" endtime="20201110 08:37:08.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.012" endtime="20201110 08:37:08.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.010" endtime="20201110 08:37:08.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.046" endtime="20201110 08:37:08.349"></status>
</kw>
<msg timestamp="20201110 08:37:08.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.044" endtime="20201110 08:37:08.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.358" endtime="20201110 08:37:08.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.378" endtime="20201110 08:37:08.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.042" endtime="20201110 08:37:08.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.040" endtime="20201110 08:37:08.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.387" level="INFO">${RESULT} = [{'time': 0.022501708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.022512472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.383" endtime="20201110 08:37:08.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:08.388" endtime="20201110 08:37:08.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.405" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.404" endtime="20201110 08:37:08.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.408" level="INFO">VALUE: [5.8889999999985065e-06, 5.1389999999977565e-06, 5.137999999998283e-06, 5.194000000000032e-06, 5.097000000002516e-06, 5.1249999999981866e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.110999999998617e-06, 5.09799999999852e-06, 5.207999999999602e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.152000000001322e-06, 5.082999999999477e-06, 5.110999999998617e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.111000000002086e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.137999999998283e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.137999999998283e-06, 5.152000000001322e-06, 5.167000000000366e-06, 5.151999999997853e-06, 5.110999999998617e-06, 5.180000000000462e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.153000000000796e-06]</msg>
<status status="PASS" starttime="20201110 08:37:08.407" endtime="20201110 08:37:08.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.402" endtime="20201110 08:37:08.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.412" endtime="20201110 08:37:08.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.415" endtime="20201110 08:37:08.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.414" endtime="20201110 08:37:08.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.410" endtime="20201110 08:37:08.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.008" endtime="20201110 08:37:08.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.008" endtime="20201110 08:37:08.436"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.445" endtime="20201110 08:37:08.459"></status>
</kw>
<msg timestamp="20201110 08:37:08.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.444" endtime="20201110 08:37:08.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.461" endtime="20201110 08:37:08.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.463" endtime="20201110 08:37:08.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.441" endtime="20201110 08:37:08.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.439" endtime="20201110 08:37:08.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.474" endtime="20201110 08:37:08.763"></status>
</kw>
<msg timestamp="20201110 08:37:08.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.472" endtime="20201110 08:37:08.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.768" endtime="20201110 08:37:08.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.776" endtime="20201110 08:37:08.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.469" endtime="20201110 08:37:08.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.468" endtime="20201110 08:37:08.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.783" level="INFO">${RESULT} = [{'time': 0.022324181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.022335111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:08.779" endtime="20201110 08:37:08.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.797" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:08.784" endtime="20201110 08:37:08.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.802" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.801" endtime="20201110 08:37:08.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.804" level="INFO">VALUE: [5.916999999997646e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.137999999998283e-06, 5.1389999999977565e-06, 5.096999999999047e-06, 5.194000000000032e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.082999999999477e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.096999999999047e-06, 5.166000000000892e-06, 5.068999999999907e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.152999999997326e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.1389999999977565e-06, 5.082999999999477e-06, 5.180000000000462e-06, 5.151999999997853e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.139000000001226e-06, 5.07000000000285e-06]</msg>
<status status="PASS" starttime="20201110 08:37:08.803" endtime="20201110 08:37:08.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.798" endtime="20201110 08:37:08.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.869" endtime="20201110 08:37:08.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.872" endtime="20201110 08:37:08.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.871" endtime="20201110 08:37:08.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.867" endtime="20201110 08:37:08.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.437" endtime="20201110 08:37:08.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.437" endtime="20201110 08:37:08.893"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.902" endtime="20201110 08:37:08.917"></status>
</kw>
<msg timestamp="20201110 08:37:08.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.901" endtime="20201110 08:37:08.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.918" endtime="20201110 08:37:08.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.921" endtime="20201110 08:37:08.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.898" endtime="20201110 08:37:08.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.896" endtime="20201110 08:37:08.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.932" endtime="20201110 08:37:09.220"></status>
</kw>
<msg timestamp="20201110 08:37:09.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.930" endtime="20201110 08:37:09.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.224" endtime="20201110 08:37:09.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.233" endtime="20201110 08:37:09.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.928" endtime="20201110 08:37:09.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.926" endtime="20201110 08:37:09.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.240" level="INFO">${RESULT} = [{'time': 0.022283653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.022294625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:09.237" endtime="20201110 08:37:09.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.254" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:09.241" endtime="20201110 08:37:09.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.259" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.258" endtime="20201110 08:37:09.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.261" level="INFO">VALUE: [5.889000000001976e-06, 5.152999999997326e-06, 5.167000000000366e-06, 5.125000000001656e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.09799999999852e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.138000000001752e-06, 5.166000000000892e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.09799999999852e-06, 5.166999999996896e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.110999999998617e-06, 5.139000000001226e-06, 5.082999999999477e-06, 5.139000000001226e-06, 5.082999999999477e-06, 5.167000000000366e-06, 5.153000000000796e-06, 5.166000000000892e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.0699999999993806e-06, 5.152999999997326e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.138000000001752e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.260" endtime="20201110 08:37:09.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.255" endtime="20201110 08:37:09.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.265" endtime="20201110 08:37:09.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.269" endtime="20201110 08:37:09.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.267" endtime="20201110 08:37:09.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.263" endtime="20201110 08:37:09.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.894" endtime="20201110 08:37:09.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.894" endtime="20201110 08:37:09.290"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.299" endtime="20201110 08:37:09.313"></status>
</kw>
<msg timestamp="20201110 08:37:09.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.297" endtime="20201110 08:37:09.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.315" endtime="20201110 08:37:09.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.317" endtime="20201110 08:37:09.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.295" endtime="20201110 08:37:09.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.292" endtime="20201110 08:37:09.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.328" endtime="20201110 08:37:09.616"></status>
</kw>
<msg timestamp="20201110 08:37:09.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.326" endtime="20201110 08:37:09.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022322542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.620" endtime="20201110 08:37:09.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.628" endtime="20201110 08:37:09.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.323" endtime="20201110 08:37:09.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.322" endtime="20201110 08:37:09.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.635" level="INFO">${RESULT} = [{'time': 0.022328431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.022339403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:09.632" endtime="20201110 08:37:09.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.651" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:09.637" endtime="20201110 08:37:09.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.655" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.654" endtime="20201110 08:37:09.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.658" level="INFO">VALUE: [5.8889999999985065e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.111000000002086e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.096999999999047e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.111000000002086e-06, 5.180999999999936e-06, 5.153000000000796e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.137999999998283e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.152999999997326e-06, 5.097000000002516e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.096999999999047e-06, 5.139000000001226e-06, 5.097000000002516e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.138000000001752e-06, 5.1249999999981866e-06, 5.1249999999981866e-06, 5.125000000001656e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.656" endtime="20201110 08:37:09.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.652" endtime="20201110 08:37:09.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.662" endtime="20201110 08:37:09.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.665" endtime="20201110 08:37:09.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.663" endtime="20201110 08:37:09.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.660" endtime="20201110 08:37:09.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.291" endtime="20201110 08:37:09.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.290" endtime="20201110 08:37:09.686"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.695" endtime="20201110 08:37:09.709"></status>
</kw>
<msg timestamp="20201110 08:37:09.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.694" endtime="20201110 08:37:09.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.711" endtime="20201110 08:37:09.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.713" endtime="20201110 08:37:09.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.691" endtime="20201110 08:37:09.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.689" endtime="20201110 08:37:09.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.727" endtime="20201110 08:37:10.018"></status>
</kw>
<msg timestamp="20201110 08:37:10.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:09.725" endtime="20201110 08:37:10.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:10.023" endtime="20201110 08:37:10.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.031" endtime="20201110 08:37:10.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.722" endtime="20201110 08:37:10.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.719" endtime="20201110 08:37:10.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.038" level="INFO">${RESULT} = [{'time': 0.0222435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.022253958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:10.035" endtime="20201110 08:37:10.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.039" endtime="20201110 08:37:10.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.057" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.056" endtime="20201110 08:37:10.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.059" level="INFO">VALUE: [5.874999999998937e-06, 5.139000000001226e-06, 5.138000000001752e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.055999999999811e-06, 5.110999999998617e-06, 5.152999999997326e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.1949999999995056e-06, 5.111000000002086e-06, 5.097000000002516e-06, 5.1249999999981866e-06, 5.09799999999852e-06, 5.110999999998617e-06, 5.137999999998283e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.152999999997326e-06, 5.137999999998283e-06, 5.097000000002516e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.1249999999981866e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.152000000001322e-06, 5.153000000000796e-06, 5.097000000002516e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.153000000000796e-06, 5.09799999999852e-06, 5.110999999998617e-06, 5.151999999997853e-06, 5.139000000001226e-06, 5.097000000002516e-06, 5.09799999999852e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.058" endtime="20201110 08:37:10.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.053" endtime="20201110 08:37:10.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.063" endtime="20201110 08:37:10.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.067" endtime="20201110 08:37:10.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.065" endtime="20201110 08:37:10.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.062" endtime="20201110 08:37:10.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.687" endtime="20201110 08:37:10.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.687" endtime="20201110 08:37:10.088"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.097" endtime="20201110 08:37:10.111"></status>
</kw>
<msg timestamp="20201110 08:37:10.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.095" endtime="20201110 08:37:10.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.112" endtime="20201110 08:37:10.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.115" endtime="20201110 08:37:10.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.092" endtime="20201110 08:37:10.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.090" endtime="20201110 08:37:10.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.126" endtime="20201110 08:37:10.416"></status>
</kw>
<msg timestamp="20201110 08:37:10.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.124" endtime="20201110 08:37:10.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022246542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.420" endtime="20201110 08:37:10.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.429" endtime="20201110 08:37:10.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.121" endtime="20201110 08:37:10.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.119" endtime="20201110 08:37:10.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.436" level="INFO">${RESULT} = [{'time': 0.022252403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.022263181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:10.432" endtime="20201110 08:37:10.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.450" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.437" endtime="20201110 08:37:10.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.454" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.453" endtime="20201110 08:37:10.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.457" level="INFO">VALUE: [5.860999999999367e-06, 5.0839999999989505e-06, 5.138000000001752e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.110999999998617e-06, 5.166000000000892e-06, 5.041000000000767e-06, 5.07000000000285e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.111000000002086e-06, 5.166000000000892e-06, 5.167000000000366e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.096999999999047e-06, 5.180000000000462e-06, 5.1389999999977565e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.125000000001656e-06, 5.152999999997326e-06, 5.068999999999907e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.151999999997853e-06, 5.1949999999995056e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.097000000002516e-06, 5.055000000000337e-06, 5.207999999999602e-06, 5.139000000001226e-06, 5.110999999998617e-06, 5.152000000001322e-06, 5.166000000000892e-06, 5.125000000001656e-06, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.456" endtime="20201110 08:37:10.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.451" endtime="20201110 08:37:10.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.461" endtime="20201110 08:37:10.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.464" endtime="20201110 08:37:10.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.463" endtime="20201110 08:37:10.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.459" endtime="20201110 08:37:10.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.089" endtime="20201110 08:37:10.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.088" endtime="20201110 08:37:10.485"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.494" endtime="20201110 08:37:10.509"></status>
</kw>
<msg timestamp="20201110 08:37:10.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.493" endtime="20201110 08:37:10.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.510" endtime="20201110 08:37:10.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.513" endtime="20201110 08:37:10.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.490" endtime="20201110 08:37:10.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.488" endtime="20201110 08:37:10.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.523" endtime="20201110 08:37:10.812"></status>
</kw>
<msg timestamp="20201110 08:37:10.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.522" endtime="20201110 08:37:10.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.816" endtime="20201110 08:37:10.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.825" endtime="20201110 08:37:10.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.519" endtime="20201110 08:37:10.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.517" endtime="20201110 08:37:10.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.832" level="INFO">${RESULT} = [{'time': 0.022324042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.022334861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:10.828" endtime="20201110 08:37:10.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.847" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.833" endtime="20201110 08:37:10.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.852" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.851" endtime="20201110 08:37:10.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.855" level="INFO">VALUE: [5.874999999998937e-06, 5.139000000001226e-06, 5.0699999999993806e-06, 5.222999999998645e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.165999999997423e-06, 5.11199999999809e-06, 5.137999999998283e-06, 5.1249999999981866e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.1389999999977565e-06, 5.2089999999990755e-06, 5.151999999997853e-06, 5.139000000001226e-06, 5.207999999999602e-06, 5.1389999999977565e-06, 5.083000000002946e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.1249999999981866e-06, 5.152000000001322e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.152999999997326e-06, 5.111000000002086e-06, 5.082999999999477e-06, 5.139000000001226e-06, 5.194000000000032e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.08400000000242e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.153000000000796e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.1249999999981866e-06, 5.152999999997326e-06, 5.139000000001226e-06, 5.151999999997853e-06, 5.1249999999981866e-06, 5.1389999999977565e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.853" endtime="20201110 08:37:10.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.849" endtime="20201110 08:37:10.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.859" endtime="20201110 08:37:10.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.862" endtime="20201110 08:37:10.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.860" endtime="20201110 08:37:10.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.857" endtime="20201110 08:37:10.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.486" endtime="20201110 08:37:10.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.486" endtime="20201110 08:37:10.883"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.892" endtime="20201110 08:37:10.906"></status>
</kw>
<msg timestamp="20201110 08:37:10.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.891" endtime="20201110 08:37:10.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.908" endtime="20201110 08:37:10.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.910" endtime="20201110 08:37:10.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.888" endtime="20201110 08:37:10.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.886" endtime="20201110 08:37:10.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.921" endtime="20201110 08:37:11.207"></status>
</kw>
<msg timestamp="20201110 08:37:11.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.920" endtime="20201110 08:37:11.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.211" endtime="20201110 08:37:11.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.219" endtime="20201110 08:37:11.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.917" endtime="20201110 08:37:11.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.915" endtime="20201110 08:37:11.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.226" level="INFO">${RESULT} = [{'time': 0.022489875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.022500611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.223" endtime="20201110 08:37:11.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.241" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:11.227" endtime="20201110 08:37:11.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.245" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.244" endtime="20201110 08:37:11.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.248" level="INFO">VALUE: [5.8889999999985065e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.137999999998283e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.152000000001322e-06, 5.096999999999047e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.137999999998283e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.167000000000366e-06, 5.151999999997853e-06, 5.152999999997326e-06, 5.152999999997326e-06, 5.125000000001656e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.167000000000366e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.1389999999977565e-06, 5.096999999999047e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.1949999999995056e-06, 5.09800000000199e-06, 5.152000000001322e-06, 5.139000000001226e-06, 5.096999999999047e-06, 5.125000000001656e-06, 5.1389999999977565e-06, 5.1389999999977565e-06, 5.152999999997326e-06, 5.125000000001656e-06, 5.139000000001226e-06, 5.125000000001656e-06, 5.222999999998645e-06, 5.1389999999977565e-06, 5.139000000001226e-06]</msg>
<status status="PASS" starttime="20201110 08:37:11.247" endtime="20201110 08:37:11.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.242" endtime="20201110 08:37:11.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.252" endtime="20201110 08:37:11.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.255" endtime="20201110 08:37:11.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.253" endtime="20201110 08:37:11.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.250" endtime="20201110 08:37:11.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.884" endtime="20201110 08:37:11.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.883" endtime="20201110 08:37:11.276"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.285" endtime="20201110 08:37:11.300"></status>
</kw>
<msg timestamp="20201110 08:37:11.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.283" endtime="20201110 08:37:11.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.301" endtime="20201110 08:37:11.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.304" endtime="20201110 08:37:11.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.281" endtime="20201110 08:37:11.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.278" endtime="20201110 08:37:11.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.314" endtime="20201110 08:37:11.600"></status>
</kw>
<msg timestamp="20201110 08:37:11.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.313" endtime="20201110 08:37:11.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.604" endtime="20201110 08:37:11.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.613" endtime="20201110 08:37:11.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.310" endtime="20201110 08:37:11.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.308" endtime="20201110 08:37:11.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.620" level="INFO">${RESULT} = [{'time': 0.022443431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.022454389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:11.616" endtime="20201110 08:37:11.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.633" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:11.621" endtime="20201110 08:37:11.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.638" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.637" endtime="20201110 08:37:11.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.640" level="INFO">VALUE: [5.917000000001116e-06, 5.139000000001226e-06, 1.511099999999821e-05, 1.4972000000001984e-05, 1.4639000000000318e-05, 1.4680999999999028e-05, 1.4943999999999374e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.5041999999999833e-05, 1.4957999999998944e-05, 1.4555000000002899e-05, 1.481899999999925e-05, 1.4944999999998848e-05, 1.4749999999997404e-05, 1.4875000000000999e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.4625000000000749e-05, 1.4652999999999888e-05, 1.4500000000000624e-05, 1.5000000000001124e-05, 1.458299999999857e-05, 1.4583000000002039e-05, 1.4666999999999458e-05, 1.4680999999999028e-05, 1.4721999999998264e-05, 1.4931000000002748e-05, 1.4986000000001554e-05, 1.4666999999999458e-05, 1.4500000000000624e-05, 1.509699999999864e-05, 1.4875000000000999e-05, 1.4916000000000235e-05, 1.4735999999997834e-05, 1.481899999999925e-05, 1.4903000000000138e-05, 1.5152999999996919e-05, 1.5069999999998973e-05, 1.4708999999998168e-05, 1.4542000000002803e-05, 1.4639000000000318e-05, 1.4930999999999278e-05, 1.4681000000002498e-05, 1.4625000000000749e-05, 1.4861000000001429e-05, 1.5139000000000818e-05, 1.4903000000000138e-05, 1.4584000000001512e-05, 1.4986000000001554e-05]</msg>
<status status="PASS" starttime="20201110 08:37:11.639" endtime="20201110 08:37:11.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.634" endtime="20201110 08:37:11.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.644" endtime="20201110 08:37:11.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.648" endtime="20201110 08:37:11.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.646" endtime="20201110 08:37:11.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.642" endtime="20201110 08:37:11.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.277" endtime="20201110 08:37:11.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.276" endtime="20201110 08:37:11.668"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.677" endtime="20201110 08:37:11.691"></status>
</kw>
<msg timestamp="20201110 08:37:11.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.676" endtime="20201110 08:37:11.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.693" endtime="20201110 08:37:11.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.695" endtime="20201110 08:37:11.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.673" endtime="20201110 08:37:11.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.671" endtime="20201110 08:37:11.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.705" endtime="20201110 08:37:11.990"></status>
</kw>
<msg timestamp="20201110 08:37:11.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.704" endtime="20201110 08:37:11.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.994" endtime="20201110 08:37:12.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.002" endtime="20201110 08:37:12.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.701" endtime="20201110 08:37:12.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.700" endtime="20201110 08:37:12.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.009" level="INFO">${RESULT} = [{'time': 0.021875833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6180000000001055e-05, 'source_diff': 1.6180000000001055e-05}, {'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.006" endtime="20201110 08:37:12.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.023" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:12.010" endtime="20201110 08:37:12.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.027" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.026" endtime="20201110 08:37:12.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.030" level="INFO">VALUE: [1.6180000000001055e-05, 1.5528000000000763e-05, 1.604100000000136e-05, 1.5750000000001874e-05, 1.586100000000243e-05, 1.579100000000111e-05, 1.5679999999997085e-05, 1.612500000000225e-05, 1.6013999999998224e-05, 1.559700000000261e-05, 1.587499999999853e-05, 1.6013999999998224e-05, 1.5665999999997515e-05, 1.5485999999998584e-05, 1.5763999999997974e-05, 1.5944000000000375e-05, 1.562499999999828e-05, 1.5944000000000375e-05, 1.5930000000000805e-05, 1.6056000000000403e-05, 1.5680000000000555e-05, 1.5806000000000153e-05, 1.5569e-05, 1.586099999999896e-05, 1.559700000000261e-05, 1.613900000000182e-05, 1.5750000000001874e-05, 1.5806000000000153e-05, 1.5764000000001444e-05, 1.6014000000001694e-05, 1.6042000000000833e-05, 1.5985999999999084e-05, 1.566699999999699e-05, 1.5763999999997974e-05, 1.5805999999996684e-05, 1.5569e-05, 1.5944000000000375e-05, 1.562499999999828e-05, 1.5833999999999293e-05, 1.5778000000001013e-05, 1.5681000000000028e-05, 1.5819999999999723e-05, 1.6028000000001263e-05, 1.5778000000001013e-05, 1.5792000000000583e-05, 1.5971999999999514e-05, 1.562499999999828e-05, 1.6069999999999973e-05, 1.5528000000000763e-05, 1.5750000000001874e-05]</msg>
<status status="PASS" starttime="20201110 08:37:12.028" endtime="20201110 08:37:12.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.024" endtime="20201110 08:37:12.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.034" endtime="20201110 08:37:12.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.037" endtime="20201110 08:37:12.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.036" endtime="20201110 08:37:12.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.032" endtime="20201110 08:37:12.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.669" endtime="20201110 08:37:12.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.669" endtime="20201110 08:37:12.058"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.067" endtime="20201110 08:37:12.082"></status>
</kw>
<msg timestamp="20201110 08:37:12.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.065" endtime="20201110 08:37:12.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.084" endtime="20201110 08:37:12.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.086" endtime="20201110 08:37:12.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.062" endtime="20201110 08:37:12.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.060" endtime="20201110 08:37:12.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.096" endtime="20201110 08:37:12.384"></status>
</kw>
<msg timestamp="20201110 08:37:12.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.095" endtime="20201110 08:37:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.388" endtime="20201110 08:37:12.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.397" endtime="20201110 08:37:12.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.092" endtime="20201110 08:37:12.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.090" endtime="20201110 08:37:12.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.403" level="INFO">${RESULT} = [{'time': 0.022279778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.022301792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:12.400" endtime="20201110 08:37:12.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:12.404" endtime="20201110 08:37:12.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.422" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.421" endtime="20201110 08:37:12.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.424" level="INFO">VALUE: [1.78890000000001e-05, 1.6722999999999738e-05, 1.662500000000275e-05, 1.6722999999999738e-05, 1.6570000000000473e-05, 1.6819999999997254e-05, 1.711100000000021e-05, 1.7098000000000113e-05, 1.684699999999692e-05, 1.704099999999889e-05, 1.666699999999799e-05, 1.7069999999997504e-05, 1.684700000000039e-05, 1.6514000000002194e-05, 1.6805999999997684e-05, 1.706899999999803e-05, 1.6735999999999834e-05, 1.705499999999846e-05, 1.668100000000103e-05, 1.6694000000001125e-05, 1.713899999999935e-05, 1.6694000000001125e-05, 1.6735999999999834e-05, 1.665300000000189e-05, 1.705499999999846e-05, 1.6763999999998974e-05, 1.704100000000236e-05, 1.6972000000000514e-05, 1.708300000000107e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.6999999999999654e-05, 1.6736000000003304e-05, 1.661099999999971e-05, 1.6778000000002014e-05, 1.6680000000001555e-05, 1.6541999999997864e-05, 1.6972000000000514e-05, 1.6930000000001805e-05, 1.706899999999803e-05, 1.6749999999999404e-05, 1.662500000000275e-05, 1.665299999999842e-05, 1.6735999999999834e-05, 1.6806000000001153e-05, 1.7013999999999224e-05, 1.665299999999842e-05, 1.680500000000168e-05, 1.686099999999996e-05, 1.7056000000001403e-05]</msg>
<status status="PASS" starttime="20201110 08:37:12.423" endtime="20201110 08:37:12.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.418" endtime="20201110 08:37:12.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.428" endtime="20201110 08:37:12.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.431" endtime="20201110 08:37:12.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.430" endtime="20201110 08:37:12.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.426" endtime="20201110 08:37:12.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.059" endtime="20201110 08:37:12.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.058" endtime="20201110 08:37:12.452"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.461" endtime="20201110 08:37:12.476"></status>
</kw>
<msg timestamp="20201110 08:37:12.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.459" endtime="20201110 08:37:12.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.478" endtime="20201110 08:37:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.480" endtime="20201110 08:37:12.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.457" endtime="20201110 08:37:12.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.455" endtime="20201110 08:37:12.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.490" endtime="20201110 08:37:12.777"></status>
</kw>
<msg timestamp="20201110 08:37:12.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.489" endtime="20201110 08:37:12.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.782" endtime="20201110 08:37:12.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.790" endtime="20201110 08:37:12.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.486" endtime="20201110 08:37:12.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.485" endtime="20201110 08:37:12.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.797" level="INFO">${RESULT} = [{'time': 0.022360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.022383056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.793" endtime="20201110 08:37:12.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.811" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:12.798" endtime="20201110 08:37:12.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.816" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.815" endtime="20201110 08:37:12.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.818" level="INFO">VALUE: [1.8500000000001154e-05, 1.7847999999997394e-05, 1.7542000000002334e-05, 1.795899999999795e-05, 1.765299999999942e-05, 1.7987000000000558e-05, 1.759699999999767e-05, 1.7680000000002555e-05, 1.813900000000035e-05, 1.806899999999903e-05, 1.762500000000028e-05, 1.8193999999999155e-05, 1.8014000000000224e-05, 1.7902000000000196e-05, 1.777700000000007e-05, 1.7972000000001515e-05, 1.766699999999899e-05, 1.7901999999996726e-05, 1.7679999999999085e-05, 1.7985999999997615e-05, 1.8014000000000224e-05, 1.7791999999999114e-05, 1.790300000000314e-05, 1.787500000000053e-05, 1.816699999999949e-05, 1.786099999999749e-05, 1.7722000000001265e-05, 1.787500000000053e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.7736000000000834e-05, 1.793099999999881e-05, 1.7985999999997615e-05, 1.7694000000002125e-05, 1.80829999999986e-05, 1.805499999999946e-05, 1.759700000000114e-05, 1.7791999999999114e-05, 1.768100000000203e-05, 1.7986000000001084e-05, 1.7750000000000404e-05, 1.786100000000096e-05, 1.7527999999999294e-05, 1.756899999999853e-05, 1.7763999999999974e-05, 1.8014000000000224e-05, 1.7569000000002e-05, 1.7541999999998864e-05, 1.7707999999998225e-05, 1.8027999999999794e-05]</msg>
<status status="PASS" starttime="20201110 08:37:12.817" endtime="20201110 08:37:12.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.812" endtime="20201110 08:37:12.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.822" endtime="20201110 08:37:12.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.825" endtime="20201110 08:37:12.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.824" endtime="20201110 08:37:12.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.820" endtime="20201110 08:37:12.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.453" endtime="20201110 08:37:12.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.453" endtime="20201110 08:37:12.846"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.855" endtime="20201110 08:37:12.870"></status>
</kw>
<msg timestamp="20201110 08:37:12.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.853" endtime="20201110 08:37:12.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.871" endtime="20201110 08:37:12.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.874" endtime="20201110 08:37:12.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.851" endtime="20201110 08:37:12.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.849" endtime="20201110 08:37:12.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.884" endtime="20201110 08:37:13.170"></status>
</kw>
<msg timestamp="20201110 08:37:13.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.883" endtime="20201110 08:37:13.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.174" endtime="20201110 08:37:13.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.183" endtime="20201110 08:37:13.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.880" endtime="20201110 08:37:13.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.878" endtime="20201110 08:37:13.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.190" level="INFO">${RESULT} = [{'time': 0.022381278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.98890000000021e-05, 'source_diff': 1.98890000000021e-05}, {'time': 0.022405306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:13.186" endtime="20201110 08:37:13.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.203" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:13.191" endtime="20201110 08:37:13.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.208" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.207" endtime="20201110 08:37:13.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.211" level="INFO">VALUE: [1.98890000000021e-05, 1.894499999999938e-05, 1.8847999999998394e-05, 1.8764000000000974e-05, 1.8541999999999864e-05, 1.9042000000000364e-05, 1.886100000000196e-05, 1.8862000000001433e-05, 1.855499999999996e-05, 1.894499999999938e-05, 1.8584000000002043e-05, 1.8598000000001613e-05, 1.884699999999892e-05, 1.859699999999867e-05, 1.851300000000125e-05, 1.8707999999999225e-05, 1.8707999999999225e-05, 1.851299999999778e-05, 1.8972000000002515e-05, 1.8915999999997296e-05, 1.884700000000239e-05, 1.887500000000153e-05, 1.8514000000000724e-05, 1.8902000000001196e-05, 1.8957999999999475e-05, 1.8680000000000085e-05, 1.8971999999999045e-05, 1.8901999999997726e-05, 1.8749999999997935e-05, 1.865300000000042e-05, 1.880500000000021e-05, 1.8943999999999905e-05, 1.856899999999953e-05, 1.8778000000000544e-05, 1.8778000000000544e-05, 1.909699999999917e-05, 1.90829999999996e-05, 1.859699999999867e-05, 1.859700000000214e-05, 1.90829999999996e-05, 1.8514000000000724e-05, 1.886100000000196e-05, 1.90829999999996e-05, 1.8819999999999254e-05, 1.9055999999999934e-05, 1.881899999999978e-05, 1.9055999999999934e-05, 1.894499999999938e-05, 1.8985999999998615e-05, 1.8999999999998185e-05]</msg>
<status status="PASS" starttime="20201110 08:37:13.209" endtime="20201110 08:37:13.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.204" endtime="20201110 08:37:13.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.216" endtime="20201110 08:37:13.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.220" endtime="20201110 08:37:13.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.218" endtime="20201110 08:37:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.214" endtime="20201110 08:37:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.847" endtime="20201110 08:37:13.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.847" endtime="20201110 08:37:13.243"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.252" endtime="20201110 08:37:13.267"></status>
</kw>
<msg timestamp="20201110 08:37:13.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.250" endtime="20201110 08:37:13.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.269" endtime="20201110 08:37:13.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.271" endtime="20201110 08:37:13.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.248" endtime="20201110 08:37:13.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.246" endtime="20201110 08:37:13.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.281" endtime="20201110 08:37:13.566"></status>
</kw>
<msg timestamp="20201110 08:37:13.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023554903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.280" endtime="20201110 08:37:13.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023533833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023554903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.570" endtime="20201110 08:37:13.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.579" endtime="20201110 08:37:13.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.277" endtime="20201110 08:37:13.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.275" endtime="20201110 08:37:13.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.586" level="INFO">${RESULT} = [{'time': 0.023554903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1069999999998035e-05, 'source_diff': 2.1069999999998035e-05}, {'time': 0.023579944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:13.582" endtime="20201110 08:37:13.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:13.587" endtime="20201110 08:37:13.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.604" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.603" endtime="20201110 08:37:13.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.606" level="INFO">VALUE: [2.1069999999998035e-05, 1.9901999999998726e-05, 1.9721999999999795e-05, 1.9597999999999144e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.959699999999967e-05, 1.986099999999949e-05, 1.9708000000000225e-05, 2.00830000000006e-05, 1.990300000000167e-05, 2.016699999999802e-05, 1.959699999999967e-05, 1.9528000000001294e-05, 1.9847999999999394e-05, 1.986100000000296e-05, 1.986099999999949e-05, 1.956900000000053e-05, 1.952700000000182e-05, 1.9652000000001946e-05, 1.95830000000001e-05, 2.00830000000006e-05, 1.988899999999863e-05, 1.9651999999998476e-05, 1.9514000000001724e-05, 1.954100000000139e-05, 1.9915999999998296e-05, 1.9958000000000475e-05, 1.961099999999924e-05, 2.0028000000001794e-05, 1.961099999999924e-05, 1.994500000000038e-05, 1.9999999999999185e-05, 1.9471999999999545e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.980499999999774e-05, 2.0070000000000504e-05, 1.984699999999992e-05, 1.984699999999992e-05, 1.9944000000000905e-05, 1.9500000000002154e-05, 1.965299999999795e-05, 1.988899999999863e-05, 1.9721999999999795e-05, 2.0056000000000934e-05, 1.9820000000000254e-05, 1.9791999999997645e-05, 2.006899999999756e-05, 1.988899999999863e-05]</msg>
<status status="PASS" starttime="20201110 08:37:13.605" endtime="20201110 08:37:13.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.600" endtime="20201110 08:37:13.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.610" endtime="20201110 08:37:13.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.613" endtime="20201110 08:37:13.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.612" endtime="20201110 08:37:13.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.608" endtime="20201110 08:37:13.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.244" endtime="20201110 08:37:13.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.243" endtime="20201110 08:37:13.634"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.643" endtime="20201110 08:37:13.658"></status>
</kw>
<msg timestamp="20201110 08:37:13.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.641" endtime="20201110 08:37:13.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.659" endtime="20201110 08:37:13.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.662" endtime="20201110 08:37:13.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.639" endtime="20201110 08:37:13.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.637" endtime="20201110 08:37:13.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.672" endtime="20201110 08:37:13.958"></status>
</kw>
<msg timestamp="20201110 08:37:13.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.670" endtime="20201110 08:37:13.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.962" endtime="20201110 08:37:13.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.970" endtime="20201110 08:37:13.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.668" endtime="20201110 08:37:13.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.666" endtime="20201110 08:37:13.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.977" level="INFO">${RESULT} = [{'time': 0.022056736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.14029999999997e-05, 'source_diff': 2.14029999999997e-05}, {'time': 0.02208275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:13.974" endtime="20201110 08:37:13.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:13.978" endtime="20201110 08:37:13.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.995" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.994" endtime="20201110 08:37:13.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.998" level="INFO">VALUE: [2.14029999999997e-05, 2.0958000000001475e-05, 2.094499999999791e-05, 2.0542000000001864e-05, 2.1041999999998895e-05, 2.0820000000001254e-05, 2.0749999999999935e-05, 2.07090000000007e-05, 2.091699999999877e-05, 2.0708000000001225e-05, 2.068099999999809e-05, 2.0528000000002294e-05, 2.0986000000000615e-05, 2.1070000000001504e-05, 2.063899999999938e-05, 2.086100000000049e-05, 2.0777999999999075e-05, 2.0584000000000574e-05, 2.065300000000242e-05, 2.0707999999997756e-05, 2.091699999999877e-05, 2.1041999999998895e-05, 2.1083999999997605e-05, 2.0598000000000144e-05, 2.1014000000003225e-05, 2.068099999999809e-05, 2.0528000000002294e-05, 2.062499999999981e-05, 2.07090000000007e-05, 2.0861999999999964e-05, 2.055500000000196e-05, 2.0749999999999935e-05, 2.0570000000001004e-05, 2.0986000000000615e-05, 2.0694000000001656e-05, 2.080499999999874e-05, 2.0763999999999505e-05, 2.111100000000074e-05, 2.0736000000000365e-05, 2.10969999999977e-05, 2.1013999999999755e-05, 2.0915999999999296e-05, 2.0708000000001225e-05, 2.088899999999963e-05, 2.106899999999856e-05, 2.0735999999996896e-05, 2.0986000000000615e-05, 2.1027999999999325e-05, 2.081900000000178e-05, 2.0527999999998825e-05]</msg>
<status status="PASS" starttime="20201110 08:37:13.996" endtime="20201110 08:37:14.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.992" endtime="20201110 08:37:14.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.010" endtime="20201110 08:37:14.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.014" endtime="20201110 08:37:14.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.012" endtime="20201110 08:37:14.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.008" endtime="20201110 08:37:14.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.635" endtime="20201110 08:37:14.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.634" endtime="20201110 08:37:14.035"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.043" endtime="20201110 08:37:14.058"></status>
</kw>
<msg timestamp="20201110 08:37:14.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.042" endtime="20201110 08:37:14.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.060" endtime="20201110 08:37:14.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.062" endtime="20201110 08:37:14.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.039" endtime="20201110 08:37:14.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.037" endtime="20201110 08:37:14.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.072" endtime="20201110 08:37:14.359"></status>
</kw>
<msg timestamp="20201110 08:37:14.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.071" endtime="20201110 08:37:14.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.363" endtime="20201110 08:37:14.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.371" endtime="20201110 08:37:14.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.068" endtime="20201110 08:37:14.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.066" endtime="20201110 08:37:14.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.378" level="INFO">${RESULT} = [{'time': 0.022099375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.234700000000242e-05, 'source_diff': 2.234700000000242e-05}, {'time': 0.022126417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:14.374" endtime="20201110 08:37:14.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.392" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:14.379" endtime="20201110 08:37:14.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.397" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.396" endtime="20201110 08:37:14.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.399" level="INFO">VALUE: [2.234700000000242e-05, 2.1805999999999215e-05, 2.1721999999998326e-05, 2.162500000000081e-05, 2.1834000000001824e-05, 2.197299999999805e-05, 2.2055999999999465e-05, 2.195899999999848e-05, 2.169500000000213e-05, 2.184699999999845e-05, 2.1971999999998576e-05, 2.1541999999999395e-05, 2.187500000000106e-05, 2.1612000000000714e-05, 2.19030000000002e-05, 2.1666000000000046e-05, 2.17090000000017e-05, 2.173700000000084e-05, 2.193099999999934e-05, 2.1762999999997562e-05, 2.1750000000000935e-05, 2.162500000000081e-05, 2.208299999999913e-05, 2.2180000000000116e-05, 2.162499999999734e-05, 2.2000000000001185e-05, 2.154099999999992e-05, 2.156899999999906e-05, 2.184699999999845e-05, 2.1651999999997007e-05, 2.1666000000000046e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.163899999999691e-05, 2.1708000000002226e-05, 2.1957999999999006e-05, 2.180499999999974e-05, 2.156899999999906e-05, 2.180500000000321e-05, 2.1735999999997896e-05, 2.158299999999863e-05, 2.165299999999995e-05, 2.2055999999999465e-05, 2.180499999999974e-05, 2.162500000000081e-05, 2.181899999999931e-05, 2.183300000000235e-05, 2.1708000000002226e-05, 2.2014000000000755e-05, 2.183299999999888e-05]</msg>
<status status="PASS" starttime="20201110 08:37:14.398" endtime="20201110 08:37:14.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.393" endtime="20201110 08:37:14.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.403" endtime="20201110 08:37:14.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.407" endtime="20201110 08:37:14.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.405" endtime="20201110 08:37:14.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.401" endtime="20201110 08:37:14.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.036" endtime="20201110 08:37:14.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.035" endtime="20201110 08:37:14.427"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.436" endtime="20201110 08:37:14.452"></status>
</kw>
<msg timestamp="20201110 08:37:14.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.435" endtime="20201110 08:37:14.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.454" endtime="20201110 08:37:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.456" endtime="20201110 08:37:14.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.432" endtime="20201110 08:37:14.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.430" endtime="20201110 08:37:14.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.466" endtime="20201110 08:37:14.753"></status>
</kw>
<msg timestamp="20201110 08:37:14.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:14.465" endtime="20201110 08:37:14.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:14.757" endtime="20201110 08:37:14.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.765" endtime="20201110 08:37:14.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.462" endtime="20201110 08:37:14.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.461" endtime="20201110 08:37:14.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.772" level="INFO">${RESULT} = [{'time': 0.022526514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4013999999999286e-05, 'source_diff': 2.4013999999999286e-05}, {'time': 0.022554514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:14.769" endtime="20201110 08:37:14.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.786" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:14.773" endtime="20201110 08:37:14.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.790" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.789" endtime="20201110 08:37:14.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.793" level="INFO">VALUE: [2.4013999999999286e-05, 2.265300000000095e-05, 2.3070000000000035e-05, 2.286100000000249e-05, 2.27090000000027e-05, 2.2971999999999576e-05, 2.280500000000074e-05, 2.261099999999877e-05, 2.295899999999948e-05, 2.3041999999997426e-05, 2.3026999999998382e-05, 2.2999999999998716e-05, 2.29030000000012e-05, 2.2929999999997397e-05, 2.2847999999998925e-05, 2.2542000000000395e-05, 2.2764000000001505e-05, 2.262500000000181e-05, 2.2598000000002144e-05, 2.2612000000001714e-05, 2.2612000000001714e-05, 2.298700000000209e-05, 2.3000000000002185e-05, 2.308300000000013e-05, 2.311099999999927e-05, 2.2721999999999326e-05, 2.293100000000034e-05, 2.2985999999999146e-05, 2.2749999999998466e-05, 2.281900000000031e-05, 2.279100000000117e-05, 2.2666000000001046e-05, 2.2944000000000436e-05, 2.2721999999999326e-05, 2.284699999999945e-05, 2.2902000000001727e-05, 2.2514000000001255e-05, 2.2916000000001296e-05, 2.2792000000000645e-05, 2.2790999999997702e-05, 2.2958000000000006e-05, 2.2985999999999146e-05, 2.261099999999877e-05, 2.3013999999998286e-05, 2.3013999999998286e-05, 2.2499999999998216e-05, 2.2735999999998896e-05, 2.283299999999988e-05, 2.2694000000000186e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:37:14.791" endtime="20201110 08:37:14.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.787" endtime="20201110 08:37:14.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.797" endtime="20201110 08:37:14.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.801" endtime="20201110 08:37:14.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.799" endtime="20201110 08:37:14.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.795" endtime="20201110 08:37:14.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.428" endtime="20201110 08:37:14.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.428" endtime="20201110 08:37:14.822"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.831" endtime="20201110 08:37:14.847"></status>
</kw>
<msg timestamp="20201110 08:37:14.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.829" endtime="20201110 08:37:14.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.848" endtime="20201110 08:37:14.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.851" endtime="20201110 08:37:14.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.827" endtime="20201110 08:37:14.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.824" endtime="20201110 08:37:14.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.861" endtime="20201110 08:37:15.148"></status>
</kw>
<msg timestamp="20201110 08:37:15.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.859" endtime="20201110 08:37:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.152" endtime="20201110 08:37:15.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.160" endtime="20201110 08:37:15.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.857" endtime="20201110 08:37:15.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.855" endtime="20201110 08:37:15.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.167" level="INFO">${RESULT} = [{'time': 0.022150014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.438899999999966e-05, 'source_diff': 2.438899999999966e-05}, {'time': 0.022179028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.163" endtime="20201110 08:37:15.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:15.168" endtime="20201110 08:37:15.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.185" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.184" endtime="20201110 08:37:15.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.188" level="INFO">VALUE: [2.438899999999966e-05, 2.387499999999959e-05, 2.3514000000002255e-05, 2.3930000000001866e-05, 2.4027999999998856e-05, 2.37229999999998e-05, 2.3513999999998786e-05, 2.3887999999999687e-05, 2.387499999999959e-05, 2.3820000000000785e-05, 2.3834000000000355e-05, 2.394500000000091e-05, 2.3749999999999466e-05, 2.3762999999999562e-05, 2.387500000000306e-05, 2.4040999999998952e-05, 2.3778000000002075e-05, 2.3707999999997287e-05, 2.3901999999999257e-05, 2.3944000000001436e-05, 2.4026999999999382e-05, 2.3637999999999437e-05, 2.3749999999999466e-05, 2.3929999999998397e-05, 2.362499999999934e-05, 2.3763999999999036e-05, 2.413899999999941e-05, 2.3790999999998702e-05, 2.361099999999977e-05, 2.3708000000000756e-05, 2.362499999999934e-05, 2.355500000000149e-05, 2.3915999999998827e-05, 2.3791999999998176e-05, 2.3514000000002255e-05, 2.3749999999999466e-05, 2.4013999999999286e-05, 2.366700000000152e-05, 2.386100000000002e-05, 2.3722000000000326e-05, 2.388900000000263e-05, 2.363899999999891e-05, 2.4027999999998856e-05, 2.3806000000001215e-05, 2.388899999999916e-05, 2.3916000000002297e-05, 2.4042000000001895e-05, 2.3693999999997717e-05, 2.358300000000063e-05, 2.368100000000109e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.186" endtime="20201110 08:37:15.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.181" endtime="20201110 08:37:15.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.191" endtime="20201110 08:37:15.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.195" endtime="20201110 08:37:15.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.193" endtime="20201110 08:37:15.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.190" endtime="20201110 08:37:15.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.823" endtime="20201110 08:37:15.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.822" endtime="20201110 08:37:15.216"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.224" endtime="20201110 08:37:15.239"></status>
</kw>
<msg timestamp="20201110 08:37:15.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.223" endtime="20201110 08:37:15.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.241" endtime="20201110 08:37:15.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.243" endtime="20201110 08:37:15.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.220" endtime="20201110 08:37:15.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.218" endtime="20201110 08:37:15.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.253" endtime="20201110 08:37:15.539"></status>
</kw>
<msg timestamp="20201110 08:37:15.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.252" endtime="20201110 08:37:15.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.543" endtime="20201110 08:37:15.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.551" endtime="20201110 08:37:15.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.249" endtime="20201110 08:37:15.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.247" endtime="20201110 08:37:15.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.558" level="INFO">${RESULT} = [{'time': 0.021965667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.021996681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.554" endtime="20201110 08:37:15.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.571" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:15.559" endtime="20201110 08:37:15.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.576" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.575" endtime="20201110 08:37:15.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.579" level="INFO">VALUE: [2.568099999999962e-05, 2.5362000000000995e-05, 2.487500000000059e-05, 2.4749999999996997e-05, 2.470900000000123e-05, 2.4777999999999606e-05, 2.462500000000034e-05, 2.4986000000001146e-05, 2.472299999999733e-05, 2.4652000000000007e-05, 2.516699999999955e-05, 2.4957999999998537e-05, 2.4943999999998967e-05, 2.4750000000000466e-05, 2.4652000000000007e-05, 2.458300000000163e-05, 2.5222000000001826e-05, 2.506900000000256e-05, 2.483300000000188e-05, 2.4929999999999397e-05, 2.45970000000012e-05, 2.458300000000163e-05, 2.463899999999991e-05, 2.484700000000145e-05, 2.5054999999999522e-05, 2.4764000000000036e-05, 2.5014000000000286e-05, 2.4806000000002215e-05, 2.512500000000084e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.458300000000163e-05, 2.463899999999991e-05, 2.488900000000016e-05, 2.4958000000002006e-05, 2.4721999999997857e-05, 2.4528000000002825e-05, 2.5014000000000286e-05, 2.462499999999687e-05, 2.488900000000016e-05, 2.4832999999998412e-05, 2.4777999999999606e-05, 2.4791999999999176e-05, 2.4736000000000896e-05, 2.483300000000188e-05, 2.486100000000102e-05, 2.4735999999997427e-05, 2.483300000000188e-05, 2.4513999999999786e-05, 2.465300000000295e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.577" endtime="20201110 08:37:15.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.572" endtime="20201110 08:37:15.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.582" endtime="20201110 08:37:15.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.586" endtime="20201110 08:37:15.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.584" endtime="20201110 08:37:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.581" endtime="20201110 08:37:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.217" endtime="20201110 08:37:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.216" endtime="20201110 08:37:15.607"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.615" endtime="20201110 08:37:15.630"></status>
</kw>
<msg timestamp="20201110 08:37:15.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.614" endtime="20201110 08:37:15.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.632" endtime="20201110 08:37:15.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.634" endtime="20201110 08:37:15.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.611" endtime="20201110 08:37:15.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.609" endtime="20201110 08:37:15.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.645" endtime="20201110 08:37:15.930"></status>
</kw>
<msg timestamp="20201110 08:37:15.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.643" endtime="20201110 08:37:15.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.934" endtime="20201110 08:37:15.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.943" endtime="20201110 08:37:15.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.640" endtime="20201110 08:37:15.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.639" endtime="20201110 08:37:15.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.950" level="INFO">${RESULT} = [{'time': 0.021879292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.670900000000323e-05, 'source_diff': 2.670900000000323e-05}, {'time': 0.021910292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.946" endtime="20201110 08:37:15.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.964" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:15.951" endtime="20201110 08:37:15.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.969" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.968" endtime="20201110 08:37:15.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.972" level="INFO">VALUE: [2.670900000000323e-05, 2.547300000000155e-05, 2.6055999999999996e-05, 2.597300000000205e-05, 2.6000000000001716e-05, 2.5764000000001036e-05, 2.5819999999999316e-05, 2.6014000000001286e-05, 2.6111999999998275e-05, 2.5847999999998456e-05, 2.6054999999997053e-05, 2.6027999999997387e-05, 2.5902000000001257e-05, 2.5652000000001007e-05, 2.5638000000001437e-05, 2.55970000000022e-05, 2.5568999999999592e-05, 2.5792000000000176e-05, 2.5736000000001896e-05, 2.5846999999998982e-05, 2.6028000000000856e-05, 2.5527000000000882e-05, 2.5943999999999967e-05, 2.6054999999997053e-05, 2.563899999999744e-05, 2.5596999999998732e-05, 2.590300000000073e-05, 2.5708000000002756e-05, 2.588900000000116e-05, 2.5582999999999162e-05, 2.5846999999998982e-05, 2.6014000000001286e-05, 2.5832999999999412e-05, 2.565299999999701e-05, 2.5778000000000606e-05, 2.6082999999999662e-05, 2.5555999999999496e-05, 2.581900000000331e-05, 2.5736000000001896e-05, 2.566700000000005e-05, 2.5541999999999926e-05, 2.6042000000000426e-05, 2.569499999999919e-05, 2.569499999999919e-05, 2.568099999999962e-05, 2.5819999999999316e-05, 2.568099999999962e-05, 2.6042000000000426e-05, 2.568099999999962e-05, 2.5528000000000356e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.970" endtime="20201110 08:37:15.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.965" endtime="20201110 08:37:15.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.975" endtime="20201110 08:37:15.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.979" endtime="20201110 08:37:15.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.977" endtime="20201110 08:37:15.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.974" endtime="20201110 08:37:15.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.608" endtime="20201110 08:37:15.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.607" endtime="20201110 08:37:15.999"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.008" endtime="20201110 08:37:16.024"></status>
</kw>
<msg timestamp="20201110 08:37:16.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.007" endtime="20201110 08:37:16.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.026" endtime="20201110 08:37:16.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.028" endtime="20201110 08:37:16.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.004" endtime="20201110 08:37:16.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.002" endtime="20201110 08:37:16.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.039" endtime="20201110 08:37:16.324"></status>
</kw>
<msg timestamp="20201110 08:37:16.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.037" endtime="20201110 08:37:16.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022427194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.328" endtime="20201110 08:37:16.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.337" endtime="20201110 08:37:16.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.034" endtime="20201110 08:37:16.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.033" endtime="20201110 08:37:16.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.344" level="INFO">${RESULT} = [{'time': 0.022427194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7583000000001162e-05, 'source_diff': 2.7583000000001162e-05}, {'time': 0.022459208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.340" endtime="20201110 08:37:16.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:16.345" endtime="20201110 08:37:16.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.362" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.361" endtime="20201110 08:37:16.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.364" level="INFO">VALUE: [2.7583000000001162e-05, 2.6555000000001022e-05, 2.6763999999998567e-05, 2.6943999999997498e-05, 2.6749999999998997e-05, 2.6596999999999732e-05, 2.6972000000000107e-05, 2.6958000000000537e-05, 2.6554999999997553e-05, 2.6944000000000967e-05, 2.6972000000000107e-05, 2.6542000000000926e-05, 2.6554999999997553e-05, 2.6874999999999122e-05, 2.7042000000001426e-05, 2.6985999999999677e-05, 2.6972000000000107e-05, 2.7083000000000662e-05, 2.6708000000000287e-05, 2.6833000000000412e-05, 2.666700000000105e-05, 2.69170000000013e-05, 2.665300000000148e-05, 2.7124999999999372e-05, 2.666700000000105e-05, 2.6887999999999218e-05, 2.6986000000003146e-05, 2.666700000000105e-05, 2.6735999999999427e-05, 2.695900000000001e-05, 2.663900000000191e-05, 2.6556000000000496e-05, 2.6556000000000496e-05, 2.6750000000002466e-05, 2.6624999999998872e-05, 2.6500000000002216e-05, 2.6750000000002466e-05, 2.6763999999998567e-05, 2.6624999999998872e-05, 2.7013999999998817e-05, 2.6612000000002245e-05, 2.6514000000001786e-05, 2.6556000000000496e-05, 2.6597999999999206e-05, 2.6805000000001272e-05, 2.6986000000003146e-05, 2.7012999999999343e-05, 2.6526999999998413e-05, 2.6555000000001022e-05, 2.6916000000001827e-05]</msg>
<status status="PASS" starttime="20201110 08:37:16.363" endtime="20201110 08:37:16.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.358" endtime="20201110 08:37:16.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.368" endtime="20201110 08:37:16.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.371" endtime="20201110 08:37:16.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.370" endtime="20201110 08:37:16.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.366" endtime="20201110 08:37:16.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.000" endtime="20201110 08:37:16.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.000" endtime="20201110 08:37:16.392"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.401" endtime="20201110 08:37:16.416"></status>
</kw>
<msg timestamp="20201110 08:37:16.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.399" endtime="20201110 08:37:16.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.417" endtime="20201110 08:37:16.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.420" endtime="20201110 08:37:16.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.397" endtime="20201110 08:37:16.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.395" endtime="20201110 08:37:16.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.430" endtime="20201110 08:37:16.716"></status>
</kw>
<msg timestamp="20201110 08:37:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.428" endtime="20201110 08:37:16.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.720" endtime="20201110 08:37:16.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.728" endtime="20201110 08:37:16.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.426" endtime="20201110 08:37:16.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.424" endtime="20201110 08:37:16.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.735" level="INFO">${RESULT} = [{'time': 0.021918417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8389000000000192e-05, 'source_diff': 2.8389000000000192e-05}, {'time': 0.021951417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.732" endtime="20201110 08:37:16.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:16.736" endtime="20201110 08:37:16.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.754" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.753" endtime="20201110 08:37:16.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.756" level="INFO">VALUE: [2.8389000000000192e-05, 2.766700000000205e-05, 2.768099999999815e-05, 2.794500000000144e-05, 2.7790999999999233e-05, 2.8069000000002092e-05, 2.79309999999984e-05, 2.7805000000002272e-05, 2.8055000000002522e-05, 2.7666000000002577e-05, 2.8083000000001662e-05, 2.8013000000000343e-05, 2.8013999999999817e-05, 2.7512999999999843e-05, 2.7776999999999663e-05, 2.7583000000001162e-05, 2.8082999999998193e-05, 2.7652999999999012e-05, 2.7651999999999538e-05, 2.8111000000000802e-05, 2.7846999999997513e-05, 2.8054999999999053e-05, 2.7943999999998498e-05, 2.766699999999858e-05, 2.7736000000000427e-05, 2.7972000000001107e-05, 2.7888999999999692e-05, 2.8068999999998623e-05, 2.79170000000023e-05, 2.766699999999858e-05, 2.7943999999998498e-05, 2.7833000000001412e-05, 2.7763999999999567e-05, 2.768100000000162e-05, 2.7583000000001162e-05, 2.8069999999998096e-05, 2.7861000000000552e-05, 2.766699999999858e-05, 2.7972000000001107e-05, 2.7763999999999567e-05, 2.7875000000000122e-05, 2.7861000000000552e-05, 2.7583000000001162e-05, 2.7777999999999137e-05, 2.8056000000001996e-05, 2.7652999999999012e-05, 2.772300000000033e-05, 2.7791999999998707e-05, 2.795900000000101e-05, 2.7971999999997638e-05]</msg>
<status status="PASS" starttime="20201110 08:37:16.755" endtime="20201110 08:37:16.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.750" endtime="20201110 08:37:16.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.760" endtime="20201110 08:37:16.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.763" endtime="20201110 08:37:16.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.762" endtime="20201110 08:37:16.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.758" endtime="20201110 08:37:16.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.393" endtime="20201110 08:37:16.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.393" endtime="20201110 08:37:16.784"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.793" endtime="20201110 08:37:16.808"></status>
</kw>
<msg timestamp="20201110 08:37:16.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.791" endtime="20201110 08:37:16.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.809" endtime="20201110 08:37:16.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.812" endtime="20201110 08:37:16.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.789" endtime="20201110 08:37:16.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.787" endtime="20201110 08:37:16.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.822" endtime="20201110 08:37:17.108"></status>
</kw>
<msg timestamp="20201110 08:37:17.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.820" endtime="20201110 08:37:17.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.113" endtime="20201110 08:37:17.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.121" endtime="20201110 08:37:17.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.818" endtime="20201110 08:37:17.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.816" endtime="20201110 08:37:17.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.128" level="INFO">${RESULT} = [{'time': 0.022256014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.022290028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:17.124" endtime="20201110 08:37:17.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.142" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:17.129" endtime="20201110 08:37:17.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.146" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.145" endtime="20201110 08:37:17.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.149" level="INFO">VALUE: [2.9403000000000762e-05, 2.8736000000001427e-05, 2.8569999999998597e-05, 2.8666999999999582e-05, 2.9055999999999527e-05, 2.9069999999999097e-05, 2.9068999999999623e-05, 2.8610999999997833e-05, 2.894499999999897e-05, 2.869500000000219e-05, 2.9055999999999527e-05, 2.8735999999997958e-05, 2.8666999999999582e-05, 2.8639000000000442e-05, 2.8653000000000012e-05, 2.894499999999897e-05, 2.8903000000000262e-05, 2.8916999999999832e-05, 2.8612000000000776e-05, 2.8916999999999832e-05, 2.8540999999999983e-05, 2.8776999999997194e-05, 2.8666000000000108e-05, 2.8638000000000968e-05, 2.9082999999999193e-05, 2.9070000000002566e-05, 2.8999999999997778e-05, 2.8819000000002842e-05, 2.8943999999999498e-05, 2.8736000000001427e-05, 2.8902000000000788e-05, 2.8889000000000692e-05, 2.8639000000000442e-05, 2.8986000000001677e-05, 2.8568999999999123e-05, 2.8943999999999498e-05, 2.8527999999999887e-05, 2.8929999999999928e-05, 2.8764000000000567e-05, 2.8639000000000442e-05, 2.8916999999999832e-05, 2.8818999999999373e-05, 2.8707999999998818e-05, 2.8957999999999068e-05, 2.8971999999998638e-05, 2.8833000000002412e-05, 2.9028000000000387e-05, 2.8568999999999123e-05, 2.8638999999996972e-05, 2.89309999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.147" endtime="20201110 08:37:17.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.143" endtime="20201110 08:37:17.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.152" endtime="20201110 08:37:17.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.156" endtime="20201110 08:37:17.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.154" endtime="20201110 08:37:17.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.151" endtime="20201110 08:37:17.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.785" endtime="20201110 08:37:17.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.784" endtime="20201110 08:37:17.177"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.185" endtime="20201110 08:37:17.201"></status>
</kw>
<msg timestamp="20201110 08:37:17.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.184" endtime="20201110 08:37:17.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.202" endtime="20201110 08:37:17.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.205" endtime="20201110 08:37:17.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.181" endtime="20201110 08:37:17.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.179" endtime="20201110 08:37:17.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.215" endtime="20201110 08:37:17.501"></status>
</kw>
<msg timestamp="20201110 08:37:17.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.213" endtime="20201110 08:37:17.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.505" endtime="20201110 08:37:17.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.513" endtime="20201110 08:37:17.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.211" endtime="20201110 08:37:17.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.209" endtime="20201110 08:37:17.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.520" level="INFO">${RESULT} = [{'time': 0.022051222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0290999999998264e-05, 'source_diff': 3.0290999999998264e-05}, {'time': 0.022086222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:17.517" endtime="20201110 08:37:17.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.536" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:17.521" endtime="20201110 08:37:17.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.541" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.540" endtime="20201110 08:37:17.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.543" level="INFO">VALUE: [3.0290999999998264e-05, 2.9513999999997848e-05, 2.9778000000001137e-05, 2.9666000000001108e-05, 2.9764000000001567e-05, 2.9778000000001137e-05, 2.9707999999999818e-05, 2.9653000000001012e-05, 2.9930000000000928e-05, 3.0042000000000957e-05, 2.992999999999746e-05, 2.9971999999999638e-05, 2.9777999999997667e-05, 2.969500000000319e-05, 2.9958000000000068e-05, 2.9916999999997362e-05, 3.0083000000000193e-05, 2.9985999999999208e-05, 2.9749999999998528e-05, 2.9958000000000068e-05, 2.9569999999999597e-05, 2.9819999999999847e-05, 2.9611000000002302e-05, 2.9750000000001997e-05, 2.9819999999999847e-05, 3.0082999999996723e-05, 2.9971999999999638e-05, 2.9778000000001137e-05, 2.9763999999998098e-05, 3.0013999999998348e-05, 2.9749999999998528e-05, 2.9778000000001137e-05, 2.9931000000000402e-05, 3.0013999999998348e-05, 2.9569999999999597e-05, 2.9832999999999943e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9903000000001262e-05, 2.9596999999999263e-05, 2.9834000000002886e-05, 2.9624999999998403e-05, 2.9806000000000277e-05, 2.9819000000000373e-05, 3.0042000000000957e-05, 2.9805000000000803e-05, 2.9971999999999638e-05, 2.9791000000001233e-05, 2.9555000000000553e-05, 2.9958000000000068e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.542" endtime="20201110 08:37:17.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.537" endtime="20201110 08:37:17.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.547" endtime="20201110 08:37:17.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.550" endtime="20201110 08:37:17.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.549" endtime="20201110 08:37:17.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.545" endtime="20201110 08:37:17.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.178" endtime="20201110 08:37:17.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.177" endtime="20201110 08:37:17.571"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.580" endtime="20201110 08:37:17.595"></status>
</kw>
<msg timestamp="20201110 08:37:17.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.578" endtime="20201110 08:37:17.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.596" endtime="20201110 08:37:17.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.599" endtime="20201110 08:37:17.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.576" endtime="20201110 08:37:17.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.574" endtime="20201110 08:37:17.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.609" endtime="20201110 08:37:17.895"></status>
</kw>
<msg timestamp="20201110 08:37:17.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.608" endtime="20201110 08:37:17.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.899" endtime="20201110 08:37:17.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.908" endtime="20201110 08:37:17.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.605" endtime="20201110 08:37:17.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.603" endtime="20201110 08:37:17.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.914" level="INFO">${RESULT} = [{'time': 0.021857847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1332999999997974e-05, 'source_diff': 3.1332999999997974e-05}, {'time': 0.021893875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:17.911" endtime="20201110 08:37:17.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:17.915" endtime="20201110 08:37:17.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.932" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.931" endtime="20201110 08:37:17.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.935" level="INFO">VALUE: [3.1332999999997974e-05, 3.083300000000094e-05, 3.099999999999978e-05, 3.097200000000064e-05, 3.074999999999953e-05, 3.0582999999997224e-05, 3.087499999999965e-05, 3.074999999999953e-05, 3.055599999999756e-05, 3.083300000000094e-05, 3.098600000000021e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.091599999999889e-05, 3.066699999999811e-05, 3.10700000000011e-05, 3.091600000000236e-05, 3.05700000000006e-05, 3.091700000000183e-05, 3.105599999999806e-05, 3.061099999999983e-05, 3.080600000000128e-05, 3.09449999999975e-05, 3.11249999999999e-05, 3.10700000000011e-05, 3.069399999999778e-05, 3.066700000000158e-05, 3.068000000000168e-05, 3.088899999999922e-05, 3.065300000000201e-05, 3.077800000000214e-05, 3.0776999999999194e-05, 3.1040999999999014e-05, 3.087499999999965e-05, 3.091599999999889e-05, 3.108300000000119e-05, 3.0846999999997043e-05, 3.056900000000112e-05, 3.076400000000257e-05, 3.069399999999778e-05, 3.09440000000015e-05, 3.054200000000146e-05, 3.061099999999983e-05, 3.113899999999947e-05, 3.101399999999935e-05, 3.058300000000069e-05, 3.109700000000076e-05, 3.102799999999892e-05, 3.1068999999998154e-05, 3.076400000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.933" endtime="20201110 08:37:17.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.929" endtime="20201110 08:37:17.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.938" endtime="20201110 08:37:17.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.942" endtime="20201110 08:37:17.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.940" endtime="20201110 08:37:17.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.937" endtime="20201110 08:37:17.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.572" endtime="20201110 08:37:17.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.572" endtime="20201110 08:37:17.963"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.972" endtime="20201110 08:37:17.987"></status>
</kw>
<msg timestamp="20201110 08:37:17.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.970" endtime="20201110 08:37:17.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.988" endtime="20201110 08:37:17.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.991" endtime="20201110 08:37:17.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.967" endtime="20201110 08:37:17.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.965" endtime="20201110 08:37:17.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.001" endtime="20201110 08:37:18.287"></status>
</kw>
<msg timestamp="20201110 08:37:18.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.999" endtime="20201110 08:37:18.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.292" endtime="20201110 08:37:18.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.300" endtime="20201110 08:37:18.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.997" endtime="20201110 08:37:18.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.995" endtime="20201110 08:37:18.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.307" level="INFO">${RESULT} = [{'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.241699999999986e-05, 'source_diff': 3.241699999999986e-05}, {'time': 0.022074125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.303" endtime="20201110 08:37:18.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:18.308" endtime="20201110 08:37:18.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.325" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.324" endtime="20201110 08:37:18.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.327" level="INFO">VALUE: [3.241699999999986e-05, 3.248600000000171e-05, 3.200000000000078e-05, 3.17640000000001e-05, 3.201400000000035e-05, 3.2054999999999584e-05, 3.1554999999999084e-05, 3.1777000000000194e-05, 3.156900000000212e-05, 3.212499999999743e-05, 3.161100000000083e-05, 3.173600000000096e-05, 3.1832999999998474e-05, 3.202799999999992e-05, 3.2082999999998724e-05, 3.1790999999999764e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.1860999999997613e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.159700000000126e-05, 3.197200000000164e-05, 3.169399999999878e-05, 3.183300000000194e-05, 3.177799999999967e-05, 3.201400000000035e-05, 3.202799999999992e-05, 3.165299999999954e-05, 3.1860999999997613e-05, 3.208300000000219e-05, 3.173599999999749e-05, 3.179199999999924e-05, 3.205599999999906e-05, 3.204200000000296e-05, 3.197200000000164e-05, 3.200000000000078e-05, 3.180599999999881e-05, 3.195900000000154e-05, 3.197200000000164e-05, 3.181999999999838e-05, 3.194500000000197e-05, 3.170899999999782e-05, 3.187499999999718e-05, 3.195900000000154e-05, 3.191599999999989e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.195899999999807e-05, 3.154200000000246e-05]</msg>
<status status="PASS" starttime="20201110 08:37:18.326" endtime="20201110 08:37:18.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.321" endtime="20201110 08:37:18.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.331" endtime="20201110 08:37:18.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.334" endtime="20201110 08:37:18.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.333" endtime="20201110 08:37:18.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.329" endtime="20201110 08:37:18.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.964" endtime="20201110 08:37:18.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.963" endtime="20201110 08:37:18.355"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.364" endtime="20201110 08:37:18.379"></status>
</kw>
<msg timestamp="20201110 08:37:18.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.362" endtime="20201110 08:37:18.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.381" endtime="20201110 08:37:18.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.383" endtime="20201110 08:37:18.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.360" endtime="20201110 08:37:18.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.358" endtime="20201110 08:37:18.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.393" endtime="20201110 08:37:18.678"></status>
</kw>
<msg timestamp="20201110 08:37:18.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.392" endtime="20201110 08:37:18.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.683" endtime="20201110 08:37:18.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.691" endtime="20201110 08:37:18.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.389" endtime="20201110 08:37:18.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.387" endtime="20201110 08:37:18.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.698" level="INFO">${RESULT} = [{'time': 0.021885319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.368000000000121e-05, 'source_diff': 3.368000000000121e-05}, {'time': 0.021923375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.695" endtime="20201110 08:37:18.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.712" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:18.699" endtime="20201110 08:37:18.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.716" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.715" endtime="20201110 08:37:18.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.719" level="INFO">VALUE: [3.368000000000121e-05, 3.288899999999775e-05, 3.2791000000000764e-05, 3.293000000000046e-05, 3.2832999999999474e-05, 3.301399999999788e-05, 3.26250000000014e-05, 3.31250000000019e-05, 3.270899999999882e-05, 3.272200000000239e-05, 3.286100000000208e-05, 3.273600000000196e-05, 3.306999999999963e-05, 3.293000000000046e-05, 3.26250000000014e-05, 3.29449999999995e-05, 3.254199999999999e-05, 3.2874999999998183e-05, 3.27779999999972e-05, 3.2832999999999474e-05, 3.249999999999781e-05, 3.306999999999963e-05, 3.297200000000264e-05, 3.269500000000272e-05, 3.295899999999907e-05, 3.300000000000178e-05, 3.299999999999831e-05, 3.288900000000122e-05, 3.2624999999997933e-05, 3.305600000000006e-05, 3.299999999999831e-05, 3.255599999999956e-05, 3.295899999999907e-05, 3.3026999999997975e-05, 3.29449999999995e-05, 3.316600000000114e-05, 3.293000000000046e-05, 3.280599999999981e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.268099999999968e-05, 3.2568999999999654e-05, 3.266600000000064e-05, 3.2596999999998794e-05, 3.273599999999849e-05, 3.315299999999757e-05, 3.2541000000000514e-05, 3.2846999999999044e-05, 3.270799999999935e-05, 3.249999999999781e-05]</msg>
<status status="PASS" starttime="20201110 08:37:18.717" endtime="20201110 08:37:18.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.712" endtime="20201110 08:37:18.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.722" endtime="20201110 08:37:18.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.726" endtime="20201110 08:37:18.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.724" endtime="20201110 08:37:18.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.721" endtime="20201110 08:37:18.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.356" endtime="20201110 08:37:18.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.356" endtime="20201110 08:37:18.747"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.755" endtime="20201110 08:37:18.772"></status>
</kw>
<msg timestamp="20201110 08:37:18.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.754" endtime="20201110 08:37:18.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.773" endtime="20201110 08:37:18.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.776" endtime="20201110 08:37:18.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.751" endtime="20201110 08:37:18.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.749" endtime="20201110 08:37:18.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.786" endtime="20201110 08:37:19.071"></status>
</kw>
<msg timestamp="20201110 08:37:19.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.784" endtime="20201110 08:37:19.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021861847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.076" endtime="20201110 08:37:19.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.084" endtime="20201110 08:37:19.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.781" endtime="20201110 08:37:19.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.780" endtime="20201110 08:37:19.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.091" level="INFO">${RESULT} = [{'time': 0.021896153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.430600000000131e-05, 'source_diff': 3.430600000000131e-05}, {'time': 0.021935139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.087" endtime="20201110 08:37:19.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.105" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:19.092" endtime="20201110 08:37:19.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.110" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.109" endtime="20201110 08:37:19.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.112" level="INFO">VALUE: [3.430600000000131e-05, 3.380600000000081e-05, 3.37779999999982e-05, 3.35839999999997e-05, 3.361100000000283e-05, 3.383399999999995e-05, 3.401399999999888e-05, 3.390299999999832e-05, 3.357000000000013e-05, 3.358400000000317e-05, 3.398599999999974e-05, 3.395900000000007e-05, 3.3833000000000474e-05, 3.386200000000256e-05, 3.372200000000339e-05, 3.3874999999999184e-05, 3.3541000000001514e-05, 3.4124999999999434e-05, 3.370799999999688e-05, 3.3847000000000044e-05, 3.4082999999997254e-05, 3.394400000000103e-05, 3.363900000000197e-05, 3.3540999999998045e-05, 3.374999999999906e-05, 3.3555000000001084e-05, 3.352800000000142e-05, 3.3610999999999364e-05, 3.365299999999807e-05, 3.3569000000000654e-05, 3.348599999999924e-05, 3.37640000000021e-05, 3.404200000000149e-05, 3.4054999999998115e-05, 3.4013000000002874e-05, 3.369400000000078e-05, 3.3569000000000654e-05, 3.405599999999759e-05, 3.370800000000035e-05, 3.37779999999982e-05, 3.3833000000000474e-05, 3.398599999999974e-05, 3.382000000000038e-05, 3.357000000000013e-05, 3.3847000000000044e-05, 3.393100000000093e-05, 3.368099999999721e-05, 3.36519999999986e-05, 3.355600000000056e-05, 3.388900000000222e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.111" endtime="20201110 08:37:19.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.106" endtime="20201110 08:37:19.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.124" endtime="20201110 08:37:19.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.127" endtime="20201110 08:37:19.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.126" endtime="20201110 08:37:19.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.122" endtime="20201110 08:37:19.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.748" endtime="20201110 08:37:19.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.747" endtime="20201110 08:37:19.148"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.157" endtime="20201110 08:37:19.172"></status>
</kw>
<msg timestamp="20201110 08:37:19.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.155" endtime="20201110 08:37:19.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.173" endtime="20201110 08:37:19.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.176" endtime="20201110 08:37:19.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.152" endtime="20201110 08:37:19.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.150" endtime="20201110 08:37:19.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.186" endtime="20201110 08:37:19.471"></status>
</kw>
<msg timestamp="20201110 08:37:19.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.185" endtime="20201110 08:37:19.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.476" endtime="20201110 08:37:19.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.484" endtime="20201110 08:37:19.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.182" endtime="20201110 08:37:19.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.180" endtime="20201110 08:37:19.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.491" level="INFO">${RESULT} = [{'time': 0.021960389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5916999999999893e-05, 'source_diff': 3.5916999999999893e-05}, {'time': 0.022000403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.487" endtime="20201110 08:37:19.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.504" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:19.492" endtime="20201110 08:37:19.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.509" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.508" endtime="20201110 08:37:19.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.511" level="INFO">VALUE: [3.5916999999999893e-05, 3.468100000000168e-05, 3.494499999999803e-05, 3.495900000000107e-05, 3.5040999999999545e-05, 3.468100000000168e-05, 3.4624999999999934e-05, 3.473599999999702e-05, 3.457000000000113e-05, 3.454200000000199e-05, 3.4624999999999934e-05, 3.477800000000267e-05, 3.467999999999874e-05, 3.494400000000203e-05, 3.4555000000002084e-05, 3.4832999999998004e-05, 3.5040999999999545e-05, 3.479200000000224e-05, 3.5111000000000864e-05, 3.501399999999988e-05, 3.4526999999999475e-05, 3.5110999999997394e-05, 3.475000000000006e-05, 3.495799999999813e-05, 3.4652999999999073e-05, 3.5068999999998685e-05, 3.466699999999864e-05, 3.466699999999864e-05, 3.505599999999859e-05, 3.5097000000001294e-05, 3.455600000000156e-05, 3.472199999999745e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.497200000000117e-05, 3.4861000000000614e-05, 3.501399999999988e-05, 3.486200000000009e-05, 3.5013000000000405e-05, 3.4833000000001474e-05, 3.4611000000000364e-05, 3.497299999999717e-05, 3.491700000000236e-05, 3.505599999999859e-05, 3.468100000000168e-05, 3.486200000000009e-05, 3.4776999999999725e-05, 3.4638999999999504e-05, 3.500000000000031e-05, 3.491599999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.510" endtime="20201110 08:37:19.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.505" endtime="20201110 08:37:19.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.515" endtime="20201110 08:37:19.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.519" endtime="20201110 08:37:19.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.517" endtime="20201110 08:37:19.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.513" endtime="20201110 08:37:19.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.149" endtime="20201110 08:37:19.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.148" endtime="20201110 08:37:19.539"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.548" endtime="20201110 08:37:19.564"></status>
</kw>
<msg timestamp="20201110 08:37:19.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.547" endtime="20201110 08:37:19.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.566" endtime="20201110 08:37:19.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.568" endtime="20201110 08:37:19.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.544" endtime="20201110 08:37:19.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.542" endtime="20201110 08:37:19.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.579" endtime="20201110 08:37:19.864"></status>
</kw>
<msg timestamp="20201110 08:37:19.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022100403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.577" endtime="20201110 08:37:19.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022100403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.868" endtime="20201110 08:37:19.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.877" endtime="20201110 08:37:19.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.574" endtime="20201110 08:37:19.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.573" endtime="20201110 08:37:19.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.884" level="INFO">${RESULT} = [{'time': 0.022100403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.631999999999941e-05, 'source_diff': 3.631999999999941e-05}, {'time': 0.022141417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.881" endtime="20201110 08:37:19.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.898" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:19.885" endtime="20201110 08:37:19.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.903" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.902" endtime="20201110 08:37:19.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.905" level="INFO">VALUE: [3.631999999999941e-05, 3.55840000000017e-05, 3.598599999999827e-05, 3.556999999999866e-05, 3.5847000000002044e-05, 3.5639000000000504e-05, 3.5653000000000074e-05, 3.554199999999952e-05, 3.569499999999878e-05, 3.566600000000017e-05, 3.5777000000000725e-05, 3.5611000000001364e-05, 3.575000000000106e-05, 3.5819000000002904e-05, 3.5790999999996825e-05, 3.618000000000024e-05, 3.551400000000038e-05, 3.591600000000042e-05, 3.5860999999998144e-05, 3.5541000000000045e-05, 3.6055000000000115e-05, 3.566600000000017e-05, 3.573599999999802e-05, 3.6041000000000545e-05, 3.575000000000106e-05, 3.555599999999909e-05, 3.5875000000001184e-05, 3.5818999999999435e-05, 3.554200000000299e-05, 3.6125000000001434e-05, 3.552799999999995e-05, 3.5596999999998324e-05, 3.5666999999999643e-05, 3.572200000000192e-05, 3.569499999999878e-05, 3.583399999999848e-05, 3.5846999999998574e-05, 3.577799999999673e-05, 3.570900000000182e-05, 3.547200000000167e-05, 3.606999999999916e-05, 3.5791000000000295e-05, 3.559800000000127e-05, 3.580599999999934e-05, 3.569499999999878e-05, 3.6096999999998824e-05, 3.559800000000127e-05, 3.5847000000002044e-05, 3.550000000000081e-05, 3.6055000000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.904" endtime="20201110 08:37:19.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.899" endtime="20201110 08:37:19.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.909" endtime="20201110 08:37:19.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.912" endtime="20201110 08:37:19.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.911" endtime="20201110 08:37:19.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.907" endtime="20201110 08:37:19.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.540" endtime="20201110 08:37:19.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.540" endtime="20201110 08:37:19.933"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.942" endtime="20201110 08:37:19.957"></status>
</kw>
<msg timestamp="20201110 08:37:19.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.940" endtime="20201110 08:37:19.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.959" endtime="20201110 08:37:19.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.961" endtime="20201110 08:37:19.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.938" endtime="20201110 08:37:19.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.935" endtime="20201110 08:37:19.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.971" endtime="20201110 08:37:20.256"></status>
</kw>
<msg timestamp="20201110 08:37:20.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.970" endtime="20201110 08:37:20.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.261" endtime="20201110 08:37:20.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.269" endtime="20201110 08:37:20.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.967" endtime="20201110 08:37:20.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.966" endtime="20201110 08:37:20.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.276" level="INFO">${RESULT} = [{'time': 0.021956556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.801399999999941e-05, 'source_diff': 3.801399999999941e-05}, {'time': 0.021998556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:20.272" endtime="20201110 08:37:20.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:20.277" endtime="20201110 08:37:20.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.294" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.293" endtime="20201110 08:37:20.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.297" level="INFO">VALUE: [3.801399999999941e-05, 3.67919999999973e-05, 3.6874999999998714e-05, 3.6790999999997825e-05, 3.6652999999997604e-05, 3.7069000000000685e-05, 3.700000000000231e-05, 3.6833000000000005e-05, 3.672200000000292e-05, 3.702800000000145e-05, 3.6833000000000005e-05, 3.694400000000056e-05, 3.692999999999752e-05, 3.698599999999927e-05, 3.6916999999997424e-05, 3.6791000000001295e-05, 3.6582999999999755e-05, 3.674999999999859e-05, 3.7124999999998964e-05, 3.694400000000056e-05, 3.675000000000206e-05, 3.6889000000001754e-05, 3.675000000000206e-05, 3.702799999999798e-05, 3.702800000000145e-05, 3.6846999999999575e-05, 3.6917000000000894e-05, 3.669499999999978e-05, 3.7110999999999394e-05, 3.676400000000163e-05, 3.6860999999999144e-05, 3.694500000000003e-05, 3.698600000000274e-05, 3.6875000000002184e-05, 3.701399999999841e-05, 3.6861000000002614e-05, 3.708399999999973e-05, 3.6888999999998284e-05, 3.6681000000000213e-05, 3.6541000000001045e-05, 3.704200000000102e-05, 3.658399999999923e-05, 3.669499999999978e-05, 3.6596999999999325e-05, 3.688800000000228e-05, 3.6819000000000435e-05, 3.7125000000002434e-05, 3.6610999999998894e-05, 3.692999999999752e-05, 3.7054999999997645e-05]</msg>
<status status="PASS" starttime="20201110 08:37:20.295" endtime="20201110 08:37:20.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.290" endtime="20201110 08:37:20.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.300" endtime="20201110 08:37:20.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.304" endtime="20201110 08:37:20.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.302" endtime="20201110 08:37:20.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.299" endtime="20201110 08:37:20.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.934" endtime="20201110 08:37:20.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.933" endtime="20201110 08:37:20.325"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.333" endtime="20201110 08:37:20.349"></status>
</kw>
<msg timestamp="20201110 08:37:20.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.332" endtime="20201110 08:37:20.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.351" endtime="20201110 08:37:20.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.353" endtime="20201110 08:37:20.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.329" endtime="20201110 08:37:20.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.327" endtime="20201110 08:37:20.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.363" endtime="20201110 08:37:20.648"></status>
</kw>
<msg timestamp="20201110 08:37:20.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.362" endtime="20201110 08:37:20.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021874875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.652" endtime="20201110 08:37:20.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.661" endtime="20201110 08:37:20.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.359" endtime="20201110 08:37:20.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.357" endtime="20201110 08:37:20.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.667" level="INFO">${RESULT} = [{'time': 0.021874875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.830599999999837e-05, 'source_diff': 3.830599999999837e-05}, {'time': 0.021917889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:20.664" endtime="20201110 08:37:20.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:20.668" endtime="20201110 08:37:20.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.687" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.686" endtime="20201110 08:37:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.689" level="INFO">VALUE: [3.830599999999837e-05, 3.755600000000109e-05, 3.799999999999984e-05, 3.795799999999766e-05, 3.805599999999812e-05, 3.7610999999999895e-05, 3.797300000000017e-05, 3.772200000000045e-05, 3.808400000000073e-05, 3.797300000000017e-05, 3.782000000000091e-05, 3.801400000000288e-05, 3.7681000000001214e-05, 3.7695000000000783e-05, 3.7680999999997744e-05, 3.798600000000027e-05, 3.7681000000001214e-05, 3.798699999999974e-05, 3.7847000000000575e-05, 3.766600000000217e-05, 3.799999999999984e-05, 3.793000000000199e-05, 3.765199999999913e-05, 3.765199999999913e-05, 3.7874999999999714e-05, 3.774999999999959e-05, 3.801399999999941e-05, 3.8068999999998215e-05, 3.7888999999999284e-05, 3.7819000000001435e-05, 3.794399999999809e-05, 3.8082999999997785e-05, 3.7903000000002324e-05, 3.7624999999999464e-05, 3.804199999999855e-05, 3.7666999999998174e-05, 3.7861000000000145e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.7861000000000145e-05, 3.779200000000177e-05, 3.751399999999891e-05, 3.7847000000000575e-05, 3.7695000000000783e-05, 3.7888999999999284e-05, 3.774999999999959e-05, 3.7819000000001435e-05, 3.757000000000066e-05, 3.758400000000023e-05, 3.774999999999959e-05]</msg>
<status status="PASS" starttime="20201110 08:37:20.688" endtime="20201110 08:37:20.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.683" endtime="20201110 08:37:20.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.693" endtime="20201110 08:37:20.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.696" endtime="20201110 08:37:20.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.695" endtime="20201110 08:37:20.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.691" endtime="20201110 08:37:20.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.325" endtime="20201110 08:37:20.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.325" endtime="20201110 08:37:20.717"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.726" endtime="20201110 08:37:20.742"></status>
</kw>
<msg timestamp="20201110 08:37:20.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.724" endtime="20201110 08:37:20.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.744" endtime="20201110 08:37:20.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.747" endtime="20201110 08:37:20.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.722" endtime="20201110 08:37:20.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.720" endtime="20201110 08:37:20.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.757" endtime="20201110 08:37:21.043"></status>
</kw>
<msg timestamp="20201110 08:37:21.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.755" endtime="20201110 08:37:21.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.047" endtime="20201110 08:37:21.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.055" endtime="20201110 08:37:21.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.753" endtime="20201110 08:37:21.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.751" endtime="20201110 08:37:21.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.062" level="INFO">${RESULT} = [{'time': 0.022074694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.990199999999791e-05, 'source_diff': 3.990199999999791e-05}, {'time': 0.022118722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:21.059" endtime="20201110 08:37:21.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.076" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:21.063" endtime="20201110 08:37:21.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.080" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.079" endtime="20201110 08:37:21.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.083" level="INFO">VALUE: [3.990199999999791e-05, 3.870800000000188e-05, 3.894399999999909e-05, 3.865200000000013e-05, 3.9069000000002685e-05, 3.89859999999978e-05, 3.895799999999866e-05, 3.8639000000000034e-05, 3.873600000000102e-05, 3.8902999999999854e-05, 3.8583000000001755e-05, 3.8916999999999424e-05, 3.894399999999909e-05, 3.845800000000163e-05, 3.8652999999999604e-05, 3.8931000000002464e-05, 3.8583000000001755e-05, 3.851399999999991e-05, 3.875000000000059e-05, 3.880599999999887e-05, 3.8610999999997425e-05, 3.872200000000145e-05, 3.87919999999993e-05, 3.8694999999998314e-05, 3.911200000000087e-05, 3.877799999999973e-05, 3.8652999999999604e-05, 3.8582999999998285e-05, 3.8652999999999604e-05, 3.8666999999999174e-05, 3.882000000000191e-05, 3.9054999999999646e-05, 3.881999999999844e-05, 3.894399999999909e-05, 3.8846999999998105e-05, 3.8652999999999604e-05, 3.9068999999999215e-05, 3.891599999999995e-05, 3.872200000000145e-05, 3.872200000000145e-05, 3.8540999999999576e-05, 3.8625000000000465e-05, 3.900000000000084e-05, 3.901400000000041e-05, 3.8568999999998715e-05, 3.8583000000001755e-05, 3.8875000000000715e-05, 3.9138999999997065e-05, 3.901400000000041e-05, 3.8625000000000465e-05]</msg>
<status status="PASS" starttime="20201110 08:37:21.081" endtime="20201110 08:37:21.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.077" endtime="20201110 08:37:21.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.086" endtime="20201110 08:37:21.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.090" endtime="20201110 08:37:21.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.088" endtime="20201110 08:37:21.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.085" endtime="20201110 08:37:21.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.718" endtime="20201110 08:37:21.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.717" endtime="20201110 08:37:21.111"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.119" endtime="20201110 08:37:21.136"></status>
</kw>
<msg timestamp="20201110 08:37:21.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.118" endtime="20201110 08:37:21.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.137" endtime="20201110 08:37:21.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.140" endtime="20201110 08:37:21.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.115" endtime="20201110 08:37:21.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.113" endtime="20201110 08:37:21.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.150" endtime="20201110 08:37:21.437"></status>
</kw>
<msg timestamp="20201110 08:37:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.149" endtime="20201110 08:37:21.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.441" endtime="20201110 08:37:21.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.450" endtime="20201110 08:37:21.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.146" endtime="20201110 08:37:21.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.144" endtime="20201110 08:37:21.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.456" level="INFO">${RESULT} = [{'time': 0.022301833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0819000000000966e-05, 'source_diff': 4.0819000000000966e-05}, {'time': 0.022346861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.453" endtime="20201110 08:37:21.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.470" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:21.457" endtime="20201110 08:37:21.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.475" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.473" endtime="20201110 08:37:21.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.477" level="INFO">VALUE: [4.0819000000000966e-05, 3.949999999999787e-05, 3.9875000000001715e-05, 4.004200000000055e-05, 3.9888999999997815e-05, 4.0054999999997176e-05, 3.9709000000002354e-05, 3.949999999999787e-05, 3.975000000000159e-05, 3.9818999999999966e-05, 3.9832999999999535e-05, 3.9680999999999744e-05, 3.956999999999919e-05, 3.950000000000134e-05, 4.002800000000098e-05, 4.002800000000098e-05, 3.9874999999998245e-05, 3.983399999999901e-05, 4.004200000000055e-05, 3.999999999999837e-05, 3.991599999999748e-05, 4.0082999999999785e-05, 3.9680999999999744e-05, 3.97920000000003e-05, 3.9860999999998675e-05, 3.9569000000003185e-05, 3.9917000000000424e-05, 3.973700000000149e-05, 3.9597000000002325e-05, 3.9583000000002755e-05, 3.975000000000159e-05, 4.019400000000034e-05, 3.9527000000001006e-05, 3.944399999999959e-05, 3.970799999999941e-05, 3.977800000000073e-05, 3.9832999999999535e-05, 3.952800000000048e-05, 3.951400000000091e-05, 3.968000000000027e-05, 3.9610999999998425e-05, 3.972199999999898e-05, 3.977799999999726e-05, 3.9596999999998855e-05, 3.954200000000005e-05, 4.002800000000098e-05, 4.0069000000000216e-05, 3.9875000000001715e-05, 3.9625000000001465e-05, 3.976400000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:37:21.476" endtime="20201110 08:37:21.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.471" endtime="20201110 08:37:21.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.481" endtime="20201110 08:37:21.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.484" endtime="20201110 08:37:21.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.483" endtime="20201110 08:37:21.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.479" endtime="20201110 08:37:21.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.112" endtime="20201110 08:37:21.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.111" endtime="20201110 08:37:21.505"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.514" endtime="20201110 08:37:21.529"></status>
</kw>
<msg timestamp="20201110 08:37:21.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.512" endtime="20201110 08:37:21.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.530" endtime="20201110 08:37:21.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.533" endtime="20201110 08:37:21.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.509" endtime="20201110 08:37:21.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.507" endtime="20201110 08:37:21.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.543" endtime="20201110 08:37:21.838"></status>
</kw>
<msg timestamp="20201110 08:37:21.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.541" endtime="20201110 08:37:21.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.853" endtime="20201110 08:37:21.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.877" endtime="20201110 08:37:21.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.539" endtime="20201110 08:37:21.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.537" endtime="20201110 08:37:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.898" level="INFO">${RESULT} = [{'time': 0.022039639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.129199999999833e-05, 'source_diff': 4.129199999999833e-05}, {'time': 0.022085639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:21.888" endtime="20201110 08:37:21.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.918" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:21.900" endtime="20201110 08:37:21.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.925" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.924" endtime="20201110 08:37:21.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.930" level="INFO">VALUE: [4.129199999999833e-05, 4.0624999999998995e-05, 4.0903000000001855e-05, 4.076399999999869e-05, 4.054200000000105e-05, 4.052800000000148e-05, 4.055600000000062e-05, 4.0931000000000994e-05, 4.1110999999999925e-05, 4.101399999999894e-05, 4.095800000000066e-05, 4.0860999999999675e-05, 4.0888999999998815e-05, 4.1110999999999925e-05, 4.074999999999912e-05, 4.0708999999999884e-05, 4.105599999999765e-05, 4.1026999999999036e-05, 4.0860999999999675e-05, 4.0596999999999855e-05, 4.09859999999998e-05, 4.0819000000000966e-05, 4.095800000000066e-05, 4.051400000000191e-05, 4.0875000000002715e-05, 4.073599999999955e-05, 4.102800000000198e-05, 4.0819000000000966e-05, 4.09859999999998e-05, 4.077799999999826e-05, 4.0610999999999425e-05, 4.0945000000000564e-05, 4.077799999999826e-05, 4.100000000000284e-05, 4.0652999999998135e-05, 4.0638999999998565e-05, 4.0610999999999425e-05, 4.09859999999998e-05, 4.1110999999999925e-05, 4.080600000000087e-05, 4.102800000000198e-05, 4.0875000000002715e-05, 4.0666999999997705e-05, 4.0610999999999425e-05, 4.052800000000148e-05, 4.0639000000002035e-05, 4.099999999999937e-05, 4.074999999999912e-05, 4.052800000000148e-05, 4.100000000000284e-05]</msg>
<status status="PASS" starttime="20201110 08:37:21.928" endtime="20201110 08:37:21.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.920" endtime="20201110 08:37:21.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.937" endtime="20201110 08:37:21.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.943" endtime="20201110 08:37:21.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.940" endtime="20201110 08:37:21.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.933" endtime="20201110 08:37:21.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.506" endtime="20201110 08:37:21.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.505" endtime="20201110 08:37:21.965"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.975" endtime="20201110 08:37:21.992"></status>
</kw>
<msg timestamp="20201110 08:37:21.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.973" endtime="20201110 08:37:21.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.993" endtime="20201110 08:37:21.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.996" endtime="20201110 08:37:21.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.971" endtime="20201110 08:37:22.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.968" endtime="20201110 08:37:22.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.010" endtime="20201110 08:37:22.296"></status>
</kw>
<msg timestamp="20201110 08:37:22.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.008" endtime="20201110 08:37:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.300" endtime="20201110 08:37:22.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.308" endtime="20201110 08:37:22.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.004" endtime="20201110 08:37:22.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.002" endtime="20201110 08:37:22.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.315" level="INFO">${RESULT} = [{'time': 0.024712792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000000065e-05, 'source_diff': 4.2139000000000065e-05}, {'time': 0.024760806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.312" endtime="20201110 08:37:22.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.330" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:22.316" endtime="20201110 08:37:22.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.334" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.333" endtime="20201110 08:37:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.337" level="INFO">VALUE: [4.2139000000000065e-05, 4.2473000000001204e-05, 4.157000000000119e-05, 4.1818999999998496e-05, 4.179199999999883e-05, 4.166599999999923e-05, 4.194399999999862e-05, 4.1540999999999106e-05, 4.200000000000037e-05, 4.1638999999999565e-05, 4.192999999999905e-05, 4.1624999999999995e-05, 4.1888999999999815e-05, 4.17920000000023e-05, 4.173600000000055e-05, 4.197200000000123e-05, 4.1875000000000245e-05, 4.172200000000098e-05, 4.2125000000000495e-05, 4.168000000000227e-05, 4.144400000000159e-05, 4.204200000000255e-05, 4.2110999999997456e-05, 4.1903000000002855e-05, 4.1638999999999565e-05, 4.177800000000273e-05, 4.154199999999858e-05, 4.207000000000169e-05, 4.179199999999883e-05, 4.195799999999819e-05, 4.175000000000012e-05, 4.19999999999969e-05, 4.17920000000023e-05, 4.159800000000033e-05, 4.176399999999969e-05, 4.195799999999819e-05, 4.207000000000169e-05, 4.1930999999998525e-05, 4.2111000000000925e-05, 4.184800000000058e-05, 4.2097000000001356e-05, 4.197200000000123e-05, 4.170800000000141e-05, 4.1832999999998066e-05, 4.2054999999999176e-05, 4.151399999999944e-05, 4.198599999999733e-05, 4.1583000000001286e-05, 4.2082999999998316e-05, 4.173600000000055e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.335" endtime="20201110 08:37:22.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.331" endtime="20201110 08:37:22.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.340" endtime="20201110 08:37:22.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.344" endtime="20201110 08:37:22.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.342" endtime="20201110 08:37:22.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.339" endtime="20201110 08:37:22.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.966" endtime="20201110 08:37:22.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.965" endtime="20201110 08:37:22.365"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.373" endtime="20201110 08:37:22.389"></status>
</kw>
<msg timestamp="20201110 08:37:22.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.372" endtime="20201110 08:37:22.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.391" endtime="20201110 08:37:22.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.393" endtime="20201110 08:37:22.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.369" endtime="20201110 08:37:22.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.367" endtime="20201110 08:37:22.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.403" endtime="20201110 08:37:22.690"></status>
</kw>
<msg timestamp="20201110 08:37:22.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:22.402" endtime="20201110 08:37:22.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:22.694" endtime="20201110 08:37:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.702" endtime="20201110 08:37:22.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.399" endtime="20201110 08:37:22.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.398" endtime="20201110 08:37:22.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.709" level="INFO">${RESULT} = [{'time': 0.021977833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3833000000000066e-05, 'source_diff': 4.3833000000000066e-05}, {'time': 0.022026917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.705" endtime="20201110 08:37:22.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:22.710" endtime="20201110 08:37:22.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.727" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.726" endtime="20201110 08:37:22.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.730" level="INFO">VALUE: [4.3833000000000066e-05, 4.351400000000144e-05, 4.270800000000241e-05, 4.301400000000094e-05, 4.2861000000001676e-05, 4.279199999999983e-05, 4.276399999999722e-05, 4.269399999999937e-05, 4.2583000000002286e-05, 4.2639000000000565e-05, 4.309799999999836e-05, 4.273599999999808e-05, 4.2889000000000815e-05, 4.255600000000262e-05, 4.2597000000001856e-05, 4.255599999999915e-05, 4.2903000000000385e-05, 4.2846999999998636e-05, 4.302800000000051e-05, 4.256999999999872e-05, 4.2708999999998415e-05, 4.302699999999757e-05, 4.3125000000001495e-05, 4.2709000000001884e-05, 4.279199999999983e-05, 4.259800000000133e-05, 4.274999999999765e-05, 4.2582999999998816e-05, 4.305600000000312e-05, 4.301400000000094e-05, 4.2568999999999246e-05, 4.254199999999958e-05, 4.2860999999998206e-05, 4.3167000000000205e-05, 4.300000000000137e-05, 4.2597000000001856e-05, 4.304200000000008e-05, 4.302800000000051e-05, 4.276400000000069e-05, 4.272200000000198e-05, 4.302800000000051e-05, 4.3096999999998886e-05, 4.254199999999958e-05, 4.304200000000008e-05, 4.294399999999962e-05, 4.2611000000001426e-05, 4.28059999999994e-05, 4.302800000000051e-05, 4.28059999999994e-05, 4.3139000000001065e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.728" endtime="20201110 08:37:22.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.723" endtime="20201110 08:37:22.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.733" endtime="20201110 08:37:22.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.737" endtime="20201110 08:37:22.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.735" endtime="20201110 08:37:22.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.731" endtime="20201110 08:37:22.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.366" endtime="20201110 08:37:22.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.365" endtime="20201110 08:37:22.757"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.766" endtime="20201110 08:37:22.782"></status>
</kw>
<msg timestamp="20201110 08:37:22.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.765" endtime="20201110 08:37:22.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.783" endtime="20201110 08:37:22.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.786" endtime="20201110 08:37:22.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.762" endtime="20201110 08:37:22.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.760" endtime="20201110 08:37:22.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.796" endtime="20201110 08:37:23.082"></status>
</kw>
<msg timestamp="20201110 08:37:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.795" endtime="20201110 08:37:23.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.087" endtime="20201110 08:37:23.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.095" endtime="20201110 08:37:23.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.792" endtime="20201110 08:37:23.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.790" endtime="20201110 08:37:23.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.102" level="INFO">${RESULT} = [{'time': 0.021963986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.497200000000076e-05, 'source_diff': 4.497200000000076e-05}, {'time': 0.022013, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:23.098" endtime="20201110 08:37:23.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:23.103" endtime="20201110 08:37:23.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.120" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.119" endtime="20201110 08:37:23.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.122" level="INFO">VALUE: [4.497200000000076e-05, 4.3639000000001565e-05, 4.392999999999758e-05, 4.395800000000019e-05, 4.372199999999951e-05, 4.401399999999847e-05, 4.3888999999998346e-05, 4.3945000000000095e-05, 4.4124999999999026e-05, 4.3610999999998956e-05, 4.354200000000058e-05, 4.3639000000001565e-05, 4.373599999999908e-05, 4.3638999999998096e-05, 4.404199999999761e-05, 4.372199999999951e-05, 4.3638999999998096e-05, 4.352800000000101e-05, 4.384799999999911e-05, 4.376400000000169e-05, 4.398599999999933e-05, 4.3833000000000066e-05, 4.401400000000194e-05, 4.359799999999886e-05, 4.401399999999847e-05, 4.394400000000062e-05, 4.4012999999999e-05, 4.3819000000000496e-05, 4.4069000000000746e-05, 4.3875000000002246e-05, 4.393000000000105e-05, 4.402800000000151e-05, 4.3846999999999636e-05, 4.401400000000194e-05, 4.405499999999771e-05, 4.370799999999994e-05, 4.377799999999779e-05, 4.355600000000015e-05, 4.369400000000037e-05, 4.3653000000001135e-05, 4.373599999999908e-05, 4.38060000000004e-05, 4.3638999999998096e-05, 4.3931000000000525e-05, 4.3624999999998526e-05, 4.4110999999999456e-05, 4.3596999999999386e-05, 4.3846999999999636e-05, 4.398599999999933e-05, 4.4181000000000775e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.121" endtime="20201110 08:37:23.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.116" endtime="20201110 08:37:23.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.126" endtime="20201110 08:37:23.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.129" endtime="20201110 08:37:23.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.128" endtime="20201110 08:37:23.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.124" endtime="20201110 08:37:23.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.758" endtime="20201110 08:37:23.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.758" endtime="20201110 08:37:23.150"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.159" endtime="20201110 08:37:23.176"></status>
</kw>
<msg timestamp="20201110 08:37:23.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.158" endtime="20201110 08:37:23.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.177" endtime="20201110 08:37:23.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.180" endtime="20201110 08:37:23.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.155" endtime="20201110 08:37:23.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.153" endtime="20201110 08:37:23.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.190" endtime="20201110 08:37:23.476"></status>
</kw>
<msg timestamp="20201110 08:37:23.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.188" endtime="20201110 08:37:23.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.480" endtime="20201110 08:37:23.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.489" endtime="20201110 08:37:23.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.186" endtime="20201110 08:37:23.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.184" endtime="20201110 08:37:23.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.496" level="INFO">${RESULT} = [{'time': 0.022161625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.604199999999961e-05, 'source_diff': 4.604199999999961e-05}, {'time': 0.022211694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.492" endtime="20201110 08:37:23.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:23.497" endtime="20201110 08:37:23.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.514" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.513" endtime="20201110 08:37:23.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.516" level="INFO">VALUE: [4.604199999999961e-05, 4.488799999999987e-05, 4.4847000000000636e-05, 4.4639000000002566e-05, 4.447200000000026e-05, 4.455600000000115e-05, 4.483400000000054e-05, 4.4847000000000636e-05, 4.474999999999965e-05, 4.4958999999997196e-05, 4.473600000000008e-05, 4.473600000000008e-05, 4.479199999999836e-05, 4.505499999999871e-05, 4.505500000000218e-05, 4.491599999999901e-05, 4.479100000000236e-05, 4.497199999999729e-05, 4.494400000000162e-05, 4.457000000000072e-05, 4.495799999999772e-05, 4.5083000000001316e-05, 4.505500000000218e-05, 4.4833000000001066e-05, 4.4597000000000386e-05, 4.4638999999999096e-05, 4.4888999999999346e-05, 4.498599999999686e-05, 4.4902999999998916e-05, 4.470800000000094e-05, 4.4666999999998236e-05, 4.4597000000000386e-05, 4.495800000000119e-05, 4.4569000000001247e-05, 4.470800000000094e-05, 4.501399999999947e-05, 4.481899999999803e-05, 4.473600000000008e-05, 4.505599999999818e-05, 4.501399999999947e-05, 4.479199999999836e-05, 4.477799999999879e-05, 4.48060000000014e-05, 4.479199999999836e-05, 4.4652999999998666e-05, 4.5069000000001747e-05, 4.4736999999999555e-05, 4.4555000000001677e-05, 4.463799999999962e-05, 4.4652999999998666e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.515" endtime="20201110 08:37:23.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.510" endtime="20201110 08:37:23.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.520" endtime="20201110 08:37:23.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.523" endtime="20201110 08:37:23.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.522" endtime="20201110 08:37:23.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.518" endtime="20201110 08:37:23.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.151" endtime="20201110 08:37:23.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.151" endtime="20201110 08:37:23.544"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.553" endtime="20201110 08:37:23.570"></status>
</kw>
<msg timestamp="20201110 08:37:23.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.552" endtime="20201110 08:37:23.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.571" endtime="20201110 08:37:23.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.574" endtime="20201110 08:37:23.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.549" endtime="20201110 08:37:23.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.547" endtime="20201110 08:37:23.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.584" endtime="20201110 08:37:23.869"></status>
</kw>
<msg timestamp="20201110 08:37:23.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.582" endtime="20201110 08:37:23.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.874" endtime="20201110 08:37:23.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.882" endtime="20201110 08:37:23.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.580" endtime="20201110 08:37:23.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.578" endtime="20201110 08:37:23.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.889" level="INFO">${RESULT} = [{'time': 0.022213653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.651400000000097e-05, 'source_diff': 4.651400000000097e-05}, {'time': 0.022264681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.885" endtime="20201110 08:37:23.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:23.890" endtime="20201110 08:37:23.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.908" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.907" endtime="20201110 08:37:23.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.910" level="INFO">VALUE: [4.651400000000097e-05, 4.5959000000001665e-05, 4.592999999999958e-05, 4.5889000000000346e-05, 4.563899999999663e-05, 4.559800000000086e-05, 4.577700000000032e-05, 4.5666999999999236e-05, 4.605499999999971e-05, 4.608299999999885e-05, 4.604100000000014e-05, 4.5569000000002247e-05, 4.5625000000000526e-05, 4.5639000000000096e-05, 4.6097000000001886e-05, 4.60000000000009e-05, 4.575000000000065e-05, 4.555500000000268e-05, 4.602800000000004e-05, 4.5652999999999666e-05, 4.5847000000001636e-05, 4.5889000000000346e-05, 4.576400000000022e-05, 4.5889000000000346e-05, 4.597200000000176e-05, 4.562499999999706e-05, 4.5930999999999056e-05, 4.5625000000000526e-05, 4.5902999999999916e-05, 4.5625000000000526e-05, 4.575000000000065e-05, 4.6153000000000166e-05, 4.608400000000179e-05, 4.5737000000000555e-05, 4.5666999999999236e-05, 4.5987000000000805e-05, 4.573600000000108e-05, 4.554099999999964e-05, 4.5652999999999666e-05, 4.559800000000086e-05, 4.576400000000022e-05, 4.565199999999672e-05, 4.605499999999971e-05, 4.566599999999976e-05, 4.5625000000000526e-05, 4.5861000000001206e-05, 4.590200000000044e-05, 4.5652999999999666e-05, 4.606899999999928e-05, 4.572200000000151e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.909" endtime="20201110 08:37:23.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.904" endtime="20201110 08:37:23.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.914" endtime="20201110 08:37:23.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.918" endtime="20201110 08:37:23.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.916" endtime="20201110 08:37:23.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.912" endtime="20201110 08:37:23.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.545" endtime="20201110 08:37:23.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.545" endtime="20201110 08:37:23.939"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.948" endtime="20201110 08:37:23.965"></status>
</kw>
<msg timestamp="20201110 08:37:23.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.946" endtime="20201110 08:37:23.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.966" endtime="20201110 08:37:23.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.969" endtime="20201110 08:37:23.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.944" endtime="20201110 08:37:23.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.941" endtime="20201110 08:37:23.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.979" endtime="20201110 08:37:24.265"></status>
</kw>
<msg timestamp="20201110 08:37:24.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.977" endtime="20201110 08:37:24.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022810056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.269" endtime="20201110 08:37:24.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.277" endtime="20201110 08:37:24.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.975" endtime="20201110 08:37:24.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.973" endtime="20201110 08:37:24.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.284" level="INFO">${RESULT} = [{'time': 0.022857986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.793000000000158e-05, 'source_diff': 4.793000000000158e-05}, {'time': 0.022910042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.281" endtime="20201110 08:37:24.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.298" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:24.285" endtime="20201110 08:37:24.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.302" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.301" endtime="20201110 08:37:24.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.305" level="INFO">VALUE: [4.793000000000158e-05, 4.677799999999732e-05, 4.672199999999904e-05, 4.706900000000028e-05, 4.655599999999968e-05, 4.709800000000236e-05, 4.6694999999999376e-05, 4.705600000000018e-05, 4.688899999999788e-05, 4.6944999999999626e-05, 4.680599999999993e-05, 4.676399999999775e-05, 4.7139000000001596e-05, 4.673599999999861e-05, 4.655600000000315e-05, 4.6639000000001096e-05, 4.6695000000002845e-05, 4.679100000000089e-05, 4.654100000000064e-05, 4.7167000000000736e-05, 4.701400000000147e-05, 4.66939999999999e-05, 4.6639000000001096e-05, 4.6611000000001956e-05, 4.676400000000122e-05, 4.6709000000002415e-05, 4.702800000000104e-05, 4.6903000000000916e-05, 4.6653000000000666e-05, 4.68329999999996e-05, 4.673599999999861e-05, 4.674999999999818e-05, 4.672199999999904e-05, 4.684699999999917e-05, 4.656899999999978e-05, 4.68329999999996e-05, 4.649999999999793e-05, 4.6653000000000666e-05, 4.681900000000003e-05, 4.6958999999999196e-05, 4.680599999999993e-05, 4.705600000000018e-05, 4.706999999999975e-05, 4.6903000000000916e-05, 4.6653000000000666e-05, 4.708399999999932e-05, 4.70000000000019e-05, 4.6903000000000916e-05, 4.702800000000104e-05, 4.711099999999899e-05]</msg>
<status status="PASS" starttime="20201110 08:37:24.303" endtime="20201110 08:37:24.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.299" endtime="20201110 08:37:24.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.313" endtime="20201110 08:37:24.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.316" endtime="20201110 08:37:24.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.315" endtime="20201110 08:37:24.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.311" endtime="20201110 08:37:24.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.940" endtime="20201110 08:37:24.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.939" endtime="20201110 08:37:24.337"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.346" endtime="20201110 08:37:24.362"></status>
</kw>
<msg timestamp="20201110 08:37:24.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.344" endtime="20201110 08:37:24.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.364" endtime="20201110 08:37:24.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.366" endtime="20201110 08:37:24.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.342" endtime="20201110 08:37:24.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.339" endtime="20201110 08:37:24.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.376" endtime="20201110 08:37:24.663"></status>
</kw>
<msg timestamp="20201110 08:37:24.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.375" endtime="20201110 08:37:24.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.667" endtime="20201110 08:37:24.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.675" endtime="20201110 08:37:24.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.372" endtime="20201110 08:37:24.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.370" endtime="20201110 08:37:24.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.682" level="INFO">${RESULT} = [{'time': 0.022113625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.823600000000011e-05, 'source_diff': 4.823600000000011e-05}, {'time': 0.022166611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.679" endtime="20201110 08:37:24.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:24.683" endtime="20201110 08:37:24.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.700" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.699" endtime="20201110 08:37:24.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.703" level="INFO">VALUE: [4.823600000000011e-05, 4.767999999999786e-05, 4.799999999999943e-05, 4.7917000000001486e-05, 4.759699999999992e-05, 4.8013999999999e-05, 4.793099999999759e-05, 4.8013999999999e-05, 4.776400000000222e-05, 4.786099999999974e-05, 4.7695000000000376e-05, 4.763899999999863e-05, 4.773599999999961e-05, 4.754099999999817e-05, 4.8013999999999e-05, 4.779100000000189e-05, 4.762499999999906e-05, 4.804199999999814e-05, 4.777799999999832e-05, 4.780500000000146e-05, 4.765200000000219e-05, 4.806899999999781e-05, 4.8013999999999e-05, 4.7889000000002346e-05, 4.770800000000047e-05, 4.769399999999743e-05, 4.794400000000115e-05, 4.754100000000164e-05, 4.804200000000161e-05, 4.774999999999918e-05, 4.809700000000042e-05, 4.780599999999746e-05, 4.775000000000265e-05, 4.802799999999857e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.779200000000136e-05, 4.798599999999986e-05, 4.790299999999845e-05, 4.805600000000118e-05, 4.757000000000025e-05, 4.7611000000002957e-05, 4.809799999999989e-05, 4.790299999999845e-05, 4.752800000000154e-05, 4.7861000000003207e-05, 4.786099999999974e-05, 4.779200000000136e-05, 4.815200000000269e-05, 4.76529999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:37:24.701" endtime="20201110 08:37:24.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.697" endtime="20201110 08:37:24.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.706" endtime="20201110 08:37:24.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.710" endtime="20201110 08:37:24.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.708" endtime="20201110 08:37:24.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.705" endtime="20201110 08:37:24.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.338" endtime="20201110 08:37:24.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.337" endtime="20201110 08:37:24.731"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.740" endtime="20201110 08:37:24.756"></status>
</kw>
<msg timestamp="20201110 08:37:24.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.738" endtime="20201110 08:37:24.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.758" endtime="20201110 08:37:24.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.760" endtime="20201110 08:37:24.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.735" endtime="20201110 08:37:24.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.733" endtime="20201110 08:37:24.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.770" endtime="20201110 08:37:25.057"></status>
</kw>
<msg timestamp="20201110 08:37:25.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.769" endtime="20201110 08:37:25.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:25.062" endtime="20201110 08:37:25.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.070" endtime="20201110 08:37:25.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.766" endtime="20201110 08:37:25.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.764" endtime="20201110 08:37:25.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.077" level="INFO">${RESULT} = [{'time': 0.02205125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.98330000000026e-05, 'source_diff': 4.98330000000026e-05}, {'time': 0.022105278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:25.073" endtime="20201110 08:37:25.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.090" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:25.078" endtime="20201110 08:37:25.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.095" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.094" endtime="20201110 08:37:25.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.097" level="INFO">VALUE: [4.98330000000026e-05, 4.876399999999975e-05, 4.909700000000142e-05, 4.894499999999816e-05, 4.8931000000002056e-05, 4.881999999999803e-05, 4.883400000000107e-05, 4.855600000000168e-05, 4.873599999999714e-05, 4.857000000000125e-05, 4.866699999999877e-05, 4.888899999999988e-05, 4.906999999999828e-05, 4.858300000000135e-05, 4.880499999999899e-05, 4.872200000000104e-05, 4.887500000000031e-05, 4.872200000000104e-05, 4.862500000000006e-05, 4.8917000000002486e-05, 4.897200000000129e-05, 4.902799999999957e-05, 4.880599999999846e-05, 4.902799999999957e-05, 4.895800000000172e-05, 4.8707999999998e-05, 4.908299999999838e-05, 4.905599999999871e-05, 4.888899999999988e-05, 4.861100000000049e-05, 4.8653000000002666e-05, 4.904199999999914e-05, 4.862500000000006e-05, 4.857000000000125e-05, 4.886100000000074e-05, 4.883400000000107e-05, 4.908400000000132e-05, 4.8959000000001196e-05, 4.859799999999692e-05, 4.8709000000000946e-05, 4.854199999999864e-05, 4.8737000000000086e-05, 4.869499999999791e-05, 4.900000000000043e-05, 4.897199999999782e-05, 4.858300000000135e-05, 4.909699999999795e-05, 4.901299999999706e-05, 4.895800000000172e-05, 4.905500000000271e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.096" endtime="20201110 08:37:25.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.091" endtime="20201110 08:37:25.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.101" endtime="20201110 08:37:25.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.104" endtime="20201110 08:37:25.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.103" endtime="20201110 08:37:25.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.099" endtime="20201110 08:37:25.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.732" endtime="20201110 08:37:25.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.731" endtime="20201110 08:37:25.125"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.134" endtime="20201110 08:37:25.150"></status>
</kw>
<msg timestamp="20201110 08:37:25.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.132" endtime="20201110 08:37:25.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.152" endtime="20201110 08:37:25.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.154" endtime="20201110 08:37:25.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.130" endtime="20201110 08:37:25.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.128" endtime="20201110 08:37:25.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.164" endtime="20201110 08:37:25.450"></status>
</kw>
<msg timestamp="20201110 08:37:25.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.163" endtime="20201110 08:37:25.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.454" endtime="20201110 08:37:25.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.463" endtime="20201110 08:37:25.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.160" endtime="20201110 08:37:25.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.159" endtime="20201110 08:37:25.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.469" level="INFO">${RESULT} = [{'time': 0.021985903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.037500000000181e-05, 'source_diff': 5.037500000000181e-05}, {'time': 0.022040889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.466" endtime="20201110 08:37:25.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.484" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:25.470" endtime="20201110 08:37:25.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.488" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.487" endtime="20201110 08:37:25.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.491" level="INFO">VALUE: [5.037500000000181e-05, 4.957000000000225e-05, 4.966699999999977e-05, 4.979199999999989e-05, 4.958299999999888e-05, 4.970899999999848e-05, 4.963899999999716e-05, 5.01530000000007e-05, 4.983400000000207e-05, 4.991700000000002e-05, 4.998599999999839e-05, 4.958399999999835e-05, 4.993099999999959e-05, 4.966600000000029e-05, 4.986099999999827e-05, 4.994499999999916e-05, 4.980499999999999e-05, 4.961099999999802e-05, 4.995800000000272e-05, 4.975000000000118e-05, 4.979100000000042e-05, 5.0014000000001e-05, 4.995799999999925e-05, 4.998600000000186e-05, 4.96940000000029e-05, 4.947200000000179e-05, 5.008399999999885e-05, 4.984700000000217e-05, 4.98469999999987e-05, 4.959700000000192e-05, 4.977800000000032e-05, 5.006999999999928e-05, 4.966699999999977e-05, 4.979199999999989e-05, 4.979199999999989e-05, 4.965200000000072e-05, 4.995799999999925e-05, 4.98469999999987e-05, 4.95140000000005e-05, 5.005599999999971e-05, 4.956999999999878e-05, 4.9695000000002376e-05, 5.004200000000014e-05, 4.979199999999989e-05, 4.974999999999771e-05, 4.986100000000174e-05, 4.966699999999977e-05, 4.9888000000001403e-05, 5.00270000000011e-05, 4.966600000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.490" endtime="20201110 08:37:25.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.485" endtime="20201110 08:37:25.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.495" endtime="20201110 08:37:25.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.498" endtime="20201110 08:37:25.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.497" endtime="20201110 08:37:25.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.493" endtime="20201110 08:37:25.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.126" endtime="20201110 08:37:25.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.126" endtime="20201110 08:37:25.519"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.528" endtime="20201110 08:37:25.544"></status>
</kw>
<msg timestamp="20201110 08:37:25.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.526" endtime="20201110 08:37:25.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.546" endtime="20201110 08:37:25.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.548" endtime="20201110 08:37:25.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.523" endtime="20201110 08:37:25.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.521" endtime="20201110 08:37:25.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.559" endtime="20201110 08:37:25.844"></status>
</kw>
<msg timestamp="20201110 08:37:25.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.557" endtime="20201110 08:37:25.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.849" endtime="20201110 08:37:25.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.857" endtime="20201110 08:37:25.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.554" endtime="20201110 08:37:25.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.552" endtime="20201110 08:37:25.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.864" level="INFO">${RESULT} = [{'time': 0.022021958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.112500000000256e-05, 'source_diff': 5.112500000000256e-05}, {'time': 0.022078958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.860" endtime="20201110 08:37:25.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.877" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:25.865" endtime="20201110 08:37:25.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.882" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.881" endtime="20201110 08:37:25.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.884" level="INFO">VALUE: [5.112500000000256e-05, 5.145800000000075e-05, 5.077799999999785e-05, 5.088899999999841e-05, 5.099999999999896e-05, 5.1014000000002e-05, 5.0708e-05, 5.102800000000157e-05, 5.076399999999828e-05, 5.073599999999914e-05, 5.105599999999724e-05, 5.061099999999902e-05, 5.105599999999724e-05, 5.063899999999816e-05, 5.072199999999957e-05, 5.095800000000025e-05, 5.06530000000012e-05, 5.087500000000231e-05, 5.090300000000145e-05, 5.0709000000002946e-05, 5.059799999999892e-05, 5.066700000000077e-05, 5.072199999999957e-05, 5.095899999999973e-05, 5.107000000000028e-05, 5.058299999999988e-05, 5.1014000000002e-05, 5.087499999999884e-05, 5.0901999999998504e-05, 5.086099999999927e-05, 5.081899999999709e-05, 5.058299999999988e-05, 5.075000000000218e-05, 5.104200000000114e-05, 5.086100000000274e-05, 5.086099999999927e-05, 5.0708e-05, 5.10279999999981e-05, 5.099999999999896e-05, 5.062499999999859e-05, 5.068100000000034e-05, 5.063900000000163e-05, 5.068100000000034e-05, 5.088900000000188e-05, 5.0708e-05, 5.076399999999828e-05, 5.08469999999997e-05, 5.112499999999909e-05, 5.105600000000071e-05, 5.079200000000089e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.883" endtime="20201110 08:37:25.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.878" endtime="20201110 08:37:25.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.888" endtime="20201110 08:37:25.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.891" endtime="20201110 08:37:25.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.890" endtime="20201110 08:37:25.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.886" endtime="20201110 08:37:25.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.520" endtime="20201110 08:37:25.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.519" endtime="20201110 08:37:25.912"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.921" endtime="20201110 08:37:25.938"></status>
</kw>
<msg timestamp="20201110 08:37:25.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.919" endtime="20201110 08:37:25.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.939" endtime="20201110 08:37:25.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.942" endtime="20201110 08:37:25.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.917" endtime="20201110 08:37:25.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.915" endtime="20201110 08:37:25.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.952" endtime="20201110 08:37:26.239"></status>
</kw>
<msg timestamp="20201110 08:37:26.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.950" endtime="20201110 08:37:26.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.243" endtime="20201110 08:37:26.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.251" endtime="20201110 08:37:26.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.948" endtime="20201110 08:37:26.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.946" endtime="20201110 08:37:26.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.258" level="INFO">${RESULT} = [{'time': 0.022234222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.265299999999973e-05, 'source_diff': 5.265299999999973e-05}, {'time': 0.022291236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:26.254" endtime="20201110 08:37:26.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.272" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:26.259" endtime="20201110 08:37:26.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.276" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.275" endtime="20201110 08:37:26.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.279" level="INFO">VALUE: [5.265299999999973e-05, 5.172200000000057e-05, 5.143000000000161e-05, 5.181899999999809e-05, 5.172200000000057e-05, 5.159700000000045e-05, 5.201399999999953e-05, 5.208400000000085e-05, 5.157000000000078e-05, 5.161100000000002e-05, 5.193100000000159e-05, 5.162499999999959e-05, 5.170900000000048e-05, 5.207000000000128e-05, 5.199999999999996e-05, 5.168100000000134e-05, 5.186199999999974e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.186199999999974e-05, 5.154100000000217e-05, 5.1679999999998394e-05, 5.179099999999895e-05, 5.183300000000113e-05, 5.1693999999997964e-05, 5.15270000000026e-05, 5.1957999999997784e-05, 5.208299999999791e-05, 5.188900000000288e-05, 5.216700000000227e-05, 5.188899999999941e-05, 5.202800000000257e-05, 5.176399999999928e-05, 5.149999999999946e-05, 5.1971999999997354e-05, 5.208299999999791e-05, 5.205599999999824e-05, 5.170900000000048e-05, 5.182000000000103e-05, 5.162499999999959e-05, 5.211100000000052e-05, 5.193099999999812e-05, 5.190299999999898e-05, 5.191700000000202e-05, 5.162499999999959e-05, 5.195900000000073e-05, 5.155599999999774e-05, 5.165299999999873e-05, 5.1637999999999684e-05, 5.159700000000045e-05]</msg>
<status status="PASS" starttime="20201110 08:37:26.277" endtime="20201110 08:37:26.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.273" endtime="20201110 08:37:26.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.282" endtime="20201110 08:37:26.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.286" endtime="20201110 08:37:26.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.284" endtime="20201110 08:37:26.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.281" endtime="20201110 08:37:26.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.913" endtime="20201110 08:37:26.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.913" endtime="20201110 08:37:26.307"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.316" endtime="20201110 08:37:26.332"></status>
</kw>
<msg timestamp="20201110 08:37:26.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.314" endtime="20201110 08:37:26.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.334" endtime="20201110 08:37:26.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.336" endtime="20201110 08:37:26.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.312" endtime="20201110 08:37:26.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.309" endtime="20201110 08:37:26.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.346" endtime="20201110 08:37:26.633"></status>
</kw>
<msg timestamp="20201110 08:37:26.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.345" endtime="20201110 08:37:26.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.637" endtime="20201110 08:37:26.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.645" endtime="20201110 08:37:26.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.342" endtime="20201110 08:37:26.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.341" endtime="20201110 08:37:26.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.652" level="INFO">${RESULT} = [{'time': 0.022169931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.350000000000146e-05, 'source_diff': 5.350000000000146e-05}, {'time': 0.022227944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:26.648" endtime="20201110 08:37:26.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.665" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:26.653" endtime="20201110 08:37:26.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.670" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.669" endtime="20201110 08:37:26.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.672" level="INFO">VALUE: [5.350000000000146e-05, 5.258299999999841e-05, 5.2749999999997244e-05, 5.3179999999999894e-05, 5.284699999999823e-05, 5.305500000000324e-05, 5.295800000000225e-05, 5.275000000000071e-05, 5.2735999999997674e-05, 5.30280000000001e-05, 5.313899999999719e-05, 5.2985999999997924e-05, 5.275000000000071e-05, 5.311099999999805e-05, 5.304199999999967e-05, 5.266700000000277e-05, 5.2693999999998964e-05, 5.301400000000053e-05, 5.26530000000032e-05, 5.280599999999899e-05, 5.2735999999997674e-05, 5.261100000000102e-05, 5.282000000000203e-05, 5.270899999999801e-05, 5.3013999999997063e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.279199999999942e-05, 5.287500000000084e-05, 5.258400000000135e-05, 5.28479999999977e-05, 5.309700000000195e-05, 5.298600000000139e-05, 5.2985999999997924e-05, 5.262500000000059e-05, 5.305499999999977e-05, 5.263900000000016e-05, 5.258300000000188e-05, 5.259700000000145e-05, 5.306899999999934e-05, 5.2971999999998354e-05, 5.2708000000002e-05, 5.300000000000096e-05, 5.308299999999891e-05, 5.288900000000041e-05, 5.287500000000084e-05, 5.26669999999993e-05, 5.279199999999942e-05, 5.312499999999762e-05, 5.28340000000016e-05]</msg>
<status status="PASS" starttime="20201110 08:37:26.671" endtime="20201110 08:37:26.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.666" endtime="20201110 08:37:26.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.676" endtime="20201110 08:37:26.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.680" endtime="20201110 08:37:26.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.678" endtime="20201110 08:37:26.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.674" endtime="20201110 08:37:26.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.308" endtime="20201110 08:37:26.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.307" endtime="20201110 08:37:26.700"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.709" endtime="20201110 08:37:26.726"></status>
</kw>
<msg timestamp="20201110 08:37:26.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.708" endtime="20201110 08:37:26.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.727" endtime="20201110 08:37:26.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.730" endtime="20201110 08:37:26.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.705" endtime="20201110 08:37:26.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.703" endtime="20201110 08:37:26.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.740" endtime="20201110 08:37:27.026"></status>
</kw>
<msg timestamp="20201110 08:37:27.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.739" endtime="20201110 08:37:27.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022176556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.031" endtime="20201110 08:37:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.039" endtime="20201110 08:37:27.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.736" endtime="20201110 08:37:27.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.734" endtime="20201110 08:37:27.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.045" level="INFO">${RESULT} = [{'time': 0.022176556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.488899999999894e-05, 'source_diff': 5.488899999999894e-05}, {'time': 0.022235556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:27.042" endtime="20201110 08:37:27.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.060" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:27.046" endtime="20201110 08:37:27.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.065" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.064" endtime="20201110 08:37:27.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.067" level="INFO">VALUE: [5.488899999999894e-05, 5.395899999999926e-05, 5.3666000000000824e-05, 5.358299999999941e-05, 5.3721999999999104e-05, 5.3971999999999354e-05, 5.381900000000009e-05, 5.408299999999991e-05, 5.408400000000285e-05, 5.3735999999998674e-05, 5.38609999999988e-05, 5.380599999999999e-05, 5.354200000000017e-05, 5.387500000000184e-05, 5.35280000000006e-05, 5.381900000000009e-05, 5.354200000000017e-05, 5.359699999999898e-05, 5.38470000000027e-05, 5.40419999999972e-05, 5.362499999999812e-05, 5.398600000000239e-05, 5.370900000000248e-05, 5.390300000000098e-05, 5.381999999999956e-05, 5.398600000000239e-05, 5.363900000000116e-05, 5.370900000000248e-05, 5.3930000000000644e-05, 5.361200000000149e-05, 5.368099999999987e-05, 5.400000000000196e-05, 5.379100000000095e-05, 5.356899999999984e-05, 5.3666000000000824e-05, 5.380500000000052e-05, 5.381900000000009e-05, 5.36670000000003e-05, 5.391700000000055e-05, 5.3999999999998494e-05, 5.388900000000141e-05, 5.406999999999981e-05, 5.408299999999991e-05, 5.3693999999999964e-05, 5.384699999999923e-05, 5.3749999999998244e-05, 5.368099999999987e-05, 5.3930000000000644e-05, 5.363899999999769e-05, 5.377800000000085e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.066" endtime="20201110 08:37:27.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.061" endtime="20201110 08:37:27.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.071" endtime="20201110 08:37:27.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.074" endtime="20201110 08:37:27.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.073" endtime="20201110 08:37:27.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.069" endtime="20201110 08:37:27.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.701" endtime="20201110 08:37:27.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.701" endtime="20201110 08:37:27.095"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.104" endtime="20201110 08:37:27.120"></status>
</kw>
<msg timestamp="20201110 08:37:27.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.102" endtime="20201110 08:37:27.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.122" endtime="20201110 08:37:27.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.124" endtime="20201110 08:37:27.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.100" endtime="20201110 08:37:27.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.098" endtime="20201110 08:37:27.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.135" endtime="20201110 08:37:27.420"></status>
</kw>
<msg timestamp="20201110 08:37:27.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.133" endtime="20201110 08:37:27.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.424" endtime="20201110 08:37:27.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.432" endtime="20201110 08:37:27.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.130" endtime="20201110 08:37:27.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.129" endtime="20201110 08:37:27.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.439" level="INFO">${RESULT} = [{'time': 0.022371069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5986000000000924e-05, 'source_diff': 5.5986000000000924e-05}, {'time': 0.022431014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.436" endtime="20201110 08:37:27.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:27.440" endtime="20201110 08:37:27.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.457" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.456" endtime="20201110 08:37:27.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.460" level="INFO">VALUE: [5.5986000000000924e-05, 5.4527999999998134e-05, 5.479200000000142e-05, 5.490300000000198e-05, 5.4999999999999494e-05, 5.5013999999999064e-05, 5.4763999999998814e-05, 5.493100000000112e-05, 5.509799999999995e-05, 5.4791999999997953e-05, 5.488899999999894e-05, 5.483400000000013e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.49869999999994e-05, 5.508399999999691e-05, 5.4694000000000964e-05, 5.487499999999937e-05, 5.509700000000048e-05, 5.4722000000000104e-05, 5.480499999999805e-05, 5.456900000000084e-05, 5.50280000000021e-05, 5.4943999999997745e-05, 5.462499999999912e-05, 5.4944000000001214e-05, 5.470900000000001e-05, 5.491699999999808e-05, 5.48609999999998e-05, 5.465300000000173e-05, 5.493100000000112e-05, 5.509700000000048e-05, 5.487500000000284e-05, 5.483400000000013e-05, 5.480599999999752e-05, 5.483400000000013e-05, 5.465299999999826e-05, 5.497299999999983e-05, 5.470900000000001e-05, 5.455599999999727e-05, 5.4763999999998814e-05, 5.473699999999915e-05, 5.4777999999998384e-05, 5.480499999999805e-05, 5.4749999999999244e-05, 5.468100000000087e-05, 5.479099999999848e-05, 5.4749999999999244e-05, 5.481900000000109e-05, 5.498600000000339e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.458" endtime="20201110 08:37:27.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.454" endtime="20201110 08:37:27.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.463" endtime="20201110 08:37:27.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.467" endtime="20201110 08:37:27.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.465" endtime="20201110 08:37:27.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.462" endtime="20201110 08:37:27.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.096" endtime="20201110 08:37:27.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.096" endtime="20201110 08:37:27.488"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.497" endtime="20201110 08:37:27.513"></status>
</kw>
<msg timestamp="20201110 08:37:27.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.495" endtime="20201110 08:37:27.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.515" endtime="20201110 08:37:27.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.517" endtime="20201110 08:37:27.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.492" endtime="20201110 08:37:27.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.490" endtime="20201110 08:37:27.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.528" endtime="20201110 08:37:27.813"></status>
</kw>
<msg timestamp="20201110 08:37:27.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.526" endtime="20201110 08:37:27.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.817" endtime="20201110 08:37:27.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.825" endtime="20201110 08:37:27.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.523" endtime="20201110 08:37:27.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.522" endtime="20201110 08:37:27.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.832" level="INFO">${RESULT} = [{'time': 0.022036319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.627699999999694e-05, 'source_diff': 5.627699999999694e-05}, {'time': 0.022098333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:27.829" endtime="20201110 08:37:27.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.846" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:27.833" endtime="20201110 08:37:27.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.850" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.849" endtime="20201110 08:37:27.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.853" level="INFO">VALUE: [5.627699999999694e-05, 5.638900000000044e-05, 5.5721999999997635e-05, 5.604200000000267e-05, 5.611100000000105e-05, 5.561100000000055e-05, 5.566699999999883e-05, 5.5721999999997635e-05, 5.584700000000123e-05, 5.5707999999998065e-05, 5.580600000000199e-05, 5.5541999999998704e-05, 5.559700000000098e-05, 5.5722000000001104e-05, 5.55280000000026e-05, 5.557000000000131e-05, 5.569500000000144e-05, 5.580499999999905e-05, 5.569500000000144e-05, 5.583400000000113e-05, 5.5750000000000244e-05, 5.582000000000156e-05, 5.579099999999948e-05, 5.559700000000098e-05, 5.580499999999905e-05, 5.5958000000001784e-05, 5.5958000000001784e-05, 5.556899999999837e-05, 5.579099999999948e-05, 5.609699999999801e-05, 5.5680000000002394e-05, 5.613900000000019e-05, 5.6000000000000494e-05, 5.581899999999862e-05, 5.5972000000001354e-05, 5.5763999999999814e-05, 5.569500000000144e-05, 5.5791999999998954e-05, 5.588899999999994e-05, 5.6055999999998773e-05, 5.6041999999999204e-05, 5.5986000000000924e-05, 5.6014000000000064e-05, 5.587500000000037e-05, 5.5555999999998273e-05, 5.581899999999862e-05, 5.591700000000255e-05, 5.6014000000000064e-05, 5.612500000000062e-05, 5.5805999999998523e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.851" endtime="20201110 08:37:27.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.847" endtime="20201110 08:37:27.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.856" endtime="20201110 08:37:27.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.860" endtime="20201110 08:37:27.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.858" endtime="20201110 08:37:27.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.855" endtime="20201110 08:37:27.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.489" endtime="20201110 08:37:27.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.488" endtime="20201110 08:37:27.881"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.890" endtime="20201110 08:37:27.907"></status>
</kw>
<msg timestamp="20201110 08:37:27.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.888" endtime="20201110 08:37:27.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.908" endtime="20201110 08:37:27.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.911" endtime="20201110 08:37:27.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.885" endtime="20201110 08:37:27.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.883" endtime="20201110 08:37:27.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.921" endtime="20201110 08:37:28.207"></status>
</kw>
<msg timestamp="20201110 08:37:28.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.919" endtime="20201110 08:37:28.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.211" endtime="20201110 08:37:28.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.219" endtime="20201110 08:37:28.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.917" endtime="20201110 08:37:28.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.915" endtime="20201110 08:37:28.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.226" level="INFO">${RESULT} = [{'time': 0.022371903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762499999999865e-05, 'source_diff': 5.762499999999865e-05}, {'time': 0.022433903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:28.223" endtime="20201110 08:37:28.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.240" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:28.227" endtime="20201110 08:37:28.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.244" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.243" endtime="20201110 08:37:28.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.247" level="INFO">VALUE: [5.762499999999865e-05, 5.6514000000000564e-05, 5.6778000000000384e-05, 5.7000000000001494e-05, 5.658400000000188e-05, 5.690300000000051e-05, 5.6791999999999954e-05, 5.663899999999722e-05, 5.659700000000198e-05, 5.661100000000155e-05, 5.693099999999965e-05, 5.6638000000001215e-05, 5.6749999999997774e-05, 5.702699999999769e-05, 5.6916000000000605e-05, 5.661100000000155e-05, 5.68610000000018e-05, 5.712499999999815e-05, 5.661099999999808e-05, 5.708299999999944e-05, 5.663900000000069e-05, 5.7137999999998246e-05, 5.687500000000137e-05, 5.6764000000000814e-05, 5.662499999999765e-05, 5.7042000000000204e-05, 5.6972000000002354e-05, 5.659700000000198e-05, 5.684699999999876e-05, 5.690300000000051e-05, 5.6791999999999954e-05, 5.6763999999997344e-05, 5.7042000000000204e-05, 5.7042000000000204e-05, 5.658400000000188e-05, 5.6528000000000134e-05, 5.6957999999999315e-05, 5.7069999999999343e-05, 5.706899999999987e-05, 5.6666000000000355e-05, 5.681899999999962e-05, 5.693099999999965e-05, 5.6764000000000814e-05, 5.6778000000000384e-05, 5.690299999999704e-05, 5.6916000000000605e-05, 5.6528000000000134e-05, 5.661099999999808e-05, 5.684699999999876e-05, 5.6721999999998635e-05]</msg>
<status status="PASS" starttime="20201110 08:37:28.246" endtime="20201110 08:37:28.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.241" endtime="20201110 08:37:28.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.251" endtime="20201110 08:37:28.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.254" endtime="20201110 08:37:28.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.252" endtime="20201110 08:37:28.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.249" endtime="20201110 08:37:28.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.882" endtime="20201110 08:37:28.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.881" endtime="20201110 08:37:28.275"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.283" endtime="20201110 08:37:28.300"></status>
</kw>
<msg timestamp="20201110 08:37:28.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.282" endtime="20201110 08:37:28.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.302" endtime="20201110 08:37:28.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.304" endtime="20201110 08:37:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.279" endtime="20201110 08:37:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.277" endtime="20201110 08:37:28.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.315" endtime="20201110 08:37:28.600"></status>
</kw>
<msg timestamp="20201110 08:37:28.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.313" endtime="20201110 08:37:28.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022012375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.604" endtime="20201110 08:37:28.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.613" endtime="20201110 08:37:28.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.310" endtime="20201110 08:37:28.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.308" endtime="20201110 08:37:28.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.620" level="INFO">${RESULT} = [{'time': 0.022012375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8958000000001315e-05, 'source_diff': 5.8958000000001315e-05}, {'time': 0.022076403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:28.616" endtime="20201110 08:37:28.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:28.621" endtime="20201110 08:37:28.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.639" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.638" endtime="20201110 08:37:28.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.641" level="INFO">VALUE: [5.8958000000001315e-05, 5.844500000000072e-05, 5.7806000000000524e-05, 5.7986000000002924e-05, 5.7999999999999025e-05, 5.7999999999999025e-05, 5.7569999999999844e-05, 5.8056000000000774e-05, 5.769499999999997e-05, 5.7736000000002674e-05, 5.7777999999997914e-05, 5.812499999999915e-05, 5.793100000000065e-05, 5.801299999999912e-05, 5.811099999999958e-05, 5.777700000000191e-05, 5.763900000000169e-05, 5.808300000000044e-05, 5.756900000000037e-05, 5.7778000000001384e-05, 5.7694000000000495e-05, 5.7792000000000954e-05, 5.790300000000151e-05, 5.7944000000000745e-05, 5.7708000000000065e-05, 5.7764000000001814e-05, 5.763899999999822e-05, 5.78480000000027e-05, 5.7820000000000094e-05, 5.7985999999999455e-05, 5.761099999999908e-05, 5.8097999999999483e-05, 5.794500000000022e-05, 5.8069999999996874e-05, 5.783400000000313e-05, 5.794500000000022e-05, 5.765300000000126e-05, 5.7901999999998566e-05, 5.780500000000105e-05, 5.76810000000004e-05, 5.802700000000216e-05, 5.7665999999997886e-05, 5.790300000000151e-05, 5.808300000000044e-05, 5.78749999999989e-05, 5.809700000000001e-05, 5.808300000000044e-05, 5.8000000000002494e-05, 5.765300000000126e-05, 5.762499999999865e-05]</msg>
<status status="PASS" starttime="20201110 08:37:28.640" endtime="20201110 08:37:28.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.635" endtime="20201110 08:37:28.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.645" endtime="20201110 08:37:28.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.648" endtime="20201110 08:37:28.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.647" endtime="20201110 08:37:28.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.643" endtime="20201110 08:37:28.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.276" endtime="20201110 08:37:28.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.275" endtime="20201110 08:37:28.669"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.678" endtime="20201110 08:37:28.695"></status>
</kw>
<msg timestamp="20201110 08:37:28.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.676" endtime="20201110 08:37:28.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.698" endtime="20201110 08:37:28.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.701" endtime="20201110 08:37:28.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.674" endtime="20201110 08:37:28.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.672" endtime="20201110 08:37:28.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.714" endtime="20201110 08:37:28.997"></status>
</kw>
<msg timestamp="20201110 08:37:29.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022663903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.713" endtime="20201110 08:37:29.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022663903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.001" endtime="20201110 08:37:29.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.010" endtime="20201110 08:37:29.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.710" endtime="20201110 08:37:29.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.708" endtime="20201110 08:37:29.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.018" level="INFO">${RESULT} = [{'time': 0.022723444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.954099999999976e-05, 'source_diff': 5.954099999999976e-05}, {'time': 0.022787458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.014" endtime="20201110 08:37:29.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.031" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:29.019" endtime="20201110 08:37:29.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.036" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.035" endtime="20201110 08:37:29.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.039" level="INFO">VALUE: [5.954099999999976e-05, 5.861100000000008e-05, 5.859700000000051e-05, 5.8986000000000455e-05, 5.8528000000002134e-05, 5.863899999999922e-05, 5.888899999999947e-05, 5.883300000000119e-05, 5.9013999999999595e-05, 5.890299999999904e-05, 5.8957999999997845e-05, 5.8707999999997595e-05, 5.862500000000312e-05, 5.8749999999999775e-05, 5.8972000000000885e-05, 5.8986000000000455e-05, 5.888899999999947e-05, 5.888900000000294e-05, 5.9041999999998734e-05, 5.8820000000001094e-05, 5.9069999999997874e-05, 5.8848000000000233e-05, 5.8499999999999525e-05, 5.859699999999704e-05, 5.902700000000316e-05, 5.8901999999999566e-05, 5.913899999999972e-05, 5.88749999999999e-05, 5.904099999999926e-05, 5.859700000000051e-05, 5.886100000000033e-05, 5.8958000000001315e-05, 5.865299999999879e-05, 5.8944000000001745e-05, 5.8777999999998914e-05, 5.8556000000001274e-05, 5.861100000000008e-05, 5.888899999999947e-05, 5.8513999999999095e-05, 5.9013999999999595e-05, 5.862499999999965e-05, 5.8834000000000664e-05, 5.870900000000054e-05, 5.9084000000000914e-05, 5.870899999999707e-05, 5.873699999999968e-05, 5.8792000000001954e-05, 5.9041999999998734e-05, 5.8834000000000664e-05, 5.866699999999836e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.037" endtime="20201110 08:37:29.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.032" endtime="20201110 08:37:29.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.042" endtime="20201110 08:37:29.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.046" endtime="20201110 08:37:29.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.044" endtime="20201110 08:37:29.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.041" endtime="20201110 08:37:29.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.670" endtime="20201110 08:37:29.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.670" endtime="20201110 08:37:29.067"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.075" endtime="20201110 08:37:29.092"></status>
</kw>
<msg timestamp="20201110 08:37:29.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.074" endtime="20201110 08:37:29.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.094" endtime="20201110 08:37:29.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.096" endtime="20201110 08:37:29.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.071" endtime="20201110 08:37:29.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.069" endtime="20201110 08:37:29.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.107" endtime="20201110 08:37:29.393"></status>
</kw>
<msg timestamp="20201110 08:37:29.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.105" endtime="20201110 08:37:29.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.397" endtime="20201110 08:37:29.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.405" endtime="20201110 08:37:29.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.102" endtime="20201110 08:37:29.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.101" endtime="20201110 08:37:29.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.412" level="INFO">${RESULT} = [{'time': 0.022287528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.061100000000208e-05, 'source_diff': 6.061100000000208e-05}, {'time': 0.0223525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:29.409" endtime="20201110 08:37:29.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.426" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:29.413" endtime="20201110 08:37:29.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.431" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.429" endtime="20201110 08:37:29.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.433" level="INFO">VALUE: [6.061100000000208e-05, 5.9694000000002495e-05, 5.961100000000108e-05, 6.0084000000001914e-05, 5.961100000000108e-05, 6.0111999999997584e-05, 5.988900000000047e-05, 6.011100000000158e-05, 5.997300000000136e-05, 6.0041999999999734e-05, 6.0070000000002344e-05, 6.0069999999998874e-05, 5.9735999999997735e-05, 5.9888999999997e-05, 6.0014000000000595e-05, 5.9916000000000136e-05, 5.9652000000000316e-05, 5.961100000000108e-05, 5.984700000000176e-05, 5.990300000000004e-05, 6.002699999999722e-05, 5.9986000000001455e-05, 5.954099999999976e-05, 5.9777999999999915e-05, 5.9944000000002745e-05, 5.995899999999832e-05, 5.9957999999998846e-05, 5.991700000000308e-05, 6.0041999999999734e-05, 5.9721999999998165e-05, 6.013900000000072e-05, 5.9791999999999484e-05, 5.9764000000000345e-05, 5.998700000000093e-05, 5.972300000000111e-05, 6.015300000000029e-05, 5.9847999999997764e-05, 5.970900000000154e-05, 6.0041999999999734e-05, 5.9583999999997944e-05, 5.9791999999999484e-05, 5.981899999999915e-05, 5.988900000000047e-05, 6.00689999999994e-05, 6.002700000000069e-05, 5.955499999999933e-05, 5.966699999999936e-05, 5.9694000000002495e-05, 5.9972000000001885e-05, 5.95689999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.432" endtime="20201110 08:37:29.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.427" endtime="20201110 08:37:29.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.441" endtime="20201110 08:37:29.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.444" endtime="20201110 08:37:29.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.443" endtime="20201110 08:37:29.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.439" endtime="20201110 08:37:29.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.068" endtime="20201110 08:37:29.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.067" endtime="20201110 08:37:29.466"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.474" endtime="20201110 08:37:29.490"></status>
</kw>
<msg timestamp="20201110 08:37:29.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.473" endtime="20201110 08:37:29.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.492" endtime="20201110 08:37:29.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.494" endtime="20201110 08:37:29.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.470" endtime="20201110 08:37:29.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.468" endtime="20201110 08:37:29.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.505" endtime="20201110 08:37:29.790"></status>
</kw>
<msg timestamp="20201110 08:37:29.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.503" endtime="20201110 08:37:29.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.794" endtime="20201110 08:37:29.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.803" endtime="20201110 08:37:29.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.500" endtime="20201110 08:37:29.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.499" endtime="20201110 08:37:29.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.810" level="INFO">${RESULT} = [{'time': 0.022075653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.143100000000068e-05, 'source_diff': 6.143100000000068e-05}, {'time': 0.022141667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.806" endtime="20201110 08:37:29.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:29.811" endtime="20201110 08:37:29.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.828" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.827" endtime="20201110 08:37:29.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.830" level="INFO">VALUE: [6.143100000000068e-05, 6.0750000000001775e-05, 6.0764000000001345e-05, 6.0833999999999194e-05, 6.0500000000001525e-05, 6.066700000000036e-05, 6.052700000000119e-05, 6.0666000000000886e-05, 6.0888000000001996e-05, 6.0514000000001095e-05, 6.0735999999998735e-05, 6.05689999999999e-05, 6.055500000000033e-05, 6.112499999999868e-05, 6.0542000000000235e-05, 6.0721999999999166e-05, 6.0806000000000054e-05, 6.080500000000058e-05, 6.066700000000036e-05, 6.0999999999998555e-05, 6.0555999999999804e-05, 6.0735999999998735e-05, 6.0583999999998944e-05, 6.0513999999997625e-05, 6.0514000000001095e-05, 6.091700000000061e-05, 6.070899999999907e-05, 6.0944000000000276e-05, 6.111099999999911e-05, 6.0583999999998944e-05, 6.073699999999821e-05, 6.087499999999843e-05, 6.079099999999754e-05, 6.051299999999815e-05, 6.083299999999972e-05, 6.081900000000015e-05, 6.080499999999711e-05, 6.0971999999999416e-05, 6.086100000000233e-05, 6.0749999999998305e-05, 6.063899999999775e-05, 6.0971999999999416e-05, 6.0721999999999166e-05, 6.0555999999999804e-05, 6.066699999999689e-05, 6.091699999999714e-05, 6.06949999999995e-05, 6.0569999999999374e-05, 6.0735999999998735e-05, 6.10560000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.829" endtime="20201110 08:37:29.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.824" endtime="20201110 08:37:29.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.834" endtime="20201110 08:37:29.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.838" endtime="20201110 08:37:29.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.836" endtime="20201110 08:37:29.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.832" endtime="20201110 08:37:29.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.467" endtime="20201110 08:37:29.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.466" endtime="20201110 08:37:29.858"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.867" endtime="20201110 08:37:29.884"></status>
</kw>
<msg timestamp="20201110 08:37:29.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.866" endtime="20201110 08:37:29.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.885" endtime="20201110 08:37:29.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.888" endtime="20201110 08:37:29.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.863" endtime="20201110 08:37:29.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.861" endtime="20201110 08:37:29.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.898" endtime="20201110 08:37:30.183"></status>
</kw>
<msg timestamp="20201110 08:37:30.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.896" endtime="20201110 08:37:30.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.188" endtime="20201110 08:37:30.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.196" endtime="20201110 08:37:30.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.894" endtime="20201110 08:37:30.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.892" endtime="20201110 08:37:30.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.202" level="INFO">${RESULT} = [{'time': 0.022501722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.231899999999818e-05, 'source_diff': 6.231899999999818e-05}, {'time': 0.022568708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.199" endtime="20201110 08:37:30.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:30.203" endtime="20201110 08:37:30.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.222" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.221" endtime="20201110 08:37:30.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.224" level="INFO">VALUE: [6.231899999999818e-05, 6.187499999999943e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.209700000000054e-05, 6.186099999999986e-05, 6.192999999999824e-05, 6.183299999999725e-05, 6.199999999999956e-05, 6.20690000000014e-05, 6.17080000000006e-05, 6.20279999999987e-05, 6.184700000000029e-05, 6.176400000000234e-05, 6.176399999999888e-05, 6.16950000000005e-05, 6.18340000000002e-05, 6.198599999999999e-05, 6.181999999999716e-05, 6.17499999999993e-05, 6.170900000000007e-05, 6.166700000000136e-05, 6.20279999999987e-05, 6.199999999999956e-05, 6.161200000000255e-05, 6.20279999999987e-05, 6.208300000000097e-05, 6.159700000000004e-05, 6.188900000000247e-05, 6.195799999999738e-05, 6.205599999999784e-05, 6.169400000000103e-05, 6.211100000000011e-05, 6.191599999999867e-05, 6.205500000000183e-05, 6.204200000000173e-05, 6.1582999999997e-05, 6.204199999999827e-05, 6.166700000000136e-05, 6.191699999999814e-05, 6.168099999999746e-05, 6.159700000000004e-05, 6.202800000000216e-05, 6.15699999999969e-05, 6.170900000000007e-05, 6.207000000000087e-05, 6.168100000000093e-05, 6.179199999999802e-05, 6.17499999999993e-05, 6.165200000000232e-05]</msg>
<status status="PASS" starttime="20201110 08:37:30.223" endtime="20201110 08:37:30.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.218" endtime="20201110 08:37:30.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.228" endtime="20201110 08:37:30.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.231" endtime="20201110 08:37:30.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.230" endtime="20201110 08:37:30.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.226" endtime="20201110 08:37:30.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.859" endtime="20201110 08:37:30.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.859" endtime="20201110 08:37:30.252"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.261" endtime="20201110 08:37:30.279"></status>
</kw>
<msg timestamp="20201110 08:37:30.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.259" endtime="20201110 08:37:30.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.281" endtime="20201110 08:37:30.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.283" endtime="20201110 08:37:30.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.257" endtime="20201110 08:37:30.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.254" endtime="20201110 08:37:30.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.293" endtime="20201110 08:37:30.579"></status>
</kw>
<msg timestamp="20201110 08:37:30.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.292" endtime="20201110 08:37:30.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.583" endtime="20201110 08:37:30.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.592" endtime="20201110 08:37:30.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.289" endtime="20201110 08:37:30.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.288" endtime="20201110 08:37:30.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.598" level="INFO">${RESULT} = [{'time': 0.021974722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.316599999999992e-05, 'source_diff': 6.316599999999992e-05}, {'time': 0.022042722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.595" endtime="20201110 08:37:30.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:30.599" endtime="20201110 08:37:30.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.617" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.616" endtime="20201110 08:37:30.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.619" level="INFO">VALUE: [6.316599999999992e-05, 6.283300000000172e-05, 6.301400000000013e-05, 6.261100000000061e-05, 6.301400000000013e-05, 6.313900000000025e-05, 6.268099999999846e-05, 6.268100000000193e-05, 6.286100000000086e-05, 6.280499999999911e-05, 6.276399999999988e-05, 6.301400000000013e-05, 6.279199999999902e-05, 6.300000000000056e-05, 6.293100000000218e-05, 6.308399999999798e-05, 6.276299999999693e-05, 6.305599999999884e-05, 6.304099999999979e-05, 6.266599999999942e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.286100000000086e-05, 6.252800000000266e-05, 6.300000000000056e-05, 6.273599999999727e-05, 6.255499999999886e-05, 6.256899999999843e-05, 6.309700000000154e-05, 6.297199999999795e-05, 6.284700000000129e-05, 6.269399999999856e-05, 6.259800000000051e-05, 6.25560000000018e-05, 6.25699999999979e-05, 6.263899999999975e-05, 6.266699999999889e-05, 6.259800000000051e-05, 6.277799999999945e-05, 6.286100000000086e-05, 6.298700000000046e-05, 6.277799999999945e-05, 6.272300000000064e-05, 6.297199999999795e-05, 6.287500000000043e-05, 6.301300000000065e-05, 6.25140000000031e-05, 6.29439999999988e-05, 6.283299999999825e-05, 6.297200000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:37:30.618" endtime="20201110 08:37:30.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.613" endtime="20201110 08:37:30.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.623" endtime="20201110 08:37:30.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.626" endtime="20201110 08:37:30.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.625" endtime="20201110 08:37:30.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.621" endtime="20201110 08:37:30.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.253" endtime="20201110 08:37:30.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.252" endtime="20201110 08:37:30.647"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.656" endtime="20201110 08:37:30.673"></status>
</kw>
<msg timestamp="20201110 08:37:30.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.654" endtime="20201110 08:37:30.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.675" endtime="20201110 08:37:30.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.677" endtime="20201110 08:37:30.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.652" endtime="20201110 08:37:30.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.650" endtime="20201110 08:37:30.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.687" endtime="20201110 08:37:30.973"></status>
</kw>
<msg timestamp="20201110 08:37:30.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:30.686" endtime="20201110 08:37:30.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:30.977" endtime="20201110 08:37:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.985" endtime="20201110 08:37:30.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.683" endtime="20201110 08:37:30.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.681" endtime="20201110 08:37:30.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.992" level="INFO">${RESULT} = [{'time': 0.0220155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.40829999999995e-05, 'source_diff': 6.40829999999995e-05}, {'time': 0.022084528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201110 08:37:30.989" endtime="20201110 08:37:30.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:30.993" endtime="20201110 08:37:31.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.011" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.010" endtime="20201110 08:37:31.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.014" level="INFO">VALUE: [6.40829999999995e-05, 6.380599999999959e-05, 6.359699999999857e-05, 6.384800000000176e-05, 6.408400000000244e-05, 6.390300000000057e-05, 6.379200000000002e-05, 6.391700000000014e-05, 6.399999999999809e-05, 6.404200000000027e-05, 6.390199999999763e-05, 6.395799999999938e-05, 6.39439999999998e-05, 6.370799999999913e-05, 6.379100000000054e-05, 6.387499999999796e-05, 6.361099999999814e-05, 6.37219999999987e-05, 6.372200000000217e-05, 6.397199999999895e-05, 6.367999999999999e-05, 6.406899999999993e-05, 6.363899999999728e-05, 6.393099999999971e-05, 6.357000000000237e-05, 6.365300000000032e-05, 6.3582999999999e-05, 6.365199999999738e-05, 6.37089999999986e-05, 6.3889000000001e-05, 6.377800000000045e-05, 6.390300000000057e-05, 6.409800000000201e-05, 6.3889000000001e-05, 6.383299999999925e-05, 6.358399999999848e-05, 6.418000000000049e-05, 6.367999999999999e-05, 6.377700000000097e-05, 6.3889000000001e-05, 6.373600000000174e-05, 6.393099999999971e-05, 6.381899999999968e-05, 6.393099999999971e-05, 6.361100000000161e-05, 6.377800000000045e-05, 6.370799999999913e-05, 6.377799999999698e-05, 6.37219999999987e-05, 6.3582999999999e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.013" endtime="20201110 08:37:31.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.008" endtime="20201110 08:37:31.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.037" endtime="20201110 08:37:31.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.041" endtime="20201110 08:37:31.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.039" endtime="20201110 08:37:31.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.035" endtime="20201110 08:37:31.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.648" endtime="20201110 08:37:31.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.647" endtime="20201110 08:37:31.062"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.071" endtime="20201110 08:37:31.088"></status>
</kw>
<msg timestamp="20201110 08:37:31.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.069" endtime="20201110 08:37:31.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.090" endtime="20201110 08:37:31.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.092" endtime="20201110 08:37:31.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.067" endtime="20201110 08:37:31.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.064" endtime="20201110 08:37:31.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.102" endtime="20201110 08:37:31.388"></status>
</kw>
<msg timestamp="20201110 08:37:31.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.101" endtime="20201110 08:37:31.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.393" endtime="20201110 08:37:31.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.401" endtime="20201110 08:37:31.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.098" endtime="20201110 08:37:31.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.096" endtime="20201110 08:37:31.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.408" level="INFO">${RESULT} = [{'time': 0.022457972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.536099999999989e-05, 'source_diff': 6.536099999999989e-05}, {'time': 0.022527972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.404" endtime="20201110 08:37:31.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.421" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:31.409" endtime="20201110 08:37:31.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.426" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.425" endtime="20201110 08:37:31.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.428" level="INFO">VALUE: [6.536099999999989e-05, 6.4583e-05, 6.50280000000017e-05, 6.466600000000142e-05, 6.50830000000005e-05, 6.497199999999995e-05, 6.449999999999859e-05, 6.479199999999755e-05, 6.50830000000005e-05, 6.465300000000132e-05, 6.483300000000025e-05, 6.451400000000163e-05, 6.45699999999999e-05, 6.469500000000003e-05, 6.494500000000028e-05, 6.455600000000034e-05, 6.508399999999998e-05, 6.466700000000089e-05, 6.458400000000294e-05, 6.499999999999909e-05, 6.465299999999785e-05, 6.469400000000056e-05, 6.511099999999964e-05, 6.462500000000218e-05, 6.452700000000172e-05, 6.47639999999984e-05, 6.488899999999853e-05, 6.486099999999939e-05, 6.451399999999816e-05, 6.490300000000157e-05, 6.497199999999995e-05, 6.494500000000028e-05, 6.47639999999984e-05, 6.455600000000034e-05, 6.508399999999998e-05, 6.463899999999828e-05, 6.495899999999985e-05, 6.486099999999939e-05, 6.482000000000016e-05, 6.462500000000218e-05, 6.45280000000012e-05, 6.494500000000028e-05, 6.497299999999942e-05, 6.50700000000004e-05, 6.474999999999884e-05, 6.470800000000013e-05, 6.497199999999995e-05, 6.49020000000021e-05, 6.480499999999764e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.427" endtime="20201110 08:37:31.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.422" endtime="20201110 08:37:31.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.432" endtime="20201110 08:37:31.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.435" endtime="20201110 08:37:31.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.434" endtime="20201110 08:37:31.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.430" endtime="20201110 08:37:31.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.063" endtime="20201110 08:37:31.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.062" endtime="20201110 08:37:31.456"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.465" endtime="20201110 08:37:31.482"></status>
</kw>
<msg timestamp="20201110 08:37:31.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.463" endtime="20201110 08:37:31.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.484" endtime="20201110 08:37:31.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.486" endtime="20201110 08:37:31.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.461" endtime="20201110 08:37:31.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.459" endtime="20201110 08:37:31.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.496" endtime="20201110 08:37:31.782"></status>
</kw>
<msg timestamp="20201110 08:37:31.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.495" endtime="20201110 08:37:31.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.786" endtime="20201110 08:37:31.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.794" endtime="20201110 08:37:31.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.492" endtime="20201110 08:37:31.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.490" endtime="20201110 08:37:31.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.801" level="INFO">${RESULT} = [{'time': 0.022113194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.684699999999835e-05, 'source_diff': 6.684699999999835e-05}, {'time': 0.022184125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.798" endtime="20201110 08:37:31.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:31.802" endtime="20201110 08:37:31.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.820" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.819" endtime="20201110 08:37:31.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.823" level="INFO">VALUE: [6.684699999999835e-05, 6.552799999999873e-05, 6.574999999999984e-05, 6.565299999999885e-05, 6.598600000000052e-05, 6.587499999999996e-05, 6.55700000000009e-05, 6.580600000000159e-05, 6.586200000000333e-05, 6.600000000000009e-05, 6.594500000000128e-05, 6.595800000000138e-05, 6.559700000000057e-05, 6.555499999999839e-05, 6.551299999999968e-05, 6.588800000000006e-05, 6.592999999999877e-05, 6.549999999999959e-05, 6.556900000000143e-05, 6.60830000000015e-05, 6.567999999999852e-05, 6.555500000000186e-05, 6.577799999999898e-05, 6.591700000000214e-05, 6.60700000000014e-05, 6.580599999999812e-05, 6.602799999999923e-05, 6.579199999999855e-05, 6.548600000000002e-05, 6.60419999999988e-05, 6.554200000000177e-05, 6.60830000000015e-05, 6.563899999999928e-05, 6.577800000000245e-05, 6.588899999999953e-05, 6.580500000000211e-05, 6.556899999999796e-05, 6.588800000000006e-05, 6.572199999999723e-05, 6.584700000000082e-05, 6.570800000000113e-05, 6.556899999999796e-05, 6.555500000000186e-05, 6.583300000000125e-05, 6.600000000000009e-05, 6.562499999999971e-05, 6.587499999999996e-05, 6.580600000000159e-05, 6.598600000000052e-05, 6.57220000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.821" endtime="20201110 08:37:31.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.817" endtime="20201110 08:37:31.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.826" endtime="20201110 08:37:31.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.830" endtime="20201110 08:37:31.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.828" endtime="20201110 08:37:31.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.825" endtime="20201110 08:37:31.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.457" endtime="20201110 08:37:31.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.457" endtime="20201110 08:37:31.851"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.859" endtime="20201110 08:37:31.877"></status>
</kw>
<msg timestamp="20201110 08:37:31.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.858" endtime="20201110 08:37:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.879" endtime="20201110 08:37:31.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.881" endtime="20201110 08:37:31.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.855" endtime="20201110 08:37:31.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.853" endtime="20201110 08:37:31.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.891" endtime="20201110 08:37:32.176"></status>
</kw>
<msg timestamp="20201110 08:37:32.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.890" endtime="20201110 08:37:32.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.181" endtime="20201110 08:37:32.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.189" endtime="20201110 08:37:32.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.887" endtime="20201110 08:37:32.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.886" endtime="20201110 08:37:32.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.196" level="INFO">${RESULT} = [{'time': 0.021987625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722199999999873e-05, 'source_diff': 6.722199999999873e-05}, {'time': 0.022059639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.192" endtime="20201110 08:37:32.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:32.197" endtime="20201110 08:37:32.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.214" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.213" endtime="20201110 08:37:32.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.216" level="INFO">VALUE: [6.722199999999873e-05, 6.69030000000001e-05, 6.675000000000084e-05, 6.687500000000096e-05, 6.694499999999881e-05, 6.663900000000028e-05, 6.683400000000173e-05, 6.669499999999856e-05, 6.670899999999813e-05, 6.695900000000185e-05, 6.705499999999989e-05, 6.672300000000117e-05, 6.694399999999934e-05, 6.688900000000053e-05, 6.658299999999853e-05, 6.706899999999946e-05, 6.705499999999989e-05, 6.691699999999967e-05, 6.680499999999964e-05, 6.655499999999939e-05, 6.698600000000152e-05, 6.675000000000084e-05, 6.655599999999887e-05, 6.668100000000246e-05, 6.691699999999967e-05, 6.705599999999937e-05, 6.706999999999894e-05, 6.694500000000228e-05, 6.695899999999838e-05, 6.684699999999835e-05, 6.661100000000114e-05, 6.67090000000016e-05, 6.694499999999881e-05, 6.651399999999669e-05, 6.702800000000023e-05, 6.679100000000007e-05, 6.654099999999982e-05, 6.695799999999891e-05, 6.698599999999805e-05, 6.67640000000004e-05, 6.655499999999939e-05, 6.70419999999998e-05, 6.675000000000084e-05, 6.692999999999977e-05, 6.704200000000327e-05, 6.705599999999937e-05, 6.69030000000001e-05, 6.70830000000025e-05, 6.686100000000139e-05, 6.706999999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.215" endtime="20201110 08:37:32.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.210" endtime="20201110 08:37:32.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.220" endtime="20201110 08:37:32.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.223" endtime="20201110 08:37:32.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.222" endtime="20201110 08:37:32.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.218" endtime="20201110 08:37:32.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.852" endtime="20201110 08:37:32.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.851" endtime="20201110 08:37:32.244"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.253" endtime="20201110 08:37:32.270"></status>
</kw>
<msg timestamp="20201110 08:37:32.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.251" endtime="20201110 08:37:32.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.272" endtime="20201110 08:37:32.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.274" endtime="20201110 08:37:32.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.249" endtime="20201110 08:37:32.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.247" endtime="20201110 08:37:32.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.285" endtime="20201110 08:37:32.571"></status>
</kw>
<msg timestamp="20201110 08:37:32.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:32.283" endtime="20201110 08:37:32.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:32.575" endtime="20201110 08:37:32.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.584" endtime="20201110 08:37:32.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.280" endtime="20201110 08:37:32.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.279" endtime="20201110 08:37:32.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.591" level="INFO">${RESULT} = [{'time': 0.022168361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.811100000000264e-05, 'source_diff': 6.811100000000264e-05}, {'time': 0.022241375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.587" endtime="20201110 08:37:32.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:32.592" endtime="20201110 08:37:32.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.609" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.608" endtime="20201110 08:37:32.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.611" level="INFO">VALUE: [6.811100000000264e-05, 6.763900000000128e-05, 6.759700000000257e-05, 6.793100000000024e-05, 6.776399999999794e-05, 6.765300000000085e-05, 6.761100000000214e-05, 6.798599999999905e-05, 6.811099999999917e-05, 6.787500000000196e-05, 6.755599999999987e-05, 6.759800000000205e-05, 6.788800000000206e-05, 6.794400000000034e-05, 6.799999999999862e-05, 6.815300000000135e-05, 6.761100000000214e-05, 6.768000000000052e-05, 6.75969999999991e-05, 6.804100000000132e-05, 6.788900000000153e-05, 6.766700000000042e-05, 6.80420000000008e-05, 6.763900000000128e-05, 6.79030000000011e-05, 6.77640000000014e-05, 6.784699999999935e-05, 6.766700000000042e-05, 6.795799999999991e-05, 6.772199999999923e-05, 6.813900000000178e-05, 6.780600000000012e-05, 6.809799999999908e-05, 6.759800000000205e-05, 6.761099999999867e-05, 6.772300000000217e-05, 6.798600000000252e-05, 6.794400000000034e-05, 6.787500000000196e-05, 6.780500000000064e-05, 6.777800000000098e-05, 6.750000000000159e-05, 6.777800000000098e-05, 6.777800000000098e-05, 6.787500000000196e-05, 6.774999999999837e-05, 6.800000000000209e-05, 6.808300000000003e-05, 6.759700000000257e-05, 6.795799999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.610" endtime="20201110 08:37:32.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.605" endtime="20201110 08:37:32.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.615" endtime="20201110 08:37:32.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.618" endtime="20201110 08:37:32.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.617" endtime="20201110 08:37:32.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.613" endtime="20201110 08:37:32.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.245" endtime="20201110 08:37:32.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.245" endtime="20201110 08:37:32.639"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.648" endtime="20201110 08:37:32.666"></status>
</kw>
<msg timestamp="20201110 08:37:32.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.646" endtime="20201110 08:37:32.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.667" endtime="20201110 08:37:32.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.670" endtime="20201110 08:37:32.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.644" endtime="20201110 08:37:32.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.642" endtime="20201110 08:37:32.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.680" endtime="20201110 08:37:32.966"></status>
</kw>
<msg timestamp="20201110 08:37:32.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.678" endtime="20201110 08:37:32.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.971" endtime="20201110 08:37:32.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.979" endtime="20201110 08:37:32.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.676" endtime="20201110 08:37:32.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.674" endtime="20201110 08:37:32.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.986" level="INFO">${RESULT} = [{'time': 0.021988653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.962500000000024e-05, 'source_diff': 6.962500000000024e-05}, {'time': 0.022062708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.982" endtime="20201110 08:37:32.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.999" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:32.987" endtime="20201110 08:37:33.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.004" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.003" endtime="20201110 08:37:33.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.007" level="INFO">VALUE: [6.962500000000024e-05, 6.893000000000177e-05, 6.88619999999994e-05, 6.861099999999967e-05, 6.905600000000137e-05, 6.886099999999992e-05, 6.902699999999928e-05, 6.855500000000139e-05, 6.900000000000309e-05, 6.89299999999983e-05, 6.861099999999967e-05, 6.905500000000189e-05, 6.891700000000167e-05, 6.880499999999817e-05, 6.895900000000038e-05, 6.907000000000094e-05, 6.870900000000013e-05, 6.906900000000146e-05, 6.894500000000081e-05, 6.905600000000137e-05, 6.880599999999765e-05, 6.877699999999903e-05, 6.8584e-05, 6.877800000000198e-05, 6.887499999999949e-05, 6.891700000000167e-05, 6.916700000000192e-05, 6.87359999999998e-05, 6.852699999999878e-05, 6.872200000000023e-05, 6.856899999999749e-05, 6.872200000000023e-05, 6.861099999999967e-05, 6.897199999999701e-05, 6.865299999999838e-05, 6.887499999999949e-05, 6.862500000000271e-05, 6.862499999999924e-05, 6.87770000000025e-05, 6.861099999999967e-05, 6.868099999999752e-05, 6.913899999999931e-05, 6.874999999999937e-05, 6.882000000000069e-05, 6.879199999999808e-05, 6.90970000000006e-05, 6.907000000000094e-05, 6.852799999999826e-05, 6.867999999999805e-05, 6.899999999999962e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.005" endtime="20201110 08:37:33.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.000" endtime="20201110 08:37:33.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.010" endtime="20201110 08:37:33.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.013" endtime="20201110 08:37:33.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.012" endtime="20201110 08:37:33.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.008" endtime="20201110 08:37:33.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.640" endtime="20201110 08:37:33.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.640" endtime="20201110 08:37:33.034"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.043" endtime="20201110 08:37:33.061"></status>
</kw>
<msg timestamp="20201110 08:37:33.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.041" endtime="20201110 08:37:33.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.062" endtime="20201110 08:37:33.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.065" endtime="20201110 08:37:33.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.039" endtime="20201110 08:37:33.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.037" endtime="20201110 08:37:33.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.076" endtime="20201110 08:37:33.362"></status>
</kw>
<msg timestamp="20201110 08:37:33.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.074" endtime="20201110 08:37:33.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.366" endtime="20201110 08:37:33.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.374" endtime="20201110 08:37:33.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.071" endtime="20201110 08:37:33.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.070" endtime="20201110 08:37:33.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.381" level="INFO">${RESULT} = [{'time': 0.021939097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.104100000000085e-05, 'source_diff': 7.104100000000085e-05}, {'time': 0.022014056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.378" endtime="20201110 08:37:33.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:33.382" endtime="20201110 08:37:33.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.401" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.400" endtime="20201110 08:37:33.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.403" level="INFO">VALUE: [7.104100000000085e-05, 6.962500000000024e-05, 6.966700000000242e-05, 7.005499999999942e-05, 6.981899999999874e-05, 6.97909999999996e-05, 7.002700000000028e-05, 6.988800000000059e-05, 7.006900000000246e-05, 6.99299999999993e-05, 6.976399999999994e-05, 7.005499999999942e-05, 6.975000000000037e-05, 6.988900000000006e-05, 6.987499999999702e-05, 6.977800000000298e-05, 6.952799999999926e-05, 6.955600000000187e-05, 6.95970000000011e-05, 7.004199999999933e-05, 6.979199999999908e-05, 6.994499999999834e-05, 6.976399999999994e-05, 6.97230000000007e-05, 6.951399999999969e-05, 6.975000000000037e-05, 6.981899999999874e-05, 6.987500000000049e-05, 7.01109999999977e-05, 6.95970000000011e-05, 7.002700000000028e-05, 6.997199999999801e-05, 6.994400000000234e-05, 6.986100000000092e-05, 6.993099999999877e-05, 7.008299999999856e-05, 6.99169999999992e-05, 6.958300000000153e-05, 7.00559999999989e-05, 6.979200000000255e-05, 6.95559999999984e-05, 6.995800000000191e-05, 6.980599999999865e-05, 6.958300000000153e-05, 6.984700000000135e-05, 6.962500000000024e-05, 6.962500000000024e-05, 6.965299999999938e-05, 6.9584000000001e-05, 7.002799999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.402" endtime="20201110 08:37:33.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.397" endtime="20201110 08:37:33.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.407" endtime="20201110 08:37:33.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.410" endtime="20201110 08:37:33.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.409" endtime="20201110 08:37:33.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.405" endtime="20201110 08:37:33.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.035" endtime="20201110 08:37:33.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.035" endtime="20201110 08:37:33.431"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.440" endtime="20201110 08:37:33.457"></status>
</kw>
<msg timestamp="20201110 08:37:33.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.438" endtime="20201110 08:37:33.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.459" endtime="20201110 08:37:33.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.461" endtime="20201110 08:37:33.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.436" endtime="20201110 08:37:33.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.433" endtime="20201110 08:37:33.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.471" endtime="20201110 08:37:33.756"></status>
</kw>
<msg timestamp="20201110 08:37:33.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.470" endtime="20201110 08:37:33.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.760" endtime="20201110 08:37:33.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.768" endtime="20201110 08:37:33.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.467" endtime="20201110 08:37:33.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.466" endtime="20201110 08:37:33.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.775" level="INFO">${RESULT} = [{'time': 0.022455861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.202800000000176e-05, 'source_diff': 7.202800000000176e-05}, {'time': 0.022532875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.772" endtime="20201110 08:37:33.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.789" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:33.776" endtime="20201110 08:37:33.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.793" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.792" endtime="20201110 08:37:33.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.796" level="INFO">VALUE: [7.202800000000176e-05, 7.140300000000113e-05, 7.050000000000112e-05, 7.054199999999983e-05, 7.094499999999934e-05, 7.098599999999858e-05, 7.079200000000008e-05, 7.061100000000167e-05, 7.07230000000017e-05, 7.059800000000158e-05, 7.095899999999891e-05, 7.09300000000003e-05, 7.058399999999854e-05, 7.080500000000017e-05, 7.1069e-05, 7.069400000000309e-05, 7.070799999999919e-05, 7.055499999999992e-05, 7.090300000000063e-05, 7.068000000000005e-05, 7.083299999999931e-05, 7.058300000000253e-05, 7.104200000000033e-05, 7.065300000000038e-05, 7.061100000000167e-05, 7.094399999999987e-05, 7.088899999999759e-05, 7.076399999999747e-05, 7.107000000000294e-05, 7.052800000000026e-05, 7.095799999999944e-05, 7.086100000000192e-05, 7.05559999999994e-05, 7.058299999999906e-05, 7.069399999999962e-05, 7.104200000000033e-05, 7.063900000000081e-05, 7.109699999999913e-05, 7.080500000000017e-05, 7.095799999999944e-05, 7.088900000000106e-05, 7.051400000000069e-05, 7.069399999999962e-05, 7.070800000000266e-05, 7.076400000000094e-05, 7.088900000000106e-05, 7.095799999999944e-05, 7.088899999999759e-05, 7.09170000000002e-05, 7.065300000000038e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.794" endtime="20201110 08:37:33.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.790" endtime="20201110 08:37:33.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.799" endtime="20201110 08:37:33.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.803" endtime="20201110 08:37:33.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.801" endtime="20201110 08:37:33.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.798" endtime="20201110 08:37:33.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.432" endtime="20201110 08:37:33.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.431" endtime="20201110 08:37:33.824"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.833" endtime="20201110 08:37:33.850"></status>
</kw>
<msg timestamp="20201110 08:37:33.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.831" endtime="20201110 08:37:33.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.852" endtime="20201110 08:37:33.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.854" endtime="20201110 08:37:33.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.828" endtime="20201110 08:37:33.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.826" endtime="20201110 08:37:33.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.864" endtime="20201110 08:37:34.151"></status>
</kw>
<msg timestamp="20201110 08:37:34.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.863" endtime="20201110 08:37:34.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.155" endtime="20201110 08:37:34.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.163" endtime="20201110 08:37:34.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.860" endtime="20201110 08:37:34.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.858" endtime="20201110 08:37:34.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.170" level="INFO">${RESULT} = [{'time': 0.022380014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263899999999934e-05, 'source_diff': 7.263899999999934e-05}, {'time': 0.022457042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:34.167" endtime="20201110 08:37:34.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:34.171" endtime="20201110 08:37:34.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.188" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.187" endtime="20201110 08:37:34.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.191" level="INFO">VALUE: [7.263899999999934e-05, 7.170899999999966e-05, 7.187499999999902e-05, 7.175000000000237e-05, 7.172299999999923e-05, 7.201299999999924e-05, 7.15560000000004e-05, 7.190300000000163e-05, 7.172199999999976e-05, 7.17910000000016e-05, 7.159699999999963e-05, 7.177799999999804e-05, 7.212499999999927e-05, 7.201399999999872e-05, 7.173599999999933e-05, 7.176400000000194e-05, 7.20560000000009e-05, 7.162499999999877e-05, 7.207000000000047e-05, 7.180600000000065e-05, 7.194500000000034e-05, 7.20560000000009e-05, 7.172199999999976e-05, 7.201400000000219e-05, 7.152799999999779e-05, 7.187499999999902e-05, 7.166599999999801e-05, 7.176400000000194e-05, 7.162500000000224e-05, 7.15970000000031e-05, 7.169399999999715e-05, 7.173599999999933e-05, 7.204099999999838e-05, 7.173599999999933e-05, 7.166600000000148e-05, 7.19300000000013e-05, 7.156999999999997e-05, 7.209700000000013e-05, 7.184699999999988e-05, 7.163899999999834e-05, 7.20560000000009e-05, 7.151400000000169e-05, 7.19170000000012e-05, 7.209699999999666e-05, 7.176399999999847e-05, 7.204199999999786e-05, 7.16109999999992e-05, 7.187499999999902e-05, 7.169500000000009e-05, 7.187500000000249e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.190" endtime="20201110 08:37:34.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.185" endtime="20201110 08:37:34.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.194" endtime="20201110 08:37:34.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.198" endtime="20201110 08:37:34.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.196" endtime="20201110 08:37:34.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.193" endtime="20201110 08:37:34.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.825" endtime="20201110 08:37:34.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.824" endtime="20201110 08:37:34.219"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.228" endtime="20201110 08:37:34.245"></status>
</kw>
<msg timestamp="20201110 08:37:34.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.226" endtime="20201110 08:37:34.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.246" endtime="20201110 08:37:34.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.249" endtime="20201110 08:37:34.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.223" endtime="20201110 08:37:34.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.221" endtime="20201110 08:37:34.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.259" endtime="20201110 08:37:34.544"></status>
</kw>
<msg timestamp="20201110 08:37:34.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.258" endtime="20201110 08:37:34.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.549" endtime="20201110 08:37:34.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.557" endtime="20201110 08:37:34.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.255" endtime="20201110 08:37:34.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.253" endtime="20201110 08:37:34.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.564" level="INFO">${RESULT} = [{'time': 0.022039819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402699999999734e-05, 'source_diff': 7.402699999999734e-05}, {'time': 0.022117861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:34.560" endtime="20201110 08:37:34.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.577" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:34.565" endtime="20201110 08:37:34.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.582" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.581" endtime="20201110 08:37:34.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.584" level="INFO">VALUE: [7.402699999999734e-05, 7.297199999999754e-05, 7.27499999999999e-05, 7.306899999999852e-05, 7.268000000000205e-05, 7.295799999999797e-05, 7.288899999999959e-05, 7.316700000000245e-05, 7.273600000000033e-05, 7.254200000000183e-05, 7.27499999999999e-05, 7.282000000000122e-05, 7.259800000000011e-05, 7.286100000000045e-05, 7.287500000000002e-05, 7.282000000000122e-05, 7.294500000000134e-05, 7.288899999999959e-05, 7.266700000000195e-05, 7.266599999999901e-05, 7.266599999999901e-05, 7.251299999999974e-05, 7.269400000000162e-05, 7.277799999999904e-05, 7.302699999999981e-05, 7.272199999999729e-05, 7.292999999999883e-05, 7.255500000000192e-05, 7.292999999999883e-05, 7.272200000000076e-05, 7.273599999999686e-05, 7.279199999999861e-05, 7.288899999999959e-05, 7.280600000000165e-05, 7.280600000000165e-05, 7.309700000000113e-05, 7.272300000000023e-05, 7.270900000000066e-05, 7.28049999999987e-05, 7.2763e-05, 7.255499999999845e-05, 7.272299999999676e-05, 7.267999999999858e-05, 7.273599999999686e-05, 7.308300000000156e-05, 7.298600000000058e-05, 7.270799999999772e-05, 7.290299999999916e-05, 7.279099999999913e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.583" endtime="20201110 08:37:34.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.578" endtime="20201110 08:37:34.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.592" endtime="20201110 08:37:34.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.596" endtime="20201110 08:37:34.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.594" endtime="20201110 08:37:34.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.591" endtime="20201110 08:37:34.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.220" endtime="20201110 08:37:34.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.219" endtime="20201110 08:37:34.617"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.626" endtime="20201110 08:37:34.644"></status>
</kw>
<msg timestamp="20201110 08:37:34.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.624" endtime="20201110 08:37:34.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.645" endtime="20201110 08:37:34.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.648" endtime="20201110 08:37:34.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.621" endtime="20201110 08:37:34.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.619" endtime="20201110 08:37:34.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.658" endtime="20201110 08:37:34.945"></status>
</kw>
<msg timestamp="20201110 08:37:34.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:34.657" endtime="20201110 08:37:34.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:34.949" endtime="20201110 08:37:34.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.958" endtime="20201110 08:37:34.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.654" endtime="20201110 08:37:34.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.652" endtime="20201110 08:37:34.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.965" level="INFO">${RESULT} = [{'time': 0.022592042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429200000000011e-05, 'source_diff': 7.429200000000011e-05}, {'time': 0.022671028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:34.961" endtime="20201110 08:37:34.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.980" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:34.966" endtime="20201110 08:37:34.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.984" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.983" endtime="20201110 08:37:34.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.987" level="INFO">VALUE: [7.429200000000011e-05, 7.352799999999979e-05, 7.397199999999854e-05, 7.400000000000115e-05, 7.413900000000084e-05, 7.404199999999986e-05, 7.391699999999973e-05, 7.387500000000102e-05, 7.362500000000077e-05, 7.380599999999918e-05, 7.38049999999997e-05, 7.401400000000072e-05, 7.388900000000059e-05, 7.386099999999798e-05, 7.367999999999958e-05, 7.404100000000038e-05, 7.356899999999902e-05, 7.379199999999961e-05, 7.370800000000219e-05, 7.388900000000059e-05, 7.359699999999816e-05, 7.406899999999952e-05, 7.380599999999918e-05, 7.397199999999854e-05, 7.359699999999816e-05, 7.365299999999991e-05, 7.404199999999986e-05, 7.361099999999773e-05, 7.355599999999893e-05, 7.3763000000001e-05, 7.405499999999995e-05, 7.37370000000008e-05, 7.402699999999734e-05, 7.377700000000056e-05, 7.386100000000145e-05, 7.383299999999884e-05, 7.400000000000115e-05, 7.383300000000231e-05, 7.351400000000022e-05, 7.369399999999915e-05, 7.384700000000188e-05, 7.372200000000176e-05, 7.397199999999854e-05, 7.401399999999725e-05, 7.368099999999905e-05, 7.405599999999943e-05, 7.38049999999997e-05, 7.369500000000209e-05, 7.376400000000047e-05, 7.348600000000108e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.986" endtime="20201110 08:37:34.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.981" endtime="20201110 08:37:34.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.991" endtime="20201110 08:37:34.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.994" endtime="20201110 08:37:35.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.993" endtime="20201110 08:37:35.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.989" endtime="20201110 08:37:35.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.618" endtime="20201110 08:37:35.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.617" endtime="20201110 08:37:35.015"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.024" endtime="20201110 08:37:35.042"></status>
</kw>
<msg timestamp="20201110 08:37:35.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.023" endtime="20201110 08:37:35.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.043" endtime="20201110 08:37:35.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.046" endtime="20201110 08:37:35.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.020" endtime="20201110 08:37:35.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.018" endtime="20201110 08:37:35.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.056" endtime="20201110 08:37:35.342"></status>
</kw>
<msg timestamp="20201110 08:37:35.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.055" endtime="20201110 08:37:35.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.346" endtime="20201110 08:37:35.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.355" endtime="20201110 08:37:35.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.052" endtime="20201110 08:37:35.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.050" endtime="20201110 08:37:35.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.362" level="INFO">${RESULT} = [{'time': 0.022555208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.559700000000016e-05, 'source_diff': 7.559700000000016e-05}, {'time': 0.022635222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:35.358" endtime="20201110 08:37:35.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.376" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:35.363" endtime="20201110 08:37:35.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.380" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.379" endtime="20201110 08:37:35.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.383" level="INFO">VALUE: [7.559700000000016e-05, 7.468000000000058e-05, 7.487499999999855e-05, 7.509699999999966e-05, 7.465300000000091e-05, 7.499999999999868e-05, 7.472199999999929e-05, 7.483299999999984e-05, 7.49310000000003e-05, 7.472199999999929e-05, 7.483399999999932e-05, 7.507e-05, 7.461199999999821e-05, 7.491700000000073e-05, 7.48050000000007e-05, 7.507e-05, 7.484699999999941e-05, 7.47500000000019e-05, 7.499999999999868e-05, 7.49440000000004e-05, 7.456900000000002e-05, 7.469499999999962e-05, 7.500000000000215e-05, 7.473600000000233e-05, 7.509699999999966e-05, 7.511099999999923e-05, 7.480600000000018e-05, 7.504099999999791e-05, 7.502699999999835e-05, 7.509699999999966e-05, 7.49310000000003e-05, 7.488900000000159e-05, 7.486099999999898e-05, 7.465300000000091e-05, 7.484699999999941e-05, 7.500000000000215e-05, 7.490200000000169e-05, 7.473600000000233e-05, 7.48189999999968e-05, 7.448600000000208e-05, 7.4763999999998e-05, 7.455499999999698e-05, 7.49310000000003e-05, 7.459700000000263e-05, 7.481999999999975e-05, 7.506899999999705e-05, 7.472199999999929e-05, 7.469499999999962e-05, 7.49029999999977e-05, 7.486099999999898e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.382" endtime="20201110 08:37:35.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.377" endtime="20201110 08:37:35.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.387" endtime="20201110 08:37:35.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.390" endtime="20201110 08:37:35.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.389" endtime="20201110 08:37:35.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.385" endtime="20201110 08:37:35.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.016" endtime="20201110 08:37:35.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.016" endtime="20201110 08:37:35.411"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.421" endtime="20201110 08:37:35.438"></status>
</kw>
<msg timestamp="20201110 08:37:35.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.419" endtime="20201110 08:37:35.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.440" endtime="20201110 08:37:35.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.442" endtime="20201110 08:37:35.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.416" endtime="20201110 08:37:35.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.414" endtime="20201110 08:37:35.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.453" endtime="20201110 08:37:35.738"></status>
</kw>
<msg timestamp="20201110 08:37:35.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:35.451" endtime="20201110 08:37:35.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022777, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:35.743" endtime="20201110 08:37:35.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.751" endtime="20201110 08:37:35.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.448" endtime="20201110 08:37:35.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.447" endtime="20201110 08:37:35.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.758" level="INFO">${RESULT} = [{'time': 0.022777, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.69029999999997e-05, 'source_diff': 7.69029999999997e-05}, {'time': 0.022858014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201110 08:37:35.754" endtime="20201110 08:37:35.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:35.759" endtime="20201110 08:37:35.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.777" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.776" endtime="20201110 08:37:35.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.779" level="INFO">VALUE: [7.69029999999997e-05, 7.569500000000062e-05, 7.558400000000007e-05, 7.604200000000186e-05, 7.566699999999801e-05, 7.591699999999826e-05, 7.556900000000102e-05, 7.583399999999685e-05, 7.549999999999918e-05, 7.58050000000017e-05, 7.556899999999755e-05, 7.597200000000054e-05, 7.615299999999894e-05, 7.606900000000152e-05, 7.554099999999841e-05, 7.61249999999998e-05, 7.605500000000195e-05, 7.601399999999925e-05, 7.574999999999943e-05, 7.60830000000011e-05, 7.583300000000084e-05, 7.602799999999882e-05, 7.555600000000093e-05, 7.56249999999993e-05, 7.551399999999875e-05, 7.586099999999998e-05, 7.58890000000026e-05, 7.595899999999697e-05, 7.588799999999965e-05, 7.595800000000097e-05, 7.59579999999975e-05, 7.576299999999953e-05, 7.583300000000084e-05, 7.590199999999922e-05, 7.601399999999925e-05, 7.549999999999918e-05, 7.57500000000029e-05, 7.565299999999844e-05, 7.55830000000006e-05, 7.599999999999968e-05, 7.569399999999768e-05, 7.565299999999844e-05, 7.554200000000136e-05, 7.583299999999737e-05, 7.55830000000006e-05, 7.59029999999987e-05, 7.552800000000179e-05, 7.572299999999976e-05, 7.565299999999844e-05, 7.576400000000247e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.778" endtime="20201110 08:37:35.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.773" endtime="20201110 08:37:35.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.783" endtime="20201110 08:37:35.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.787" endtime="20201110 08:37:35.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.785" endtime="20201110 08:37:35.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.781" endtime="20201110 08:37:35.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.412" endtime="20201110 08:37:35.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.412" endtime="20201110 08:37:35.808"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.816" endtime="20201110 08:37:35.835"></status>
</kw>
<msg timestamp="20201110 08:37:35.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.815" endtime="20201110 08:37:35.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.836" endtime="20201110 08:37:35.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.839" endtime="20201110 08:37:35.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.812" endtime="20201110 08:37:35.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.810" endtime="20201110 08:37:35.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.849" endtime="20201110 08:37:36.135"></status>
</kw>
<msg timestamp="20201110 08:37:36.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.848" endtime="20201110 08:37:36.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.139" endtime="20201110 08:37:36.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.148" endtime="20201110 08:37:36.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.845" endtime="20201110 08:37:36.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.843" endtime="20201110 08:37:36.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.155" level="INFO">${RESULT} = [{'time': 0.022373583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.751399999999728e-05, 'source_diff': 7.751399999999728e-05}, {'time': 0.022456583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.151" endtime="20201110 08:37:36.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:36.156" endtime="20201110 08:37:36.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.174" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.173" endtime="20201110 08:37:36.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.177" level="INFO">VALUE: [7.751399999999728e-05, 7.742999999999986e-05, 7.715299999999994e-05, 7.691699999999926e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.694399999999893e-05, 7.655600000000193e-05, 7.701400000000025e-05, 7.65830000000016e-05, 7.672199999999782e-05, 7.665299999999944e-05, 7.6764e-05, 7.65969999999977e-05, 7.669500000000162e-05, 7.672300000000076e-05, 7.684800000000089e-05, 7.659800000000064e-05, 7.665299999999944e-05, 7.672200000000129e-05, 7.665199999999997e-05, 7.695800000000197e-05, 7.668099999999858e-05, 7.687500000000055e-05, 7.65830000000016e-05, 7.697199999999807e-05, 7.691700000000273e-05, 7.663899999999987e-05, 7.683300000000184e-05, 7.698600000000111e-05, 7.665299999999944e-05, 7.705600000000243e-05, 7.680599999999871e-05, 7.700000000000068e-05, 7.702799999999982e-05, 7.690300000000316e-05, 7.658400000000107e-05, 7.666699999999901e-05, 7.673700000000033e-05, 7.658299999999812e-05, 7.690199999999675e-05, 7.675000000000043e-05, 7.687500000000055e-05, 7.666600000000301e-05, 7.675000000000043e-05, 7.701400000000025e-05, 7.701400000000025e-05, 7.656899999999855e-05, 7.65830000000016e-05, 7.705599999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.175" endtime="20201110 08:37:36.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.170" endtime="20201110 08:37:36.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.180" endtime="20201110 08:37:36.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.184" endtime="20201110 08:37:36.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.182" endtime="20201110 08:37:36.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.179" endtime="20201110 08:37:36.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.808" endtime="20201110 08:37:36.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.808" endtime="20201110 08:37:36.205"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.214" endtime="20201110 08:37:36.232"></status>
</kw>
<msg timestamp="20201110 08:37:36.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.212" endtime="20201110 08:37:36.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.234" endtime="20201110 08:37:36.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.236" endtime="20201110 08:37:36.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.209" endtime="20201110 08:37:36.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.207" endtime="20201110 08:37:36.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.247" endtime="20201110 08:37:36.533"></status>
</kw>
<msg timestamp="20201110 08:37:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.245" endtime="20201110 08:37:36.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.537" endtime="20201110 08:37:36.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.546" endtime="20201110 08:37:36.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.242" endtime="20201110 08:37:36.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.241" endtime="20201110 08:37:36.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.552" level="INFO">${RESULT} = [{'time': 0.022653167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.894499999999693e-05, 'source_diff': 7.894499999999693e-05}, {'time': 0.022736208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.549" endtime="20201110 08:37:36.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:36.553" endtime="20201110 08:37:36.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.572" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.571" endtime="20201110 08:37:36.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.575" level="INFO">VALUE: [7.894499999999693e-05, 7.798600000000211e-05, 7.804200000000039e-05, 7.79449999999994e-05, 7.79030000000007e-05, 7.775000000000143e-05, 7.758299999999912e-05, 7.811099999999876e-05, 7.786099999999851e-05, 7.768000000000011e-05, 7.769400000000315e-05, 7.783300000000284e-05, 7.793000000000036e-05, 7.773599999999839e-05, 7.783299999999937e-05, 7.793099999999983e-05, 7.772199999999882e-05, 7.79169999999968e-05, 7.779200000000014e-05, 7.768099999999958e-05, 7.804200000000039e-05, 7.772199999999882e-05, 7.761099999999826e-05, 7.781999999999928e-05, 7.80129999999983e-05, 7.792999999999689e-05, 7.766700000000001e-05, 7.806900000000006e-05, 7.779200000000014e-05, 7.772199999999882e-05, 7.768000000000011e-05, 7.799999999999821e-05, 7.806900000000006e-05, 7.808299999999962e-05, 7.761100000000173e-05, 7.772200000000229e-05, 7.79030000000007e-05, 7.788900000000112e-05, 7.770899999999872e-05, 7.797199999999907e-05, 7.780599999999971e-05, 7.765299999999697e-05, 7.779200000000014e-05, 7.770900000000219e-05, 7.801300000000178e-05, 7.763900000000087e-05, 7.770799999999925e-05, 7.766600000000054e-05, 7.78189999999998e-05, 7.794399999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.573" endtime="20201110 08:37:36.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.568" endtime="20201110 08:37:36.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.579" endtime="20201110 08:37:36.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.582" endtime="20201110 08:37:36.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.581" endtime="20201110 08:37:36.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.577" endtime="20201110 08:37:36.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.206" endtime="20201110 08:37:36.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.205" endtime="20201110 08:37:36.603"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.612" endtime="20201110 08:37:36.630"></status>
</kw>
<msg timestamp="20201110 08:37:36.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.610" endtime="20201110 08:37:36.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.632" endtime="20201110 08:37:36.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.634" endtime="20201110 08:37:36.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.608" endtime="20201110 08:37:36.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.606" endtime="20201110 08:37:36.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.645" endtime="20201110 08:37:36.931"></status>
</kw>
<msg timestamp="20201110 08:37:36.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.643" endtime="20201110 08:37:36.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.935" endtime="20201110 08:37:36.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.944" endtime="20201110 08:37:36.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.641" endtime="20201110 08:37:36.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.639" endtime="20201110 08:37:36.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.951" level="INFO">${RESULT} = [{'time': 0.022366528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.965299999999897e-05, 'source_diff': 7.965299999999897e-05}, {'time': 0.0224505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:36.947" endtime="20201110 08:37:36.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:36.952" endtime="20201110 08:37:36.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.969" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.968" endtime="20201110 08:37:36.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.972" level="INFO">VALUE: [7.965299999999897e-05, 7.854200000000089e-05, 7.899999999999921e-05, 7.87779999999981e-05, 7.882000000000028e-05, 7.90970000000002e-05, 7.891600000000179e-05, 7.883399999999985e-05, 7.855599999999699e-05, 7.89169999999978e-05, 7.911099999999976e-05, 7.8764000000002e-05, 7.894400000000093e-05, 7.862499999999883e-05, 7.911099999999976e-05, 7.906899999999759e-05, 7.862499999999883e-05, 7.886099999999951e-05, 7.908300000000063e-05, 7.873599999999939e-05, 7.865299999999797e-05, 7.893100000000083e-05, 7.851399999999828e-05, 7.886099999999951e-05, 7.901400000000225e-05, 7.899999999999921e-05, 7.85969999999997e-05, 7.854200000000089e-05, 7.901399999999878e-05, 7.873599999999939e-05, 7.870899999999972e-05, 7.901300000000278e-05, 7.904099999999845e-05, 7.894400000000093e-05, 7.883300000000037e-05, 7.85969999999997e-05, 7.880500000000124e-05, 7.884799999999942e-05, 7.869399999999721e-05, 7.902799999999835e-05, 7.868100000000058e-05, 7.886099999999951e-05, 7.855600000000046e-05, 7.912499999999933e-05, 7.895899999999997e-05, 7.898599999999964e-05, 7.85969999999997e-05, 7.89450000000004e-05, 7.85839999999996e-05, 7.868100000000058e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.971" endtime="20201110 08:37:36.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.966" endtime="20201110 08:37:36.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.976" endtime="20201110 08:37:36.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.979" endtime="20201110 08:37:36.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.978" endtime="20201110 08:37:36.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.974" endtime="20201110 08:37:37.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.604" endtime="20201110 08:37:37.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.603" endtime="20201110 08:37:37.000"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.010" endtime="20201110 08:37:37.028"></status>
</kw>
<msg timestamp="20201110 08:37:37.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.008" endtime="20201110 08:37:37.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.029" endtime="20201110 08:37:37.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.032" endtime="20201110 08:37:37.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.005" endtime="20201110 08:37:37.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.003" endtime="20201110 08:37:37.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.042" endtime="20201110 08:37:37.328"></status>
</kw>
<msg timestamp="20201110 08:37:37.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.041" endtime="20201110 08:37:37.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.332" endtime="20201110 08:37:37.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.341" endtime="20201110 08:37:37.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.038" endtime="20201110 08:37:37.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.036" endtime="20201110 08:37:37.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.348" level="INFO">${RESULT} = [{'time': 0.022644903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.095900000000197e-05, 'source_diff': 8.095900000000197e-05}, {'time': 0.022729917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.344" endtime="20201110 08:37:37.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.362" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:37.349" endtime="20201110 08:37:37.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.367" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.365" endtime="20201110 08:37:37.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.369" level="INFO">VALUE: [8.095900000000197e-05, 7.979199999999867e-05, 7.982000000000128e-05, 7.993099999999836e-05, 7.987500000000008e-05, 8.002699999999988e-05, 7.965300000000244e-05, 7.9764000000003e-05, 8.000000000000021e-05, 7.956900000000156e-05, 7.994399999999846e-05, 7.991700000000226e-05, 7.99169999999988e-05, 7.97779999999991e-05, 7.984699999999748e-05, 7.986100000000051e-05, 8.002800000000282e-05, 7.994399999999846e-05, 7.979200000000214e-05, 7.990299999999922e-05, 7.954200000000189e-05, 7.952799999999885e-05, 7.951399999999928e-05, 7.994399999999846e-05, 7.974999999999996e-05, 7.992999999999889e-05, 7.990199999999975e-05, 7.956899999999809e-05, 8.008300000000163e-05, 7.997200000000107e-05, 7.980499999999877e-05, 7.958300000000113e-05, 8.004199999999892e-05, 8.004199999999892e-05, 7.962499999999983e-05, 7.968100000000158e-05, 8.011100000000076e-05, 7.954199999999842e-05, 7.976399999999953e-05, 7.983400000000085e-05, 7.970900000000072e-05, 8.001399999999978e-05, 7.986100000000051e-05, 7.96389999999994e-05, 7.993000000000236e-05, 7.99719999999976e-05, 8.012500000000033e-05, 7.966600000000254e-05, 7.984700000000094e-05, 7.96250000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.368" endtime="20201110 08:37:37.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.363" endtime="20201110 08:37:37.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.373" endtime="20201110 08:37:37.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.377" endtime="20201110 08:37:37.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.375" endtime="20201110 08:37:37.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.371" endtime="20201110 08:37:37.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.001" endtime="20201110 08:37:37.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.001" endtime="20201110 08:37:37.398"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.407" endtime="20201110 08:37:37.424"></status>
</kw>
<msg timestamp="20201110 08:37:37.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.405" endtime="20201110 08:37:37.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.426" endtime="20201110 08:37:37.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.429" endtime="20201110 08:37:37.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.402" endtime="20201110 08:37:37.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.400" endtime="20201110 08:37:37.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.439" endtime="20201110 08:37:37.726"></status>
</kw>
<msg timestamp="20201110 08:37:37.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.438" endtime="20201110 08:37:37.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022924708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.730" endtime="20201110 08:37:37.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.739" endtime="20201110 08:37:37.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.435" endtime="20201110 08:37:37.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.433" endtime="20201110 08:37:37.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.746" level="INFO">${RESULT} = [{'time': 0.022924708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.131899999999984e-05, 'source_diff': 8.131899999999984e-05}, {'time': 0.023010736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.742" endtime="20201110 08:37:37.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:37.747" endtime="20201110 08:37:37.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.764" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.763" endtime="20201110 08:37:37.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.767" level="INFO">VALUE: [8.131899999999984e-05, 8.088900000000065e-05, 8.055499999999952e-05, 8.061200000000074e-05, 8.104200000000339e-05, 8.11109999999983e-05, 8.093099999999936e-05, 8.076399999999706e-05, 8.062500000000083e-05, 8.062500000000083e-05, 8.101299999999784e-05, 8.070899999999825e-05, 8.075000000000096e-05, 8.056899999999909e-05, 8.102800000000035e-05, 8.065299999999997e-05, 8.076300000000106e-05, 8.07910000000002e-05, 8.080499999999977e-05, 8.116700000000004e-05, 8.055500000000299e-05, 8.055499999999952e-05, 8.100000000000121e-05, 8.084699999999848e-05, 8.0458000000002e-05, 8.069399999999921e-05, 8.065299999999997e-05, 8.083400000000185e-05, 8.082000000000228e-05, 8.069499999999868e-05, 8.070899999999825e-05, 8.104199999999992e-05, 8.106999999999906e-05, 8.07230000000013e-05, 8.102799999999688e-05, 8.088800000000118e-05, 8.10970000000022e-05, 8.054099999999995e-05, 8.06520000000005e-05, 8.072200000000182e-05, 8.106899999999959e-05, 8.11109999999983e-05, 8.067999999999964e-05, 8.058300000000213e-05, 8.068099999999911e-05, 8.090300000000022e-05, 8.062499999999737e-05, 8.06390000000004e-05, 8.100000000000121e-05, 8.076399999999706e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.765" endtime="20201110 08:37:37.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.760" endtime="20201110 08:37:37.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.770" endtime="20201110 08:37:37.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.774" endtime="20201110 08:37:37.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.772" endtime="20201110 08:37:37.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.769" endtime="20201110 08:37:37.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.398" endtime="20201110 08:37:37.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.398" endtime="20201110 08:37:37.795"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.804" endtime="20201110 08:37:37.822"></status>
</kw>
<msg timestamp="20201110 08:37:37.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.803" endtime="20201110 08:37:37.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.824" endtime="20201110 08:37:37.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.826" endtime="20201110 08:37:37.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.800" endtime="20201110 08:37:37.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.798" endtime="20201110 08:37:37.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.837" endtime="20201110 08:37:38.123"></status>
</kw>
<msg timestamp="20201110 08:37:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.835" endtime="20201110 08:37:38.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.128" endtime="20201110 08:37:38.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.136" endtime="20201110 08:37:38.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.833" endtime="20201110 08:37:38.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.831" endtime="20201110 08:37:38.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.144" level="INFO">${RESULT} = [{'time': 0.022715833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.268000000000164e-05, 'source_diff': 8.268000000000164e-05}, {'time': 0.022802819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:38.140" endtime="20201110 08:37:38.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:38.145" endtime="20201110 08:37:38.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.164" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.163" endtime="20201110 08:37:38.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.167" level="INFO">VALUE: [8.268000000000164e-05, 8.191599999999785e-05, 8.172200000000282e-05, 8.170799999999978e-05, 8.179099999999773e-05, 8.202799999999788e-05, 8.192999999999742e-05, 8.17919999999972e-05, 8.169400000000021e-05, 8.172199999999935e-05, 8.169499999999968e-05, 8.162499999999837e-05, 8.173599999999892e-05, 8.209699999999973e-05, 8.198599999999917e-05, 8.176399999999806e-05, 8.190300000000122e-05, 8.166700000000054e-05, 8.168000000000064e-05, 8.152700000000138e-05, 8.202700000000188e-05, 8.194400000000046e-05, 8.152700000000138e-05, 8.186099999999905e-05, 8.219400000000071e-05, 8.162500000000183e-05, 8.207000000000006e-05, 8.180500000000077e-05, 8.188900000000165e-05, 8.161100000000227e-05, 8.17780000000011e-05, 8.187500000000208e-05, 8.174999999999849e-05, 8.154200000000042e-05, 8.187500000000208e-05, 8.17910000000012e-05, 8.15840000000026e-05, 8.211200000000224e-05, 8.148699999999814e-05, 8.15269999999979e-05, 8.204099999999798e-05, 8.202799999999788e-05, 8.188899999999819e-05, 8.19719999999996e-05, 8.208300000000016e-05, 8.194400000000046e-05, 8.154200000000042e-05, 8.194400000000046e-05, 8.166700000000054e-05, 8.170799999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.165" endtime="20201110 08:37:38.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.160" endtime="20201110 08:37:38.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.170" endtime="20201110 08:37:38.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.174" endtime="20201110 08:37:38.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.172" endtime="20201110 08:37:38.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.169" endtime="20201110 08:37:38.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.796" endtime="20201110 08:37:38.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.796" endtime="20201110 08:37:38.195"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.204" endtime="20201110 08:37:38.222"></status>
</kw>
<msg timestamp="20201110 08:37:38.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.202" endtime="20201110 08:37:38.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.224" endtime="20201110 08:37:38.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.227" endtime="20201110 08:37:38.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.200" endtime="20201110 08:37:38.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.198" endtime="20201110 08:37:38.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.237" endtime="20201110 08:37:38.523"></status>
</kw>
<msg timestamp="20201110 08:37:38.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.235" endtime="20201110 08:37:38.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.528" endtime="20201110 08:37:38.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.536" endtime="20201110 08:37:38.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.233" endtime="20201110 08:37:38.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.231" endtime="20201110 08:37:38.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.543" level="INFO">${RESULT} = [{'time': 0.022646458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.359700000000123e-05, 'source_diff': 8.359700000000123e-05}, {'time': 0.022735472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:38.540" endtime="20201110 08:37:38.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:38.544" endtime="20201110 08:37:38.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.563" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.561" endtime="20201110 08:37:38.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.566" level="INFO">VALUE: [8.359700000000123e-05, 8.337500000000012e-05, 8.288899999999919e-05, 8.302799999999888e-05, 8.28330000000009e-05, 8.312499999999987e-05, 8.273599999999992e-05, 8.270800000000078e-05, 8.258400000000013e-05, 8.312499999999987e-05, 8.263899999999894e-05, 8.263899999999894e-05, 8.299999999999974e-05, 8.297199999999713e-05, 8.29590000000005e-05, 8.305500000000202e-05, 8.298600000000017e-05, 8.292999999999842e-05, 8.308300000000116e-05, 8.292999999999842e-05, 8.272200000000035e-05, 8.26109999999998e-05, 8.304199999999845e-05, 8.301399999999931e-05, 8.274999999999949e-05, 8.295800000000103e-05, 8.269400000000121e-05, 8.259700000000023e-05, 8.283400000000038e-05, 8.288899999999919e-05, 8.280600000000124e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.257000000000056e-05, 8.269500000000068e-05, 8.273599999999992e-05, 8.304099999999898e-05, 8.309799999999673e-05, 8.269399999999774e-05, 8.269399999999774e-05, 8.259700000000023e-05, 8.31390000000029e-05, 8.263899999999894e-05, 8.309700000000073e-05, 8.276400000000253e-05, 8.298600000000017e-05, 8.293100000000136e-05, 8.257000000000056e-05, 8.290299999999876e-05, 8.307000000000106e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.564" endtime="20201110 08:37:38.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.558" endtime="20201110 08:37:38.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.570" endtime="20201110 08:37:38.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.574" endtime="20201110 08:37:38.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.572" endtime="20201110 08:37:38.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.569" endtime="20201110 08:37:38.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.196" endtime="20201110 08:37:38.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.195" endtime="20201110 08:37:38.595"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.604" endtime="20201110 08:37:38.623"></status>
</kw>
<msg timestamp="20201110 08:37:38.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.602" endtime="20201110 08:37:38.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.624" endtime="20201110 08:37:38.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.627" endtime="20201110 08:37:38.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.599" endtime="20201110 08:37:38.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.597" endtime="20201110 08:37:38.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.637" endtime="20201110 08:37:38.925"></status>
</kw>
<msg timestamp="20201110 08:37:38.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.636" endtime="20201110 08:37:38.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.929" endtime="20201110 08:37:38.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.937" endtime="20201110 08:37:38.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.633" endtime="20201110 08:37:38.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.631" endtime="20201110 08:37:38.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.945" level="INFO">${RESULT} = [{'time': 0.022957028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.412500000000087e-05, 'source_diff': 8.412500000000087e-05}, {'time': 0.023047042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:38.941" endtime="20201110 08:37:38.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.959" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:38.946" endtime="20201110 08:37:38.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.963" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.962" endtime="20201110 08:37:38.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.966" level="INFO">VALUE: [8.412500000000087e-05, 8.441699999999983e-05, 8.355499999999905e-05, 8.354200000000242e-05, 8.358299999999819e-05, 8.412500000000087e-05, 8.394399999999899e-05, 8.406899999999912e-05, 8.408300000000216e-05, 8.412500000000087e-05, 8.379099999999973e-05, 8.395799999999856e-05, 8.391699999999933e-05, 8.401400000000031e-05, 8.413900000000044e-05, 8.407000000000206e-05, 8.366699999999908e-05, 8.404199999999945e-05, 8.393100000000236e-05, 8.394499999999847e-05, 8.376400000000006e-05, 8.37919999999992e-05, 8.401300000000084e-05, 8.387500000000062e-05, 8.376400000000006e-05, 8.372199999999788e-05, 8.373600000000092e-05, 8.370799999999831e-05, 8.398600000000117e-05, 8.383299999999844e-05, 8.394400000000246e-05, 8.362500000000037e-05, 8.405599999999902e-05, 8.384700000000148e-05, 8.359700000000123e-05, 8.377799999999963e-05, 8.359700000000123e-05, 8.39729999999976e-05, 8.369500000000168e-05, 8.362500000000037e-05, 8.352799999999938e-05, 8.36110000000008e-05, 8.41110000000013e-05, 8.369400000000221e-05, 8.355499999999905e-05, 8.400000000000074e-05, 8.401400000000031e-05, 8.400000000000074e-05, 8.351399999999981e-05, 8.370800000000178e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.964" endtime="20201110 08:37:38.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.960" endtime="20201110 08:37:38.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.970" endtime="20201110 08:37:38.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.973" endtime="20201110 08:37:38.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.972" endtime="20201110 08:37:38.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.968" endtime="20201110 08:37:38.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.596" endtime="20201110 08:37:38.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.595" endtime="20201110 08:37:38.994"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.003" endtime="20201110 08:37:39.021"></status>
</kw>
<msg timestamp="20201110 08:37:39.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.002" endtime="20201110 08:37:39.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.022" endtime="20201110 08:37:39.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.025" endtime="20201110 08:37:39.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.999" endtime="20201110 08:37:39.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.997" endtime="20201110 08:37:39.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.035" endtime="20201110 08:37:39.321"></status>
</kw>
<msg timestamp="20201110 08:37:39.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.034" endtime="20201110 08:37:39.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.326" endtime="20201110 08:37:39.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.334" endtime="20201110 08:37:39.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.031" endtime="20201110 08:37:39.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.029" endtime="20201110 08:37:39.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.341" level="INFO">${RESULT} = [{'time': 0.022507667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.533399999999941e-05, 'source_diff': 8.533399999999941e-05}, {'time': 0.022597625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:39.338" endtime="20201110 08:37:39.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:39.342" endtime="20201110 08:37:39.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.360" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.359" endtime="20201110 08:37:39.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.362" level="INFO">VALUE: [8.533399999999941e-05, 8.455599999999952e-05, 8.487499999999815e-05, 8.470799999999931e-05, 8.454199999999995e-05, 8.491700000000033e-05, 8.463900000000094e-05, 8.46530000000005e-05, 8.473599999999845e-05, 8.452800000000038e-05, 8.463799999999799e-05, 8.46660000000006e-05, 8.456899999999962e-05, 8.483299999999944e-05, 8.47920000000002e-05, 8.468000000000017e-05, 8.452800000000038e-05, 8.473600000000192e-05, 8.452800000000038e-05, 8.456999999999909e-05, 8.469399999999974e-05, 8.455599999999952e-05, 8.486099999999858e-05, 8.476400000000106e-05, 8.457000000000256e-05, 8.45980000000017e-05, 8.469499999999922e-05, 8.494499999999947e-05, 8.455599999999952e-05, 8.470799999999931e-05, 8.49859999999987e-05, 8.505499999999708e-05, 8.46249999999979e-05, 8.44720000000021e-05, 8.504100000000098e-05, 8.454199999999995e-05, 8.46530000000005e-05, 8.469399999999974e-05, 8.511099999999883e-05, 8.459699999999876e-05, 8.477799999999716e-05, 8.454199999999995e-05, 8.457000000000256e-05, 8.473600000000192e-05, 8.463900000000094e-05, 8.452800000000038e-05, 8.488900000000119e-05, 8.481999999999934e-05, 8.486099999999858e-05, 8.470799999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.361" endtime="20201110 08:37:39.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.356" endtime="20201110 08:37:39.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.366" endtime="20201110 08:37:39.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.370" endtime="20201110 08:37:39.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.368" endtime="20201110 08:37:39.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.365" endtime="20201110 08:37:39.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.995" endtime="20201110 08:37:39.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.995" endtime="20201110 08:37:39.391"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.400" endtime="20201110 08:37:39.418"></status>
</kw>
<msg timestamp="20201110 08:37:39.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.398" endtime="20201110 08:37:39.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.420" endtime="20201110 08:37:39.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.422" endtime="20201110 08:37:39.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.396" endtime="20201110 08:37:39.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.393" endtime="20201110 08:37:39.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.433" endtime="20201110 08:37:39.719"></status>
</kw>
<msg timestamp="20201110 08:37:39.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.431" endtime="20201110 08:37:39.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.723" endtime="20201110 08:37:39.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.732" endtime="20201110 08:37:39.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.429" endtime="20201110 08:37:39.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.427" endtime="20201110 08:37:39.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.739" level="INFO">${RESULT} = [{'time': 0.022521486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.619400000000124e-05, 'source_diff': 8.619400000000124e-05}, {'time': 0.022612514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:39.735" endtime="20201110 08:37:39.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:39.740" endtime="20201110 08:37:39.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.759" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.758" endtime="20201110 08:37:39.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.761" level="INFO">VALUE: [8.619400000000124e-05, 8.563900000000194e-05, 8.575000000000249e-05, 8.580600000000077e-05, 8.5847e-05, 8.557000000000009e-05, 8.558399999999966e-05, 8.568100000000065e-05, 8.552800000000138e-05, 8.608399999999669e-05, 8.580499999999783e-05, 8.590199999999881e-05, 8.595800000000056e-05, 8.595800000000056e-05, 8.597200000000013e-05, 8.577799999999816e-05, 8.570800000000031e-05, 8.572199999999988e-05, 8.569500000000022e-05, 8.573600000000292e-05, 8.559699999999976e-05, 8.601399999999884e-05, 8.570800000000031e-05, 8.59310000000009e-05, 8.555600000000052e-05, 8.586099999999958e-05, 8.556999999999662e-05, 8.588899999999872e-05, 8.586099999999958e-05, 8.606900000000112e-05, 8.569400000000074e-05, 8.576399999999859e-05, 8.601399999999884e-05, 8.588899999999872e-05, 8.558300000000019e-05, 8.583300000000044e-05, 8.586099999999958e-05, 8.555499999999758e-05, 8.606899999999765e-05, 8.577799999999816e-05, 8.568100000000065e-05, 8.574999999999902e-05, 8.563900000000194e-05, 8.568100000000065e-05, 8.574999999999902e-05, 8.607000000000059e-05, 8.569400000000074e-05, 8.558400000000313e-05, 8.576399999999859e-05, 8.606899999999765e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.760" endtime="20201110 08:37:39.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.755" endtime="20201110 08:37:39.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.769" endtime="20201110 08:37:39.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.773" endtime="20201110 08:37:39.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.771" endtime="20201110 08:37:39.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.767" endtime="20201110 08:37:39.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.392" endtime="20201110 08:37:39.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.391" endtime="20201110 08:37:39.794"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.803" endtime="20201110 08:37:39.821"></status>
</kw>
<msg timestamp="20201110 08:37:39.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.801" endtime="20201110 08:37:39.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.823" endtime="20201110 08:37:39.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.826" endtime="20201110 08:37:39.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.798" endtime="20201110 08:37:39.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.796" endtime="20201110 08:37:39.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.836" endtime="20201110 08:37:40.122"></status>
</kw>
<msg timestamp="20201110 08:37:40.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.834" endtime="20201110 08:37:40.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.127" endtime="20201110 08:37:40.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.135" endtime="20201110 08:37:40.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.832" endtime="20201110 08:37:40.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.830" endtime="20201110 08:37:40.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.142" level="INFO">${RESULT} = [{'time': 0.022369806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.795899999999857e-05, 'source_diff': 8.795899999999857e-05}, {'time': 0.022461819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.139" endtime="20201110 08:37:40.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.156" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:40.143" endtime="20201110 08:37:40.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.161" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.160" endtime="20201110 08:37:40.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.163" level="INFO">VALUE: [8.795899999999857e-05, 8.686100000000058e-05, 8.701399999999984e-05, 8.691599999999938e-05, 8.656899999999815e-05, 8.66799999999987e-05, 8.708400000000116e-05, 8.688899999999972e-05, 8.694400000000199e-05, 8.670799999999784e-05, 8.661100000000033e-05, 8.654199999999848e-05, 8.709700000000126e-05, 8.659700000000076e-05, 8.67920000000022e-05, 8.654199999999848e-05, 8.669500000000122e-05, 8.691699999999886e-05, 8.666599999999913e-05, 8.691599999999938e-05, 8.722200000000138e-05, 8.669399999999827e-05, 8.659700000000076e-05, 8.695900000000104e-05, 8.651399999999934e-05, 8.677800000000263e-05, 8.692999999999895e-05, 8.676399999999959e-05, 8.669499999999775e-05, 8.688899999999972e-05, 8.697199999999766e-05, 8.71250000000004e-05, 8.695899999999757e-05, 8.708299999999822e-05, 8.675000000000002e-05, 8.693099999999843e-05, 8.659699999999729e-05, 8.708400000000116e-05, 8.658300000000119e-05, 8.708299999999822e-05, 8.66660000000026e-05, 8.670800000000131e-05, 8.683300000000144e-05, 8.683299999999797e-05, 8.673600000000045e-05, 8.6847000000001e-05, 8.657000000000109e-05, 8.702799999999941e-05, 8.677799999999916e-05, 8.677800000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.162" endtime="20201110 08:37:40.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.157" endtime="20201110 08:37:40.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.168" endtime="20201110 08:37:40.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.172" endtime="20201110 08:37:40.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.170" endtime="20201110 08:37:40.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.166" endtime="20201110 08:37:40.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.794" endtime="20201110 08:37:40.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.794" endtime="20201110 08:37:40.193"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.202" endtime="20201110 08:37:40.221"></status>
</kw>
<msg timestamp="20201110 08:37:40.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.200" endtime="20201110 08:37:40.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.223" endtime="20201110 08:37:40.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.225" endtime="20201110 08:37:40.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.198" endtime="20201110 08:37:40.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.195" endtime="20201110 08:37:40.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.236" endtime="20201110 08:37:40.522"></status>
</kw>
<msg timestamp="20201110 08:37:40.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.234" endtime="20201110 08:37:40.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.526" endtime="20201110 08:37:40.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.535" endtime="20201110 08:37:40.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.231" endtime="20201110 08:37:40.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.230" endtime="20201110 08:37:40.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.542" level="INFO">${RESULT} = [{'time': 0.022888444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854100000000101e-05, 'source_diff': 8.854100000000101e-05}, {'time': 0.022981431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.538" endtime="20201110 08:37:40.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.556" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:40.543" endtime="20201110 08:37:40.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.561" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.560" endtime="20201110 08:37:40.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.563" level="INFO">VALUE: [8.854100000000101e-05, 8.763900000000047e-05, 8.787500000000115e-05, 8.768099999999918e-05, 8.756999999999862e-05, 8.786099999999811e-05, 8.754199999999948e-05, 8.812499999999793e-05, 8.784799999999801e-05, 8.769500000000222e-05, 8.793099999999943e-05, 8.769399999999927e-05, 8.805500000000008e-05, 8.756900000000262e-05, 8.761100000000133e-05, 8.795799999999909e-05, 8.776400000000059e-05, 8.786100000000158e-05, 8.768099999999918e-05, 8.776400000000059e-05, 8.76669999999996e-05, 8.797199999999866e-05, 8.782000000000234e-05, 8.76250000000009e-05, 8.806999999999912e-05, 8.754199999999948e-05, 8.793099999999943e-05, 8.756999999999862e-05, 8.759699999999829e-05, 8.765300000000004e-05, 8.775000000000102e-05, 8.773600000000145e-05, 8.784699999999854e-05, 8.755499999999958e-05, 8.804100000000051e-05, 8.790300000000029e-05, 8.808299999999922e-05, 8.806899999999965e-05, 8.801400000000084e-05, 8.773600000000145e-05, 8.786099999999811e-05, 8.768000000000317e-05, 8.761100000000133e-05, 8.800000000000127e-05, 8.761100000000133e-05, 8.755599999999905e-05, 8.805500000000008e-05, 8.795799999999909e-05, 8.755499999999958e-05, 8.780499999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.562" endtime="20201110 08:37:40.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.557" endtime="20201110 08:37:40.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.567" endtime="20201110 08:37:40.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.570" endtime="20201110 08:37:40.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.569" endtime="20201110 08:37:40.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.565" endtime="20201110 08:37:40.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.194" endtime="20201110 08:37:40.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.193" endtime="20201110 08:37:40.591"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.601" endtime="20201110 08:37:40.618"></status>
</kw>
<msg timestamp="20201110 08:37:40.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.599" endtime="20201110 08:37:40.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.620" endtime="20201110 08:37:40.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.622" endtime="20201110 08:37:40.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.596" endtime="20201110 08:37:40.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.594" endtime="20201110 08:37:40.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.633" endtime="20201110 08:37:40.919"></status>
</kw>
<msg timestamp="20201110 08:37:40.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.631" endtime="20201110 08:37:40.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.923" endtime="20201110 08:37:40.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.932" endtime="20201110 08:37:40.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.629" endtime="20201110 08:37:40.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.627" endtime="20201110 08:37:40.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.939" level="INFO">${RESULT} = [{'time': 0.022607431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.932000000000037e-05, 'source_diff': 8.932000000000037e-05}, {'time': 0.022701431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.935" endtime="20201110 08:37:40.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:40.940" endtime="20201110 08:37:40.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.957" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.956" endtime="20201110 08:37:40.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.960" level="INFO">VALUE: [8.932000000000037e-05, 8.851400000000134e-05, 8.886100000000258e-05, 8.894400000000052e-05, 8.905499999999761e-05, 8.886099999999911e-05, 8.884699999999954e-05, 8.862499999999843e-05, 8.901399999999837e-05, 8.858299999999972e-05, 8.883299999999997e-05, 8.890299999999782e-05, 8.891700000000086e-05, 8.904199999999751e-05, 8.897199999999966e-05, 8.902800000000141e-05, 8.862499999999843e-05, 8.874999999999855e-05, 8.851400000000134e-05, 8.854100000000101e-05, 8.893000000000095e-05, 8.884699999999954e-05, 8.890200000000181e-05, 8.895800000000009e-05, 8.858299999999972e-05, 8.901400000000184e-05, 8.895800000000009e-05, 8.86670000000006e-05, 8.865300000000104e-05, 8.868100000000018e-05, 8.858299999999972e-05, 8.868100000000018e-05, 8.858399999999919e-05, 8.879199999999726e-05, 8.904199999999751e-05, 8.908399999999969e-05, 8.886099999999911e-05, 8.859699999999929e-05, 8.904200000000098e-05, 8.884699999999954e-05, 8.891600000000138e-05, 8.909699999999979e-05, 8.904200000000098e-05, 8.890300000000129e-05, 8.887500000000215e-05, 8.894400000000052e-05, 8.891700000000086e-05, 8.920899999999982e-05, 8.88190000000004e-05, 8.877800000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.959" endtime="20201110 08:37:40.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.954" endtime="20201110 08:37:40.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.964" endtime="20201110 08:37:40.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.967" endtime="20201110 08:37:40.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.966" endtime="20201110 08:37:40.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.962" endtime="20201110 08:37:40.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.592" endtime="20201110 08:37:40.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.592" endtime="20201110 08:37:40.988"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.998" endtime="20201110 08:37:41.016"></status>
</kw>
<msg timestamp="20201110 08:37:41.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.996" endtime="20201110 08:37:41.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.018" endtime="20201110 08:37:41.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.021" endtime="20201110 08:37:41.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.993" endtime="20201110 08:37:41.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.991" endtime="20201110 08:37:41.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.031" endtime="20201110 08:37:41.317"></status>
</kw>
<msg timestamp="20201110 08:37:41.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.029" endtime="20201110 08:37:41.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.321" endtime="20201110 08:37:41.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.330" endtime="20201110 08:37:41.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.027" endtime="20201110 08:37:41.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.025" endtime="20201110 08:37:41.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.336" level="INFO">${RESULT} = [{'time': 0.022820167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.088900000000025e-05, 'source_diff': 9.088900000000025e-05}, {'time': 0.022915167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.333" endtime="20201110 08:37:41.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:41.337" endtime="20201110 08:37:41.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.356" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.355" endtime="20201110 08:37:41.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.359" level="INFO">VALUE: [9.088900000000025e-05, 8.977799999999869e-05, 8.958400000000019e-05, 8.994499999999753e-05, 9.005500000000208e-05, 8.997200000000066e-05, 8.972200000000041e-05, 8.962499999999943e-05, 8.991699999999839e-05, 8.951399999999887e-05, 8.983300000000097e-05, 8.965299999999857e-05, 8.973599999999998e-05, 8.969400000000127e-05, 8.990300000000229e-05, 8.961099999999986e-05, 8.965299999999857e-05, 8.997300000000014e-05, 8.986100000000011e-05, 8.983400000000044e-05, 8.955600000000105e-05, 8.974999999999955e-05, 8.976399999999912e-05, 8.954100000000201e-05, 8.958300000000072e-05, 8.998600000000023e-05, 8.995800000000109e-05, 8.98060000000013e-05, 8.995800000000109e-05, 8.977800000000216e-05, 9.009699999999732e-05, 8.983300000000097e-05, 8.96670000000016e-05, 8.979199999999826e-05, 9.009700000000079e-05, 8.991699999999839e-05, 8.9638999999999e-05, 8.9638999999999e-05, 9.015299999999907e-05, 8.976399999999912e-05, 8.984800000000001e-05, 8.972200000000041e-05, 8.992999999999848e-05, 8.98190000000014e-05, 8.965300000000204e-05, 8.961099999999986e-05, 8.955500000000158e-05, 8.94999999999993e-05, 8.98329999999975e-05, 8.997200000000066e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.358" endtime="20201110 08:37:41.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.353" endtime="20201110 08:37:41.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.363" endtime="20201110 08:37:41.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.366" endtime="20201110 08:37:41.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.365" endtime="20201110 08:37:41.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.361" endtime="20201110 08:37:41.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.989" endtime="20201110 08:37:41.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.989" endtime="20201110 08:37:41.387"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.396" endtime="20201110 08:37:41.415"></status>
</kw>
<msg timestamp="20201110 08:37:41.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.395" endtime="20201110 08:37:41.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.417" endtime="20201110 08:37:41.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.419" endtime="20201110 08:37:41.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.392" endtime="20201110 08:37:41.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.390" endtime="20201110 08:37:41.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.430" endtime="20201110 08:37:41.716"></status>
</kw>
<msg timestamp="20201110 08:37:41.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.428" endtime="20201110 08:37:41.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.720" endtime="20201110 08:37:41.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.728" endtime="20201110 08:37:41.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.425" endtime="20201110 08:37:41.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.423" endtime="20201110 08:37:41.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.735" level="INFO">${RESULT} = [{'time': 0.022455653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.156999999999915e-05, 'source_diff': 9.156999999999915e-05}, {'time': 0.022551722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.732" endtime="20201110 08:37:41.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:41.736" endtime="20201110 08:37:41.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.754" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.753" endtime="20201110 08:37:41.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.757" level="INFO">VALUE: [9.156999999999915e-05, 9.101400000000037e-05, 9.09870000000007e-05, 9.099999999999733e-05, 9.088800000000077e-05, 9.106899999999918e-05, 9.06939999999988e-05, 9.098600000000123e-05, 9.109699999999832e-05, 9.086099999999764e-05, 9.077799999999969e-05, 9.057000000000162e-05, 9.0639e-05, 9.102799999999994e-05, 9.073600000000098e-05, 9.08199999999984e-05, 9.069500000000175e-05, 9.107000000000212e-05, 9.070800000000184e-05, 9.10000000000008e-05, 9.067999999999923e-05, 9.052699999999997e-05, 9.10000000000008e-05, 9.091599999999991e-05, 9.073599999999751e-05, 9.10000000000008e-05, 9.088900000000025e-05, 9.069400000000227e-05, 9.081899999999893e-05, 9.054199999999901e-05, 9.095800000000209e-05, 9.08199999999984e-05, 9.08060000000023e-05, 9.062500000000043e-05, 9.0639e-05, 9.077799999999969e-05, 9.086100000000111e-05, 9.066699999999914e-05, 9.079099999999979e-05, 9.062500000000043e-05, 9.065299999999957e-05, 9.05130000000004e-05, 9.062500000000043e-05, 9.112500000000093e-05, 9.111099999999789e-05, 9.072200000000141e-05, 9.097200000000166e-05, 9.094499999999853e-05, 9.098600000000123e-05, 9.108299999999875e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.755" endtime="20201110 08:37:41.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.750" endtime="20201110 08:37:41.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.760" endtime="20201110 08:37:41.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.764" endtime="20201110 08:37:41.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.762" endtime="20201110 08:37:41.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.759" endtime="20201110 08:37:41.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.388" endtime="20201110 08:37:41.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.388" endtime="20201110 08:37:41.785"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.794" endtime="20201110 08:37:41.813"></status>
</kw>
<msg timestamp="20201110 08:37:41.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.792" endtime="20201110 08:37:41.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.814" endtime="20201110 08:37:41.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.817" endtime="20201110 08:37:41.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.790" endtime="20201110 08:37:41.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.787" endtime="20201110 08:37:41.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.828" endtime="20201110 08:37:42.114"></status>
</kw>
<msg timestamp="20201110 08:37:42.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.826" endtime="20201110 08:37:42.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.118" endtime="20201110 08:37:42.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.127" endtime="20201110 08:37:42.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.823" endtime="20201110 08:37:42.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.821" endtime="20201110 08:37:42.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.134" level="INFO">${RESULT} = [{'time': 0.022489917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.280600000000083e-05, 'source_diff': 9.280600000000083e-05}, {'time': 0.022586931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.130" endtime="20201110 08:37:42.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:42.135" endtime="20201110 08:37:42.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.152" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.151" endtime="20201110 08:37:42.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.155" level="INFO">VALUE: [9.280600000000083e-05, 9.187500000000168e-05, 9.215300000000107e-05, 9.184700000000254e-05, 9.20000000000018e-05, 9.206900000000018e-05, 9.204100000000104e-05, 9.163899999999753e-05, 9.173599999999851e-05, 9.179200000000026e-05, 9.181899999999993e-05, 9.21520000000016e-05, 9.152800000000044e-05, 9.211100000000236e-05, 9.186100000000211e-05, 9.18199999999994e-05, 9.218100000000021e-05, 9.170899999999885e-05, 9.152800000000044e-05, 9.206999999999965e-05, 9.193099999999996e-05, 9.172299999999842e-05, 9.195799999999962e-05, 9.21520000000016e-05, 9.165300000000057e-05, 9.162500000000143e-05, 9.195799999999962e-05, 9.20000000000018e-05, 9.18329999999995e-05, 9.154200000000001e-05, 9.173599999999851e-05, 9.158299999999925e-05, 9.166699999999667e-05, 9.193100000000343e-05, 9.188900000000125e-05, 9.206999999999965e-05, 9.154200000000001e-05, 9.166700000000014e-05, 9.188900000000125e-05, 9.190200000000134e-05, 9.204100000000104e-05, 9.19719999999992e-05, 9.174999999999808e-05, 9.179099999999732e-05, 9.188900000000125e-05, 9.175000000000155e-05, 9.18329999999995e-05, 9.162500000000143e-05, 9.170799999999937e-05, 9.173599999999851e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.153" endtime="20201110 08:37:42.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.149" endtime="20201110 08:37:42.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.159" endtime="20201110 08:37:42.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.162" endtime="20201110 08:37:42.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.161" endtime="20201110 08:37:42.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.157" endtime="20201110 08:37:42.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.786" endtime="20201110 08:37:42.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.785" endtime="20201110 08:37:42.183"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.192" endtime="20201110 08:37:42.212"></status>
</kw>
<msg timestamp="20201110 08:37:42.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.191" endtime="20201110 08:37:42.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.213" endtime="20201110 08:37:42.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.216" endtime="20201110 08:37:42.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.188" endtime="20201110 08:37:42.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.186" endtime="20201110 08:37:42.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.226" endtime="20201110 08:37:42.512"></status>
</kw>
<msg timestamp="20201110 08:37:42.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.225" endtime="20201110 08:37:42.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022490319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022584375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.517" endtime="20201110 08:37:42.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.525" endtime="20201110 08:37:42.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.222" endtime="20201110 08:37:42.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.220" endtime="20201110 08:37:42.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.532" level="INFO">${RESULT} = [{'time': 0.022584375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.405599999999861e-05, 'source_diff': 9.405599999999861e-05}, {'time': 0.022682389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.529" endtime="20201110 08:37:42.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:42.533" endtime="20201110 08:37:42.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.551" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.550" endtime="20201110 08:37:42.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.554" level="INFO">VALUE: [9.405599999999861e-05, 9.287499999999921e-05, 9.266699999999767e-05, 9.270800000000037e-05, 9.280600000000083e-05, 9.259699999999982e-05, 9.294500000000053e-05, 9.265300000000157e-05, 9.272299999999942e-05, 9.266699999999767e-05, 9.292999999999801e-05, 9.261099999999939e-05, 9.294400000000105e-05, 9.279200000000126e-05, 9.287499999999921e-05, 9.259699999999982e-05, 9.276400000000212e-05, 9.295800000000062e-05, 9.315300000000207e-05, 9.287499999999921e-05, 9.28330000000005e-05, 9.308400000000022e-05, 9.258399999999972e-05, 9.293099999999749e-05, 9.308400000000022e-05, 9.255600000000058e-05, 9.291600000000191e-05, 9.258399999999972e-05, 9.287499999999921e-05, 9.292999999999801e-05, 9.305500000000161e-05, 9.272199999999994e-05, 9.280600000000083e-05, 9.263899999999853e-05, 9.266699999999767e-05, 9.299999999999933e-05, 9.269500000000028e-05, 9.266700000000114e-05, 9.257000000000015e-05, 9.26529999999981e-05, 9.309799999999979e-05, 9.297299999999967e-05, 9.311099999999989e-05, 9.259699999999982e-05, 9.29720000000002e-05, 9.281900000000093e-05, 9.255500000000111e-05, 9.31940000000013e-05, 9.290300000000182e-05, 9.299999999999933e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.552" endtime="20201110 08:37:42.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.547" endtime="20201110 08:37:42.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.557" endtime="20201110 08:37:42.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.561" endtime="20201110 08:37:42.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.559" endtime="20201110 08:37:42.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.556" endtime="20201110 08:37:42.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.184" endtime="20201110 08:37:42.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.184" endtime="20201110 08:37:42.582"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.591" endtime="20201110 08:37:42.610"></status>
</kw>
<msg timestamp="20201110 08:37:42.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.589" endtime="20201110 08:37:42.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.612" endtime="20201110 08:37:42.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.615" endtime="20201110 08:37:42.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.587" endtime="20201110 08:37:42.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.585" endtime="20201110 08:37:42.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.625" endtime="20201110 08:37:42.912"></status>
</kw>
<msg timestamp="20201110 08:37:42.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.623" endtime="20201110 08:37:42.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.916" endtime="20201110 08:37:42.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.924" endtime="20201110 08:37:42.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.621" endtime="20201110 08:37:42.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.619" endtime="20201110 08:37:42.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.931" level="INFO">${RESULT} = [{'time': 0.022524986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.417999999999926e-05, 'source_diff': 9.417999999999926e-05}, {'time': 0.022625014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.928" endtime="20201110 08:37:42.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.946" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:42.932" endtime="20201110 08:37:42.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.951" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.950" endtime="20201110 08:37:42.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.954" level="INFO">VALUE: [9.417999999999926e-05, 9.447199999999822e-05, 9.413900000000003e-05, 9.368099999999824e-05, 9.366700000000214e-05, 9.395800000000162e-05, 9.354099999999907e-05, 9.386099999999717e-05, 9.369500000000128e-05, 9.355599999999811e-05, 9.402799999999947e-05, 9.369500000000128e-05, 9.390299999999935e-05, 9.406900000000218e-05, 9.35139999999994e-05, 9.386100000000064e-05, 9.381899999999846e-05, 9.395800000000162e-05, 9.352799999999897e-05, 9.369500000000128e-05, 9.404199999999904e-05, 9.39590000000011e-05, 9.383400000000097e-05, 9.361199999999986e-05, 9.373600000000051e-05, 9.362499999999996e-05, 9.35139999999994e-05, 9.377699999999975e-05, 9.37079999999979e-05, 9.348600000000026e-05, 9.367999999999876e-05, 9.406900000000218e-05, 9.387500000000021e-05, 9.387500000000021e-05, 9.376399999999965e-05, 9.407000000000165e-05, 9.3639000000003e-05, 9.349999999999983e-05, 9.39590000000011e-05, 9.358400000000072e-05, 9.411100000000089e-05, 9.383400000000097e-05, 9.354100000000254e-05, 9.376399999999965e-05, 9.386099999999717e-05, 9.36659999999992e-05, 9.381900000000193e-05, 9.377699999999975e-05, 9.375000000000008e-05, 9.392999999999901e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.952" endtime="20201110 08:37:42.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.947" endtime="20201110 08:37:42.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.957" endtime="20201110 08:37:42.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.961" endtime="20201110 08:37:42.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.959" endtime="20201110 08:37:42.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.956" endtime="20201110 08:37:42.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.583" endtime="20201110 08:37:42.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.582" endtime="20201110 08:37:42.982"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.991" endtime="20201110 08:37:43.011"></status>
</kw>
<msg timestamp="20201110 08:37:43.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.990" endtime="20201110 08:37:43.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.012" endtime="20201110 08:37:43.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.015" endtime="20201110 08:37:43.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.987" endtime="20201110 08:37:43.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.985" endtime="20201110 08:37:43.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.025" endtime="20201110 08:37:43.312"></status>
</kw>
<msg timestamp="20201110 08:37:43.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:43.024" endtime="20201110 08:37:43.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:43.317" endtime="20201110 08:37:43.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.325" endtime="20201110 08:37:43.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.021" endtime="20201110 08:37:43.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.019" endtime="20201110 08:37:43.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.332" level="INFO">${RESULT} = [{'time': 0.0226445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.519399999999983e-05, 'source_diff': 9.519399999999983e-05}, {'time': 0.022744542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:43.328" endtime="20201110 08:37:43.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:43.333" endtime="20201110 08:37:43.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.351" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.350" endtime="20201110 08:37:43.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.353" level="INFO">VALUE: [9.519399999999983e-05, 9.487500000000121e-05, 9.494499999999906e-05, 9.495899999999863e-05, 9.502800000000047e-05, 9.498600000000176e-05, 9.466699999999967e-05, 9.495899999999863e-05, 9.488799999999784e-05, 9.508299999999928e-05, 9.469399999999933e-05, 9.46660000000002e-05, 9.461099999999792e-05, 9.470800000000237e-05, 9.497199999999872e-05, 9.458299999999878e-05, 9.461099999999792e-05, 9.480599999999936e-05, 9.476400000000065e-05, 9.461100000000139e-05, 9.486099999999817e-05, 9.488900000000078e-05, 9.51530000000006e-05, 9.46530000000001e-05, 9.454199999999954e-05, 9.491599999999698e-05, 9.495800000000262e-05, 9.455499999999964e-05, 9.494399999999958e-05, 9.505500000000014e-05, 9.470899999999838e-05, 9.469499999999881e-05, 9.452799999999997e-05, 9.502800000000047e-05, 9.505599999999961e-05, 9.491699999999992e-05, 9.470899999999838e-05, 9.486099999999817e-05, 9.480600000000283e-05, 9.483400000000197e-05, 9.469499999999881e-05, 9.46530000000001e-05, 9.451299999999746e-05, 9.486099999999817e-05, 9.484700000000207e-05, 9.473600000000151e-05, 9.480600000000283e-05, 9.506899999999971e-05, 9.49720000000022e-05, 9.477800000000022e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.352" endtime="20201110 08:37:43.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.347" endtime="20201110 08:37:43.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.357" endtime="20201110 08:37:43.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.361" endtime="20201110 08:37:43.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.359" endtime="20201110 08:37:43.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.355" endtime="20201110 08:37:43.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.983" endtime="20201110 08:37:43.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.982" endtime="20201110 08:37:43.382"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.391" endtime="20201110 08:37:43.409"></status>
</kw>
<msg timestamp="20201110 08:37:43.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.389" endtime="20201110 08:37:43.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.410" endtime="20201110 08:37:43.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.413" endtime="20201110 08:37:43.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.386" endtime="20201110 08:37:43.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.384" endtime="20201110 08:37:43.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.423" endtime="20201110 08:37:43.710"></status>
</kw>
<msg timestamp="20201110 08:37:43.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.422" endtime="20201110 08:37:43.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.715" endtime="20201110 08:37:43.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.723" endtime="20201110 08:37:43.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.419" endtime="20201110 08:37:43.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.417" endtime="20201110 08:37:43.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.730" level="INFO">${RESULT} = [{'time': 0.022515306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.699999999999986e-05, 'source_diff': 9.699999999999986e-05}, {'time': 0.022616319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.727" endtime="20201110 08:37:43.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.744" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:43.731" endtime="20201110 08:37:43.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.749" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.748" endtime="20201110 08:37:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.752" level="INFO">VALUE: [9.699999999999986e-05, 9.597199999999972e-05, 9.579100000000132e-05, 9.579199999999732e-05, 9.601399999999843e-05, 9.569400000000033e-05, 9.56530000000011e-05, 9.60140000000019e-05, 9.56530000000011e-05, 9.598600000000276e-05, 9.602800000000147e-05, 9.605600000000061e-05, 9.575000000000208e-05, 9.576399999999818e-05, 9.591699999999745e-05, 9.569499999999981e-05, 9.584799999999907e-05, 9.580600000000036e-05, 9.58339999999995e-05, 9.598699999999877e-05, 9.556900000000021e-05, 9.608300000000028e-05, 9.562499999999849e-05, 9.57079999999999e-05, 9.577800000000122e-05, 9.559699999999935e-05, 9.600000000000233e-05, 9.586100000000264e-05, 9.562500000000196e-05, 9.579200000000079e-05, 9.561099999999892e-05, 9.616700000000117e-05, 9.599999999999886e-05, 9.608399999999975e-05, 9.565299999999763e-05, 9.587499999999874e-05, 9.576299999999871e-05, 9.587499999999874e-05, 9.608300000000028e-05, 9.563900000000153e-05, 9.580600000000036e-05, 9.568000000000076e-05, 9.581900000000046e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.576400000000165e-05, 9.586099999999917e-05, 9.609699999999985e-05, 9.60140000000019e-05, 9.572199999999947e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.750" endtime="20201110 08:37:43.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.745" endtime="20201110 08:37:43.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.756" endtime="20201110 08:37:43.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.759" endtime="20201110 08:37:43.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.758" endtime="20201110 08:37:43.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.754" endtime="20201110 08:37:43.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.383" endtime="20201110 08:37:43.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.382" endtime="20201110 08:37:43.780"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.789" endtime="20201110 08:37:43.807"></status>
</kw>
<msg timestamp="20201110 08:37:43.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.788" endtime="20201110 08:37:43.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.809" endtime="20201110 08:37:43.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.812" endtime="20201110 08:37:43.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.785" endtime="20201110 08:37:43.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.783" endtime="20201110 08:37:43.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.822" endtime="20201110 08:37:44.107"></status>
</kw>
<msg timestamp="20201110 08:37:44.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.820" endtime="20201110 08:37:44.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.112" endtime="20201110 08:37:44.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.120" endtime="20201110 08:37:44.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.818" endtime="20201110 08:37:44.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.816" endtime="20201110 08:37:44.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.127" level="INFO">${RESULT} = [{'time': 0.022539694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.725000000000011e-05, 'source_diff': 9.725000000000011e-05}, {'time': 0.022641764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:44.124" endtime="20201110 08:37:44.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.141" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:44.128" endtime="20201110 08:37:44.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.146" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.145" endtime="20201110 08:37:44.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.148" level="INFO">VALUE: [9.725000000000011e-05, 9.647200000000022e-05, 9.67920000000018e-05, 9.677799999999875e-05, 9.676399999999918e-05, 9.712499999999999e-05, 9.686100000000017e-05, 9.663899999999906e-05, 9.67920000000018e-05, 9.679199999999832e-05, 9.661099999999992e-05, 9.706900000000171e-05, 9.659799999999982e-05, 9.709800000000032e-05, 9.704199999999857e-05, 9.697200000000072e-05, 9.668099999999777e-05, 9.694400000000158e-05, 9.681899999999799e-05, 9.687499999999974e-05, 9.7027999999999e-05, 9.674999999999961e-05, 9.672200000000047e-05, 9.656899999999774e-05, 9.688899999999931e-05, 9.673600000000004e-05, 9.668100000000124e-05, 9.695900000000063e-05, 9.666599999999873e-05, 9.661099999999992e-05, 9.720799999999793e-05, 9.652800000000197e-05, 9.687499999999974e-05, 9.658300000000078e-05, 9.701399999999943e-05, 9.70409999999991e-05, 9.705499999999867e-05, 9.654200000000154e-05, 9.709699999999738e-05, 9.668100000000124e-05, 9.694500000000106e-05, 9.659700000000035e-05, 9.658300000000078e-05, 9.686100000000017e-05, 9.677799999999875e-05, 9.7027999999999e-05, 9.698699999999977e-05, 9.691699999999845e-05, 9.70409999999991e-05, 9.669399999999786e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.147" endtime="20201110 08:37:44.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.142" endtime="20201110 08:37:44.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.152" endtime="20201110 08:37:44.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.156" endtime="20201110 08:37:44.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.154" endtime="20201110 08:37:44.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.151" endtime="20201110 08:37:44.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.781" endtime="20201110 08:37:44.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.780" endtime="20201110 08:37:44.177"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.186" endtime="20201110 08:37:44.205"></status>
</kw>
<msg timestamp="20201110 08:37:44.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.184" endtime="20201110 08:37:44.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.207" endtime="20201110 08:37:44.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.209" endtime="20201110 08:37:44.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.182" endtime="20201110 08:37:44.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.179" endtime="20201110 08:37:44.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.220" endtime="20201110 08:37:44.505"></status>
</kw>
<msg timestamp="20201110 08:37:44.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.218" endtime="20201110 08:37:44.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.510" endtime="20201110 08:37:44.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.518" endtime="20201110 08:37:44.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.215" endtime="20201110 08:37:44.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.213" endtime="20201110 08:37:44.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.525" level="INFO">${RESULT} = [{'time': 0.022531972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.894400000000012e-05, 'source_diff': 9.894400000000012e-05}, {'time': 0.022636, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:44.522" endtime="20201110 08:37:44.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:44.526" endtime="20201110 08:37:44.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.545" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.544" endtime="20201110 08:37:44.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.548" level="INFO">VALUE: [9.894400000000012e-05, 9.843099999999952e-05, 9.808400000000175e-05, 9.795800000000215e-05, 9.797199999999825e-05, 9.78340000000015e-05, 9.804199999999957e-05, 9.777799999999975e-05, 9.775000000000061e-05, 9.811100000000142e-05, 9.805499999999967e-05, 9.800000000000086e-05, 9.808299999999881e-05, 9.808299999999881e-05, 9.797200000000172e-05, 9.7721999999998e-05, 9.777800000000322e-05, 9.78470000000016e-05, 9.792999999999955e-05, 9.808400000000175e-05, 9.765200000000016e-05, 9.761099999999745e-05, 9.770900000000138e-05, 9.779199999999932e-05, 9.806999999999871e-05, 9.8028e-05, 9.787500000000074e-05, 9.776400000000018e-05, 9.765200000000016e-05, 9.805499999999967e-05, 9.791599999999998e-05, 9.797200000000172e-05, 9.7721999999998e-05, 9.78470000000016e-05, 9.761100000000092e-05, 9.78470000000016e-05, 9.776400000000018e-05, 9.811099999999795e-05, 9.769500000000181e-05, 9.76669999999992e-05, 9.805599999999914e-05, 9.79730000000012e-05, 9.768099999999877e-05, 9.808399999999828e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.75409999999996e-05, 9.79860000000013e-05, 9.812499999999752e-05, 9.759700000000135e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.546" endtime="20201110 08:37:44.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.541" endtime="20201110 08:37:44.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.551" endtime="20201110 08:37:44.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.555" endtime="20201110 08:37:44.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.553" endtime="20201110 08:37:44.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.550" endtime="20201110 08:37:44.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.178" endtime="20201110 08:37:44.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.177" endtime="20201110 08:37:44.577"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.586" endtime="20201110 08:37:44.605"></status>
</kw>
<msg timestamp="20201110 08:37:44.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.584" endtime="20201110 08:37:44.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.607" endtime="20201110 08:37:44.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.609" endtime="20201110 08:37:44.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.582" endtime="20201110 08:37:44.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.580" endtime="20201110 08:37:44.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.620" endtime="20201110 08:37:44.908"></status>
</kw>
<msg timestamp="20201110 08:37:44.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.618" endtime="20201110 08:37:44.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023939125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.912" endtime="20201110 08:37:44.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.920" endtime="20201110 08:37:44.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.616" endtime="20201110 08:37:44.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.614" endtime="20201110 08:37:44.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.927" level="INFO">${RESULT} = [{'time': 0.024038597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.947199999999976e-05, 'source_diff': 9.947199999999976e-05}, {'time': 0.024143611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:44.923" endtime="20201110 08:37:44.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.940" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:44.928" endtime="20201110 08:37:44.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.945" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.944" endtime="20201110 08:37:44.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.948" level="INFO">VALUE: [9.947199999999976e-05, 9.944399999999715e-05, 9.876400000000118e-05, 9.88340000000025e-05, 9.877800000000075e-05, 9.894499999999959e-05, 9.85280000000005e-05, 9.9028000000001e-05, 9.888899999999784e-05, 9.887499999999827e-05, 9.890300000000088e-05, 9.879100000000085e-05, 9.858299999999931e-05, 9.904099999999763e-05, 9.906900000000024e-05, 9.917999999999733e-05, 9.891700000000045e-05, 9.883399999999903e-05, 9.901400000000143e-05, 9.876400000000118e-05, 9.895899999999916e-05, 9.883399999999903e-05, 9.901399999999796e-05, 9.88059999999999e-05, 9.897299999999873e-05, 9.863899999999759e-05, 9.861199999999792e-05, 9.886100000000217e-05, 9.869399999999987e-05, 9.911099999999895e-05, 9.863900000000106e-05, 9.862500000000149e-05, 9.911200000000189e-05, 9.859699999999888e-05, 9.865300000000063e-05, 9.855599999999964e-05, 9.852799999999703e-05, 9.897199999999926e-05, 9.881999999999946e-05, 9.854200000000007e-05, 9.89730000000022e-05, 9.854200000000007e-05, 9.891700000000045e-05, 9.911200000000189e-05, 9.876300000000171e-05, 9.891600000000098e-05, 9.915300000000113e-05, 9.905500000000067e-05, 9.85280000000005e-05, 9.888899999999784e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.946" endtime="20201110 08:37:44.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.941" endtime="20201110 08:37:44.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.956" endtime="20201110 08:37:44.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.959" endtime="20201110 08:37:44.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.958" endtime="20201110 08:37:44.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.954" endtime="20201110 08:37:44.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.578" endtime="20201110 08:37:44.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.577" endtime="20201110 08:37:44.980"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.989" endtime="20201110 08:37:45.008"></status>
</kw>
<msg timestamp="20201110 08:37:45.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.988" endtime="20201110 08:37:45.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.010" endtime="20201110 08:37:45.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.012" endtime="20201110 08:37:45.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.985" endtime="20201110 08:37:45.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.983" endtime="20201110 08:37:45.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.022" endtime="20201110 08:37:45.324"></status>
</kw>
<msg timestamp="20201110 08:37:45.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.021" endtime="20201110 08:37:45.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.328" endtime="20201110 08:37:45.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.336" endtime="20201110 08:37:45.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.018" endtime="20201110 08:37:45.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.017" endtime="20201110 08:37:45.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.343" level="INFO">${RESULT} = [{'time': 0.022115958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010041600000000248, 'source_diff': 0.00010041600000000248}, {'time': 0.022220958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:45.340" endtime="20201110 08:37:45.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:45.344" endtime="20201110 08:37:45.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.361" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.360" endtime="20201110 08:37:45.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.364" level="INFO">VALUE: [0.00010041600000000248, 9.979099999999838e-05, 9.998599999999983e-05, 9.956900000000074e-05, 9.980500000000142e-05, 9.961099999999945e-05, 9.998599999999983e-05, 0.0001000419999999981, 9.991700000000145e-05, 9.968100000000077e-05, 9.973599999999957e-05, 9.99999999999994e-05, 0.00010012499999999952, 9.956900000000074e-05, 9.984700000000013e-05, 9.9722e-05, 0.00010002699999999906, 9.983300000000056e-05, 9.970800000000044e-05, 9.976400000000218e-05, 9.96939999999974e-05, 0.00010008300000000081, 9.970800000000044e-05, 0.00010005600000000114, 9.969500000000034e-05, 9.988899999999884e-05, 0.00010005599999999767, 9.979200000000132e-05, 0.00010008400000000028, 0.00010004200000000157, 9.969500000000034e-05, 0.00010012499999999952, 9.966600000000173e-05, 0.00010012499999999952, 9.961099999999945e-05, 0.0001000549999999982, 9.969400000000087e-05, 9.98609999999997e-05, 9.979200000000132e-05, 9.977800000000175e-05, 9.997200000000026e-05, 9.963899999999859e-05, 9.961099999999945e-05, 9.991700000000145e-05, 9.977799999999828e-05, 9.956899999999727e-05, 9.98060000000009e-05, 0.00010005600000000114, 9.988899999999884e-05, 9.974999999999914e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.363" endtime="20201110 08:37:45.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.358" endtime="20201110 08:37:45.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.368" endtime="20201110 08:37:45.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.371" endtime="20201110 08:37:45.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.370" endtime="20201110 08:37:45.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.366" endtime="20201110 08:37:45.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.981" endtime="20201110 08:37:45.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.981" endtime="20201110 08:37:45.392"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.401" endtime="20201110 08:37:45.420"></status>
</kw>
<msg timestamp="20201110 08:37:45.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.399" endtime="20201110 08:37:45.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.422" endtime="20201110 08:37:45.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.424" endtime="20201110 08:37:45.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.396" endtime="20201110 08:37:45.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.394" endtime="20201110 08:37:45.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.434" endtime="20201110 08:37:45.721"></status>
</kw>
<msg timestamp="20201110 08:37:45.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.433" endtime="20201110 08:37:45.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.725" endtime="20201110 08:37:45.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.733" endtime="20201110 08:37:45.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.430" endtime="20201110 08:37:45.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.428" endtime="20201110 08:37:45.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.740" level="INFO">${RESULT} = [{'time': 0.022300167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010147299999999776, 'source_diff': 0.00010147299999999776}, {'time': 0.022406153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:45.736" endtime="20201110 08:37:45.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.753" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:45.741" endtime="20201110 08:37:45.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.758" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.757" endtime="20201110 08:37:45.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.760" level="INFO">VALUE: [0.00010147299999999776, 0.00010095900000000116, 0.00010073600000000058, 0.00010107000000000171, 0.00010083400000000103, 0.00010079100000000285, 0.00010077799999999928, 0.00010080499999999895, 0.00010079099999999938, 0.00010088899999999984, 0.00010079199999999885, 0.00010090299999999941, 0.00010077799999999928, 0.00010056900000000174, 0.00010051399999999946, 0.00010079200000000232, 0.00010061100000000045, 0.00010093100000000202, 0.00010095900000000116, 0.00010055600000000164, 0.0001005419999999986, 0.0001009870000000003, 0.00010094400000000212, 0.00010080500000000242, 0.000100722000000001, 0.00010056900000000174, 0.00010059700000000088, 0.00010094400000000212, 0.00010075000000000014, 0.00010088800000000037, 0.00010090299999999941, 0.00010101399999999996, 0.00010057000000000121, 0.00010098600000000083, 0.00010069499999999787, 0.00010107000000000171, 0.00010090299999999941, 0.00010090199999999994, 0.00010059700000000088, 0.00010075000000000014, 0.00010084700000000113, 0.00010073600000000058, 0.00010108299999999834, 0.00010090300000000288, 0.00010101399999999996, 0.00010077799999999928, 0.00010095799999999822, 0.00010091700000000245, 0.00010070799999999797, 0.00010059800000000035]</msg>
<status status="PASS" starttime="20201110 08:37:45.759" endtime="20201110 08:37:45.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.754" endtime="20201110 08:37:45.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.764" endtime="20201110 08:37:45.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.767" endtime="20201110 08:37:45.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.766" endtime="20201110 08:37:45.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.762" endtime="20201110 08:37:45.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.393" endtime="20201110 08:37:45.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.392" endtime="20201110 08:37:45.788"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.797" endtime="20201110 08:37:45.815"></status>
</kw>
<msg timestamp="20201110 08:37:45.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.795" endtime="20201110 08:37:45.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.817" endtime="20201110 08:37:45.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.819" endtime="20201110 08:37:45.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.793" endtime="20201110 08:37:45.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.791" endtime="20201110 08:37:45.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.829" endtime="20201110 08:37:46.116"></status>
</kw>
<msg timestamp="20201110 08:37:46.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.828" endtime="20201110 08:37:46.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.120" endtime="20201110 08:37:46.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.128" endtime="20201110 08:37:46.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.825" endtime="20201110 08:37:46.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.824" endtime="20201110 08:37:46.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.135" level="INFO">${RESULT} = [{'time': 0.022216833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010216599999999729, 'source_diff': 0.00010216599999999729}, {'time': 0.022323833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:46.131" endtime="20201110 08:37:46.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.149" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:46.136" endtime="20201110 08:37:46.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.154" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.153" endtime="20201110 08:37:46.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.156" level="INFO">VALUE: [0.00010216599999999729, 0.00010177700000000081, 0.00010180499999999995, 0.00010176400000000071, 0.00010161099999999798, 0.00010184700000000213, 0.00010191699999999998, 0.00010191699999999998, 0.0001016809999999993, 0.00010176399999999725, 0.00010161100000000145, 0.00010162500000000102, 0.00010166699999999973, 0.00010165300000000016, 0.00010165300000000016, 0.00010198600000000183, 0.0001016939999999994, 0.00010179100000000038, 0.00010188899999999737, 0.00010179100000000038, 0.0001018749999999978, 0.0001018610000000017, 0.00010190300000000041, 0.00010158299999999884, 0.00010155600000000264, 0.000101819999999999, 0.00010162500000000102, 0.00010149999999999743, 0.00010179199999999985, 0.00010187500000000127, 0.00010187500000000127, 0.00010176300000000124, 0.00010179100000000038, 0.00010158300000000231, 0.0001015549999999997, 0.00010197199999999879, 0.00010179199999999985, 0.00010179199999999985, 0.00010199999999999793, 0.00010201400000000097, 0.00010194499999999912, 0.00010158399999999831, 0.00010166699999999973, 0.00010159800000000135, 0.00010211099999999848, 0.00010158399999999831, 0.00010167999999999983, 0.00010195800000000269, 0.00010154100000000013, 0.00010158299999999884]</msg>
<status status="PASS" starttime="20201110 08:37:46.155" endtime="20201110 08:37:46.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.150" endtime="20201110 08:37:46.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.160" endtime="20201110 08:37:46.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.163" endtime="20201110 08:37:46.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.162" endtime="20201110 08:37:46.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.158" endtime="20201110 08:37:46.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.789" endtime="20201110 08:37:46.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.788" endtime="20201110 08:37:46.184"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.193" endtime="20201110 08:37:46.212"></status>
</kw>
<msg timestamp="20201110 08:37:46.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.191" endtime="20201110 08:37:46.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.214" endtime="20201110 08:37:46.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.216" endtime="20201110 08:37:46.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.189" endtime="20201110 08:37:46.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.187" endtime="20201110 08:37:46.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.226" endtime="20201110 08:37:46.512"></status>
</kw>
<msg timestamp="20201110 08:37:46.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.225" endtime="20201110 08:37:46.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.516" endtime="20201110 08:37:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.524" endtime="20201110 08:37:46.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.222" endtime="20201110 08:37:46.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.220" endtime="20201110 08:37:46.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.531" level="INFO">${RESULT} = [{'time': 0.022027139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010397200000000079, 'source_diff': 0.00010397200000000079}, {'time': 0.022135208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:46.528" endtime="20201110 08:37:46.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.544" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:46.532" endtime="20201110 08:37:46.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.549" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.548" endtime="20201110 08:37:46.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.551" level="INFO">VALUE: [0.00010397200000000079, 0.0001025550000000007, 0.00010288900000000184, 0.00010277799999999782, 0.00010294399999999718, 0.0001028879999999989, 0.00010252699999999809, 0.00010284699999999966, 0.00010263799999999865, 0.00010275000000000215, 0.00010258299999999984, 0.00010265300000000116, 0.00010295800000000022, 0.00010282, 0.00010272199999999954, 0.00010277800000000128, 0.00010256900000000027, 0.00010294500000000012, 0.00010263900000000159, 0.00010283399999999956, 0.00010309799999999938, 0.00010263899999999812, 0.00010284799999999913, 0.00010295899999999969, 0.00010279100000000138, 0.00010262499999999855, 0.00010251400000000147, 0.00010265300000000116, 0.00010297200000000326, 0.0001028610000000027, 0.00010302799999999807, 0.00010295800000000022, 0.00010302700000000206, 0.00010274999999999868, 0.00010298599999999936, 0.00010294500000000012, 0.00010298599999999936, 0.00010312499999999905, 0.00010299999999999893, 0.00010309699999999991, 0.0001026940000000004, 0.0001026940000000004, 0.0001028610000000027, 0.0001029160000000015, 0.00010263899999999812, 0.0001026940000000004, 0.00010297199999999979, 0.00010295800000000022, 0.00010298599999999936, 0.00010283300000000009]</msg>
<status status="PASS" starttime="20201110 08:37:46.550" endtime="20201110 08:37:46.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.545" endtime="20201110 08:37:46.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.555" endtime="20201110 08:37:46.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.559" endtime="20201110 08:37:46.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.557" endtime="20201110 08:37:46.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.553" endtime="20201110 08:37:46.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.185" endtime="20201110 08:37:46.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.185" endtime="20201110 08:37:46.580"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.588" endtime="20201110 08:37:46.608"></status>
</kw>
<msg timestamp="20201110 08:37:46.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.587" endtime="20201110 08:37:46.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.610" endtime="20201110 08:37:46.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.612" endtime="20201110 08:37:46.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.584" endtime="20201110 08:37:46.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.582" endtime="20201110 08:37:46.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.622" endtime="20201110 08:37:46.908"></status>
</kw>
<msg timestamp="20201110 08:37:46.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.621" endtime="20201110 08:37:46.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.912" endtime="20201110 08:37:46.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.920" endtime="20201110 08:37:46.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.618" endtime="20201110 08:37:46.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.617" endtime="20201110 08:37:46.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.927" level="INFO">${RESULT} = [{'time': 0.022527278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010493100000000255, 'source_diff': 0.00010493100000000255}, {'time': 0.022636292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:46.923" endtime="20201110 08:37:46.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.940" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:46.928" endtime="20201110 08:37:46.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.945" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.944" endtime="20201110 08:37:46.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.947" level="INFO">VALUE: [0.00010493100000000255, 0.00010356999999999728, 0.00010390299999999894, 0.00010406900000000177, 0.00010408299999999787, 0.00010404099999999916, 0.00010386099999999676, 0.00010365299999999869, 0.00010372200000000054, 0.00010372200000000054, 0.00010381899999999805, 0.00010388899999999937, 0.00010398600000000036, 0.00010355600000000117, 0.00010379200000000185, 0.00010352799999999857, 0.00010377699999999934, 0.00010397300000000026, 0.00010390299999999894, 0.00010391599999999904, 0.00010362499999999955, 0.00010397200000000079, 0.00010377800000000229, 0.00010366700000000173, 0.00010380499999999848, 0.00010372200000000054, 0.00010366700000000173, 0.00010383300000000109, 0.00010363799999999965, 0.00010372199999999707, 0.00010386100000000023, 0.00010399999999999993, 0.00010399999999999993, 0.00010365199999999922, 0.00010366700000000173, 0.00010383299999999762, 0.00010394400000000165, 0.0001037079999999975, 0.00010408300000000134, 0.00010381900000000152, 0.00010384699999999719, 0.00010352799999999857, 0.00010393100000000155, 0.00010415299999999919, 0.00010393100000000155, 0.00010393100000000155, 0.00010352799999999857, 0.00010365199999999922, 0.00010408399999999735, 0.00010384699999999719]</msg>
<status status="PASS" starttime="20201110 08:37:46.946" endtime="20201110 08:37:46.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.941" endtime="20201110 08:37:46.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.951" endtime="20201110 08:37:46.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.954" endtime="20201110 08:37:46.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.953" endtime="20201110 08:37:46.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.949" endtime="20201110 08:37:46.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.581" endtime="20201110 08:37:46.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.580" endtime="20201110 08:37:46.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.149" endtime="20201110 08:37:46.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.979" endtime="20201110 08:37:46.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.978" endtime="20201110 08:37:46.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.976" endtime="20201110 08:37:46.999"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:07.079" endtime="20201110 08:37:47.000" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.007" endtime="20201110 08:37:47.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.005" endtime="20201110 08:37:47.027"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.040" endtime="20201110 08:37:47.054"></status>
</kw>
<msg timestamp="20201110 08:37:47.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.039" endtime="20201110 08:37:47.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.057" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.056" endtime="20201110 08:37:47.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.060" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:47.058" endtime="20201110 08:37:47.061"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:47.036" endtime="20201110 08:37:47.061"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:47.034" endtime="20201110 08:37:47.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.033" endtime="20201110 08:37:47.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:47.066" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:47.065" endtime="20201110 08:37:47.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.063" endtime="20201110 08:37:47.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.032" endtime="20201110 08:37:47.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.030" endtime="20201110 08:37:47.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.068" endtime="20201110 08:37:47.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.029" endtime="20201110 08:37:47.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.027" endtime="20201110 08:37:47.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.004" endtime="20201110 08:37:47.070"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.080" endtime="20201110 08:37:47.095"></status>
</kw>
<msg timestamp="20201110 08:37:47.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.078" endtime="20201110 08:37:47.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.097" endtime="20201110 08:37:47.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.099" endtime="20201110 08:37:47.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.075" endtime="20201110 08:37:47.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.073" endtime="20201110 08:37:47.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.110" endtime="20201110 08:37:47.394"></status>
</kw>
<msg timestamp="20201110 08:37:47.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06650475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066526472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:47.107" endtime="20201110 08:37:47.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06650475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066526472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:47.398" endtime="20201110 08:37:47.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.407" endtime="20201110 08:37:47.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.104" endtime="20201110 08:37:47.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.103" endtime="20201110 08:37:47.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.413" level="INFO">${RESULT} = [{'time': 0.066526472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.066550444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:47.410" endtime="20201110 08:37:47.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:47.414" endtime="20201110 08:37:47.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.431" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.430" endtime="20201110 08:37:47.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.434" level="INFO">VALUE: [2.1722000000001795e-05, 2.1402000000003696e-05, 2.163900000000385e-05, 2.1848000000004864e-05, 2.1527999999992886e-05, 2.184700000000539e-05, 2.1514000000000255e-05, 2.176300000000797e-05, 2.156899999999906e-05, 2.188900000001104e-05, 2.180499999999974e-05, 2.179100000000711e-05, 2.1735999999994426e-05, 2.1764000000007444e-05, 2.1694000000002656e-05, 2.138899999999666e-05, 2.187500000000453e-05, 2.1651999999997007e-05, 2.1943999999995967e-05, 2.1582999999991692e-05, 2.1722000000001795e-05, 2.152700000000729e-05, 2.158300000000557e-05, 2.1638999999989972e-05, 2.183299999999888e-05, 2.154099999999992e-05, 2.1528000000006764e-05, 2.1486000000001115e-05, 2.162499999999734e-05, 2.1694000000002656e-05, 2.190300000000367e-05, 2.187500000000453e-05, 2.1638999999989972e-05, 2.1874999999990652e-05, 2.1721999999987918e-05, 2.1458000000001975e-05, 2.143100000000231e-05, 2.165299999999648e-05, 2.1694000000002656e-05, 2.1902999999989792e-05, 2.20969999999987e-05, 2.1458000000001975e-05, 2.1527999999992886e-05, 2.156899999999906e-05, 2.187500000000453e-05, 2.1443999999995467e-05, 2.162499999999734e-05, 2.163900000000385e-05, 2.162499999999734e-05, 2.165300000001036e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.432" endtime="20201110 08:37:47.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.428" endtime="20201110 08:37:47.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.437" endtime="20201110 08:37:47.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.440" endtime="20201110 08:37:47.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.439" endtime="20201110 08:37:47.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.435" endtime="20201110 08:37:47.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.072" endtime="20201110 08:37:47.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.071" endtime="20201110 08:37:47.462"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.470" endtime="20201110 08:37:47.486"></status>
</kw>
<msg timestamp="20201110 08:37:47.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.469" endtime="20201110 08:37:47.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.487" endtime="20201110 08:37:47.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.489" endtime="20201110 08:37:47.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.466" endtime="20201110 08:37:47.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.464" endtime="20201110 08:37:47.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.499" endtime="20201110 08:37:47.788"></status>
</kw>
<msg timestamp="20201110 08:37:47.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.497" endtime="20201110 08:37:47.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.792" endtime="20201110 08:37:47.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.801" endtime="20201110 08:37:47.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.494" endtime="20201110 08:37:47.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.493" endtime="20201110 08:37:47.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.808" level="INFO">${RESULT} = [{'time': 0.022432542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2014000000000755e-05, 'source_diff': 2.2014000000000755e-05}, {'time': 0.022456528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:47.804" endtime="20201110 08:37:47.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.866" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:47.809" endtime="20201110 08:37:47.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.871" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.870" endtime="20201110 08:37:47.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.873" level="INFO">VALUE: [2.2014000000000755e-05, 2.14029999999997e-05, 2.1527999999999825e-05, 2.1721999999998326e-05, 2.197300000000152e-05, 2.1471999999998076e-05, 2.1556000000002434e-05, 2.154099999999992e-05, 2.136100000000099e-05, 2.152700000000035e-05, 2.1556000000002434e-05, 2.1541999999999395e-05, 2.1764000000000505e-05, 2.193099999999934e-05, 2.163900000000038e-05, 2.1527999999999825e-05, 2.144499999999841e-05, 2.187499999999759e-05, 2.1750000000000935e-05, 2.1500000000000685e-05, 2.17090000000017e-05, 2.1791999999999645e-05, 2.151300000000078e-05, 2.1833999999998355e-05, 2.176300000000103e-05, 2.188900000000063e-05, 2.14029999999997e-05, 2.154099999999992e-05, 2.1541999999999395e-05, 2.156900000000253e-05, 2.1722000000001795e-05, 2.1402000000000226e-05, 2.236099999999852e-05, 2.159700000000167e-05, 2.1902000000000726e-05, 2.211100000000174e-05, 2.1486000000001115e-05, 2.1764000000000505e-05, 2.1457999999998506e-05, 2.1763999999997036e-05, 2.1415999999999796e-05, 2.183300000000235e-05, 2.1472000000001545e-05, 2.1472000000001545e-05, 2.1750000000000935e-05, 2.184700000000192e-05, 2.183299999999888e-05, 2.165299999999995e-05, 2.1457999999998506e-05, 2.187500000000106e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.872" endtime="20201110 08:37:47.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.867" endtime="20201110 08:37:47.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.876" endtime="20201110 08:37:47.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.880" endtime="20201110 08:37:47.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.879" endtime="20201110 08:37:47.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.875" endtime="20201110 08:37:47.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.463" endtime="20201110 08:37:47.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.462" endtime="20201110 08:37:47.901"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.911" endtime="20201110 08:37:47.926"></status>
</kw>
<msg timestamp="20201110 08:37:47.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.909" endtime="20201110 08:37:47.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.927" endtime="20201110 08:37:47.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.930" endtime="20201110 08:37:47.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.906" endtime="20201110 08:37:47.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.904" endtime="20201110 08:37:47.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.939" endtime="20201110 08:37:48.223"></status>
</kw>
<msg timestamp="20201110 08:37:48.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.937" endtime="20201110 08:37:48.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022889861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.227" endtime="20201110 08:37:48.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.235" endtime="20201110 08:37:48.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.935" endtime="20201110 08:37:48.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.933" endtime="20201110 08:37:48.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.242" level="INFO">${RESULT} = [{'time': 0.022889861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1708000000002226e-05, 'source_diff': 2.1708000000002226e-05}, {'time': 0.022913861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:48.239" endtime="20201110 08:37:48.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.256" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:48.243" endtime="20201110 08:37:48.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.260" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.259" endtime="20201110 08:37:48.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.263" level="INFO">VALUE: [2.1708000000002226e-05, 2.155499999999949e-05, 2.191699999999977e-05, 2.1750000000000935e-05, 2.187499999999759e-05, 2.1805999999999215e-05, 2.191699999999977e-05, 2.165299999999995e-05, 2.1778000000000075e-05, 2.159700000000167e-05, 2.1722000000001795e-05, 2.193099999999934e-05, 2.1805999999999215e-05, 2.162499999999734e-05, 2.169499999999866e-05, 2.1514000000000255e-05, 2.169499999999866e-05, 2.1570000000002004e-05, 2.183299999999888e-05, 2.144500000000188e-05, 2.238900000000113e-05, 2.169500000000213e-05, 2.188900000000063e-05, 2.1570000000002004e-05, 2.138900000000013e-05, 2.144500000000188e-05, 2.163900000000038e-05, 2.169499999999866e-05, 2.1749999999997466e-05, 2.1764000000000505e-05, 2.144499999999841e-05, 2.169499999999866e-05, 2.1584000000001574e-05, 2.194500000000238e-05, 2.184699999999845e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.183299999999888e-05, 2.17229999999978e-05, 2.187499999999759e-05, 2.156899999999906e-05, 2.1597999999997675e-05, 2.184699999999845e-05, 2.155500000000296e-05, 2.1943999999999436e-05, 2.1721999999998326e-05, 2.1500000000000685e-05, 2.1679999999999616e-05, 2.1486000000001115e-05, 2.1666000000000046e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.261" endtime="20201110 08:37:48.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.256" endtime="20201110 08:37:48.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.266" endtime="20201110 08:37:48.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.270" endtime="20201110 08:37:48.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.268" endtime="20201110 08:37:48.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.265" endtime="20201110 08:37:48.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.902" endtime="20201110 08:37:48.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.902" endtime="20201110 08:37:48.291"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.300" endtime="20201110 08:37:48.315"></status>
</kw>
<msg timestamp="20201110 08:37:48.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.298" endtime="20201110 08:37:48.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.317" endtime="20201110 08:37:48.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.319" endtime="20201110 08:37:48.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.295" endtime="20201110 08:37:48.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.293" endtime="20201110 08:37:48.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.328" endtime="20201110 08:37:48.614"></status>
</kw>
<msg timestamp="20201110 08:37:48.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:48.327" endtime="20201110 08:37:48.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:48.619" endtime="20201110 08:37:48.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.627" endtime="20201110 08:37:48.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.324" endtime="20201110 08:37:48.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.322" endtime="20201110 08:37:48.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.634" level="INFO">${RESULT} = [{'time': 0.022981, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.143100000000231e-05, 'source_diff': 2.143100000000231e-05}, {'time': 0.023005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1...</msg>
<status status="PASS" starttime="20201110 08:37:48.630" endtime="20201110 08:37:48.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:48.635" endtime="20201110 08:37:48.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.652" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.651" endtime="20201110 08:37:48.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.654" level="INFO">VALUE: [2.143100000000231e-05, 2.1500000000000685e-05, 2.1708000000002226e-05, 2.187500000000106e-05, 2.1750000000000935e-05, 2.237499999999809e-05, 2.211100000000174e-05, 2.19030000000002e-05, 2.165299999999995e-05, 2.1527999999999825e-05, 2.1972000000002045e-05, 2.136099999999752e-05, 2.134699999999795e-05, 2.19030000000002e-05, 2.143100000000231e-05, 2.1735999999997896e-05, 2.1555999999998965e-05, 2.1819999999998785e-05, 2.165299999999995e-05, 2.1514000000000255e-05, 2.1944000000002906e-05, 2.17229999999978e-05, 2.1500000000000685e-05, 2.1736000000001365e-05, 2.169500000000213e-05, 2.19030000000002e-05, 2.1527999999999825e-05, 2.147300000000102e-05, 2.1514000000000255e-05, 2.154099999999992e-05, 2.1499999999997216e-05, 2.1611999999997245e-05, 2.155499999999949e-05, 2.17229999999978e-05, 2.1792000000003114e-05, 2.148700000000059e-05, 2.212500000000131e-05, 2.165299999999995e-05, 2.1472000000001545e-05, 2.1415999999999796e-05, 2.1457999999998506e-05, 2.1986000000001615e-05, 2.1693999999999186e-05, 2.180499999999974e-05, 2.1485999999997646e-05, 2.1750000000000935e-05, 2.156900000000253e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.154099999999992e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.653" endtime="20201110 08:37:48.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.648" endtime="20201110 08:37:48.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.658" endtime="20201110 08:37:48.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.662" endtime="20201110 08:37:48.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.660" endtime="20201110 08:37:48.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.656" endtime="20201110 08:37:48.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.291" endtime="20201110 08:37:48.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.291" endtime="20201110 08:37:48.682"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.691" endtime="20201110 08:37:48.707"></status>
</kw>
<msg timestamp="20201110 08:37:48.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.690" endtime="20201110 08:37:48.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.709" endtime="20201110 08:37:48.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.711" endtime="20201110 08:37:48.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.687" endtime="20201110 08:37:48.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.685" endtime="20201110 08:37:48.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.720" endtime="20201110 08:37:49.004"></status>
</kw>
<msg timestamp="20201110 08:37:49.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.719" endtime="20201110 08:37:49.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.008" endtime="20201110 08:37:49.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.017" endtime="20201110 08:37:49.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.716" endtime="20201110 08:37:49.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.714" endtime="20201110 08:37:49.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.024" level="INFO">${RESULT} = [{'time': 0.022854389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1791999999999645e-05, 'source_diff': 2.1791999999999645e-05}, {'time': 0.022878333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:49.020" endtime="20201110 08:37:49.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.037" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:49.025" endtime="20201110 08:37:49.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.042" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.041" endtime="20201110 08:37:49.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.044" level="INFO">VALUE: [2.1791999999999645e-05, 2.1693999999999186e-05, 2.1514000000000255e-05, 2.184699999999845e-05, 2.165299999999995e-05, 2.181899999999931e-05, 2.158299999999863e-05, 2.181900000000278e-05, 2.145900000000145e-05, 2.156900000000253e-05, 2.1750000000000935e-05, 2.166699999999952e-05, 2.188900000000063e-05, 2.145900000000145e-05, 2.1805999999999215e-05, 2.14029999999997e-05, 2.191699999999977e-05, 2.155499999999949e-05, 2.1929999999999866e-05, 2.188900000000063e-05, 2.163900000000038e-05, 2.15830000000021e-05, 2.1555999999998965e-05, 2.184699999999845e-05, 2.163900000000038e-05, 2.1707999999998756e-05, 2.163900000000038e-05, 2.144499999999841e-05, 2.1791999999999645e-05, 2.1527999999999825e-05, 2.1542000000002864e-05, 2.237499999999809e-05, 2.187500000000106e-05, 2.14029999999997e-05, 2.1527999999999825e-05, 2.183299999999888e-05, 2.186100000000149e-05, 2.1750000000000935e-05, 2.1527999999999825e-05, 2.1735999999997896e-05, 2.1541999999999395e-05, 2.143100000000231e-05, 2.170899999999823e-05, 2.141700000000274e-05, 2.1957999999999006e-05, 2.162500000000081e-05, 2.1584000000001574e-05, 2.168099999999909e-05, 2.137500000000056e-05, 2.17229999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.043" endtime="20201110 08:37:49.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.038" endtime="20201110 08:37:49.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.048" endtime="20201110 08:37:49.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.051" endtime="20201110 08:37:49.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.050" endtime="20201110 08:37:49.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.046" endtime="20201110 08:37:49.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.683" endtime="20201110 08:37:49.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.683" endtime="20201110 08:37:49.072"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.081" endtime="20201110 08:37:49.096"></status>
</kw>
<msg timestamp="20201110 08:37:49.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.079" endtime="20201110 08:37:49.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.097" endtime="20201110 08:37:49.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.100" endtime="20201110 08:37:49.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.077" endtime="20201110 08:37:49.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.074" endtime="20201110 08:37:49.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.109" endtime="20201110 08:37:49.394"></status>
</kw>
<msg timestamp="20201110 08:37:49.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.108" endtime="20201110 08:37:49.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.399" endtime="20201110 08:37:49.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.407" endtime="20201110 08:37:49.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.105" endtime="20201110 08:37:49.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.103" endtime="20201110 08:37:49.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.414" level="INFO">${RESULT} = [{'time': 0.022009319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.022033333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:49.410" endtime="20201110 08:37:49.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.428" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:49.415" endtime="20201110 08:37:49.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.433" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.432" endtime="20201110 08:37:49.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.435" level="INFO">VALUE: [2.1929999999999866e-05, 2.15969999999982e-05, 2.1679999999999616e-05, 2.154099999999992e-05, 2.17770000000006e-05, 2.1652000000000476e-05, 2.155499999999949e-05, 2.1902000000000726e-05, 2.159700000000167e-05, 2.1721999999998326e-05, 2.1429999999999366e-05, 2.1722000000001795e-05, 2.156899999999906e-05, 2.1929999999999866e-05, 2.1749999999997466e-05, 2.1541999999999395e-05, 2.194499999999891e-05, 2.138900000000013e-05, 2.212500000000131e-05, 2.1778000000000075e-05, 2.141699999999927e-05, 2.181899999999931e-05, 2.1763999999997036e-05, 2.1708000000002226e-05, 2.1500000000000685e-05, 2.14029999999997e-05, 2.138900000000013e-05, 2.1750000000000935e-05, 2.237500000000156e-05, 2.1929999999999866e-05, 2.188900000000063e-05, 2.1514000000000255e-05, 2.168099999999909e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.163900000000038e-05, 2.1527999999999825e-05, 2.1749999999997466e-05, 2.165299999999995e-05, 2.1958000000002476e-05, 2.1500000000000685e-05, 2.183299999999888e-05, 2.144500000000188e-05, 2.187500000000106e-05, 2.158299999999863e-05, 2.169499999999866e-05, 2.1555999999998965e-05, 2.165299999999995e-05, 2.147300000000102e-05, 2.143100000000231e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.434" endtime="20201110 08:37:49.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.429" endtime="20201110 08:37:49.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.439" endtime="20201110 08:37:49.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.442" endtime="20201110 08:37:49.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.441" endtime="20201110 08:37:49.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.437" endtime="20201110 08:37:49.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.073" endtime="20201110 08:37:49.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.072" endtime="20201110 08:37:49.463"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.472" endtime="20201110 08:37:49.487"></status>
</kw>
<msg timestamp="20201110 08:37:49.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.470" endtime="20201110 08:37:49.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.489" endtime="20201110 08:37:49.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.491" endtime="20201110 08:37:49.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.468" endtime="20201110 08:37:49.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.466" endtime="20201110 08:37:49.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.501" endtime="20201110 08:37:49.786"></status>
</kw>
<msg timestamp="20201110 08:37:49.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.500" endtime="20201110 08:37:49.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.790" endtime="20201110 08:37:49.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.798" endtime="20201110 08:37:49.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.497" endtime="20201110 08:37:49.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.495" endtime="20201110 08:37:49.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.805" level="INFO">${RESULT} = [{'time': 0.022043056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.220899999999873e-05, 'source_diff': 2.220899999999873e-05}, {'time': 0.022067056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.802" endtime="20201110 08:37:49.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.819" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:49.806" endtime="20201110 08:37:49.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.823" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.822" endtime="20201110 08:37:49.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.826" level="INFO">VALUE: [2.220899999999873e-05, 2.1750000000000935e-05, 2.1694000000002656e-05, 2.181899999999931e-05, 2.184700000000192e-05, 2.1916000000000296e-05, 2.184700000000192e-05, 2.1415999999999796e-05, 2.184699999999845e-05, 2.176300000000103e-05, 2.1708000000002226e-05, 2.186099999999802e-05, 2.187500000000106e-05, 2.144499999999841e-05, 2.1652000000000476e-05, 2.1902000000000726e-05, 2.1929999999999866e-05, 2.1929999999999866e-05, 2.1514000000000255e-05, 2.1916000000000296e-05, 2.1735999999997896e-05, 2.1707999999998756e-05, 2.238899999999766e-05, 2.138900000000013e-05, 2.1806000000002684e-05, 2.1805999999999215e-05, 2.186100000000149e-05, 2.1444000000002406e-05, 2.238900000000113e-05, 2.1430000000002836e-05, 2.1708000000002226e-05, 2.191699999999977e-05, 2.1500000000000685e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.195899999999848e-05, 2.191699999999977e-05, 2.1485999999997646e-05, 2.1721999999998326e-05, 2.1750000000000935e-05, 2.14029999999997e-05, 2.165299999999995e-05, 2.138900000000013e-05, 2.1569999999998535e-05, 2.1764000000000505e-05, 2.236100000000199e-05, 2.184699999999845e-05, 2.15969999999982e-05, 2.19030000000002e-05, 2.144499999999841e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.824" endtime="20201110 08:37:49.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.820" endtime="20201110 08:37:49.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.829" endtime="20201110 08:37:49.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.833" endtime="20201110 08:37:49.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.831" endtime="20201110 08:37:49.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.828" endtime="20201110 08:37:49.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.464" endtime="20201110 08:37:49.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.463" endtime="20201110 08:37:49.853"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.862" endtime="20201110 08:37:49.878"></status>
</kw>
<msg timestamp="20201110 08:37:49.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.861" endtime="20201110 08:37:49.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.879" endtime="20201110 08:37:49.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.882" endtime="20201110 08:37:49.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.858" endtime="20201110 08:37:49.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.856" endtime="20201110 08:37:49.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.892" endtime="20201110 08:37:50.177"></status>
</kw>
<msg timestamp="20201110 08:37:50.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.890" endtime="20201110 08:37:50.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.181" endtime="20201110 08:37:50.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.189" endtime="20201110 08:37:50.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.887" endtime="20201110 08:37:50.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.886" endtime="20201110 08:37:50.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.196" level="INFO">${RESULT} = [{'time': 0.022162583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1429999999999366e-05, 'source_diff': 2.1429999999999366e-05}, {'time': 0.022186583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:50.193" endtime="20201110 08:37:50.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:50.197" endtime="20201110 08:37:50.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.214" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.213" endtime="20201110 08:37:50.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.217" level="INFO">VALUE: [2.1429999999999366e-05, 2.154099999999992e-05, 2.1528000000003295e-05, 2.165299999999995e-05, 2.1415999999999796e-05, 2.15830000000021e-05, 2.1929999999999866e-05, 2.184700000000192e-05, 2.159700000000167e-05, 2.1429999999999366e-05, 2.1707999999998756e-05, 2.158299999999863e-05, 2.187499999999759e-05, 2.165299999999995e-05, 2.1458000000001975e-05, 2.1458000000001975e-05, 2.188900000000063e-05, 2.165299999999995e-05, 2.138900000000013e-05, 2.155499999999949e-05, 2.1429999999999366e-05, 2.237500000000156e-05, 2.168099999999909e-05, 2.186099999999802e-05, 2.191699999999977e-05, 2.1943999999999436e-05, 2.1763999999997036e-05, 2.191699999999977e-05, 2.1485999999997646e-05, 2.165299999999995e-05, 2.211100000000174e-05, 2.141699999999927e-05, 2.158299999999863e-05, 2.211099999999827e-05, 2.1500000000000685e-05, 2.1972000000002045e-05, 2.19030000000002e-05, 2.1791999999999645e-05, 2.141700000000274e-05, 2.1750000000000935e-05, 2.1570000000002004e-05, 2.1541999999999395e-05, 2.1750000000000935e-05, 2.161100000000124e-05, 2.1805999999999215e-05, 2.145899999999798e-05, 2.193099999999934e-05, 2.163899999999691e-05, 2.1542000000002864e-05, 2.143100000000231e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.216" endtime="20201110 08:37:50.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.211" endtime="20201110 08:37:50.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.221" endtime="20201110 08:37:50.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.224" endtime="20201110 08:37:50.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.222" endtime="20201110 08:37:50.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.219" endtime="20201110 08:37:50.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.854" endtime="20201110 08:37:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.854" endtime="20201110 08:37:50.245"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.253" endtime="20201110 08:37:50.268"></status>
</kw>
<msg timestamp="20201110 08:37:50.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.252" endtime="20201110 08:37:50.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.270" endtime="20201110 08:37:50.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.272" endtime="20201110 08:37:50.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.249" endtime="20201110 08:37:50.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.247" endtime="20201110 08:37:50.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.282" endtime="20201110 08:37:50.566"></status>
</kw>
<msg timestamp="20201110 08:37:50.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:50.281" endtime="20201110 08:37:50.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:50.571" endtime="20201110 08:37:50.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.579" endtime="20201110 08:37:50.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.278" endtime="20201110 08:37:50.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.276" endtime="20201110 08:37:50.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.587" level="INFO">${RESULT} = [{'time': 0.0219835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2278000000000575e-05, 'source_diff': 2.2278000000000575e-05}, {'time': 0.0220075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:50.582" endtime="20201110 08:37:50.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:50.588" endtime="20201110 08:37:50.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.606" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.604" endtime="20201110 08:37:50.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.608" level="INFO">VALUE: [2.2278000000000575e-05, 2.14029999999997e-05, 2.1485999999997646e-05, 2.1735999999997896e-05, 2.1708000000002226e-05, 2.211100000000174e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.1569999999998535e-05, 2.1750000000000935e-05, 2.161099999999777e-05, 2.170899999999823e-05, 2.148700000000059e-05, 2.141700000000274e-05, 2.143100000000231e-05, 2.1806000000002684e-05, 2.1834000000001824e-05, 2.193099999999934e-05, 2.1457999999998506e-05, 2.169499999999866e-05, 2.1555999999998965e-05, 2.170899999999823e-05, 2.1764000000000505e-05, 2.1569999999998535e-05, 2.1541999999999395e-05, 2.1348000000000894e-05, 2.169500000000213e-05, 2.156899999999906e-05, 2.1415999999999796e-05, 2.1833999999998355e-05, 2.165299999999995e-05, 2.19030000000002e-05, 2.1555999999998965e-05, 2.1457999999998506e-05, 2.1887999999997687e-05, 2.1707999999998756e-05, 2.180500000000321e-05, 2.154099999999992e-05, 2.15830000000021e-05, 2.187500000000106e-05, 2.237500000000156e-05, 2.15830000000021e-05, 2.163900000000038e-05, 2.19030000000002e-05, 2.1429999999999366e-05, 2.1943999999999436e-05, 2.15969999999982e-05, 2.188900000000063e-05, 2.155499999999949e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.607" endtime="20201110 08:37:50.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.602" endtime="20201110 08:37:50.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.612" endtime="20201110 08:37:50.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.615" endtime="20201110 08:37:50.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.614" endtime="20201110 08:37:50.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.610" endtime="20201110 08:37:50.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.246" endtime="20201110 08:37:50.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.245" endtime="20201110 08:37:50.636"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.645" endtime="20201110 08:37:50.660"></status>
</kw>
<msg timestamp="20201110 08:37:50.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.643" endtime="20201110 08:37:50.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.662" endtime="20201110 08:37:50.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.664" endtime="20201110 08:37:50.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.641" endtime="20201110 08:37:50.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.639" endtime="20201110 08:37:50.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.674" endtime="20201110 08:37:50.960"></status>
</kw>
<msg timestamp="20201110 08:37:50.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:50.673" endtime="20201110 08:37:50.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:50.965" endtime="20201110 08:37:50.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.973" endtime="20201110 08:37:50.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.670" endtime="20201110 08:37:50.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.668" endtime="20201110 08:37:50.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.980" level="INFO">${RESULT} = [{'time': 0.0221035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.141700000000274e-05, 'source_diff': 2.141700000000274e-05}, {'time': 0.022128514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:50.976" endtime="20201110 08:37:50.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.994" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:50.981" endtime="20201110 08:37:50.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.999" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.998" endtime="20201110 08:37:50.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.001" level="INFO">VALUE: [2.141700000000274e-05, 2.233299999999938e-05, 2.1514000000000255e-05, 2.1527999999999825e-05, 2.159700000000167e-05, 2.162500000000081e-05, 2.1541999999999395e-05, 2.1514000000000255e-05, 2.1986000000001615e-05, 2.1652000000000476e-05, 2.1499999999997216e-05, 2.1763999999997036e-05, 2.138899999999666e-05, 2.1486000000001115e-05, 2.1721999999998326e-05, 2.186100000000149e-05, 2.1819999999998785e-05, 2.1943999999999436e-05, 2.186099999999802e-05, 2.188900000000063e-05, 2.1597999999997675e-05, 2.191699999999977e-05, 2.1848000000001394e-05, 2.166700000000299e-05, 2.1916000000000296e-05, 2.169500000000213e-05, 2.1848000000001394e-05, 2.1735999999997896e-05, 2.1902000000000726e-05, 2.186099999999802e-05, 2.1514000000000255e-05, 2.1457999999998506e-05, 2.1415999999999796e-05, 2.1901999999997257e-05, 2.15969999999982e-05, 2.1638000000000907e-05, 2.179100000000017e-05, 2.188900000000063e-05, 2.1679999999999616e-05, 2.179100000000017e-05, 2.1693999999999186e-05, 2.236100000000199e-05, 2.1916000000000296e-05, 2.186100000000149e-05, 2.136100000000099e-05, 2.184699999999845e-05, 2.186099999999802e-05, 2.138900000000013e-05, 2.1750000000000935e-05, 2.181899999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.000" endtime="20201110 08:37:51.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.995" endtime="20201110 08:37:51.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.005" endtime="20201110 08:37:51.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.009" endtime="20201110 08:37:51.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.007" endtime="20201110 08:37:51.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.003" endtime="20201110 08:37:51.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.637" endtime="20201110 08:37:51.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.637" endtime="20201110 08:37:51.029"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.038" endtime="20201110 08:37:51.053"></status>
</kw>
<msg timestamp="20201110 08:37:51.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.036" endtime="20201110 08:37:51.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.055" endtime="20201110 08:37:51.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.057" endtime="20201110 08:37:51.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.034" endtime="20201110 08:37:51.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.032" endtime="20201110 08:37:51.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.067" endtime="20201110 08:37:51.354"></status>
</kw>
<msg timestamp="20201110 08:37:51.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.066" endtime="20201110 08:37:51.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.358" endtime="20201110 08:37:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.367" endtime="20201110 08:37:51.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.063" endtime="20201110 08:37:51.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.061" endtime="20201110 08:37:51.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.374" level="INFO">${RESULT} = [{'time': 0.022307986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.308300000000013e-05, 'source_diff': 2.308300000000013e-05}, {'time': 0.022333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:51.370" endtime="20201110 08:37:51.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.387" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:51.375" endtime="20201110 08:37:51.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.392" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.391" endtime="20201110 08:37:51.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.394" level="INFO">VALUE: [2.308300000000013e-05, 2.2555999999999965e-05, 2.2471999999999076e-05, 2.29030000000012e-05, 2.291700000000077e-05, 2.240299999999723e-05, 2.266699999999705e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.2806000000000215e-05, 2.283300000000335e-05, 2.2527999999997356e-05, 2.2749999999998466e-05, 2.283299999999988e-05, 2.268100000000009e-05, 2.269499999999966e-05, 2.2777999999997606e-05, 2.2528000000000825e-05, 2.293100000000034e-05, 2.266700000000052e-05, 2.2486000000002115e-05, 2.261099999999877e-05, 2.270899999999923e-05, 2.238900000000113e-05, 2.293100000000034e-05, 2.2750000000001935e-05, 2.2834000000002824e-05, 2.2555999999999965e-05, 2.291700000000077e-05, 2.293100000000034e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.245899999999898e-05, 2.247299999999855e-05, 2.245899999999898e-05, 2.2598000000002144e-05, 2.291700000000077e-05, 2.337499999999909e-05, 2.263900000000138e-05, 2.2528000000000825e-05, 2.266700000000052e-05, 2.2513999999997786e-05, 2.2528000000000825e-05, 2.287499999999859e-05, 2.3112000000002214e-05, 2.2443999999999936e-05, 2.312500000000231e-05, 2.261099999999877e-05, 2.2486000000002115e-05, 2.2944000000000436e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.393" endtime="20201110 08:37:51.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.388" endtime="20201110 08:37:51.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.398" endtime="20201110 08:37:51.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.401" endtime="20201110 08:37:51.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.400" endtime="20201110 08:37:51.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.396" endtime="20201110 08:37:51.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.030" endtime="20201110 08:37:51.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.030" endtime="20201110 08:37:51.422"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.431" endtime="20201110 08:37:51.446"></status>
</kw>
<msg timestamp="20201110 08:37:51.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.429" endtime="20201110 08:37:51.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.447" endtime="20201110 08:37:51.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.450" endtime="20201110 08:37:51.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.427" endtime="20201110 08:37:51.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.424" endtime="20201110 08:37:51.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.460" endtime="20201110 08:37:51.746"></status>
</kw>
<msg timestamp="20201110 08:37:51.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:51.458" endtime="20201110 08:37:51.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:51.751" endtime="20201110 08:37:51.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.759" endtime="20201110 08:37:51.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.456" endtime="20201110 08:37:51.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.454" endtime="20201110 08:37:51.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.766" level="INFO">${RESULT} = [{'time': 0.02220375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4278000000002575e-05, 'source_diff': 2.4278000000002575e-05}, {'time': 0.02222975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.762" endtime="20201110 08:37:51.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.779" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:51.767" endtime="20201110 08:37:51.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.784" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.783" endtime="20201110 08:37:51.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.786" level="INFO">VALUE: [2.4278000000002575e-05, 2.39169999999983e-05, 2.363900000000238e-05, 2.356900000000106e-05, 2.3514000000002255e-05, 2.390299999999873e-05, 2.3722000000000326e-05, 2.39169999999983e-05, 2.3749999999999466e-05, 2.337499999999909e-05, 2.3708000000000756e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.393100000000134e-05, 2.3820000000000785e-05, 2.3735999999999896e-05, 2.393100000000134e-05, 2.370900000000023e-05, 2.411100000000027e-05, 2.3806000000001215e-05, 2.387499999999959e-05, 2.354100000000192e-05, 2.366699999999805e-05, 2.3847999999999925e-05, 2.3527999999998356e-05, 2.394500000000091e-05, 2.3901999999999257e-05, 2.3708000000000756e-05, 2.3957999999997537e-05, 2.3778000000002075e-05, 2.368099999999762e-05, 2.3763999999999036e-05, 2.3805999999997746e-05, 2.4111999999999745e-05, 2.3401999999998757e-05, 2.3485999999999646e-05, 2.3429999999997897e-05, 2.3415999999998327e-05, 2.386100000000002e-05, 2.3694000000001186e-05, 2.3472000000000076e-05, 2.387499999999959e-05, 2.3415999999998327e-05, 2.3776999999999132e-05, 2.368100000000109e-05, 2.3485999999999646e-05, 2.356900000000106e-05, 2.3763999999999036e-05, 2.3472000000000076e-05, 2.390299999999873e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.785" endtime="20201110 08:37:51.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.780" endtime="20201110 08:37:51.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.790" endtime="20201110 08:37:51.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.793" endtime="20201110 08:37:51.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.792" endtime="20201110 08:37:51.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.788" endtime="20201110 08:37:51.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.423" endtime="20201110 08:37:51.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.422" endtime="20201110 08:37:51.814"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.823" endtime="20201110 08:37:51.838"></status>
</kw>
<msg timestamp="20201110 08:37:51.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.821" endtime="20201110 08:37:51.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.840" endtime="20201110 08:37:51.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.842" endtime="20201110 08:37:51.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.819" endtime="20201110 08:37:51.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.817" endtime="20201110 08:37:51.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.852" endtime="20201110 08:37:52.139"></status>
</kw>
<msg timestamp="20201110 08:37:52.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.851" endtime="20201110 08:37:52.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.143" endtime="20201110 08:37:52.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.152" endtime="20201110 08:37:52.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.848" endtime="20201110 08:37:52.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.846" endtime="20201110 08:37:52.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.158" level="INFO">${RESULT} = [{'time': 0.022174306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.47230000000008e-05, 'source_diff': 2.47230000000008e-05}, {'time': 0.022201306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:52.155" endtime="20201110 08:37:52.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.172" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:52.159" endtime="20201110 08:37:52.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.177" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.176" endtime="20201110 08:37:52.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.179" level="INFO">VALUE: [2.47230000000008e-05, 2.4791999999999176e-05, 2.493099999999887e-05, 2.465299999999948e-05, 2.487500000000059e-05, 2.4541999999998926e-05, 2.483300000000188e-05, 2.4401999999999757e-05, 2.4485999999997177e-05, 2.481900000000231e-05, 2.484700000000145e-05, 2.4790999999999702e-05, 2.4596999999997732e-05, 2.4526999999999882e-05, 2.4722000000001326e-05, 2.4500000000000216e-05, 2.538900000000066e-05, 2.4832999999998412e-05, 2.4693999999998717e-05, 2.4458000000001506e-05, 2.4568999999998592e-05, 2.4929999999999397e-05, 2.4943999999998967e-05, 2.4500000000000216e-05, 2.4777999999999606e-05, 2.4665999999999577e-05, 2.490299999999973e-05, 2.4542000000002395e-05, 2.463899999999991e-05, 2.4472000000001076e-05, 2.4804999999999272e-05, 2.4846999999997982e-05, 2.4486000000000646e-05, 2.4722000000001326e-05, 2.4457999999998037e-05, 2.495900000000148e-05, 2.4736000000000896e-05, 2.438899999999966e-05, 2.4846999999997982e-05, 2.4500000000000216e-05, 2.4486000000000646e-05, 2.490299999999973e-05, 2.438899999999966e-05, 2.49169999999993e-05, 2.438899999999966e-05, 2.5179999999999647e-05, 2.445900000000098e-05, 2.438899999999966e-05, 2.4471999999997607e-05, 2.4513999999999786e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.178" endtime="20201110 08:37:52.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.173" endtime="20201110 08:37:52.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.183" endtime="20201110 08:37:52.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.186" endtime="20201110 08:37:52.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.185" endtime="20201110 08:37:52.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.181" endtime="20201110 08:37:52.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.815" endtime="20201110 08:37:52.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.815" endtime="20201110 08:37:52.207"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.216" endtime="20201110 08:37:52.231"></status>
</kw>
<msg timestamp="20201110 08:37:52.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.214" endtime="20201110 08:37:52.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.233" endtime="20201110 08:37:52.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.235" endtime="20201110 08:37:52.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.212" endtime="20201110 08:37:52.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.210" endtime="20201110 08:37:52.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.245" endtime="20201110 08:37:52.530"></status>
</kw>
<msg timestamp="20201110 08:37:52.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.244" endtime="20201110 08:37:52.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.535" endtime="20201110 08:37:52.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.543" endtime="20201110 08:37:52.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.241" endtime="20201110 08:37:52.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.239" endtime="20201110 08:37:52.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.550" level="INFO">${RESULT} = [{'time': 0.022562847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.022590847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:52.546" endtime="20201110 08:37:52.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:52.551" endtime="20201110 08:37:52.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.569" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.568" endtime="20201110 08:37:52.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.571" level="INFO">VALUE: [2.6221999999999357e-05, 2.5541000000000452e-05, 2.587500000000159e-05, 2.583300000000288e-05, 2.5818999999999842e-05, 2.6374999999998622e-05, 2.5943999999999967e-05, 2.5832999999999412e-05, 2.5846999999998982e-05, 2.54169999999998e-05, 2.5860999999998552e-05, 2.5680000000000147e-05, 2.5764000000001036e-05, 2.5582999999999162e-05, 2.57369999999979e-05, 2.543099999999937e-05, 2.5568999999999592e-05, 2.565300000000048e-05, 2.5486000000001646e-05, 2.543099999999937e-05, 2.594500000000291e-05, 2.5957999999999537e-05, 2.5848000000001925e-05, 2.5555999999999496e-05, 2.568099999999962e-05, 2.5528000000000356e-05, 2.5624999999997872e-05, 2.54169999999998e-05, 2.5721999999998857e-05, 2.5486000000001646e-05, 2.5555999999999496e-05, 2.565300000000048e-05, 2.5736000000001896e-05, 2.59170000000003e-05, 2.543099999999937e-05, 2.543100000000284e-05, 2.5541999999999926e-05, 2.540300000000023e-05, 2.587500000000159e-05, 2.5792000000000176e-05, 2.6110999999998802e-05, 2.569499999999919e-05, 2.5528000000000356e-05, 2.565300000000048e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.5916000000000827e-05, 2.5402000000000757e-05, 2.5778000000000606e-05, 2.5736000000001896e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.570" endtime="20201110 08:37:52.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.565" endtime="20201110 08:37:52.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.575" endtime="20201110 08:37:52.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.579" endtime="20201110 08:37:52.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.577" endtime="20201110 08:37:52.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.573" endtime="20201110 08:37:52.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.208" endtime="20201110 08:37:52.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.207" endtime="20201110 08:37:52.599"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.608" endtime="20201110 08:37:52.623"></status>
</kw>
<msg timestamp="20201110 08:37:52.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.606" endtime="20201110 08:37:52.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.625" endtime="20201110 08:37:52.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.627" endtime="20201110 08:37:52.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.604" endtime="20201110 08:37:52.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.602" endtime="20201110 08:37:52.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.637" endtime="20201110 08:37:52.925"></status>
</kw>
<msg timestamp="20201110 08:37:52.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.636" endtime="20201110 08:37:52.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.930" endtime="20201110 08:37:52.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.942" endtime="20201110 08:37:52.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.633" endtime="20201110 08:37:52.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.631" endtime="20201110 08:37:52.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.951" level="INFO">${RESULT} = [{'time': 0.022138861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6458000000000037e-05, 'source_diff': 2.6458000000000037e-05}, {'time': 0.022167875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:52.947" endtime="20201110 08:37:52.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:52.953" endtime="20201110 08:37:52.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.971" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.970" endtime="20201110 08:37:52.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.974" level="INFO">VALUE: [2.6458000000000037e-05, 2.6860999999999552e-05, 2.6651999999998538e-05, 2.6624999999998872e-05, 2.6458000000000037e-05, 2.7374999999999622e-05, 2.6722000000003326e-05, 2.6763999999998567e-05, 2.6596999999999732e-05, 2.6944000000000967e-05, 2.665299999999801e-05, 2.640300000000123e-05, 2.6443999999996998e-05, 2.6929999999997928e-05, 2.640300000000123e-05, 2.662500000000234e-05, 2.64170000000008e-05, 2.6749999999998997e-05, 2.6471999999999607e-05, 2.6555000000001022e-05, 2.6542000000000926e-05, 2.693100000000087e-05, 2.668100000000062e-05, 2.6860999999999552e-05, 2.665299999999801e-05, 2.6833000000000412e-05, 2.6860999999999552e-05, 2.6972000000000107e-05, 2.69170000000013e-05, 2.6944000000000967e-05, 2.6860999999999552e-05, 2.6749999999998997e-05, 2.6833999999999886e-05, 2.670900000000323e-05, 2.6610999999999302e-05, 2.6514000000001786e-05, 2.645899999999951e-05, 2.638899999999819e-05, 2.69170000000013e-05, 2.6806000000000746e-05, 2.6597999999999206e-05, 2.6902000000002257e-05, 2.6805999999997276e-05, 2.7097999999999706e-05, 2.6570000000000066e-05, 2.6805999999997276e-05, 2.6499999999998747e-05, 2.668100000000062e-05, 2.6570000000000066e-05, 2.6402000000001757e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.972" endtime="20201110 08:37:52.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.968" endtime="20201110 08:37:52.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.977" endtime="20201110 08:37:52.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.981" endtime="20201110 08:37:53.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.979" endtime="20201110 08:37:53.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.976" endtime="20201110 08:37:53.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.600" endtime="20201110 08:37:53.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.600" endtime="20201110 08:37:53.002"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.011" endtime="20201110 08:37:53.026"></status>
</kw>
<msg timestamp="20201110 08:37:53.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.009" endtime="20201110 08:37:53.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.028" endtime="20201110 08:37:53.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.030" endtime="20201110 08:37:53.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.006" endtime="20201110 08:37:53.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.004" endtime="20201110 08:37:53.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.040" endtime="20201110 08:37:53.327"></status>
</kw>
<msg timestamp="20201110 08:37:53.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.039" endtime="20201110 08:37:53.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.331" endtime="20201110 08:37:53.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.340" endtime="20201110 08:37:53.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.036" endtime="20201110 08:37:53.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.034" endtime="20201110 08:37:53.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.347" level="INFO">${RESULT} = [{'time': 0.022725528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.769499999999772e-05, 'source_diff': 2.769499999999772e-05}, {'time': 0.022755528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.343" endtime="20201110 08:37:53.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.361" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:53.348" endtime="20201110 08:37:53.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.365" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.364" endtime="20201110 08:37:53.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.368" level="INFO">VALUE: [2.769499999999772e-05, 2.793100000000187e-05, 2.7527999999998887e-05, 2.7611999999999776e-05, 2.7556000000001496e-05, 2.744499999999747e-05, 2.7513999999999317e-05, 2.7834000000000886e-05, 2.7930000000002397e-05, 2.7388999999999192e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.8375000000000622e-05, 2.7791999999998707e-05, 2.7679999999998678e-05, 2.7888999999999692e-05, 2.7875000000000122e-05, 2.7901999999999788e-05, 2.7763999999999567e-05, 2.7540999999998983e-05, 2.7943999999998498e-05, 2.7847000000000982e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7901999999999788e-05, 2.7540999999998983e-05, 2.7805000000002272e-05, 2.7875000000000122e-05, 2.7680000000002147e-05, 2.7679999999998678e-05, 2.794500000000144e-05, 2.790300000000273e-05, 2.7458000000001037e-05, 2.7943999999998498e-05, 2.7569000000001592e-05, 2.7888999999999692e-05, 2.7875000000000122e-05, 2.791699999999883e-05, 2.7429999999998428e-05, 2.7902999999999262e-05, 2.7791999999998707e-05, 2.7568999999998123e-05, 2.7624999999999872e-05, 2.7847999999996986e-05, 2.7888999999999692e-05, 2.7777999999999137e-05, 2.790300000000273e-05, 2.7749999999999997e-05, 2.794499999999797e-05, 2.7555999999998027e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.366" endtime="20201110 08:37:53.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.362" endtime="20201110 08:37:53.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.372" endtime="20201110 08:37:53.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.376" endtime="20201110 08:37:53.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.374" endtime="20201110 08:37:53.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.370" endtime="20201110 08:37:53.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.003" endtime="20201110 08:37:53.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.002" endtime="20201110 08:37:53.397"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.406" endtime="20201110 08:37:53.422"></status>
</kw>
<msg timestamp="20201110 08:37:53.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.404" endtime="20201110 08:37:53.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.424" endtime="20201110 08:37:53.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.427" endtime="20201110 08:37:53.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.402" endtime="20201110 08:37:53.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.399" endtime="20201110 08:37:53.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.437" endtime="20201110 08:37:53.724"></status>
</kw>
<msg timestamp="20201110 08:37:53.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.435" endtime="20201110 08:37:53.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.728" endtime="20201110 08:37:53.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.736" endtime="20201110 08:37:53.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.433" endtime="20201110 08:37:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.431" endtime="20201110 08:37:53.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.743" level="INFO">${RESULT} = [{'time': 0.023139361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8625000000000872e-05, 'source_diff': 2.8625000000000872e-05}, {'time': 0.023170361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:53.740" endtime="20201110 08:37:53.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.757" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:53.744" endtime="20201110 08:37:53.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.761" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.760" endtime="20201110 08:37:53.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.763" level="INFO">VALUE: [2.8625000000000872e-05, 2.8875000000001122e-05, 2.8818999999999373e-05, 2.8764000000000567e-05, 2.8639000000000442e-05, 2.8540999999999983e-05, 2.9110999999998333e-05, 2.8818999999999373e-05, 2.8791000000000233e-05, 2.8750000000000997e-05, 2.8792000000003176e-05, 2.8778000000000137e-05, 2.869499999999872e-05, 2.89309999999994e-05, 2.8778000000000137e-05, 2.8527999999999887e-05, 2.868099999999915e-05, 2.8805999999999277e-05, 2.8389000000000192e-05, 2.8514000000000317e-05, 2.9125000000001372e-05, 2.8444000000002467e-05, 2.8500000000000747e-05, 2.8540999999999983e-05, 2.8334000000001386e-05, 2.8555999999999027e-05, 2.8861000000001552e-05, 2.8888000000001218e-05, 2.8875000000001122e-05, 2.8457999999998568e-05, 2.8485999999997708e-05, 2.8763999999997097e-05, 2.845899999999804e-05, 2.8722000000001857e-05, 2.870900000000176e-05, 2.8527000000000413e-05, 2.8847000000001982e-05, 2.8929999999999928e-05, 2.8763000000001093e-05, 2.8679999999999678e-05, 2.8666000000000108e-05, 2.8721999999998388e-05, 2.8582999999998693e-05, 2.8610999999997833e-05, 2.8540999999999983e-05, 2.8597000000001732e-05, 2.8540999999999983e-05, 2.8722000000001857e-05, 2.8666999999999582e-05, 2.8832999999998943e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.762" endtime="20201110 08:37:53.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.757" endtime="20201110 08:37:53.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.767" endtime="20201110 08:37:53.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.771" endtime="20201110 08:37:53.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.769" endtime="20201110 08:37:53.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.765" endtime="20201110 08:37:53.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.398" endtime="20201110 08:37:53.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.397" endtime="20201110 08:37:53.794"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.812" endtime="20201110 08:37:53.831"></status>
</kw>
<msg timestamp="20201110 08:37:53.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.809" endtime="20201110 08:37:53.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.834" endtime="20201110 08:37:53.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.839" endtime="20201110 08:37:53.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.803" endtime="20201110 08:37:53.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.799" endtime="20201110 08:37:53.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.860" endtime="20201110 08:37:54.153"></status>
</kw>
<msg timestamp="20201110 08:37:54.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035269972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.856" endtime="20201110 08:37:54.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035269972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035299361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.158" endtime="20201110 08:37:54.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.167" endtime="20201110 08:37:54.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.851" endtime="20201110 08:37:54.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.847" endtime="20201110 08:37:54.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.174" level="INFO">${RESULT} = [{'time': 0.035299361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.938900000000466e-05, 'source_diff': 2.938900000000466e-05}, {'time': 0.035331375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.170" endtime="20201110 08:37:54.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.188" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:54.175" endtime="20201110 08:37:54.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.193" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.192" endtime="20201110 08:37:54.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.195" level="INFO">VALUE: [2.938900000000466e-05, 2.9749999999995058e-05, 2.9819999999999847e-05, 2.9430999999996432e-05, 2.9777999999994198e-05, 2.9846999999999513e-05, 2.9638999999997973e-05, 2.944500000000294e-05, 2.9944999999996502e-05, 2.9402999999997292e-05, 2.995900000000301e-05, 2.9694999999996252e-05, 2.9486000000002177e-05, 2.9750000000001997e-05, 2.9874999999998653e-05, 2.9902999999997792e-05, 2.9833999999999417e-05, 2.945900000000251e-05, 2.9624999999998403e-05, 2.9472999999995142e-05, 2.9860999999999083e-05, 2.9542000000000457e-05, 2.9778000000001137e-05, 2.9569999999999597e-05, 2.9708999999995822e-05, 2.9514000000001317e-05, 2.990199999999832e-05, 2.9708000000003287e-05, 2.9374999999998153e-05, 2.9930999999996932e-05, 2.990199999999832e-05, 2.9874999999998653e-05, 2.9722000000002857e-05, 2.990199999999832e-05, 2.9805000000000803e-05, 2.937500000000509e-05, 2.9527000000001413e-05, 2.9722000000002857e-05, 2.9541000000000983e-05, 2.969399999999678e-05, 2.9930000000004398e-05, 2.9500000000001747e-05, 2.9749999999995058e-05, 2.9541000000000983e-05, 2.94579999999961e-05, 2.9708000000003287e-05, 2.941599999999739e-05, 2.9930000000004398e-05, 2.9472000000002607e-05, 2.94579999999961e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.194" endtime="20201110 08:37:54.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.189" endtime="20201110 08:37:54.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.199" endtime="20201110 08:37:54.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.202" endtime="20201110 08:37:54.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.201" endtime="20201110 08:37:54.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.197" endtime="20201110 08:37:54.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.796" endtime="20201110 08:37:54.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.795" endtime="20201110 08:37:54.223"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.232" endtime="20201110 08:37:54.247"></status>
</kw>
<msg timestamp="20201110 08:37:54.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.230" endtime="20201110 08:37:54.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.249" endtime="20201110 08:37:54.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.251" endtime="20201110 08:37:54.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.228" endtime="20201110 08:37:54.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.226" endtime="20201110 08:37:54.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.261" endtime="20201110 08:37:54.548"></status>
</kw>
<msg timestamp="20201110 08:37:54.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.259" endtime="20201110 08:37:54.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.552" endtime="20201110 08:37:54.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.560" endtime="20201110 08:37:54.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.257" endtime="20201110 08:37:54.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.255" endtime="20201110 08:37:54.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.567" level="INFO">${RESULT} = [{'time': 0.022053347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.070800000000082e-05, 'source_diff': 3.070800000000082e-05}, {'time': 0.022086347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.564" endtime="20201110 08:37:54.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.581" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:54.568" endtime="20201110 08:37:54.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.585" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.584" endtime="20201110 08:37:54.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.588" level="INFO">VALUE: [3.070800000000082e-05, 3.069399999999778e-05, 3.090299999999879e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.0360999999999583e-05, 3.097300000000011e-05, 3.0388999999998723e-05, 3.088899999999922e-05, 3.065299999999854e-05, 3.088899999999922e-05, 3.0416999999997862e-05, 3.143099999999843e-05, 3.068100000000115e-05, 3.065300000000201e-05, 3.0431000000000902e-05, 3.088899999999922e-05, 3.079199999999824e-05, 3.065300000000201e-05, 3.084700000000051e-05, 3.0417000000001332e-05, 3.07639999999991e-05, 3.052800000000189e-05, 3.0416999999997862e-05, 3.11249999999999e-05, 3.0388999999998723e-05, 3.094500000000097e-05, 3.0847999999999987e-05, 3.06249999999994e-05, 3.0485999999999708e-05, 3.068100000000115e-05, 3.06249999999994e-05, 3.058300000000069e-05, 3.072200000000039e-05, 3.05700000000006e-05, 3.0804999999998334e-05, 3.0417000000001332e-05, 3.084700000000051e-05, 3.058300000000069e-05, 3.083300000000094e-05, 3.0402000000002288e-05, 3.040199999999882e-05, 3.091600000000236e-05, 3.042999999999796e-05, 3.063899999999897e-05, 3.058300000000069e-05, 3.0485999999999708e-05, 3.0554999999998084e-05, 3.058300000000069e-05, 3.044399999999753e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.586" endtime="20201110 08:37:54.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.581" endtime="20201110 08:37:54.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.591" endtime="20201110 08:37:54.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.595" endtime="20201110 08:37:54.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.593" endtime="20201110 08:37:54.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.590" endtime="20201110 08:37:54.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.224" endtime="20201110 08:37:54.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.223" endtime="20201110 08:37:54.619"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.638" endtime="20201110 08:37:54.656"></status>
</kw>
<msg timestamp="20201110 08:37:54.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.634" endtime="20201110 08:37:54.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.659" endtime="20201110 08:37:54.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.664" endtime="20201110 08:37:54.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.629" endtime="20201110 08:37:54.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.624" endtime="20201110 08:37:54.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.686" endtime="20201110 08:37:54.974"></status>
</kw>
<msg timestamp="20201110 08:37:54.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036792806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.682" endtime="20201110 08:37:54.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036760597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036792806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.978" endtime="20201110 08:37:54.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.986" endtime="20201110 08:37:54.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.677" endtime="20201110 08:37:54.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.673" endtime="20201110 08:37:54.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.993" level="INFO">${RESULT} = [{'time': 0.036792806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.220899999999832e-05, 'source_diff': 3.220899999999832e-05}, {'time': 0.036826819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.989" endtime="20201110 08:37:54.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:54.994" endtime="20201110 08:37:55.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.011" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.010" endtime="20201110 08:37:55.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.013" level="INFO">VALUE: [3.220899999999832e-05, 3.140199999999982e-05, 3.14170000000058e-05, 3.191599999999989e-05, 3.1527000000003413e-05, 3.154100000000298e-05, 3.167999999999921e-05, 3.170799999999835e-05, 3.166599999999964e-05, 3.1776999999996725e-05, 3.1540999999996044e-05, 3.163899999999997e-05, 3.155500000000255e-05, 3.187500000000065e-05, 3.191599999999989e-05, 3.154100000000298e-05, 3.184700000000151e-05, 3.167999999999921e-05, 3.161100000000083e-05, 3.151399999999638e-05, 3.169400000000572e-05, 3.155600000000203e-05, 3.154100000000298e-05, 3.170799999999835e-05, 3.176400000000357e-05, 3.156900000000212e-05, 3.194399999999903e-05, 3.170799999999835e-05, 3.1874999999993714e-05, 3.14170000000058e-05, 3.150000000000375e-05, 3.187500000000065e-05, 3.187500000000065e-05, 3.161100000000083e-05, 3.138899999999972e-05, 3.152799999999595e-05, 3.159700000000126e-05, 3.1860999999994144e-05, 3.193100000000587e-05, 3.152800000000289e-05, 3.166699999999911e-05, 3.138899999999972e-05, 3.184800000000099e-05, 3.1444999999998e-05, 3.1862000000000557e-05, 3.168099999999868e-05, 3.172199999999792e-05, 3.2138000000001e-05, 3.187500000000065e-05, 3.150000000000375e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.012" endtime="20201110 08:37:55.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.007" endtime="20201110 08:37:55.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.017" endtime="20201110 08:37:55.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.021" endtime="20201110 08:37:55.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.019" endtime="20201110 08:37:55.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.015" endtime="20201110 08:37:55.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.621" endtime="20201110 08:37:55.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.620" endtime="20201110 08:37:55.041"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.050" endtime="20201110 08:37:55.066"></status>
</kw>
<msg timestamp="20201110 08:37:55.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.049" endtime="20201110 08:37:55.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.067" endtime="20201110 08:37:55.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.070" endtime="20201110 08:37:55.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.046" endtime="20201110 08:37:55.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.044" endtime="20201110 08:37:55.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.080" endtime="20201110 08:37:55.365"></status>
</kw>
<msg timestamp="20201110 08:37:55.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:55.078" endtime="20201110 08:37:55.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:55.371" endtime="20201110 08:37:55.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.382" endtime="20201110 08:37:55.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.076" endtime="20201110 08:37:55.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.074" endtime="20201110 08:37:55.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.393" level="INFO">${RESULT} = [{'time': 0.02216025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3374999999998683e-05, 'source_diff': 3.3374999999998683e-05}, {'time': 0.022195222, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:55.389" endtime="20201110 08:37:55.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:55.395" endtime="20201110 08:37:55.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.413" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.412" endtime="20201110 08:37:55.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.416" level="INFO">VALUE: [3.3374999999998683e-05, 3.2568999999999654e-05, 3.238900000000072e-05, 3.31250000000019e-05, 3.255599999999956e-05, 3.277800000000067e-05, 3.273600000000196e-05, 3.24579999999991e-05, 3.275000000000153e-05, 3.2555000000000084e-05, 3.291700000000036e-05, 3.247199999999867e-05, 3.249999999999781e-05, 3.269499999999925e-05, 3.252800000000042e-05, 3.270799999999935e-05, 3.275000000000153e-05, 3.283399999999895e-05, 3.2444999999999e-05, 3.27640000000011e-05, 3.283400000000242e-05, 3.247300000000161e-05, 3.3374999999998683e-05, 3.254199999999999e-05, 3.277800000000067e-05, 3.259799999999827e-05, 3.284799999999852e-05, 3.255599999999956e-05, 3.240300000000029e-05, 3.247300000000161e-05, 3.2805000000000334e-05, 3.273700000000143e-05, 3.252800000000042e-05, 3.248699999999771e-05, 3.2832999999999474e-05, 3.238799999999778e-05, 3.2874999999998183e-05, 3.2513000000001374e-05, 3.2763000000001624e-05, 3.2818999999999904e-05, 3.266600000000064e-05, 3.2555000000000084e-05, 3.2832999999999474e-05, 3.270800000000282e-05, 3.247200000000214e-05, 3.272200000000239e-05, 3.240300000000029e-05, 3.26389999999975e-05, 3.2874999999998183e-05, 3.2596999999998794e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.414" endtime="20201110 08:37:55.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.409" endtime="20201110 08:37:55.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.424" endtime="20201110 08:37:55.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.427" endtime="20201110 08:37:55.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.426" endtime="20201110 08:37:55.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.422" endtime="20201110 08:37:55.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.042" endtime="20201110 08:37:55.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.042" endtime="20201110 08:37:55.448"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.457" endtime="20201110 08:37:55.472"></status>
</kw>
<msg timestamp="20201110 08:37:55.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.455" endtime="20201110 08:37:55.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.474" endtime="20201110 08:37:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.477" endtime="20201110 08:37:55.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.453" endtime="20201110 08:37:55.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.451" endtime="20201110 08:37:55.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.487" endtime="20201110 08:37:55.775"></status>
</kw>
<msg timestamp="20201110 08:37:55.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.485" endtime="20201110 08:37:55.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.779" endtime="20201110 08:37:55.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.787" endtime="20201110 08:37:55.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.482" endtime="20201110 08:37:55.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.481" endtime="20201110 08:37:55.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.794" level="INFO">${RESULT} = [{'time': 0.022165278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.383399999999995e-05, 'source_diff': 3.383399999999995e-05}, {'time': 0.022201236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:55.791" endtime="20201110 08:37:55.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:55.795" endtime="20201110 08:37:55.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.813" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.812" endtime="20201110 08:37:55.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.816" level="INFO">VALUE: [3.383399999999995e-05, 3.352799999999795e-05, 3.351399999999838e-05, 3.373599999999949e-05, 3.365299999999807e-05, 3.3833000000000474e-05, 3.351400000000185e-05, 3.3610999999999364e-05, 3.380600000000081e-05, 3.4374999999999684e-05, 3.3860999999999614e-05, 3.3624999999998934e-05, 3.3388999999998253e-05, 3.372199999999992e-05, 3.370899999999982e-05, 3.3540999999998045e-05, 3.383399999999995e-05, 3.3445e-05, 3.352800000000142e-05, 3.388900000000222e-05, 3.345899999999957e-05, 3.3860999999999614e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.382000000000038e-05, 3.37640000000021e-05, 3.345899999999957e-05, 3.380600000000081e-05, 3.391699999999789e-05, 3.391599999999842e-05, 3.3847000000000044e-05, 3.390300000000179e-05, 3.3596999999999794e-05, 3.3860999999999614e-05, 3.3638999999998503e-05, 3.3569000000000654e-05, 3.36250000000024e-05, 3.351399999999838e-05, 3.341600000000139e-05, 3.373599999999949e-05, 3.34580000000001e-05, 3.393000000000146e-05, 3.37779999999982e-05, 3.374999999999906e-05, 3.3569000000000654e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.3805000000001334e-05, 3.3388999999998253e-05, 3.372199999999992e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.814" endtime="20201110 08:37:55.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.809" endtime="20201110 08:37:55.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.819" endtime="20201110 08:37:55.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.823" endtime="20201110 08:37:55.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.821" endtime="20201110 08:37:55.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.818" endtime="20201110 08:37:55.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.449" endtime="20201110 08:37:55.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.449" endtime="20201110 08:37:55.844"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.852" endtime="20201110 08:37:55.867"></status>
</kw>
<msg timestamp="20201110 08:37:55.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.851" endtime="20201110 08:37:55.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.869" endtime="20201110 08:37:55.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.871" endtime="20201110 08:37:55.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.848" endtime="20201110 08:37:55.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.846" endtime="20201110 08:37:55.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.882" endtime="20201110 08:37:56.168"></status>
</kw>
<msg timestamp="20201110 08:37:56.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.880" endtime="20201110 08:37:56.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.172" endtime="20201110 08:37:56.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.180" endtime="20201110 08:37:56.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.877" endtime="20201110 08:37:56.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.876" endtime="20201110 08:37:56.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.187" level="INFO">${RESULT} = [{'time': 0.022182375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5097000000001294e-05, 'source_diff': 3.5097000000001294e-05}, {'time': 0.022219417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.184" endtime="20201110 08:37:56.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.200" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:56.188" endtime="20201110 08:37:56.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.205" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.204" endtime="20201110 08:37:56.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.208" level="INFO">VALUE: [3.5097000000001294e-05, 3.447300000000014e-05, 3.4568999999998185e-05, 3.4597000000000794e-05, 3.5110999999997394e-05, 3.463900000000297e-05, 3.480600000000181e-05, 3.4875000000000184e-05, 3.4445000000001e-05, 3.475000000000006e-05, 3.480599999999834e-05, 3.4611000000000364e-05, 3.493099999999846e-05, 3.47779999999992e-05, 3.473600000000049e-05, 3.4445000000001e-05, 3.4624999999999934e-05, 3.473600000000049e-05, 3.493100000000193e-05, 3.437500000000315e-05, 3.445900000000057e-05, 3.459800000000027e-05, 3.476399999999963e-05, 3.4374999999999684e-05, 3.4902999999999323e-05, 3.443000000000196e-05, 3.475000000000006e-05, 3.479199999999877e-05, 3.4847000000001044e-05, 3.448600000000024e-05, 3.4624999999999934e-05, 3.475000000000006e-05, 3.490199999999985e-05, 3.444400000000153e-05, 3.497200000000117e-05, 3.4526999999999475e-05, 3.4833000000001474e-05, 3.469400000000178e-05, 3.4582999999997754e-05, 3.476399999999963e-05, 3.472200000000092e-05, 3.449999999999981e-05, 3.437500000000315e-05, 3.449999999999981e-05, 3.448600000000024e-05, 3.441700000000186e-05, 3.4861000000000614e-05, 3.444399999999806e-05, 3.44580000000011e-05, 3.4832999999998004e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.206" endtime="20201110 08:37:56.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.201" endtime="20201110 08:37:56.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.211" endtime="20201110 08:37:56.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.215" endtime="20201110 08:37:56.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.213" endtime="20201110 08:37:56.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.210" endtime="20201110 08:37:56.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.845" endtime="20201110 08:37:56.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.844" endtime="20201110 08:37:56.235"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.244" endtime="20201110 08:37:56.259"></status>
</kw>
<msg timestamp="20201110 08:37:56.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.242" endtime="20201110 08:37:56.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.261" endtime="20201110 08:37:56.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.263" endtime="20201110 08:37:56.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.240" endtime="20201110 08:37:56.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.238" endtime="20201110 08:37:56.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.273" endtime="20201110 08:37:56.559"></status>
</kw>
<msg timestamp="20201110 08:37:56.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.272" endtime="20201110 08:37:56.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.563" endtime="20201110 08:37:56.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.572" endtime="20201110 08:37:56.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.269" endtime="20201110 08:37:56.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.267" endtime="20201110 08:37:56.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.579" level="INFO">${RESULT} = [{'time': 0.022208083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6291000000000795e-05, 'source_diff': 3.6291000000000795e-05}, {'time': 0.022247097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.575" endtime="20201110 08:37:56.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.593" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:56.580" endtime="20201110 08:37:56.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.599" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.598" endtime="20201110 08:37:56.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.602" level="INFO">VALUE: [3.6291000000000795e-05, 3.6375000000001684e-05, 3.57780000000002e-05, 3.5611000000001364e-05, 3.548599999999777e-05, 3.6346999999999074e-05, 3.547200000000167e-05, 3.5582999999998755e-05, 3.5860999999998144e-05, 3.5916999999999893e-05, 3.554199999999952e-05, 3.5804999999999865e-05, 3.5832999999999005e-05, 3.54719999999982e-05, 3.5445000000002e-05, 3.549999999999734e-05, 3.573600000000149e-05, 3.575000000000106e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.5653000000000074e-05, 3.5596999999998324e-05, 3.593099999999946e-05, 3.556999999999866e-05, 3.572299999999792e-05, 3.573599999999802e-05, 3.5653000000000074e-05, 3.570899999999835e-05, 3.548600000000124e-05, 3.575000000000106e-05, 3.566700000000311e-05, 3.552799999999995e-05, 3.570900000000182e-05, 3.570900000000182e-05, 3.5541000000000045e-05, 3.548600000000124e-05, 3.570900000000182e-05, 3.5653000000000074e-05, 3.5596999999998324e-05, 3.5527000000000475e-05, 3.569400000000278e-05, 3.545799999999863e-05, 3.5860999999998144e-05, 3.570799999999888e-05, 3.5568999999999185e-05, 3.5874999999997714e-05, 3.550000000000081e-05, 3.576400000000063e-05, 3.5653000000000074e-05, 3.567999999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.600" endtime="20201110 08:37:56.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.594" endtime="20201110 08:37:56.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.606" endtime="20201110 08:37:56.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.609" endtime="20201110 08:37:56.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.608" endtime="20201110 08:37:56.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.604" endtime="20201110 08:37:56.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.236" endtime="20201110 08:37:56.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.236" endtime="20201110 08:37:56.630"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.639" endtime="20201110 08:37:56.656"></status>
</kw>
<msg timestamp="20201110 08:37:56.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.638" endtime="20201110 08:37:56.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.657" endtime="20201110 08:37:56.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.660" endtime="20201110 08:37:56.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.635" endtime="20201110 08:37:56.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.633" endtime="20201110 08:37:56.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.670" endtime="20201110 08:37:56.980"></status>
</kw>
<msg timestamp="20201110 08:37:56.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.669" endtime="20201110 08:37:56.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023086556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.984" endtime="20201110 08:37:56.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.993" endtime="20201110 08:37:56.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.666" endtime="20201110 08:37:56.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.664" endtime="20201110 08:37:56.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.000" level="INFO">${RESULT} = [{'time': 0.023086556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.720899999999985e-05, 'source_diff': 3.720899999999985e-05}, {'time': 0.023125569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:56.996" endtime="20201110 08:37:57.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:57.001" endtime="20201110 08:37:57.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.018" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.017" endtime="20201110 08:37:57.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.021" level="INFO">VALUE: [3.720899999999985e-05, 3.674999999999859e-05, 3.670899999999935e-05, 3.652800000000095e-05, 3.648700000000171e-05, 3.7388999999998784e-05, 3.674999999999859e-05, 3.6527000000001475e-05, 3.6569000000000185e-05, 3.648599999999877e-05, 3.6624999999998464e-05, 3.6833000000000005e-05, 3.672200000000292e-05, 3.6388999999997784e-05, 3.669499999999978e-05, 3.645799999999963e-05, 3.675000000000206e-05, 3.667999999999727e-05, 3.669400000000031e-05, 3.6846999999999575e-05, 3.6625000000001934e-05, 3.6611000000002364e-05, 3.6917000000000894e-05, 3.6860999999999144e-05, 3.655600000000009e-05, 3.680600000000034e-05, 3.6889000000001754e-05, 3.674999999999859e-05, 3.677799999999773e-05, 3.680600000000034e-05, 3.6846999999999575e-05, 3.644499999999953e-05, 3.672199999999945e-05, 3.6596999999999325e-05, 3.6846999999999575e-05, 3.6611000000002364e-05, 3.6667000000000644e-05, 3.649999999999834e-05, 3.6389000000001254e-05, 3.6667000000000644e-05, 3.647300000000214e-05, 3.644499999999953e-05, 3.661199999999837e-05, 3.654200000000052e-05, 3.648600000000224e-05, 3.649999999999834e-05, 3.669499999999978e-05, 3.6430999999999963e-05, 3.672199999999945e-05, 3.640200000000135e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.020" endtime="20201110 08:37:57.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.015" endtime="20201110 08:37:57.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.025" endtime="20201110 08:37:57.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.028" endtime="20201110 08:37:57.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.027" endtime="20201110 08:37:57.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.023" endtime="20201110 08:37:57.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.631" endtime="20201110 08:37:57.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.631" endtime="20201110 08:37:57.049"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.061" endtime="20201110 08:37:57.079"></status>
</kw>
<msg timestamp="20201110 08:37:57.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.058" endtime="20201110 08:37:57.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.080" endtime="20201110 08:37:57.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.086" endtime="20201110 08:37:57.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.054" endtime="20201110 08:37:57.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.052" endtime="20201110 08:37:57.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.097" endtime="20201110 08:37:57.383"></status>
</kw>
<msg timestamp="20201110 08:37:57.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026732014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026769792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.096" endtime="20201110 08:37:57.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026732014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026769792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.388" endtime="20201110 08:37:57.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.396" endtime="20201110 08:37:57.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.093" endtime="20201110 08:37:57.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.091" endtime="20201110 08:37:57.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.403" level="INFO">${RESULT} = [{'time': 0.026769792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77780000000022e-05, 'source_diff': 3.77780000000022e-05}, {'time': 0.026810806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:57.400" endtime="20201110 08:37:57.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.418" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:57.404" endtime="20201110 08:37:57.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.423" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.422" endtime="20201110 08:37:57.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.426" level="INFO">VALUE: [3.77780000000022e-05, 3.831999999999794e-05, 3.745800000000063e-05, 3.7610999999999895e-05, 3.759800000000327e-05, 3.7804999999998395e-05, 3.742999999999802e-05, 3.7569000000001185e-05, 3.769400000000131e-05, 3.7776999999999256e-05, 3.7569000000001185e-05, 3.7804999999998395e-05, 3.7805000000001865e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.744400000000106e-05, 3.7624999999999464e-05, 3.749999999999934e-05, 3.748599999999977e-05, 3.744400000000106e-05, 3.770800000000088e-05, 3.744400000000106e-05, 3.784800000000005e-05, 3.776399999999916e-05, 3.749999999999934e-05, 3.776399999999916e-05, 3.745799999999716e-05, 3.755600000000109e-05, 3.77780000000022e-05, 3.7583000000000755e-05, 3.795800000000113e-05, 3.7888999999999284e-05, 3.781999999999744e-05, 3.77919999999983e-05, 3.7680999999997744e-05, 3.7945000000001033e-05, 3.757000000000066e-05, 3.777799999999873e-05, 3.752800000000195e-05, 3.7403000000001824e-05, 3.757000000000066e-05, 3.7403000000001824e-05, 3.773600000000002e-05, 3.7417000000001394e-05, 3.7569000000001185e-05, 3.7624999999999464e-05, 3.7402999999998354e-05, 3.7762999999999686e-05, 3.7888999999999284e-05, 3.7762999999999686e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.424" endtime="20201110 08:37:57.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.419" endtime="20201110 08:37:57.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.430" endtime="20201110 08:37:57.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.433" endtime="20201110 08:37:57.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.432" endtime="20201110 08:37:57.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.428" endtime="20201110 08:37:57.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.050" endtime="20201110 08:37:57.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.050" endtime="20201110 08:37:57.455"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.464" endtime="20201110 08:37:57.479"></status>
</kw>
<msg timestamp="20201110 08:37:57.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.462" endtime="20201110 08:37:57.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.481" endtime="20201110 08:37:57.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.483" endtime="20201110 08:37:57.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.459" endtime="20201110 08:37:57.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.457" endtime="20201110 08:37:57.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.494" endtime="20201110 08:37:57.779"></status>
</kw>
<msg timestamp="20201110 08:37:57.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.492" endtime="20201110 08:37:57.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.783" endtime="20201110 08:37:57.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.792" endtime="20201110 08:37:57.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.489" endtime="20201110 08:37:57.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.488" endtime="20201110 08:37:57.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.799" level="INFO">${RESULT} = [{'time': 0.022759097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8402999999999354e-05, 'source_diff': 3.8402999999999354e-05}, {'time': 0.022800111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:57.796" endtime="20201110 08:37:57.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:57.800" endtime="20201110 08:37:57.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.818" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.817" endtime="20201110 08:37:57.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.820" level="INFO">VALUE: [3.8402999999999354e-05, 3.8667000000002644e-05, 3.894399999999909e-05, 3.844399999999859e-05, 3.857000000000166e-05, 3.84859999999973e-05, 3.8459000000001103e-05, 3.852799999999948e-05, 3.8388999999999784e-05, 3.8875000000000715e-05, 3.9360999999998175e-05, 3.8846999999998105e-05, 3.8667000000002644e-05, 3.852799999999948e-05, 3.877799999999973e-05, 3.845799999999816e-05, 3.858399999999776e-05, 3.84720000000012e-05, 3.9389000000000784e-05, 3.8403000000002824e-05, 3.8459000000001103e-05, 3.847300000000067e-05, 3.8889000000000284e-05, 3.8403000000002824e-05, 3.8681000000002214e-05, 3.8818999999998965e-05, 3.895799999999866e-05, 3.890200000000038e-05, 3.8790999999999826e-05, 3.838800000000031e-05, 3.890200000000038e-05, 3.8777000000000256e-05, 3.8596999999997855e-05, 3.891599999999995e-05, 3.8889000000000284e-05, 3.8554999999999146e-05, 3.850000000000034e-05, 3.8639000000000034e-05, 3.8888999999996815e-05, 3.8902999999999854e-05, 3.877799999999973e-05, 3.892999999999952e-05, 3.869399999999884e-05, 3.8652999999999604e-05, 3.892999999999952e-05, 3.897199999999823e-05, 3.877799999999973e-05, 3.8445000000001534e-05, 3.845799999999816e-05, 3.855600000000209e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.819" endtime="20201110 08:37:57.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.814" endtime="20201110 08:37:57.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.824" endtime="20201110 08:37:57.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.828" endtime="20201110 08:37:57.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.826" endtime="20201110 08:37:57.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.822" endtime="20201110 08:37:57.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.456" endtime="20201110 08:37:57.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.455" endtime="20201110 08:37:57.849"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.858" endtime="20201110 08:37:57.874"></status>
</kw>
<msg timestamp="20201110 08:37:57.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.856" endtime="20201110 08:37:57.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.876" endtime="20201110 08:37:57.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.878" endtime="20201110 08:37:57.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.854" endtime="20201110 08:37:57.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.851" endtime="20201110 08:37:57.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.889" endtime="20201110 08:37:58.175"></status>
</kw>
<msg timestamp="20201110 08:37:58.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.887" endtime="20201110 08:37:58.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.180" endtime="20201110 08:37:58.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.190" endtime="20201110 08:37:58.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.884" endtime="20201110 08:37:58.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.882" endtime="20201110 08:37:58.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.199" level="INFO">${RESULT} = [{'time': 0.022596181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.999999999999837e-05, 'source_diff': 3.999999999999837e-05}, {'time': 0.022638181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.195" endtime="20201110 08:37:58.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:58.200" endtime="20201110 08:37:58.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.217" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.216" endtime="20201110 08:37:58.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.219" level="INFO">VALUE: [3.999999999999837e-05, 3.9667000000000174e-05, 3.998600000000227e-05, 3.982000000000291e-05, 4.015200000000163e-05, 3.983399999999901e-05, 3.977799999999726e-05, 3.952800000000048e-05, 3.9680999999999744e-05, 3.973700000000149e-05, 3.965200000000113e-05, 3.976400000000116e-05, 3.938800000000131e-05, 3.944400000000306e-05, 3.952800000000048e-05, 3.9805000000000396e-05, 3.9776999999997786e-05, 3.9555000000000146e-05, 3.979199999999683e-05, 3.976399999999769e-05, 4.0389000000001785e-05, 3.973600000000202e-05, 3.9389000000000784e-05, 3.9861000000002145e-05, 3.9555000000000146e-05, 3.9832999999999535e-05, 3.9874999999998245e-05, 3.972199999999898e-05, 4.0374999999998745e-05, 3.9596999999998855e-05, 3.9625000000001465e-05, 3.952800000000048e-05, 3.9597000000002325e-05, 3.948600000000177e-05, 3.977800000000073e-05, 3.995799999999966e-05, 3.981999999999944e-05, 3.9624999999997995e-05, 3.955599999999962e-05, 3.952800000000048e-05, 3.983399999999901e-05, 4.0125000000001965e-05, 3.948700000000124e-05, 3.950000000000134e-05, 3.99859999999988e-05, 3.9431000000002964e-05, 3.9625000000001465e-05, 3.986199999999815e-05, 3.955599999999962e-05, 3.958399999999876e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.218" endtime="20201110 08:37:58.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.213" endtime="20201110 08:37:58.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.223" endtime="20201110 08:37:58.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.227" endtime="20201110 08:37:58.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.226" endtime="20201110 08:37:58.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.221" endtime="20201110 08:37:58.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.850" endtime="20201110 08:37:58.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.849" endtime="20201110 08:37:58.248"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.257" endtime="20201110 08:37:58.272"></status>
</kw>
<msg timestamp="20201110 08:37:58.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.255" endtime="20201110 08:37:58.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.274" endtime="20201110 08:37:58.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.276" endtime="20201110 08:37:58.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.253" endtime="20201110 08:37:58.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.251" endtime="20201110 08:37:58.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.287" endtime="20201110 08:37:58.588"></status>
</kw>
<msg timestamp="20201110 08:37:58.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.285" endtime="20201110 08:37:58.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.592" endtime="20201110 08:37:58.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.601" endtime="20201110 08:37:58.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.282" endtime="20201110 08:37:58.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.281" endtime="20201110 08:37:58.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.607" level="INFO">${RESULT} = [{'time': 0.022246542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0931000000000994e-05, 'source_diff': 4.0931000000000994e-05}, {'time': 0.022289542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.604" endtime="20201110 08:37:58.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:58.608" endtime="20201110 08:37:58.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.626" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.625" endtime="20201110 08:37:58.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.629" level="INFO">VALUE: [4.0931000000000994e-05, 4.0874999999999245e-05, 4.09859999999998e-05, 4.0610999999999425e-05, 4.083400000000001e-05, 4.0931000000000994e-05, 4.070799999999694e-05, 4.083400000000001e-05, 4.038800000000231e-05, 4.0804999999997926e-05, 4.068000000000127e-05, 4.1181000000001244e-05, 4.073599999999955e-05, 4.06660000000017e-05, 4.0388999999998315e-05, 4.0555000000001146e-05, 4.044400000000059e-05, 4.094399999999762e-05, 4.1374999999999745e-05, 4.06799999999978e-05, 4.041600000000145e-05, 4.0847000000000105e-05, 4.0596999999999855e-05, 4.093000000000152e-05, 4.045800000000016e-05, 4.069400000000084e-05, 4.076400000000216e-05, 4.0916999999997955e-05, 4.049999999999887e-05, 4.0889000000002285e-05, 4.0833000000000536e-05, 4.0554999999997676e-05, 4.072199999999998e-05, 4.0931000000000994e-05, 4.07920000000013e-05, 4.0681000000000744e-05, 4.0667000000001174e-05, 4.0860999999999675e-05, 4.0874999999999245e-05, 4.0860999999999675e-05, 4.0473000000002674e-05, 4.04859999999993e-05, 4.0681000000000744e-05, 4.1124999999999495e-05, 4.0833000000000536e-05, 4.0639000000002035e-05, 4.083400000000001e-05, 4.088799999999934e-05, 4.0582999999996816e-05, 4.092999999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.627" endtime="20201110 08:37:58.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.622" endtime="20201110 08:37:58.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.632" endtime="20201110 08:37:58.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.636" endtime="20201110 08:37:58.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.634" endtime="20201110 08:37:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.631" endtime="20201110 08:37:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.249" endtime="20201110 08:37:58.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.249" endtime="20201110 08:37:58.657"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.665" endtime="20201110 08:37:58.682"></status>
</kw>
<msg timestamp="20201110 08:37:58.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.664" endtime="20201110 08:37:58.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.683" endtime="20201110 08:37:58.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.686" endtime="20201110 08:37:58.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.661" endtime="20201110 08:37:58.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.659" endtime="20201110 08:37:58.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.696" endtime="20201110 08:37:58.981"></status>
</kw>
<msg timestamp="20201110 08:37:58.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.694" endtime="20201110 08:37:58.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.985" endtime="20201110 08:37:58.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.993" endtime="20201110 08:37:58.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.692" endtime="20201110 08:37:58.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.690" endtime="20201110 08:37:58.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.000" level="INFO">${RESULT} = [{'time': 0.021981625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1819000000001966e-05, 'source_diff': 4.1819000000001966e-05}, {'time': 0.022025639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.996" endtime="20201110 08:37:59.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:59.001" endtime="20201110 08:37:59.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.019" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.018" endtime="20201110 08:37:59.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.021" level="INFO">VALUE: [4.1819000000001966e-05, 4.1832999999998066e-05, 4.1430999999998025e-05, 4.1695000000001314e-05, 4.1930999999998525e-05, 4.147199999999726e-05, 4.157000000000119e-05, 4.173600000000055e-05, 4.1596999999997386e-05, 4.1431000000001494e-05, 4.1402999999998885e-05, 4.147199999999726e-05, 4.155600000000162e-05, 4.1709000000000884e-05, 4.1708999999997415e-05, 4.1374999999999745e-05, 4.169399999999837e-05, 4.1667000000002175e-05, 4.1638999999999565e-05, 4.1473000000000204e-05, 4.16799999999988e-05, 4.141599999999898e-05, 4.170799999999794e-05, 4.1512999999999967e-05, 4.1583000000001286e-05, 4.1554999999998676e-05, 4.1638999999999565e-05, 4.1611000000000425e-05, 4.192999999999905e-05, 4.1582999999997816e-05, 4.173600000000055e-05, 4.1902999999999385e-05, 4.195800000000166e-05, 4.145800000000116e-05, 4.169399999999837e-05, 4.1888999999999815e-05, 4.1610999999996956e-05, 4.1416999999998455e-05, 4.1638999999999565e-05, 4.1847000000001106e-05, 4.1846999999997636e-05, 4.2346999999998136e-05, 4.1888999999999815e-05, 4.1611000000000425e-05, 4.175000000000012e-05, 4.151399999999944e-05, 4.1944999999998095e-05, 4.18059999999984e-05, 4.14860000000003e-05, 4.155599999999815e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.020" endtime="20201110 08:37:59.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.015" endtime="20201110 08:37:59.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.026" endtime="20201110 08:37:59.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.029" endtime="20201110 08:37:59.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.028" endtime="20201110 08:37:59.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.023" endtime="20201110 08:37:59.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.658" endtime="20201110 08:37:59.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.657" endtime="20201110 08:37:59.050"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.059" endtime="20201110 08:37:59.075"></status>
</kw>
<msg timestamp="20201110 08:37:59.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.057" endtime="20201110 08:37:59.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.076" endtime="20201110 08:37:59.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.079" endtime="20201110 08:37:59.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.055" endtime="20201110 08:37:59.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.053" endtime="20201110 08:37:59.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.089" endtime="20201110 08:37:59.374"></status>
</kw>
<msg timestamp="20201110 08:37:59.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02190675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:59.087" endtime="20201110 08:37:59.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02190675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021949875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:59.378" endtime="20201110 08:37:59.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.387" endtime="20201110 08:37:59.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.085" endtime="20201110 08:37:59.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.083" endtime="20201110 08:37:59.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.393" level="INFO">${RESULT} = [{'time': 0.021949875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3125000000001495e-05, 'source_diff': 4.3125000000001495e-05}, {'time': 0.021994875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:59.390" endtime="20201110 08:37:59.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:59.394" endtime="20201110 08:37:59.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.411" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.410" endtime="20201110 08:37:59.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.414" level="INFO">VALUE: [4.3125000000001495e-05, 4.2611000000001426e-05, 4.28059999999994e-05, 4.276400000000069e-05, 4.251400000000044e-05, 4.2832999999999066e-05, 4.283399999999854e-05, 4.2903000000000385e-05, 4.2708999999998415e-05, 4.2903000000000385e-05, 4.283400000000201e-05, 4.251400000000044e-05, 4.2611000000001426e-05, 4.2459000000001634e-05, 4.26120000000009e-05, 4.2653000000000135e-05, 4.2389000000000315e-05, 4.295799999999919e-05, 4.236200000000065e-05, 4.2832999999999066e-05, 4.2568999999999246e-05, 4.2596999999998386e-05, 4.242999999999955e-05, 4.265200000000066e-05, 4.26799999999998e-05, 4.2832999999999066e-05, 4.266600000000023e-05, 4.2861000000001676e-05, 4.266600000000023e-05, 4.3110999999998456e-05, 4.2860999999998206e-05, 4.2569000000002716e-05, 4.2569000000002716e-05, 4.273600000000155e-05, 4.272200000000198e-05, 4.2610999999997956e-05, 4.247200000000173e-05, 4.2680999999999275e-05, 4.252800000000001e-05, 4.275000000000112e-05, 4.2444999999998595e-05, 4.2903000000000385e-05, 4.24860000000013e-05, 4.277800000000026e-05, 4.273599999999808e-05, 4.2860999999998206e-05, 4.2694999999998845e-05, 4.254199999999958e-05, 4.251400000000044e-05, 4.2875000000001245e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.412" endtime="20201110 08:37:59.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.408" endtime="20201110 08:37:59.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.417" endtime="20201110 08:37:59.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.421" endtime="20201110 08:37:59.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.419" endtime="20201110 08:37:59.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.416" endtime="20201110 08:37:59.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.051" endtime="20201110 08:37:59.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.050" endtime="20201110 08:37:59.441"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.450" endtime="20201110 08:37:59.466"></status>
</kw>
<msg timestamp="20201110 08:37:59.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.448" endtime="20201110 08:37:59.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.468" endtime="20201110 08:37:59.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.471" endtime="20201110 08:37:59.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.446" endtime="20201110 08:37:59.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.444" endtime="20201110 08:37:59.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.481" endtime="20201110 08:37:59.767"></status>
</kw>
<msg timestamp="20201110 08:37:59.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.480" endtime="20201110 08:37:59.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.771" endtime="20201110 08:37:59.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.780" endtime="20201110 08:37:59.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.477" endtime="20201110 08:37:59.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.475" endtime="20201110 08:37:59.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.786" level="INFO">${RESULT} = [{'time': 0.021992417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402800000000151e-05, 'source_diff': 4.402800000000151e-05}, {'time': 0.022038431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:59.783" endtime="20201110 08:37:59.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:59.787" endtime="20201110 08:37:59.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.804" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.803" endtime="20201110 08:37:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.807" level="INFO">VALUE: [4.402800000000151e-05, 4.384799999999911e-05, 4.354200000000058e-05, 4.3694999999999845e-05, 4.347199999999926e-05, 4.3582999999999816e-05, 4.367999999999733e-05, 4.343000000000055e-05, 4.352699999999807e-05, 4.375000000000212e-05, 4.3541000000001107e-05, 4.345799999999969e-05, 4.3624999999998526e-05, 4.3653000000001135e-05, 4.3903000000001385e-05, 4.392999999999758e-05, 4.3569000000000246e-05, 4.379200000000083e-05, 4.351400000000144e-05, 4.355600000000015e-05, 4.379199999999736e-05, 4.3638999999998096e-05, 4.376400000000169e-05, 4.3611000000002426e-05, 4.374999999999865e-05, 4.3833000000000066e-05, 4.345799999999969e-05, 4.372200000000298e-05, 4.348599999999883e-05, 4.3431000000000025e-05, 4.3958999999999665e-05, 4.352800000000101e-05, 4.381999999999997e-05, 4.347199999999926e-05, 4.3902999999997916e-05, 4.373599999999908e-05, 4.3917000000000955e-05, 4.344400000000012e-05, 4.366599999999776e-05, 4.3945000000000095e-05, 4.38060000000004e-05, 4.390199999999844e-05, 4.3610999999998956e-05, 4.370799999999994e-05, 4.3846999999999636e-05, 4.365199999999819e-05, 4.348599999999883e-05, 4.3819000000000496e-05, 4.36800000000008e-05, 4.394400000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.805" endtime="20201110 08:37:59.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.801" endtime="20201110 08:37:59.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.810" endtime="20201110 08:37:59.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.814" endtime="20201110 08:37:59.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.812" endtime="20201110 08:37:59.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.809" endtime="20201110 08:37:59.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.442" endtime="20201110 08:37:59.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.442" endtime="20201110 08:37:59.834"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.843" endtime="20201110 08:37:59.859"></status>
</kw>
<msg timestamp="20201110 08:37:59.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.841" endtime="20201110 08:37:59.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.860" endtime="20201110 08:37:59.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.862" endtime="20201110 08:37:59.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.839" endtime="20201110 08:37:59.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.837" endtime="20201110 08:37:59.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.872" endtime="20201110 08:38:00.158"></status>
</kw>
<msg timestamp="20201110 08:38:00.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.871" endtime="20201110 08:38:00.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.163" endtime="20201110 08:38:00.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.171" endtime="20201110 08:38:00.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.868" endtime="20201110 08:38:00.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.867" endtime="20201110 08:38:00.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.179" level="INFO">${RESULT} = [{'time': 0.022236361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.523600000000058e-05, 'source_diff': 4.523600000000058e-05}, {'time': 0.022283361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.175" endtime="20201110 08:38:00.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:00.180" endtime="20201110 08:38:00.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.197" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.196" endtime="20201110 08:38:00.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.200" level="INFO">VALUE: [4.523600000000058e-05, 4.4375000000002746e-05, 4.4916999999998486e-05, 4.477800000000226e-05, 4.469400000000137e-05, 4.456899999999778e-05, 4.474999999999965e-05, 4.4431000000001025e-05, 4.4360999999999706e-05, 4.4416999999997986e-05, 4.4624999999999526e-05, 4.479200000000183e-05, 4.4667000000001705e-05, 4.4666999999998236e-05, 4.448599999999983e-05, 4.454199999999811e-05, 4.443000000000155e-05, 4.466599999999876e-05, 4.4610999999999956e-05, 4.476399999999922e-05, 4.476399999999922e-05, 4.472200000000051e-05, 4.4709000000000415e-05, 4.445800000000069e-05, 4.491600000000248e-05, 4.488799999999987e-05, 4.444400000000112e-05, 4.4445000000000595e-05, 4.454100000000211e-05, 4.474999999999965e-05, 4.4597000000000386e-05, 4.452799999999854e-05, 4.48060000000014e-05, 4.4888999999999346e-05, 4.466599999999876e-05, 4.469400000000137e-05, 4.4597000000000386e-05, 4.479200000000183e-05, 4.4402999999998416e-05, 4.4667000000001705e-05, 4.476399999999922e-05, 4.4597000000000386e-05, 4.479100000000236e-05, 4.4833000000001066e-05, 4.4874999999999776e-05, 4.450000000000287e-05, 4.4874999999999776e-05, 4.448599999999983e-05, 4.474999999999965e-05, 4.4874999999999776e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.198" endtime="20201110 08:38:00.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.193" endtime="20201110 08:38:00.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.204" endtime="20201110 08:38:00.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.207" endtime="20201110 08:38:00.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.206" endtime="20201110 08:38:00.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.202" endtime="20201110 08:38:00.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.835" endtime="20201110 08:38:00.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.835" endtime="20201110 08:38:00.228"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.237" endtime="20201110 08:38:00.254"></status>
</kw>
<msg timestamp="20201110 08:38:00.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.236" endtime="20201110 08:38:00.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.256" endtime="20201110 08:38:00.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.258" endtime="20201110 08:38:00.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.233" endtime="20201110 08:38:00.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.231" endtime="20201110 08:38:00.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.269" endtime="20201110 08:38:00.558"></status>
</kw>
<msg timestamp="20201110 08:38:00.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.267" endtime="20201110 08:38:00.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023048125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.568" endtime="20201110 08:38:00.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.588" endtime="20201110 08:38:00.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.264" endtime="20201110 08:38:00.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.262" endtime="20201110 08:38:00.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.603" level="INFO">${RESULT} = [{'time': 0.023048125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597199999999829e-05, 'source_diff': 4.597199999999829e-05}, {'time': 0.023096139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.595" endtime="20201110 08:38:00.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:00.605" endtime="20201110 08:38:00.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.647" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.645" endtime="20201110 08:38:00.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.653" level="INFO">VALUE: [4.597199999999829e-05, 4.5375000000000276e-05, 4.58060000000024e-05, 4.552799999999954e-05, 4.5847000000001636e-05, 4.5916999999999486e-05, 4.587499999999731e-05, 4.5695000000001845e-05, 4.5889000000000346e-05, 4.5694999999998376e-05, 4.558399999999782e-05, 4.583399999999807e-05, 4.5709000000001415e-05, 4.575000000000065e-05, 4.5597000000001386e-05, 4.575000000000065e-05, 4.583399999999807e-05, 4.572199999999804e-05, 4.552700000000007e-05, 4.542999999999908e-05, 4.552700000000007e-05, 4.5833000000002067e-05, 4.592999999999958e-05, 4.580499999999946e-05, 4.566599999999976e-05, 4.555600000000215e-05, 4.595799999999872e-05, 4.551399999999997e-05, 4.5653000000003136e-05, 4.5569000000002247e-05, 4.545800000000169e-05, 4.555499999999921e-05, 4.552799999999954e-05, 4.5583000000001817e-05, 4.5861000000001206e-05, 4.55000000000004e-05, 4.579199999999936e-05, 4.5916999999999486e-05, 4.56939999999989e-05, 4.5361000000000706e-05, 4.557000000000172e-05, 4.5902999999999916e-05, 4.577799999999979e-05, 4.5444999999998126e-05, 4.555600000000215e-05, 4.55000000000004e-05, 4.586200000000068e-05, 4.5916999999999486e-05, 4.5611000000000956e-05, 4.554200000000258e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.650" endtime="20201110 08:38:00.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.639" endtime="20201110 08:38:00.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.661" endtime="20201110 08:38:00.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.664" endtime="20201110 08:38:00.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.663" endtime="20201110 08:38:00.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.659" endtime="20201110 08:38:00.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.229" endtime="20201110 08:38:00.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.229" endtime="20201110 08:38:00.686"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.694" endtime="20201110 08:38:00.711"></status>
</kw>
<msg timestamp="20201110 08:38:00.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.693" endtime="20201110 08:38:00.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.713" endtime="20201110 08:38:00.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.715" endtime="20201110 08:38:00.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.690" endtime="20201110 08:38:00.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.688" endtime="20201110 08:38:00.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.726" endtime="20201110 08:38:01.012"></status>
</kw>
<msg timestamp="20201110 08:38:01.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.724" endtime="20201110 08:38:01.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.016" endtime="20201110 08:38:01.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.024" endtime="20201110 08:38:01.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.722" endtime="20201110 08:38:01.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.720" endtime="20201110 08:38:01.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.031" level="INFO">${RESULT} = [{'time': 0.022552319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6597000000002387e-05, 'source_diff': 4.6597000000002387e-05}, {'time': 0.022601333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.028" endtime="20201110 08:38:01.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:01.032" endtime="20201110 08:38:01.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.050" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.049" endtime="20201110 08:38:01.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.053" level="INFO">VALUE: [4.6597000000002387e-05, 4.672200000000251e-05, 4.672200000000251e-05, 4.66939999999999e-05, 4.643000000000008e-05, 4.645799999999922e-05, 4.645799999999922e-05, 4.673599999999861e-05, 4.66939999999999e-05, 4.675000000000165e-05, 4.651400000000097e-05, 4.652800000000054e-05, 4.737499999999881e-05, 4.6917000000000486e-05, 4.684699999999917e-05, 4.6403000000000416e-05, 4.677800000000079e-05, 4.673600000000208e-05, 4.656999999999925e-05, 4.673599999999861e-05, 4.690299999999745e-05, 4.683400000000254e-05, 4.652799999999707e-05, 4.663899999999763e-05, 4.677800000000079e-05, 4.658399999999882e-05, 4.6722999999998516e-05, 4.68199999999995e-05, 4.690200000000144e-05, 4.6931000000000056e-05, 4.7139000000001596e-05, 4.677699999999785e-05, 4.691699999999702e-05, 4.6667000000000236e-05, 4.644399999999965e-05, 4.680500000000046e-05, 4.68329999999996e-05, 4.640200000000094e-05, 4.666600000000076e-05, 4.644399999999965e-05, 4.641600000000051e-05, 4.676400000000122e-05, 4.654200000000011e-05, 4.681900000000003e-05, 4.663899999999763e-05, 4.697199999999929e-05, 4.681900000000003e-05, 4.644399999999965e-05, 4.655599999999968e-05, 4.6625000000001526e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.051" endtime="20201110 08:38:01.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.046" endtime="20201110 08:38:01.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.056" endtime="20201110 08:38:01.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.060" endtime="20201110 08:38:01.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.058" endtime="20201110 08:38:01.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.055" endtime="20201110 08:38:01.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.686" endtime="20201110 08:38:01.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.686" endtime="20201110 08:38:01.083"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.097" endtime="20201110 08:38:01.114"></status>
</kw>
<msg timestamp="20201110 08:38:01.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.095" endtime="20201110 08:38:01.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.115" endtime="20201110 08:38:01.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.118" endtime="20201110 08:38:01.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.091" endtime="20201110 08:38:01.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.087" endtime="20201110 08:38:01.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.129" endtime="20201110 08:38:01.415"></status>
</kw>
<msg timestamp="20201110 08:38:01.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029685069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029733347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.127" endtime="20201110 08:38:01.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029685069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029733347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.419" endtime="20201110 08:38:01.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.428" endtime="20201110 08:38:01.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.124" endtime="20201110 08:38:01.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.122" endtime="20201110 08:38:01.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.435" level="INFO">${RESULT} = [{'time': 0.029733347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.827799999999882e-05, 'source_diff': 4.827799999999882e-05}, {'time': 0.029783361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:01.431" endtime="20201110 08:38:01.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:01.436" endtime="20201110 08:38:01.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.454" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.452" endtime="20201110 08:38:01.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.456" level="INFO">VALUE: [4.827799999999882e-05, 4.759699999999992e-05, 4.770800000000047e-05, 4.774999999999918e-05, 4.7417000000000986e-05, 4.75139999999985e-05, 4.7375000000002276e-05, 4.772200000000004e-05, 4.784799999999964e-05, 4.761099999999949e-05, 4.7445000000000126e-05, 4.7889000000002346e-05, 4.736099999999924e-05, 4.761099999999949e-05, 4.776400000000222e-05, 4.762499999999906e-05, 4.754200000000111e-05, 4.774999999999918e-05, 4.767999999999786e-05, 4.7389000000001846e-05, 4.781999999999703e-05, 4.786099999999974e-05, 4.78200000000005e-05, 4.7458999999999696e-05, 4.752700000000207e-05, 4.784700000000017e-05, 4.783299999999713e-05, 4.75000000000024e-05, 4.791599999999854e-05, 4.758300000000035e-05, 4.741599999999804e-05, 4.754099999999817e-05, 4.75139999999985e-05, 4.78190000000045e-05, 4.786099999999627e-05, 4.765299999999473e-05, 4.745800000000022e-05, 4.756899999999731e-05, 4.7681000000000806e-05, 4.74860000000063e-05, 4.772200000000004e-05, 4.745800000000022e-05, 4.7431000000000556e-05, 4.7695000000000376e-05, 4.758400000000329e-05, 4.740299999999448e-05, 4.736099999999577e-05, 4.759800000000286e-05, 4.779200000000483e-05, 4.779200000000483e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.455" endtime="20201110 08:38:01.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.450" endtime="20201110 08:38:01.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.460" endtime="20201110 08:38:01.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.463" endtime="20201110 08:38:01.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.462" endtime="20201110 08:38:01.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.458" endtime="20201110 08:38:01.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.084" endtime="20201110 08:38:01.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.084" endtime="20201110 08:38:01.486"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.497" endtime="20201110 08:38:01.516"></status>
</kw>
<msg timestamp="20201110 08:38:01.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.495" endtime="20201110 08:38:01.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.519" endtime="20201110 08:38:01.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.524" endtime="20201110 08:38:01.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.492" endtime="20201110 08:38:01.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.489" endtime="20201110 08:38:01.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.539" endtime="20201110 08:38:01.827"></status>
</kw>
<msg timestamp="20201110 08:38:01.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026606597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026655236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.536" endtime="20201110 08:38:01.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026606597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026655236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.831" endtime="20201110 08:38:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.840" endtime="20201110 08:38:01.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.533" endtime="20201110 08:38:01.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.530" endtime="20201110 08:38:01.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.847" level="INFO">${RESULT} = [{'time': 0.026655236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.863899999999963e-05, 'source_diff': 4.863899999999963e-05}, {'time': 0.026706222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:01.843" endtime="20201110 08:38:01.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.861" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:01.848" endtime="20201110 08:38:01.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.865" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.864" endtime="20201110 08:38:01.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.868" level="INFO">VALUE: [4.863899999999963e-05, 4.881900000000203e-05, 4.86940000000019e-05, 4.887500000000031e-05, 4.843000000000208e-05, 4.88330000000016e-05, 4.875000000000018e-05, 4.8403000000002416e-05, 4.841699999999852e-05, 4.881899999999856e-05, 4.866699999999877e-05, 4.870800000000147e-05, 4.868099999999834e-05, 4.838899999999938e-05, 4.909700000000142e-05, 4.8444999999997657e-05, 4.8708999999997477e-05, 4.880600000000193e-05, 4.873600000000061e-05, 4.854200000000211e-05, 4.859800000000039e-05, 4.86529999999992e-05, 4.876400000000322e-05, 4.857000000000125e-05, 4.844399999999818e-05, 4.86940000000019e-05, 4.881900000000203e-05, 4.851300000000003e-05, 4.854099999999917e-05, 4.849999999999993e-05, 4.894399999999868e-05, 4.891599999999954e-05, 4.880500000000246e-05, 4.849999999999993e-05, 4.890299999999945e-05, 4.873600000000061e-05, 4.847200000000079e-05, 4.879200000000236e-05, 4.856900000000178e-05, 4.838899999999938e-05, 4.868099999999834e-05, 4.870800000000147e-05, 4.841699999999852e-05, 4.866699999999877e-05, 4.848600000000036e-05, 4.894499999999816e-05, 4.837499999999981e-05, 4.912500000000056e-05, 4.888899999999988e-05, 4.8958999999997727e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.867" endtime="20201110 08:38:01.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.862" endtime="20201110 08:38:01.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.872" endtime="20201110 08:38:01.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.875" endtime="20201110 08:38:01.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.874" endtime="20201110 08:38:01.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.870" endtime="20201110 08:38:01.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.487" endtime="20201110 08:38:01.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.486" endtime="20201110 08:38:01.896"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.905" endtime="20201110 08:38:01.922"></status>
</kw>
<msg timestamp="20201110 08:38:01.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.904" endtime="20201110 08:38:01.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.924" endtime="20201110 08:38:01.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.927" endtime="20201110 08:38:01.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.901" endtime="20201110 08:38:01.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.899" endtime="20201110 08:38:01.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.938" endtime="20201110 08:38:02.225"></status>
</kw>
<msg timestamp="20201110 08:38:02.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.936" endtime="20201110 08:38:02.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.229" endtime="20201110 08:38:02.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.238" endtime="20201110 08:38:02.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.933" endtime="20201110 08:38:02.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.931" endtime="20201110 08:38:02.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.245" level="INFO">${RESULT} = [{'time': 0.022576361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.980499999999999e-05, 'source_diff': 4.980499999999999e-05}, {'time': 0.022628375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.241" endtime="20201110 08:38:02.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.260" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:02.246" endtime="20201110 08:38:02.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.264" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.263" endtime="20201110 08:38:02.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.267" level="INFO">VALUE: [4.980499999999999e-05, 4.966699999999977e-05, 4.995899999999873e-05, 4.93469999999982e-05, 4.991700000000002e-05, 4.954199999999964e-05, 4.96530000000002e-05, 4.954199999999964e-05, 4.9445000000002126e-05, 4.948600000000136e-05, 4.958400000000182e-05, 4.966600000000029e-05, 4.962500000000106e-05, 4.9431000000002556e-05, 4.966699999999977e-05, 4.9459000000001696e-05, 4.958299999999888e-05, 4.977700000000085e-05, 4.954100000000017e-05, 4.941600000000004e-05, 4.9638000000001153e-05, 4.945799999999875e-05, 4.947200000000179e-05, 4.95270000000006e-05, 4.961099999999802e-05, 4.977700000000085e-05, 5.012499999999809e-05, 4.947199999999832e-05, 4.941600000000004e-05, 4.945799999999875e-05, 4.96530000000002e-05, 4.997200000000229e-05, 5.037499999999834e-05, 4.979199999999989e-05, 4.966699999999977e-05, 4.973599999999814e-05, 4.979199999999989e-05, 5.012500000000156e-05, 4.976399999999728e-05, 4.96530000000002e-05, 4.972200000000204e-05, 4.972200000000204e-05, 4.980600000000293e-05, 4.950000000000093e-05, 4.993099999999959e-05, 4.954199999999964e-05, 4.943099999999909e-05, 4.987500000000131e-05, 4.98469999999987e-05, 4.969399999999943e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.266" endtime="20201110 08:38:02.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.261" endtime="20201110 08:38:02.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.271" endtime="20201110 08:38:02.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.274" endtime="20201110 08:38:02.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.273" endtime="20201110 08:38:02.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.269" endtime="20201110 08:38:02.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.897" endtime="20201110 08:38:02.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.897" endtime="20201110 08:38:02.295"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.304" endtime="20201110 08:38:02.321"></status>
</kw>
<msg timestamp="20201110 08:38:02.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.303" endtime="20201110 08:38:02.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.322" endtime="20201110 08:38:02.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.325" endtime="20201110 08:38:02.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.300" endtime="20201110 08:38:02.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.298" endtime="20201110 08:38:02.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.336" endtime="20201110 08:38:02.623"></status>
</kw>
<msg timestamp="20201110 08:38:02.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.334" endtime="20201110 08:38:02.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.627" endtime="20201110 08:38:02.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.636" endtime="20201110 08:38:02.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.331" endtime="20201110 08:38:02.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.329" endtime="20201110 08:38:02.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.643" level="INFO">${RESULT} = [{'time': 0.022645861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.098599999999939e-05, 'source_diff': 5.098599999999939e-05}, {'time': 0.022698861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.639" endtime="20201110 08:38:02.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:02.644" endtime="20201110 08:38:02.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.661" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.660" endtime="20201110 08:38:02.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.664" level="INFO">VALUE: [5.098599999999939e-05, 5.073599999999914e-05, 5.068000000000086e-05, 5.05279999999976e-05, 5.074999999999871e-05, 5.036099999999877e-05, 5.088900000000188e-05, 5.081900000000056e-05, 5.093100000000059e-05, 5.087499999999884e-05, 5.063900000000163e-05, 5.068100000000034e-05, 5.052800000000107e-05, 5.045899999999923e-05, 5.038900000000138e-05, 5.045899999999923e-05, 5.08339999999996e-05, 5.08339999999996e-05, 5.038900000000138e-05, 5.0679999999997394e-05, 5.0472999999998797e-05, 5.082000000000003e-05, 5.055500000000074e-05, 5.054200000000064e-05, 5.051299999999856e-05, 5.056900000000031e-05, 5.069400000000043e-05, 5.072199999999957e-05, 5.069400000000043e-05, 5.052800000000107e-05, 5.08469999999997e-05, 5.079099999999795e-05, 5.044400000000018e-05, 5.038900000000138e-05, 5.079200000000089e-05, 5.0943999999997214e-05, 5.08469999999997e-05, 5.077800000000132e-05, 5.072200000000304e-05, 5.086099999999927e-05, 5.086099999999927e-05, 5.048599999999889e-05, 5.054200000000064e-05, 5.077800000000132e-05, 5.047199999999932e-05, 5.080600000000046e-05, 5.05140000000015e-05, 5.095899999999973e-05, 5.073599999999914e-05, 5.052800000000107e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.662" endtime="20201110 08:38:02.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.658" endtime="20201110 08:38:02.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.668" endtime="20201110 08:38:02.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.671" endtime="20201110 08:38:02.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.670" endtime="20201110 08:38:02.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.666" endtime="20201110 08:38:02.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.296" endtime="20201110 08:38:02.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.296" endtime="20201110 08:38:02.692"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.701" endtime="20201110 08:38:02.719"></status>
</kw>
<msg timestamp="20201110 08:38:02.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.700" endtime="20201110 08:38:02.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.720" endtime="20201110 08:38:02.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.723" endtime="20201110 08:38:02.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.697" endtime="20201110 08:38:02.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.695" endtime="20201110 08:38:02.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.733" endtime="20201110 08:38:03.020"></status>
</kw>
<msg timestamp="20201110 08:38:03.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.732" endtime="20201110 08:38:03.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.026" endtime="20201110 08:38:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.034" endtime="20201110 08:38:03.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.729" endtime="20201110 08:38:03.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.727" endtime="20201110 08:38:03.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.041" level="INFO">${RESULT} = [{'time': 0.023139125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.218099999999837e-05, 'source_diff': 5.218099999999837e-05}, {'time': 0.023193139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.038" endtime="20201110 08:38:03.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.055" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:03.042" endtime="20201110 08:38:03.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.060" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.059" endtime="20201110 08:38:03.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.063" level="INFO">VALUE: [5.218099999999837e-05, 5.150000000000293e-05, 5.141699999999805e-05, 5.16669999999983e-05, 5.195900000000073e-05, 5.162499999999959e-05, 5.166700000000177e-05, 5.174999999999971e-05, 5.145900000000023e-05, 5.176399999999928e-05, 5.191700000000202e-05, 5.162499999999959e-05, 5.14729999999998e-05, 5.159700000000045e-05, 5.1638000000003154e-05, 5.144400000000118e-05, 5.137500000000281e-05, 5.1929999999998644e-05, 5.155499999999827e-05, 5.173600000000014e-05, 5.159700000000045e-05, 5.176399999999928e-05, 5.177799999999885e-05, 5.158300000000088e-05, 5.1708000000001e-05, 5.15140000000025e-05, 5.140299999999848e-05, 5.16530000000022e-05, 5.151399999999903e-05, 5.144400000000118e-05, 5.1708000000001e-05, 5.186100000000027e-05, 5.132000000000053e-05, 5.181999999999756e-05, 5.176399999999928e-05, 5.170900000000048e-05, 5.159799999999992e-05, 5.179199999999842e-05, 5.182000000000103e-05, 5.193099999999812e-05, 5.194500000000116e-05, 5.148599999999989e-05, 5.157000000000078e-05, 5.151399999999903e-05, 5.186200000000321e-05, 5.159799999999992e-05, 5.168000000000186e-05, 5.180499999999852e-05, 5.1429999999998144e-05, 5.176299999999981e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.061" endtime="20201110 08:38:03.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.056" endtime="20201110 08:38:03.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.066" endtime="20201110 08:38:03.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.070" endtime="20201110 08:38:03.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.068" endtime="20201110 08:38:03.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.065" endtime="20201110 08:38:03.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.693" endtime="20201110 08:38:03.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.693" endtime="20201110 08:38:03.091"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.100" endtime="20201110 08:38:03.117"></status>
</kw>
<msg timestamp="20201110 08:38:03.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.098" endtime="20201110 08:38:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.118" endtime="20201110 08:38:03.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.121" endtime="20201110 08:38:03.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.096" endtime="20201110 08:38:03.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.093" endtime="20201110 08:38:03.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.131" endtime="20201110 08:38:03.417"></status>
</kw>
<msg timestamp="20201110 08:38:03.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.130" endtime="20201110 08:38:03.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.421" endtime="20201110 08:38:03.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.430" endtime="20201110 08:38:03.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.127" endtime="20201110 08:38:03.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.125" endtime="20201110 08:38:03.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.437" level="INFO">${RESULT} = [{'time': 0.022668431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.269499999999844e-05, 'source_diff': 5.269499999999844e-05}, {'time': 0.022723431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.433" endtime="20201110 08:38:03.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:03.438" endtime="20201110 08:38:03.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.456" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.455" endtime="20201110 08:38:03.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.458" level="INFO">VALUE: [5.269499999999844e-05, 5.270899999999801e-05, 5.294499999999869e-05, 5.2665999999999824e-05, 5.281899999999909e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.2916000000000074e-05, 5.263899999999669e-05, 5.277700000000038e-05, 5.25279999999996e-05, 5.273600000000114e-05, 5.281899999999909e-05, 5.276400000000028e-05, 5.266700000000277e-05, 5.237500000000034e-05, 5.2929999999999644e-05, 5.250000000000046e-05, 5.291699999999955e-05, 5.254199999999917e-05, 5.276400000000028e-05, 5.243100000000209e-05, 5.290299999999998e-05, 5.244499999999819e-05, 5.284699999999823e-05, 5.245900000000123e-05, 5.248600000000089e-05, 5.286100000000127e-05, 5.251400000000003e-05, 5.28609999999978e-05, 5.243099999999862e-05, 5.333299999999916e-05, 5.280500000000299e-05, 5.337499999999787e-05, 5.276300000000081e-05, 5.256899999999884e-05, 5.2929999999999644e-05, 5.276400000000028e-05, 5.283299999999866e-05, 5.281899999999909e-05, 5.247200000000132e-05, 5.288900000000041e-05, 5.273600000000114e-05, 5.280499999999952e-05, 5.2721999999998104e-05, 5.28609999999978e-05, 5.275000000000071e-05, 5.240299999999948e-05, 5.240300000000295e-05, 5.280599999999899e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.457" endtime="20201110 08:38:03.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.452" endtime="20201110 08:38:03.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.462" endtime="20201110 08:38:03.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.466" endtime="20201110 08:38:03.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.464" endtime="20201110 08:38:03.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.460" endtime="20201110 08:38:03.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.092" endtime="20201110 08:38:03.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.091" endtime="20201110 08:38:03.487"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.496" endtime="20201110 08:38:03.512"></status>
</kw>
<msg timestamp="20201110 08:38:03.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.494" endtime="20201110 08:38:03.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.513" endtime="20201110 08:38:03.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.516" endtime="20201110 08:38:03.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.491" endtime="20201110 08:38:03.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.489" endtime="20201110 08:38:03.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.527" endtime="20201110 08:38:03.814"></status>
</kw>
<msg timestamp="20201110 08:38:03.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.526" endtime="20201110 08:38:03.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.818" endtime="20201110 08:38:03.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.827" endtime="20201110 08:38:03.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.523" endtime="20201110 08:38:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.520" endtime="20201110 08:38:03.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.833" level="INFO">${RESULT} = [{'time': 0.022571319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3916000000001074e-05, 'source_diff': 5.3916000000001074e-05}, {'time': 0.022627333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:03.830" endtime="20201110 08:38:03.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:03.835" endtime="20201110 08:38:03.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.853" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.852" endtime="20201110 08:38:03.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.856" level="INFO">VALUE: [5.3916000000001074e-05, 5.3901999999998035e-05, 5.379100000000095e-05, 5.362500000000159e-05, 5.35410000000007e-05, 5.35280000000006e-05, 5.412500000000209e-05, 5.3485999999998424e-05, 5.388899999999794e-05, 5.338900000000091e-05, 5.36670000000003e-05, 5.35280000000006e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.347200000000232e-05, 5.359700000000245e-05, 5.393100000000012e-05, 5.363899999999769e-05, 5.395899999999926e-05, 5.387499999999837e-05, 5.3485999999998424e-05, 5.347299999999833e-05, 5.350000000000146e-05, 5.368099999999987e-05, 5.387500000000184e-05, 5.350000000000146e-05, 5.370899999999901e-05, 5.395899999999926e-05, 5.379100000000095e-05, 5.370899999999901e-05, 5.356999999999931e-05, 5.348600000000189e-05, 5.361100000000202e-05, 5.351400000000103e-05, 5.438899999999844e-05, 5.3457999999999284e-05, 5.344499999999919e-05, 5.3416000000000574e-05, 5.3416000000000574e-05, 5.355500000000027e-05, 5.347200000000232e-05, 5.390300000000098e-05, 5.3430000000000144e-05, 5.361099999999855e-05, 5.379200000000042e-05, 5.393100000000012e-05, 5.350000000000146e-05, 5.3443999999999714e-05, 5.340300000000048e-05, 5.38609999999988e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.854" endtime="20201110 08:38:03.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.850" endtime="20201110 08:38:03.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.860" endtime="20201110 08:38:03.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.863" endtime="20201110 08:38:03.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.862" endtime="20201110 08:38:03.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.858" endtime="20201110 08:38:03.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.488" endtime="20201110 08:38:03.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.487" endtime="20201110 08:38:03.884"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.893" endtime="20201110 08:38:03.910"></status>
</kw>
<msg timestamp="20201110 08:38:03.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.892" endtime="20201110 08:38:03.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.912" endtime="20201110 08:38:03.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.914" endtime="20201110 08:38:03.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.889" endtime="20201110 08:38:03.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.887" endtime="20201110 08:38:03.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.924" endtime="20201110 08:38:04.211"></status>
</kw>
<msg timestamp="20201110 08:38:04.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.923" endtime="20201110 08:38:04.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.215" endtime="20201110 08:38:04.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.224" endtime="20201110 08:38:04.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.920" endtime="20201110 08:38:04.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.918" endtime="20201110 08:38:04.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.231" level="INFO">${RESULT} = [{'time': 0.022605667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.480600000000099e-05, 'source_diff': 5.480600000000099e-05}, {'time': 0.022662681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.227" endtime="20201110 08:38:04.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.245" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:04.232" endtime="20201110 08:38:04.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.249" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.248" endtime="20201110 08:38:04.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.252" level="INFO">VALUE: [5.480600000000099e-05, 5.465300000000173e-05, 5.491700000000155e-05, 5.4444000000000714e-05, 5.4708000000000534e-05, 5.487499999999937e-05, 5.4388000000002434e-05, 5.476299999999934e-05, 5.455500000000127e-05, 5.4708000000000534e-05, 5.46670000000013e-05, 5.4958000000000784e-05, 5.461099999999955e-05, 5.4444000000000714e-05, 5.458299999999694e-05, 5.490299999999851e-05, 5.472299999999958e-05, 5.48609999999998e-05, 5.481900000000109e-05, 5.479200000000142e-05, 5.479200000000142e-05, 5.4485999999999424e-05, 5.4763999999998814e-05, 5.444500000000019e-05, 5.483300000000066e-05, 5.455600000000074e-05, 5.483400000000013e-05, 5.484700000000023e-05, 5.445899999999976e-05, 5.458399999999988e-05, 5.480600000000099e-05, 5.468100000000087e-05, 5.444500000000019e-05, 5.475000000000271e-05, 5.4666000000001824e-05, 5.537499999999987e-05, 5.4637999999999215e-05, 5.456900000000084e-05, 5.4944000000001214e-05, 5.4763999999998814e-05, 5.461099999999955e-05, 5.538899999999944e-05, 5.538900000000291e-05, 5.511100000000005e-05, 5.4735999999999674e-05, 5.4527999999998134e-05, 5.487499999999937e-05, 5.4735999999999674e-05, 5.466699999999783e-05, 5.4749999999999244e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.251" endtime="20201110 08:38:04.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.246" endtime="20201110 08:38:04.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.256" endtime="20201110 08:38:04.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.259" endtime="20201110 08:38:04.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.258" endtime="20201110 08:38:04.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.254" endtime="20201110 08:38:04.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.885" endtime="20201110 08:38:04.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.884" endtime="20201110 08:38:04.280"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.289" endtime="20201110 08:38:04.306"></status>
</kw>
<msg timestamp="20201110 08:38:04.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.288" endtime="20201110 08:38:04.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.308" endtime="20201110 08:38:04.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.310" endtime="20201110 08:38:04.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.285" endtime="20201110 08:38:04.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.283" endtime="20201110 08:38:04.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.321" endtime="20201110 08:38:04.608"></status>
</kw>
<msg timestamp="20201110 08:38:04.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.319" endtime="20201110 08:38:04.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.612" endtime="20201110 08:38:04.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.620" endtime="20201110 08:38:04.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.316" endtime="20201110 08:38:04.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.315" endtime="20201110 08:38:04.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.627" level="INFO">${RESULT} = [{'time': 0.022804889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5555999999998273e-05, 'source_diff': 5.5555999999998273e-05}, {'time': 0.022862958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:04.623" endtime="20201110 08:38:04.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.641" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:04.628" endtime="20201110 08:38:04.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.645" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.644" endtime="20201110 08:38:04.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.648" level="INFO">VALUE: [5.5555999999998273e-05, 5.583299999999819e-05, 5.588900000000341e-05, 5.558399999999741e-05, 5.580600000000199e-05, 5.590299999999951e-05, 5.570899999999754e-05, 5.577800000000285e-05, 5.540299999999901e-05, 5.591699999999908e-05, 5.582000000000156e-05, 5.5750000000000244e-05, 5.543099999999815e-05, 5.565300000000273e-05, 5.5944000000002214e-05, 5.5888000000000465e-05, 5.562500000000012e-05, 5.5402000000003004e-05, 5.594500000000169e-05, 5.5693999999998495e-05, 5.583300000000166e-05, 5.590299999999951e-05, 5.565299999999926e-05, 5.5472000000000854e-05, 5.5679999999998925e-05, 5.5457999999997815e-05, 5.540300000000248e-05, 5.5499999999999994e-05, 5.593099999999865e-05, 5.591699999999908e-05, 5.538899999999944e-05, 5.5513999999999564e-05, 5.5791999999998954e-05, 5.538899999999944e-05, 5.541699999999858e-05, 5.583399999999766e-05, 5.559700000000098e-05, 5.5763999999999814e-05, 5.587500000000037e-05, 5.540300000000248e-05, 5.5777999999999384e-05, 5.566699999999883e-05, 5.55280000000026e-05, 5.5693999999998495e-05, 5.5457999999997815e-05, 5.5721999999997635e-05, 5.551300000000009e-05, 5.562500000000012e-05, 5.5429999999998675e-05, 5.583300000000166e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.647" endtime="20201110 08:38:04.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.642" endtime="20201110 08:38:04.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.652" endtime="20201110 08:38:04.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.655" endtime="20201110 08:38:04.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.654" endtime="20201110 08:38:04.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.650" endtime="20201110 08:38:04.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.281" endtime="20201110 08:38:04.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.281" endtime="20201110 08:38:04.676"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.685" endtime="20201110 08:38:04.702"></status>
</kw>
<msg timestamp="20201110 08:38:04.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.683" endtime="20201110 08:38:04.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.704" endtime="20201110 08:38:04.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.706" endtime="20201110 08:38:04.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.681" endtime="20201110 08:38:04.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.679" endtime="20201110 08:38:04.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.716" endtime="20201110 08:38:05.020"></status>
</kw>
<msg timestamp="20201110 08:38:05.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.715" endtime="20201110 08:38:05.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.024" endtime="20201110 08:38:05.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.032" endtime="20201110 08:38:05.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.712" endtime="20201110 08:38:05.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.710" endtime="20201110 08:38:05.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.040" level="INFO">${RESULT} = [{'time': 0.022264694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6679999999999925e-05, 'source_diff': 5.6679999999999925e-05}, {'time': 0.022323694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.036" endtime="20201110 08:38:05.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.053" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:05.041" endtime="20201110 08:38:05.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.058" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.057" endtime="20201110 08:38:05.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.060" level="INFO">VALUE: [5.6679999999999925e-05, 5.6902000000001035e-05, 5.679100000000048e-05, 5.652700000000066e-05, 5.6402000000000535e-05, 5.6486000000001424e-05, 5.6444000000002714e-05, 5.6486000000001424e-05, 5.6429999999999675e-05, 5.641699999999958e-05, 5.6486000000001424e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.694499999999922e-05, 5.637500000000087e-05, 5.6778000000000384e-05, 5.6471999999998385e-05, 5.670899999999854e-05, 5.6915999999997136e-05, 5.662500000000112e-05, 5.6721999999998635e-05, 5.6555999999999274e-05, 5.659700000000198e-05, 5.658399999999841e-05, 5.684799999999823e-05, 5.6778000000000384e-05, 5.691700000000008e-05, 5.672299999999811e-05, 5.669499999999897e-05, 5.679099999999701e-05, 5.6416000000000105e-05, 5.661099999999808e-05, 5.656899999999937e-05, 5.6486000000001424e-05, 5.662499999999765e-05, 5.73749999999984e-05, 5.6707999999999065e-05, 5.636099999999783e-05, 5.6930000000000175e-05, 5.658400000000188e-05, 5.6972000000002354e-05, 5.6735999999998205e-05, 5.684699999999876e-05, 5.662499999999765e-05, 5.690300000000051e-05, 5.670900000000201e-05, 5.6514000000000564e-05, 5.687500000000137e-05, 5.6764000000000814e-05, 5.640300000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.059" endtime="20201110 08:38:05.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.054" endtime="20201110 08:38:05.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.064" endtime="20201110 08:38:05.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.067" endtime="20201110 08:38:05.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.066" endtime="20201110 08:38:05.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.062" endtime="20201110 08:38:05.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.677" endtime="20201110 08:38:05.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.677" endtime="20201110 08:38:05.088"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.097" endtime="20201110 08:38:05.114"></status>
</kw>
<msg timestamp="20201110 08:38:05.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.096" endtime="20201110 08:38:05.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.116" endtime="20201110 08:38:05.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.118" endtime="20201110 08:38:05.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.093" endtime="20201110 08:38:05.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.091" endtime="20201110 08:38:05.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.128" endtime="20201110 08:38:05.415"></status>
</kw>
<msg timestamp="20201110 08:38:05.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.127" endtime="20201110 08:38:05.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.419" endtime="20201110 08:38:05.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.428" endtime="20201110 08:38:05.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.124" endtime="20201110 08:38:05.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.122" endtime="20201110 08:38:05.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.434" level="INFO">${RESULT} = [{'time': 0.022523722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8277999999998414e-05, 'source_diff': 5.8277999999998414e-05}, {'time': 0.022583736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.431" endtime="20201110 08:38:05.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:05.435" endtime="20201110 08:38:05.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.454" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.453" endtime="20201110 08:38:05.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.456" level="INFO">VALUE: [5.8277999999998414e-05, 5.7792000000000954e-05, 5.7764000000001814e-05, 5.791699999999761e-05, 5.7694000000000495e-05, 5.743100000000015e-05, 5.7694000000000495e-05, 5.761099999999908e-05, 5.743100000000015e-05, 5.790300000000151e-05, 5.7736000000002674e-05, 5.788900000000194e-05, 5.7833999999999663e-05, 5.7929999999997706e-05, 5.770900000000301e-05, 5.7735999999999205e-05, 5.763899999999822e-05, 5.78749999999989e-05, 5.740300000000101e-05, 5.7887999999998996e-05, 5.7444000000000245e-05, 5.7708000000000065e-05, 5.7429999999997206e-05, 5.7694000000000495e-05, 5.7750000000002244e-05, 5.781900000000062e-05, 5.7708000000000065e-05, 5.786099999999933e-05, 5.784699999999976e-05, 5.783300000000019e-05, 5.7429999999997206e-05, 5.763899999999822e-05, 5.791700000000108e-05, 5.7542000000000704e-05, 5.7721999999999635e-05, 5.769499999999997e-05, 5.793100000000065e-05, 5.78610000000028e-05, 5.784699999999976e-05, 5.73749999999984e-05, 5.743100000000015e-05, 5.7764000000001814e-05, 5.763899999999822e-05, 5.76810000000004e-05, 5.790300000000151e-05, 5.743100000000015e-05, 5.783300000000019e-05, 5.747299999999886e-05, 5.7666000000001355e-05, 5.7401999999998066e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.455" endtime="20201110 08:38:05.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.450" endtime="20201110 08:38:05.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.460" endtime="20201110 08:38:05.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.463" endtime="20201110 08:38:05.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.462" endtime="20201110 08:38:05.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.458" endtime="20201110 08:38:05.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.089" endtime="20201110 08:38:05.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.089" endtime="20201110 08:38:05.484"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.493" endtime="20201110 08:38:05.510"></status>
</kw>
<msg timestamp="20201110 08:38:05.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.492" endtime="20201110 08:38:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.512" endtime="20201110 08:38:05.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.514" endtime="20201110 08:38:05.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.489" endtime="20201110 08:38:05.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.487" endtime="20201110 08:38:05.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.524" endtime="20201110 08:38:05.810"></status>
</kw>
<msg timestamp="20201110 08:38:05.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.523" endtime="20201110 08:38:05.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022404972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.815" endtime="20201110 08:38:05.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.823" endtime="20201110 08:38:05.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.520" endtime="20201110 08:38:05.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.518" endtime="20201110 08:38:05.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.830" level="INFO">${RESULT} = [{'time': 0.022463958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8986000000000455e-05, 'source_diff': 5.8986000000000455e-05}, {'time': 0.022524944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.826" endtime="20201110 08:38:05.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.843" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:05.831" endtime="20201110 08:38:05.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.848" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.847" endtime="20201110 08:38:05.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.850" level="INFO">VALUE: [5.8986000000000455e-05, 5.8666000000002355e-05, 5.863899999999922e-05, 5.888899999999947e-05, 5.8763999999999345e-05, 5.8848000000000233e-05, 5.861100000000008e-05, 5.8943999999998276e-05, 5.862499999999965e-05, 5.8527999999998664e-05, 5.841700000000158e-05, 5.866699999999836e-05, 5.8708000000001065e-05, 5.886100000000033e-05, 5.8764000000002814e-05, 5.865299999999879e-05, 5.8570000000000844e-05, 5.895900000000079e-05, 5.868099999999793e-05, 5.844500000000072e-05, 5.8679999999998456e-05, 5.847299999999986e-05, 5.894499999999775e-05, 5.88749999999999e-05, 5.888899999999947e-05, 5.85550000000018e-05, 5.8387999999999496e-05, 5.859700000000051e-05, 5.8637999999999746e-05, 5.8485999999999955e-05, 5.862499999999965e-05, 5.886100000000033e-05, 5.886100000000033e-05, 5.8693999999998026e-05, 5.8735999999996735e-05, 5.8430000000001675e-05, 5.886100000000033e-05, 5.8528000000002134e-05, 5.8693999999998026e-05, 5.8570000000000844e-05, 5.8472000000000385e-05, 5.8528000000002134e-05, 5.845900000000029e-05, 5.865300000000226e-05, 5.866699999999836e-05, 5.845900000000029e-05, 5.841700000000158e-05, 5.888899999999947e-05, 5.8848000000000233e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.849" endtime="20201110 08:38:05.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.844" endtime="20201110 08:38:05.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.882" endtime="20201110 08:38:05.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.885" endtime="20201110 08:38:05.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.884" endtime="20201110 08:38:05.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.880" endtime="20201110 08:38:05.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.485" endtime="20201110 08:38:05.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.484" endtime="20201110 08:38:05.906"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.915" endtime="20201110 08:38:05.931"></status>
</kw>
<msg timestamp="20201110 08:38:05.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.913" endtime="20201110 08:38:05.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.933" endtime="20201110 08:38:05.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.935" endtime="20201110 08:38:05.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.911" endtime="20201110 08:38:05.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.909" endtime="20201110 08:38:05.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.945" endtime="20201110 08:38:06.231"></status>
</kw>
<msg timestamp="20201110 08:38:06.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:05.944" endtime="20201110 08:38:06.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:06.236" endtime="20201110 08:38:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.244" endtime="20201110 08:38:06.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.941" endtime="20201110 08:38:06.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.939" endtime="20201110 08:38:06.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.251" level="INFO">${RESULT} = [{'time': 0.02226425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0028000000000165e-05, 'source_diff': 6.0028000000000165e-05}, {'time': 0.022326236, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:06.248" endtime="20201110 08:38:06.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.265" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:06.252" endtime="20201110 08:38:06.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.269" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.268" endtime="20201110 08:38:06.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.272" level="INFO">VALUE: [6.0028000000000165e-05, 5.959699999999804e-05, 5.984699999999829e-05, 5.9458000000001815e-05, 5.986100000000133e-05, 5.968099999999893e-05, 5.966699999999936e-05, 5.943099999999868e-05, 5.9555999999998804e-05, 5.98750000000009e-05, 5.9541999999999234e-05, 5.9764000000000345e-05, 5.965299999999979e-05, 5.9541999999999234e-05, 5.9527999999999665e-05, 5.98750000000009e-05, 5.9472000000001385e-05, 5.9598000000000984e-05, 5.979100000000001e-05, 5.954099999999976e-05, 5.979100000000001e-05, 5.940300000000301e-05, 5.9458000000001815e-05, 5.9929999999999706e-05, 5.965299999999979e-05, 5.9486000000000955e-05, 5.958299999999847e-05, 5.961099999999761e-05, 5.9500000000000525e-05, 5.9791999999999484e-05, 5.938899999999997e-05, 5.9791999999999484e-05, 5.968099999999893e-05, 5.991699999999961e-05, 5.9472000000001385e-05, 5.9708000000002065e-05, 5.944499999999825e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.943100000000215e-05, 5.9736000000001205e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.9862000000000803e-05, 5.9847999999997764e-05, 5.97629999999974e-05, 5.9416000000003105e-05, 5.9708000000002065e-05, 5.9721999999998165e-05, 5.9486000000000955e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.270" endtime="20201110 08:38:06.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.266" endtime="20201110 08:38:06.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.276" endtime="20201110 08:38:06.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.279" endtime="20201110 08:38:06.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.278" endtime="20201110 08:38:06.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.274" endtime="20201110 08:38:06.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.907" endtime="20201110 08:38:06.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.906" endtime="20201110 08:38:06.300"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.310" endtime="20201110 08:38:06.326"></status>
</kw>
<msg timestamp="20201110 08:38:06.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.308" endtime="20201110 08:38:06.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.328" endtime="20201110 08:38:06.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.330" endtime="20201110 08:38:06.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.306" endtime="20201110 08:38:06.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.303" endtime="20201110 08:38:06.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.340" endtime="20201110 08:38:06.627"></status>
</kw>
<msg timestamp="20201110 08:38:06.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.339" endtime="20201110 08:38:06.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023343792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.631" endtime="20201110 08:38:06.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.640" endtime="20201110 08:38:06.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.336" endtime="20201110 08:38:06.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.334" endtime="20201110 08:38:06.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.647" level="INFO">${RESULT} = [{'time': 0.023343792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0735999999998735e-05, 'source_diff': 6.0735999999998735e-05}, {'time': 0.023406806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:06.643" endtime="20201110 08:38:06.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:06.648" endtime="20201110 08:38:06.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.665" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.664" endtime="20201110 08:38:06.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.668" level="INFO">VALUE: [6.0735999999998735e-05, 6.0847999999998764e-05, 6.045899999999882e-05, 6.087499999999843e-05, 6.076300000000187e-05, 6.0514000000001095e-05, 6.055500000000033e-05, 6.05689999999999e-05, 6.0735999999998735e-05, 6.05689999999999e-05, 6.0778000000000915e-05, 6.087499999999843e-05, 6.081900000000015e-05, 6.0750000000001775e-05, 6.062500000000165e-05, 6.063899999999775e-05, 6.0527999999997195e-05, 6.0694000000000026e-05, 6.058299999999947e-05, 6.040300000000054e-05, 6.0443999999999776e-05, 6.068099999999993e-05, 6.0542000000000235e-05, 6.0514000000001095e-05, 6.040299999999707e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0806000000000054e-05, 6.045899999999882e-05, 6.0555999999999804e-05, 6.0763999999997875e-05, 6.041700000000011e-05, 6.065299999999732e-05, 6.0430000000000206e-05, 6.058299999999947e-05, 6.083299999999972e-05, 6.0485999999998485e-05, 6.0735999999998735e-05, 6.0749999999998305e-05, 6.055499999999686e-05, 6.0499999999998055e-05, 6.065300000000079e-05, 6.0528000000000665e-05, 6.0735999999998735e-05, 6.0944000000000276e-05, 6.113900000000172e-05, 6.0736000000002205e-05, 6.0569999999999374e-05, 6.0735999999998735e-05, 6.0499999999998055e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.666" endtime="20201110 08:38:06.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.661" endtime="20201110 08:38:06.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.671" endtime="20201110 08:38:06.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.674" endtime="20201110 08:38:06.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.673" endtime="20201110 08:38:06.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.669" endtime="20201110 08:38:06.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.301" endtime="20201110 08:38:06.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.301" endtime="20201110 08:38:06.695"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.704" endtime="20201110 08:38:06.721"></status>
</kw>
<msg timestamp="20201110 08:38:06.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.703" endtime="20201110 08:38:06.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.723" endtime="20201110 08:38:06.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.725" endtime="20201110 08:38:06.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.700" endtime="20201110 08:38:06.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.698" endtime="20201110 08:38:06.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.735" endtime="20201110 08:38:07.021"></status>
</kw>
<msg timestamp="20201110 08:38:07.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.733" endtime="20201110 08:38:07.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.025" endtime="20201110 08:38:07.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.034" endtime="20201110 08:38:07.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.731" endtime="20201110 08:38:07.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.729" endtime="20201110 08:38:07.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.040" level="INFO">${RESULT} = [{'time': 0.022203278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.172200000000017e-05, 'source_diff': 6.172200000000017e-05}, {'time': 0.022267319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.037" endtime="20201110 08:38:07.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.055" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:07.041" endtime="20201110 08:38:07.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.060" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.059" endtime="20201110 08:38:07.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.062" level="INFO">VALUE: [6.172200000000017e-05, 6.197200000000042e-05, 6.161099999999961e-05, 6.152800000000166e-05, 6.13889999999985e-05, 6.143100000000068e-05, 6.161200000000255e-05, 6.179199999999802e-05, 6.183300000000072e-05, 6.173599999999974e-05, 6.180500000000158e-05, 6.166599999999842e-05, 6.15690000000009e-05, 6.155500000000133e-05, 6.17080000000006e-05, 6.155500000000133e-05, 6.167999999999799e-05, 6.172200000000017e-05, 6.166599999999842e-05, 6.169399999999756e-05, 6.179200000000148e-05, 6.163899999999875e-05, 6.149999999999906e-05, 6.141699999999764e-05, 6.144500000000025e-05, 6.141700000000111e-05, 6.15279999999982e-05, 6.183300000000072e-05, 6.159700000000004e-05, 6.159700000000004e-05, 6.158399999999994e-05, 6.172299999999964e-05, 6.157000000000037e-05, 6.179100000000201e-05, 6.212499999999968e-05, 6.212500000000315e-05, 6.14300000000012e-05, 6.190200000000257e-05, 6.14439999999973e-05, 6.166600000000189e-05, 6.237499999999993e-05, 6.161099999999961e-05, 6.176399999999888e-05, 6.158300000000047e-05, 6.181899999999768e-05, 6.145800000000035e-05, 6.169400000000103e-05, 6.13889999999985e-05, 6.193100000000118e-05, 6.156899999999743e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.061" endtime="20201110 08:38:07.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.056" endtime="20201110 08:38:07.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.066" endtime="20201110 08:38:07.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.069" endtime="20201110 08:38:07.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.068" endtime="20201110 08:38:07.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.064" endtime="20201110 08:38:07.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.696" endtime="20201110 08:38:07.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.696" endtime="20201110 08:38:07.090"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.099" endtime="20201110 08:38:07.116"></status>
</kw>
<msg timestamp="20201110 08:38:07.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.097" endtime="20201110 08:38:07.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.118" endtime="20201110 08:38:07.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.120" endtime="20201110 08:38:07.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.095" endtime="20201110 08:38:07.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.093" endtime="20201110 08:38:07.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.130" endtime="20201110 08:38:07.417"></status>
</kw>
<msg timestamp="20201110 08:38:07.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.129" endtime="20201110 08:38:07.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.421" endtime="20201110 08:38:07.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.429" endtime="20201110 08:38:07.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.126" endtime="20201110 08:38:07.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.124" endtime="20201110 08:38:07.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.436" level="INFO">${RESULT} = [{'time': 0.022298403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291700000000261e-05, 'source_diff': 6.291700000000261e-05}, {'time': 0.022363389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.432" endtime="20201110 08:38:07.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:07.437" endtime="20201110 08:38:07.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.454" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.453" endtime="20201110 08:38:07.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.457" level="INFO">VALUE: [6.291700000000261e-05, 6.284700000000129e-05, 6.286100000000086e-05, 6.273599999999727e-05, 6.250000000000006e-05, 6.277799999999945e-05, 6.295899999999785e-05, 6.312500000000068e-05, 6.28340000000012e-05, 6.24439999999983e-05, 6.251399999999963e-05, 6.284800000000076e-05, 6.293099999999871e-05, 6.248600000000049e-05, 6.272200000000117e-05, 6.252699999999972e-05, 6.261100000000061e-05, 6.269400000000203e-05, 6.262500000000018e-05, 6.241699999999864e-05, 6.290300000000304e-05, 6.272200000000117e-05, 6.299999999999709e-05, 6.291699999999914e-05, 6.25560000000018e-05, 6.25279999999992e-05, 6.273599999999727e-05, 6.280600000000205e-05, 6.282000000000162e-05, 6.240299999999907e-05, 6.240300000000254e-05, 6.240299999999907e-05, 6.272300000000064e-05, 6.259799999999704e-05, 6.26950000000015e-05, 6.255599999999834e-05, 6.259699999999757e-05, 6.252800000000266e-05, 6.337500000000093e-05, 6.277699999999997e-05, 6.277800000000291e-05, 6.274999999999684e-05, 6.245800000000135e-05, 6.277699999999997e-05, 6.254099999999929e-05, 6.248600000000049e-05, 6.245800000000135e-05, 6.309699999999807e-05, 6.284700000000129e-05, 6.2889e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.455" endtime="20201110 08:38:07.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.450" endtime="20201110 08:38:07.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.460" endtime="20201110 08:38:07.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.464" endtime="20201110 08:38:07.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.462" endtime="20201110 08:38:07.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.459" endtime="20201110 08:38:07.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.091" endtime="20201110 08:38:07.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.090" endtime="20201110 08:38:07.484"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.493" endtime="20201110 08:38:07.510"></status>
</kw>
<msg timestamp="20201110 08:38:07.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.492" endtime="20201110 08:38:07.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.512" endtime="20201110 08:38:07.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.514" endtime="20201110 08:38:07.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.489" endtime="20201110 08:38:07.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.487" endtime="20201110 08:38:07.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.524" endtime="20201110 08:38:07.811"></status>
</kw>
<msg timestamp="20201110 08:38:07.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.523" endtime="20201110 08:38:07.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.815" endtime="20201110 08:38:07.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.824" endtime="20201110 08:38:07.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.520" endtime="20201110 08:38:07.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.518" endtime="20201110 08:38:07.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.830" level="INFO">${RESULT} = [{'time': 0.022379778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.418099999999996e-05, 'source_diff': 6.418099999999996e-05}, {'time': 0.022445806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.827" endtime="20201110 08:38:07.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:07.831" endtime="20201110 08:38:07.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.849" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.848" endtime="20201110 08:38:07.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.851" level="INFO">VALUE: [6.418099999999996e-05, 6.381999999999916e-05, 6.359699999999857e-05, 6.340300000000007e-05, 6.355599999999934e-05, 6.387499999999796e-05, 6.349999999999759e-05, 6.345899999999835e-05, 6.347199999999845e-05, 6.37769999999975e-05, 6.34020000000006e-05, 6.387499999999796e-05, 6.362499999999771e-05, 6.354100000000029e-05, 6.384699999999882e-05, 6.39439999999998e-05, 6.363899999999728e-05, 6.440300000000107e-05, 6.369399999999956e-05, 6.347199999999845e-05, 6.363900000000075e-05, 6.380599999999959e-05, 6.368099999999946e-05, 6.35280000000002e-05, 6.341699999999964e-05, 6.374999999999784e-05, 6.387499999999796e-05, 6.340300000000007e-05, 6.394499999999928e-05, 6.35280000000002e-05, 6.366699999999989e-05, 6.374999999999784e-05, 6.413799999999831e-05, 6.345899999999835e-05, 6.354199999999977e-05, 6.352700000000072e-05, 6.345800000000235e-05, 6.39439999999998e-05, 6.349999999999759e-05, 6.3889000000001e-05, 6.347199999999845e-05, 6.387499999999796e-05, 6.387499999999796e-05, 6.387499999999796e-05, 6.366699999999989e-05, 6.395799999999938e-05, 6.366699999999989e-05, 6.380599999999959e-05, 6.359699999999857e-05, 6.437499999999846e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.850" endtime="20201110 08:38:07.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.845" endtime="20201110 08:38:07.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.855" endtime="20201110 08:38:07.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.858" endtime="20201110 08:38:07.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.857" endtime="20201110 08:38:07.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.853" endtime="20201110 08:38:07.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.485" endtime="20201110 08:38:07.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.485" endtime="20201110 08:38:07.879"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.888" endtime="20201110 08:38:07.905"></status>
</kw>
<msg timestamp="20201110 08:38:07.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.886" endtime="20201110 08:38:07.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.907" endtime="20201110 08:38:07.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.909" endtime="20201110 08:38:07.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.884" endtime="20201110 08:38:07.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.881" endtime="20201110 08:38:07.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.919" endtime="20201110 08:38:08.206"></status>
</kw>
<msg timestamp="20201110 08:38:08.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.918" endtime="20201110 08:38:08.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.210" endtime="20201110 08:38:08.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.218" endtime="20201110 08:38:08.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.915" endtime="20201110 08:38:08.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.913" endtime="20201110 08:38:08.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.225" level="INFO">${RESULT} = [{'time': 0.022283847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.506899999999746e-05, 'source_diff': 6.506899999999746e-05}, {'time': 0.022351847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.221" endtime="20201110 08:38:08.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.239" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:08.226" endtime="20201110 08:38:08.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.243" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.242" endtime="20201110 08:38:08.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.246" level="INFO">VALUE: [6.506899999999746e-05, 6.537499999999946e-05, 6.450000000000206e-05, 6.481899999999721e-05, 6.44440000000003e-05, 6.468100000000046e-05, 6.451399999999816e-05, 6.462499999999871e-05, 6.462500000000218e-05, 6.462500000000218e-05, 6.468100000000046e-05, 6.455600000000034e-05, 6.494500000000028e-05, 6.441700000000064e-05, 6.488899999999853e-05, 6.45280000000012e-05, 6.495800000000038e-05, 6.536199999999937e-05, 6.454100000000129e-05, 6.466599999999795e-05, 6.459699999999957e-05, 6.47769999999985e-05, 6.451400000000163e-05, 6.455499999999739e-05, 6.461099999999914e-05, 6.44440000000003e-05, 6.440300000000107e-05, 6.537499999999946e-05, 6.44440000000003e-05, 6.44029999999976e-05, 6.495800000000038e-05, 6.477800000000145e-05, 6.443100000000021e-05, 6.455600000000034e-05, 6.479200000000102e-05, 6.463900000000175e-05, 6.469500000000003e-05, 6.447299999999892e-05, 6.458399999999948e-05, 6.450000000000206e-05, 6.472299999999917e-05, 6.480600000000059e-05, 6.452799999999773e-05, 6.490300000000157e-05, 6.463900000000175e-05, 6.49159999999982e-05, 6.491600000000167e-05, 6.469400000000056e-05, 6.44440000000003e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.244" endtime="20201110 08:38:08.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.240" endtime="20201110 08:38:08.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.249" endtime="20201110 08:38:08.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.253" endtime="20201110 08:38:08.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.251" endtime="20201110 08:38:08.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.248" endtime="20201110 08:38:08.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.880" endtime="20201110 08:38:08.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.879" endtime="20201110 08:38:08.274"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.282" endtime="20201110 08:38:08.299"></status>
</kw>
<msg timestamp="20201110 08:38:08.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.281" endtime="20201110 08:38:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.301" endtime="20201110 08:38:08.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.303" endtime="20201110 08:38:08.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.278" endtime="20201110 08:38:08.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.276" endtime="20201110 08:38:08.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.313" endtime="20201110 08:38:08.599"></status>
</kw>
<msg timestamp="20201110 08:38:08.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.312" endtime="20201110 08:38:08.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021993917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.604" endtime="20201110 08:38:08.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.612" endtime="20201110 08:38:08.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.309" endtime="20201110 08:38:08.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.308" endtime="20201110 08:38:08.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.621" level="INFO">${RESULT} = [{'time': 0.022060056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.613899999999978e-05, 'source_diff': 6.613899999999978e-05}, {'time': 0.022128056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.616" endtime="20201110 08:38:08.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.636" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:08.622" endtime="20201110 08:38:08.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.640" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.639" endtime="20201110 08:38:08.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.643" level="INFO">VALUE: [6.613899999999978e-05, 6.559800000000005e-05, 6.554099999999882e-05, 6.551399999999916e-05, 6.567999999999852e-05, 6.563800000000328e-05, 6.584700000000082e-05, 6.59029999999991e-05, 6.556899999999796e-05, 6.556899999999796e-05, 6.53890000000025e-05, 6.565299999999885e-05, 6.540300000000207e-05, 6.549999999999959e-05, 6.554200000000177e-05, 6.57639999999994e-05, 6.579099999999907e-05, 6.538899999999903e-05, 6.59029999999991e-05, 6.55280000000022e-05, 6.569499999999756e-05, 6.593100000000171e-05, 6.538899999999903e-05, 6.587499999999996e-05, 6.566699999999842e-05, 6.543099999999774e-05, 6.588800000000006e-05, 6.548600000000002e-05, 6.568000000000199e-05, 6.592999999999877e-05, 6.544399999999784e-05, 6.584700000000082e-05, 6.580500000000211e-05, 6.569400000000156e-05, 6.612500000000021e-05, 6.540300000000207e-05, 6.544399999999784e-05, 6.581900000000168e-05, 6.563899999999928e-05, 6.580600000000159e-05, 6.561100000000014e-05, 6.572199999999723e-05, 6.57220000000007e-05, 6.569500000000103e-05, 6.540300000000207e-05, 6.569499999999756e-05, 6.569500000000103e-05, 6.57639999999994e-05, 6.566700000000189e-05, 6.58480000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.642" endtime="20201110 08:38:08.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.637" endtime="20201110 08:38:08.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.647" endtime="20201110 08:38:08.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.650" endtime="20201110 08:38:08.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.649" endtime="20201110 08:38:08.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.645" endtime="20201110 08:38:08.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.274" endtime="20201110 08:38:08.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.274" endtime="20201110 08:38:08.671"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.680" endtime="20201110 08:38:08.697"></status>
</kw>
<msg timestamp="20201110 08:38:08.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.678" endtime="20201110 08:38:08.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.699" endtime="20201110 08:38:08.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.701" endtime="20201110 08:38:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.676" endtime="20201110 08:38:08.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.673" endtime="20201110 08:38:08.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.712" endtime="20201110 08:38:08.997"></status>
</kw>
<msg timestamp="20201110 08:38:09.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:08.710" endtime="20201110 08:38:09.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:09.001" endtime="20201110 08:38:09.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.010" endtime="20201110 08:38:09.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.708" endtime="20201110 08:38:09.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.706" endtime="20201110 08:38:09.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.017" level="INFO">${RESULT} = [{'time': 0.0222255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.727799999999701e-05, 'source_diff': 6.727799999999701e-05}, {'time': 0.022294514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:09.013" endtime="20201110 08:38:09.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.030" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:09.018" endtime="20201110 08:38:09.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.035" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.034" endtime="20201110 08:38:09.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.037" level="INFO">VALUE: [6.727799999999701e-05, 6.679200000000302e-05, 6.654200000000277e-05, 6.659700000000157e-05, 6.673600000000127e-05, 6.647199999999798e-05, 6.691699999999967e-05, 6.665299999999985e-05, 6.675000000000084e-05, 6.663900000000028e-05, 6.668099999999899e-05, 6.675000000000084e-05, 6.688800000000106e-05, 6.665200000000038e-05, 6.67359999999978e-05, 6.669399999999909e-05, 6.670800000000213e-05, 6.673600000000127e-05, 6.681899999999921e-05, 6.654099999999982e-05, 6.684699999999835e-05, 6.688899999999706e-05, 6.69030000000001e-05, 6.647200000000145e-05, 6.670899999999813e-05, 6.684699999999835e-05, 6.684699999999835e-05, 6.65280000000032e-05, 6.662500000000071e-05, 6.64029999999996e-05, 6.67640000000004e-05, 6.655599999999887e-05, 6.691699999999967e-05, 6.680599999999912e-05, 6.693099999999924e-05, 6.650000000000059e-05, 6.68480000000013e-05, 6.640200000000013e-05, 6.665299999999985e-05, 6.679100000000007e-05, 6.648599999999755e-05, 6.681899999999921e-05, 6.688900000000053e-05, 6.666599999999995e-05, 6.691699999999967e-05, 6.683400000000173e-05, 6.658299999999853e-05, 6.65969999999981e-05, 6.647199999999798e-05, 6.670800000000213e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.036" endtime="20201110 08:38:09.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.031" endtime="20201110 08:38:09.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.041" endtime="20201110 08:38:09.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.044" endtime="20201110 08:38:09.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.043" endtime="20201110 08:38:09.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.039" endtime="20201110 08:38:09.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.672" endtime="20201110 08:38:09.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.671" endtime="20201110 08:38:09.065"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.074" endtime="20201110 08:38:09.091"></status>
</kw>
<msg timestamp="20201110 08:38:09.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.072" endtime="20201110 08:38:09.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.093" endtime="20201110 08:38:09.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.095" endtime="20201110 08:38:09.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.070" endtime="20201110 08:38:09.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.068" endtime="20201110 08:38:09.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.106" endtime="20201110 08:38:09.390"></status>
</kw>
<msg timestamp="20201110 08:38:09.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.104" endtime="20201110 08:38:09.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.395" endtime="20201110 08:38:09.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.403" endtime="20201110 08:38:09.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.102" endtime="20201110 08:38:09.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.100" endtime="20201110 08:38:09.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.410" level="INFO">${RESULT} = [{'time': 0.022495931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.738900000000103e-05, 'source_diff': 6.738900000000103e-05}, {'time': 0.022565931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:09.406" endtime="20201110 08:38:09.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.423" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:09.411" endtime="20201110 08:38:09.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.428" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.427" endtime="20201110 08:38:09.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.430" level="INFO">VALUE: [6.738900000000103e-05, 6.783399999999926e-05, 6.750000000000159e-05, 6.762499999999824e-05, 6.769400000000009e-05, 6.783299999999978e-05, 6.761099999999867e-05, 6.77770000000015e-05, 6.762500000000171e-05, 6.779100000000107e-05, 6.738900000000103e-05, 6.743000000000027e-05, 6.758299999999953e-05, 6.79030000000011e-05, 6.791700000000067e-05, 6.780600000000012e-05, 6.763900000000128e-05, 6.756999999999944e-05, 6.769400000000009e-05, 6.787499999999849e-05, 6.77359999999988e-05, 6.747299999999845e-05, 6.837500000000246e-05, 6.738900000000103e-05, 6.794499999999981e-05, 6.777800000000098e-05, 6.756899999999996e-05, 6.74160000000007e-05, 6.781900000000021e-05, 6.765300000000085e-05, 6.744399999999984e-05, 6.794400000000034e-05, 6.786099999999892e-05, 6.768000000000052e-05, 6.787500000000196e-05, 6.77220000000027e-05, 6.747200000000245e-05, 6.74169999999967e-05, 6.786099999999892e-05, 6.763900000000128e-05, 6.793100000000024e-05, 6.751400000000116e-05, 6.791700000000067e-05, 6.780600000000012e-05, 6.763899999999781e-05, 6.750000000000159e-05, 6.744499999999931e-05, 6.776399999999794e-05, 6.779200000000055e-05, 6.756899999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.429" endtime="20201110 08:38:09.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.424" endtime="20201110 08:38:09.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.434" endtime="20201110 08:38:09.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.438" endtime="20201110 08:38:09.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.436" endtime="20201110 08:38:09.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.432" endtime="20201110 08:38:09.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.066" endtime="20201110 08:38:09.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.066" endtime="20201110 08:38:09.458"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.467" endtime="20201110 08:38:09.485"></status>
</kw>
<msg timestamp="20201110 08:38:09.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.466" endtime="20201110 08:38:09.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.486" endtime="20201110 08:38:09.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.489" endtime="20201110 08:38:09.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.463" endtime="20201110 08:38:09.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.461" endtime="20201110 08:38:09.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.499" endtime="20201110 08:38:09.784"></status>
</kw>
<msg timestamp="20201110 08:38:09.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.497" endtime="20201110 08:38:09.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.789" endtime="20201110 08:38:09.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.797" endtime="20201110 08:38:09.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.495" endtime="20201110 08:38:09.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.493" endtime="20201110 08:38:09.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.804" level="INFO">${RESULT} = [{'time': 0.022579375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.92360000000003e-05, 'source_diff': 6.92360000000003e-05}, {'time': 0.022650389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:09.801" endtime="20201110 08:38:09.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.818" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:09.805" endtime="20201110 08:38:09.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.822" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.821" endtime="20201110 08:38:09.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.825" level="INFO">VALUE: [6.92360000000003e-05, 6.85420000000013e-05, 6.838900000000203e-05, 6.857000000000044e-05, 6.852800000000173e-05, 6.859699999999663e-05, 6.891700000000167e-05, 6.872200000000023e-05, 6.888899999999906e-05, 6.862500000000271e-05, 6.894500000000081e-05, 6.85970000000001e-05, 6.89299999999983e-05, 6.881900000000121e-05, 6.877699999999903e-05, 6.89299999999983e-05, 6.862499999999924e-05, 6.891599999999873e-05, 6.845800000000041e-05, 6.847199999999998e-05, 6.862499999999924e-05, 6.881900000000121e-05, 6.880500000000164e-05, 6.877800000000198e-05, 6.87359999999998e-05, 6.868100000000099e-05, 6.8584e-05, 6.865300000000185e-05, 6.843099999999727e-05, 6.855600000000087e-05, 6.844500000000031e-05, 6.879199999999808e-05, 6.844500000000031e-05, 6.843099999999727e-05, 6.8584e-05, 6.847199999999998e-05, 6.861199999999915e-05, 6.890200000000263e-05, 6.863799999999934e-05, 6.866600000000195e-05, 6.868000000000152e-05, 6.893000000000177e-05, 6.84299999999978e-05, 6.861099999999967e-05, 6.837500000000246e-05, 6.863899999999881e-05, 6.843000000000127e-05, 6.887499999999949e-05, 6.90970000000006e-05, 6.84169999999977e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.823" endtime="20201110 08:38:09.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.818" endtime="20201110 08:38:09.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.828" endtime="20201110 08:38:09.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.832" endtime="20201110 08:38:09.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.830" endtime="20201110 08:38:09.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.827" endtime="20201110 08:38:09.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.459" endtime="20201110 08:38:09.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.459" endtime="20201110 08:38:09.853"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.861" endtime="20201110 08:38:09.879"></status>
</kw>
<msg timestamp="20201110 08:38:09.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.860" endtime="20201110 08:38:09.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.880" endtime="20201110 08:38:09.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.883" endtime="20201110 08:38:09.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.857" endtime="20201110 08:38:09.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.855" endtime="20201110 08:38:09.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.893" endtime="20201110 08:38:10.178"></status>
</kw>
<msg timestamp="20201110 08:38:10.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.891" endtime="20201110 08:38:10.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.183" endtime="20201110 08:38:10.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.191" endtime="20201110 08:38:10.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.889" endtime="20201110 08:38:10.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.887" endtime="20201110 08:38:10.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.198" level="INFO">${RESULT} = [{'time': 0.022348792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.988900000000006e-05, 'source_diff': 6.988900000000006e-05}, {'time': 0.022420778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:10.194" endtime="20201110 08:38:10.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.212" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:10.199" endtime="20201110 08:38:10.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.217" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.216" endtime="20201110 08:38:10.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.219" level="INFO">VALUE: [6.988900000000006e-05, 6.983399999999779e-05, 6.976399999999994e-05, 6.994500000000181e-05, 6.979199999999908e-05, 6.980600000000212e-05, 6.997199999999801e-05, 6.961100000000067e-05, 6.938899999999956e-05, 6.948600000000055e-05, 6.954099999999935e-05, 6.977700000000003e-05, 6.984700000000135e-05, 6.966599999999948e-05, 6.972200000000123e-05, 6.988899999999659e-05, 6.958300000000153e-05, 6.951399999999969e-05, 6.993099999999877e-05, 6.972199999999776e-05, 6.938899999999956e-05, 6.961100000000067e-05, 6.941700000000217e-05, 6.988900000000006e-05, 6.993099999999877e-05, 6.968099999999852e-05, 6.969399999999862e-05, 6.983400000000126e-05, 6.98620000000004e-05, 6.954199999999883e-05, 6.945800000000141e-05, 6.941599999999923e-05, 6.981899999999874e-05, 6.990299999999963e-05, 7.011100000000117e-05, 6.977799999999951e-05, 6.95420000000023e-05, 6.97360000000008e-05, 6.962500000000024e-05, 6.963899999999981e-05, 6.988900000000006e-05, 6.943099999999827e-05, 6.975000000000037e-05, 6.972199999999776e-05, 6.969500000000156e-05, 6.994499999999834e-05, 6.954199999999883e-05, 6.947200000000098e-05, 6.9584000000001e-05, 6.963899999999981e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.218" endtime="20201110 08:38:10.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.213" endtime="20201110 08:38:10.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.223" endtime="20201110 08:38:10.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.227" endtime="20201110 08:38:10.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.225" endtime="20201110 08:38:10.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.221" endtime="20201110 08:38:10.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.853" endtime="20201110 08:38:10.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.853" endtime="20201110 08:38:10.247"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.256" endtime="20201110 08:38:10.274"></status>
</kw>
<msg timestamp="20201110 08:38:10.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.255" endtime="20201110 08:38:10.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.275" endtime="20201110 08:38:10.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.278" endtime="20201110 08:38:10.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.252" endtime="20201110 08:38:10.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.250" endtime="20201110 08:38:10.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.288" endtime="20201110 08:38:10.573"></status>
</kw>
<msg timestamp="20201110 08:38:10.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:10.286" endtime="20201110 08:38:10.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022449597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:10.578" endtime="20201110 08:38:10.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.586" endtime="20201110 08:38:10.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.284" endtime="20201110 08:38:10.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.282" endtime="20201110 08:38:10.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.593" level="INFO">${RESULT} = [{'time': 0.022449597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.05970000000021e-05, 'source_diff': 7.05970000000021e-05}, {'time': 0.022522611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:10.589" endtime="20201110 08:38:10.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:10.594" endtime="20201110 08:38:10.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.611" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.610" endtime="20201110 08:38:10.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.613" level="INFO">VALUE: [7.05970000000021e-05, 7.045800000000241e-05, 7.072199999999876e-05, 7.079200000000008e-05, 7.076399999999747e-05, 7.09170000000002e-05, 7.043100000000274e-05, 7.04169999999997e-05, 7.090300000000063e-05, 7.09170000000002e-05, 7.043100000000274e-05, 7.069499999999909e-05, 7.083399999999879e-05, 7.084699999999888e-05, 7.073700000000127e-05, 7.062500000000124e-05, 7.09170000000002e-05, 7.044500000000231e-05, 7.073599999999833e-05, 7.049999999999765e-05, 7.073599999999833e-05, 7.052699999999731e-05, 7.094399999999987e-05, 7.048599999999808e-05, 7.06109999999982e-05, 7.034699999999838e-05, 7.084699999999888e-05, 7.04169999999997e-05, 7.084700000000235e-05, 7.070799999999919e-05, 7.133299999999981e-05, 7.070799999999919e-05, 7.07499999999979e-05, 7.080599999999965e-05, 7.073599999999833e-05, 7.079200000000008e-05, 7.072299999999823e-05, 7.073599999999833e-05, 7.054199999999983e-05, 7.05689999999995e-05, 7.037499999999752e-05, 7.043099999999927e-05, 7.040200000000066e-05, 7.091600000000073e-05, 7.054100000000035e-05, 7.077800000000051e-05, 7.040300000000013e-05, 7.094399999999987e-05, 7.077800000000051e-05, 7.052799999999679e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.612" endtime="20201110 08:38:10.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.607" endtime="20201110 08:38:10.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.617" endtime="20201110 08:38:10.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.620" endtime="20201110 08:38:10.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.619" endtime="20201110 08:38:10.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.615" endtime="20201110 08:38:10.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.248" endtime="20201110 08:38:10.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.248" endtime="20201110 08:38:10.641"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.650" endtime="20201110 08:38:10.668"></status>
</kw>
<msg timestamp="20201110 08:38:10.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.649" endtime="20201110 08:38:10.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.670" endtime="20201110 08:38:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.673" endtime="20201110 08:38:10.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.646" endtime="20201110 08:38:10.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.644" endtime="20201110 08:38:10.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.685" endtime="20201110 08:38:10.972"></status>
</kw>
<msg timestamp="20201110 08:38:10.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.684" endtime="20201110 08:38:10.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022806792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.976" endtime="20201110 08:38:10.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.984" endtime="20201110 08:38:10.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.681" endtime="20201110 08:38:10.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.678" endtime="20201110 08:38:10.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.991" level="INFO">${RESULT} = [{'time': 0.022806792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.21109999999997e-05, 'source_diff': 7.21109999999997e-05}, {'time': 0.022880806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:10.988" endtime="20201110 08:38:10.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.005" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:10.992" endtime="20201110 08:38:11.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.010" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.009" endtime="20201110 08:38:11.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.012" level="INFO">VALUE: [7.21109999999997e-05, 7.151400000000169e-05, 7.145799999999994e-05, 7.19309999999973e-05, 7.17499999999989e-05, 7.173599999999933e-05, 7.190199999999869e-05, 7.190199999999869e-05, 7.158300000000006e-05, 7.190300000000163e-05, 7.149999999999865e-05, 7.180500000000117e-05, 7.186099999999945e-05, 7.155499999999745e-05, 7.137499999999852e-05, 7.177800000000151e-05, 7.17499999999989e-05, 7.163899999999834e-05, 7.172199999999976e-05, 7.188900000000206e-05, 7.144500000000331e-05, 7.163899999999834e-05, 7.19170000000012e-05, 7.169500000000009e-05, 7.156999999999997e-05, 7.151299999999874e-05, 7.150000000000212e-05, 7.15690000000005e-05, 7.19439999999974e-05, 7.154100000000135e-05, 7.170800000000019e-05, 7.19300000000013e-05, 7.145799999999994e-05, 7.166600000000148e-05, 7.18049999999977e-05, 7.168000000000105e-05, 7.163899999999834e-05, 7.147200000000298e-05, 7.161100000000267e-05, 7.150000000000212e-05, 7.148600000000255e-05, 7.148599999999908e-05, 7.173599999999933e-05, 7.188900000000206e-05, 7.147300000000245e-05, 7.154199999999736e-05, 7.173599999999933e-05, 7.215200000000241e-05, 7.147199999999951e-05, 7.152699999999831e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.011" endtime="20201110 08:38:11.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.006" endtime="20201110 08:38:11.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.020" endtime="20201110 08:38:11.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.023" endtime="20201110 08:38:11.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.022" endtime="20201110 08:38:11.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.018" endtime="20201110 08:38:11.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.642" endtime="20201110 08:38:11.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.642" endtime="20201110 08:38:11.044"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.053" endtime="20201110 08:38:11.071"></status>
</kw>
<msg timestamp="20201110 08:38:11.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.051" endtime="20201110 08:38:11.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.072" endtime="20201110 08:38:11.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.075" endtime="20201110 08:38:11.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.049" endtime="20201110 08:38:11.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.047" endtime="20201110 08:38:11.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.085" endtime="20201110 08:38:11.371"></status>
</kw>
<msg timestamp="20201110 08:38:11.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.083" endtime="20201110 08:38:11.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.375" endtime="20201110 08:38:11.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.383" endtime="20201110 08:38:11.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.080" endtime="20201110 08:38:11.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.079" endtime="20201110 08:38:11.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.390" level="INFO">${RESULT} = [{'time': 0.022372597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.266600000000248e-05, 'source_diff': 7.266600000000248e-05}, {'time': 0.022447597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.387" endtime="20201110 08:38:11.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:11.391" endtime="20201110 08:38:11.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.409" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.408" endtime="20201110 08:38:11.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.411" level="INFO">VALUE: [7.266600000000248e-05, 7.267999999999858e-05, 7.263899999999934e-05, 7.244500000000084e-05, 7.300000000000015e-05, 7.26110000000002e-05, 7.245799999999747e-05, 7.269400000000162e-05, 7.265299999999891e-05, 7.25560000000014e-05, 7.257000000000097e-05, 7.295900000000091e-05, 7.337499999999705e-05, 7.282000000000122e-05, 7.269499999999762e-05, 7.238900000000256e-05, 7.266599999999901e-05, 7.263799999999987e-05, 7.282000000000122e-05, 7.238799999999962e-05, 7.265299999999891e-05, 7.25829999999976e-05, 7.283300000000131e-05, 7.26110000000002e-05, 7.280500000000217e-05, 7.251399999999922e-05, 7.248600000000008e-05, 7.245800000000094e-05, 7.287500000000002e-05, 7.287500000000002e-05, 7.277799999999904e-05, 7.276400000000294e-05, 7.254199999999836e-05, 7.25699999999975e-05, 7.31110000000007e-05, 7.295899999999744e-05, 7.288899999999959e-05, 7.291699999999873e-05, 7.283300000000131e-05, 7.24300000000018e-05, 7.277799999999904e-05, 7.249999999999965e-05, 7.247200000000051e-05, 7.238799999999962e-05, 7.245800000000094e-05, 7.28049999999987e-05, 7.247200000000051e-05, 7.276399999999947e-05, 7.245800000000094e-05, 7.258300000000106e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.410" endtime="20201110 08:38:11.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.405" endtime="20201110 08:38:11.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.415" endtime="20201110 08:38:11.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.418" endtime="20201110 08:38:11.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.417" endtime="20201110 08:38:11.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.413" endtime="20201110 08:38:11.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.045" endtime="20201110 08:38:11.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.044" endtime="20201110 08:38:11.439"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.448" endtime="20201110 08:38:11.466"></status>
</kw>
<msg timestamp="20201110 08:38:11.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.446" endtime="20201110 08:38:11.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.467" endtime="20201110 08:38:11.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.469" endtime="20201110 08:38:11.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.444" endtime="20201110 08:38:11.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.441" endtime="20201110 08:38:11.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.480" endtime="20201110 08:38:11.767"></status>
</kw>
<msg timestamp="20201110 08:38:11.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022284569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.478" endtime="20201110 08:38:11.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022284569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.771" endtime="20201110 08:38:11.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.779" endtime="20201110 08:38:11.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.475" endtime="20201110 08:38:11.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.474" endtime="20201110 08:38:11.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.786" level="INFO">${RESULT} = [{'time': 0.022284569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.404100000000038e-05, 'source_diff': 7.404100000000038e-05}, {'time': 0.022360583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.783" endtime="20201110 08:38:11.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.801" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:11.787" endtime="20201110 08:38:11.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.805" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.804" endtime="20201110 08:38:11.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.808" level="INFO">VALUE: [7.404100000000038e-05, 7.390200000000069e-05, 7.352700000000031e-05, 7.369399999999915e-05, 7.392999999999983e-05, 7.383300000000231e-05, 7.388900000000059e-05, 7.372200000000176e-05, 7.384700000000188e-05, 7.366699999999948e-05, 7.369399999999915e-05, 7.384699999999841e-05, 7.368099999999905e-05, 7.391699999999973e-05, 7.369500000000209e-05, 7.34309999999988e-05, 7.381999999999875e-05, 7.373599999999786e-05, 7.381999999999875e-05, 7.411200000000118e-05, 7.355500000000292e-05, 7.397200000000201e-05, 7.39439999999994e-05, 7.379100000000013e-05, 7.39439999999994e-05, 7.338900000000009e-05, 7.39439999999994e-05, 7.352800000000326e-05, 7.344400000000237e-05, 7.384699999999841e-05, 7.354199999999936e-05, 7.35829999999986e-05, 7.386099999999798e-05, 7.363899999999687e-05, 7.39170000000032e-05, 7.390200000000069e-05, 7.359700000000163e-05, 7.379199999999961e-05, 7.39439999999994e-05, 7.374999999999743e-05, 7.344499999999837e-05, 7.386200000000093e-05, 7.366699999999948e-05, 7.380599999999918e-05, 7.365299999999991e-05, 7.35829999999986e-05, 7.366600000000001e-05, 7.379100000000013e-05, 7.35829999999986e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.807" endtime="20201110 08:38:11.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.802" endtime="20201110 08:38:11.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.812" endtime="20201110 08:38:11.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.815" endtime="20201110 08:38:11.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.813" endtime="20201110 08:38:11.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.810" endtime="20201110 08:38:11.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.440" endtime="20201110 08:38:11.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.439" endtime="20201110 08:38:11.836"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.845" endtime="20201110 08:38:11.863"></status>
</kw>
<msg timestamp="20201110 08:38:11.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.843" endtime="20201110 08:38:11.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.864" endtime="20201110 08:38:11.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.867" endtime="20201110 08:38:11.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.840" endtime="20201110 08:38:11.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.838" endtime="20201110 08:38:11.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.877" endtime="20201110 08:38:12.162"></status>
</kw>
<msg timestamp="20201110 08:38:12.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.875" endtime="20201110 08:38:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.166" endtime="20201110 08:38:12.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.175" endtime="20201110 08:38:12.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.873" endtime="20201110 08:38:12.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.871" endtime="20201110 08:38:12.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.181" level="INFO">${RESULT} = [{'time': 0.022396889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.534699999999991e-05, 'source_diff': 7.534699999999991e-05}, {'time': 0.022473847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.178" endtime="20201110 08:38:12.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:12.182" endtime="20201110 08:38:12.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.200" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.199" endtime="20201110 08:38:12.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.202" level="INFO">VALUE: [7.534699999999991e-05, 7.448600000000208e-05, 7.452799999999732e-05, 7.488899999999812e-05, 7.461099999999873e-05, 7.448599999999861e-05, 7.487500000000202e-05, 7.480600000000018e-05, 7.469499999999962e-05, 7.452800000000079e-05, 7.447299999999851e-05, 7.44309999999998e-05, 7.448599999999861e-05, 7.480600000000018e-05, 7.468100000000005e-05, 7.455499999999698e-05, 7.445899999999894e-05, 7.46379999999984e-05, 7.493000000000083e-05, 7.462500000000177e-05, 7.44439999999999e-05, 7.486099999999898e-05, 7.511099999999923e-05, 7.466600000000101e-05, 7.451400000000122e-05, 7.44439999999999e-05, 7.477800000000104e-05, 7.498599999999911e-05, 7.461099999999873e-05, 7.454200000000036e-05, 7.444499999999937e-05, 7.488899999999812e-05, 7.45699999999995e-05, 7.480600000000018e-05, 7.468100000000005e-05, 7.462500000000177e-05, 7.44029999999972e-05, 7.440300000000066e-05, 7.455500000000045e-05, 7.49440000000004e-05, 7.472200000000276e-05, 7.490300000000116e-05, 7.44439999999999e-05, 7.465300000000091e-05, 7.487499999999855e-05, 7.468000000000058e-05, 7.470799999999972e-05, 7.448600000000208e-05, 7.463900000000134e-05, 7.490300000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.201" endtime="20201110 08:38:12.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.196" endtime="20201110 08:38:12.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.206" endtime="20201110 08:38:12.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.209" endtime="20201110 08:38:12.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.208" endtime="20201110 08:38:12.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.204" endtime="20201110 08:38:12.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.837" endtime="20201110 08:38:12.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.836" endtime="20201110 08:38:12.230"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.239" endtime="20201110 08:38:12.256"></status>
</kw>
<msg timestamp="20201110 08:38:12.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.237" endtime="20201110 08:38:12.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.258" endtime="20201110 08:38:12.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.261" endtime="20201110 08:38:12.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.235" endtime="20201110 08:38:12.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.233" endtime="20201110 08:38:12.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.271" endtime="20201110 08:38:12.556"></status>
</kw>
<msg timestamp="20201110 08:38:12.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.269" endtime="20201110 08:38:12.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.560" endtime="20201110 08:38:12.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.569" endtime="20201110 08:38:12.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.267" endtime="20201110 08:38:12.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.265" endtime="20201110 08:38:12.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.575" level="INFO">${RESULT} = [{'time': 0.022203569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.594399999999793e-05, 'source_diff': 7.594399999999793e-05}, {'time': 0.022281569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.572" endtime="20201110 08:38:12.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.589" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:12.576" endtime="20201110 08:38:12.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.594" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.593" endtime="20201110 08:38:12.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.596" level="INFO">VALUE: [7.594399999999793e-05, 7.566600000000201e-05, 7.573599999999986e-05, 7.54440000000009e-05, 7.544399999999743e-05, 7.59029999999987e-05, 7.579100000000213e-05, 7.552799999999832e-05, 7.558400000000007e-05, 7.54029999999982e-05, 7.556900000000102e-05, 7.554199999999789e-05, 7.5763999999999e-05, 7.551400000000222e-05, 7.541700000000123e-05, 7.580600000000118e-05, 7.569500000000062e-05, 7.584700000000041e-05, 7.558400000000007e-05, 7.577799999999857e-05, 7.586099999999998e-05, 7.558400000000007e-05, 7.565200000000244e-05, 7.570800000000072e-05, 7.55830000000006e-05, 7.563899999999887e-05, 7.587499999999955e-05, 7.574999999999943e-05, 7.554100000000188e-05, 7.591699999999826e-05, 7.584700000000041e-05, 7.568100000000105e-05, 7.548599999999961e-05, 7.590300000000216e-05, 7.548599999999961e-05, 7.59310000000013e-05, 7.543000000000133e-05, 7.580600000000118e-05, 7.638899999999962e-05, 7.548599999999961e-05, 7.566699999999801e-05, 7.59029999999987e-05, 7.53890000000021e-05, 7.555500000000145e-05, 7.538800000000262e-05, 7.61249999999998e-05, 7.545800000000047e-05, 7.545800000000047e-05, 7.570800000000072e-05, 7.588899999999912e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.595" endtime="20201110 08:38:12.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.590" endtime="20201110 08:38:12.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.600" endtime="20201110 08:38:12.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.603" endtime="20201110 08:38:12.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.602" endtime="20201110 08:38:12.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.598" endtime="20201110 08:38:12.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.231" endtime="20201110 08:38:12.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.231" endtime="20201110 08:38:12.624"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.633" endtime="20201110 08:38:12.650"></status>
</kw>
<msg timestamp="20201110 08:38:12.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.631" endtime="20201110 08:38:12.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.652" endtime="20201110 08:38:12.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.655" endtime="20201110 08:38:12.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.629" endtime="20201110 08:38:12.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.627" endtime="20201110 08:38:12.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.666" endtime="20201110 08:38:12.952"></status>
</kw>
<msg timestamp="20201110 08:38:12.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.664" endtime="20201110 08:38:12.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.956" endtime="20201110 08:38:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.965" endtime="20201110 08:38:12.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.661" endtime="20201110 08:38:12.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.659" endtime="20201110 08:38:12.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.971" level="INFO">${RESULT} = [{'time': 0.022209069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.734700000000191e-05, 'source_diff': 7.734700000000191e-05}, {'time': 0.022288153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.968" endtime="20201110 08:38:12.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:12.972" endtime="20201110 08:38:12.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.990" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.989" endtime="20201110 08:38:12.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.992" level="INFO">VALUE: [7.734700000000191e-05, 7.668100000000205e-05, 7.667999999999911e-05, 7.647200000000104e-05, 7.669400000000215e-05, 7.71250000000008e-05, 7.694399999999893e-05, 7.650000000000018e-05, 7.659700000000116e-05, 7.6457999999998e-05, 7.652799999999932e-05, 7.670800000000172e-05, 7.687500000000055e-05, 7.715200000000047e-05, 7.668100000000205e-05, 7.65700000000015e-05, 7.693099999999883e-05, 7.665299999999944e-05, 7.669500000000162e-05, 7.669500000000162e-05, 7.647300000000051e-05, 7.684699999999794e-05, 7.659700000000116e-05, 7.651399999999975e-05, 7.692999999999936e-05, 7.670799999999825e-05, 7.673600000000086e-05, 7.68189999999988e-05, 7.648600000000061e-05, 7.641700000000223e-05, 7.659700000000116e-05, 7.686099999999751e-05, 7.666699999999901e-05, 7.647200000000104e-05, 7.679199999999914e-05, 7.668099999999858e-05, 7.684800000000089e-05, 7.651399999999975e-05, 7.69449999999984e-05, 7.655599999999846e-05, 7.650000000000018e-05, 7.638899999999962e-05, 7.686100000000098e-05, 7.654099999999942e-05, 7.669499999999815e-05, 7.680599999999871e-05, 7.665299999999944e-05, 7.644399999999843e-05, 7.684700000000141e-05, 7.654199999999889e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.991" endtime="20201110 08:38:12.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.986" endtime="20201110 08:38:12.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.996" endtime="20201110 08:38:12.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.999" endtime="20201110 08:38:13.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.998" endtime="20201110 08:38:13.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.994" endtime="20201110 08:38:13.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.625" endtime="20201110 08:38:13.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.624" endtime="20201110 08:38:13.020"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.029" endtime="20201110 08:38:13.046"></status>
</kw>
<msg timestamp="20201110 08:38:13.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.027" endtime="20201110 08:38:13.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.048" endtime="20201110 08:38:13.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.050" endtime="20201110 08:38:13.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.025" endtime="20201110 08:38:13.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.023" endtime="20201110 08:38:13.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.060" endtime="20201110 08:38:13.346"></status>
</kw>
<msg timestamp="20201110 08:38:13.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02223025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:13.059" endtime="20201110 08:38:13.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02223025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:13.350" endtime="20201110 08:38:13.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.359" endtime="20201110 08:38:13.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.056" endtime="20201110 08:38:13.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.054" endtime="20201110 08:38:13.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.366" level="INFO">${RESULT} = [{'time': 0.022307819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.756899999999955e-05, 'source_diff': 7.756899999999955e-05}, {'time': 0.022387833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.362" endtime="20201110 08:38:13.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:13.367" endtime="20201110 08:38:13.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.385" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.384" endtime="20201110 08:38:13.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.387" level="INFO">VALUE: [7.756899999999955e-05, 7.763900000000087e-05, 7.777800000000057e-05, 7.761099999999826e-05, 7.786099999999851e-05, 7.749999999999771e-05, 7.787499999999808e-05, 7.755499999999999e-05, 7.763900000000087e-05, 7.761099999999826e-05, 7.741699999999976e-05, 7.7764000000001e-05, 7.747199999999857e-05, 7.766700000000001e-05, 7.74030000000002e-05, 7.769499999999915e-05, 7.768099999999958e-05, 7.775000000000143e-05, 7.838900000000162e-05, 7.786200000000146e-05, 7.7764000000001e-05, 7.747200000000204e-05, 7.768000000000011e-05, 7.759700000000216e-05, 7.770799999999925e-05, 7.745800000000247e-05, 7.747199999999857e-05, 7.772199999999882e-05, 7.787499999999808e-05, 7.780500000000024e-05, 7.780599999999971e-05, 7.747199999999857e-05, 7.769500000000262e-05, 7.743099999999933e-05, 7.781999999999928e-05, 7.783399999999885e-05, 7.76380000000014e-05, 7.747299999999804e-05, 7.790299999999722e-05, 7.758299999999912e-05, 7.768000000000011e-05, 7.786199999999799e-05, 7.738799999999768e-05, 7.761099999999826e-05, 7.770799999999925e-05, 7.758299999999912e-05, 7.748599999999814e-05, 7.754100000000042e-05, 7.769399999999968e-05, 7.763900000000087e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.386" endtime="20201110 08:38:13.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.381" endtime="20201110 08:38:13.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.391" endtime="20201110 08:38:13.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.394" endtime="20201110 08:38:13.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.393" endtime="20201110 08:38:13.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.389" endtime="20201110 08:38:13.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.021" endtime="20201110 08:38:13.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.020" endtime="20201110 08:38:13.415"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.424" endtime="20201110 08:38:13.442"></status>
</kw>
<msg timestamp="20201110 08:38:13.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.423" endtime="20201110 08:38:13.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.444" endtime="20201110 08:38:13.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.446" endtime="20201110 08:38:13.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.420" endtime="20201110 08:38:13.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.418" endtime="20201110 08:38:13.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.457" endtime="20201110 08:38:13.743"></status>
</kw>
<msg timestamp="20201110 08:38:13.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.455" endtime="20201110 08:38:13.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.747" endtime="20201110 08:38:13.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.755" endtime="20201110 08:38:13.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.452" endtime="20201110 08:38:13.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.451" endtime="20201110 08:38:13.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.762" level="INFO">${RESULT} = [{'time': 0.022448167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.895899999999997e-05, 'source_diff': 7.895899999999997e-05}, {'time': 0.022529194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.759" endtime="20201110 08:38:13.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:13.763" endtime="20201110 08:38:13.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.781" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.780" endtime="20201110 08:38:13.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.783" level="INFO">VALUE: [7.895899999999997e-05, 7.912499999999933e-05, 7.848699999999861e-05, 7.887500000000255e-05, 7.884699999999994e-05, 7.861099999999926e-05, 7.857000000000003e-05, 7.862499999999883e-05, 7.89580000000005e-05, 7.877800000000157e-05, 7.891700000000126e-05, 7.873599999999939e-05, 7.887499999999908e-05, 7.86389999999984e-05, 7.861099999999926e-05, 7.891700000000126e-05, 7.875000000000243e-05, 7.886099999999951e-05, 7.865299999999797e-05, 7.862499999999883e-05, 7.86250000000023e-05, 7.865299999999797e-05, 7.84030000000012e-05, 7.843100000000033e-05, 7.866599999999807e-05, 7.866600000000154e-05, 7.852800000000132e-05, 7.876399999999853e-05, 7.879100000000167e-05, 7.882000000000028e-05, 7.855600000000046e-05, 7.938899999999915e-05, 7.883300000000037e-05, 7.869500000000015e-05, 7.8458e-05, 7.84030000000012e-05, 7.888900000000212e-05, 7.876399999999853e-05, 7.883399999999985e-05, 7.891700000000126e-05, 7.861099999999926e-05, 7.879100000000167e-05, 7.847300000000251e-05, 7.892999999999789e-05, 7.872199999999982e-05, 7.872199999999982e-05, 7.884699999999994e-05, 7.852699999999838e-05, 7.861100000000273e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.782" endtime="20201110 08:38:13.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.777" endtime="20201110 08:38:13.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.787" endtime="20201110 08:38:13.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.790" endtime="20201110 08:38:13.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.788" endtime="20201110 08:38:13.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.785" endtime="20201110 08:38:13.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.416" endtime="20201110 08:38:13.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.416" endtime="20201110 08:38:13.811"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.820" endtime="20201110 08:38:13.838"></status>
</kw>
<msg timestamp="20201110 08:38:13.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.818" endtime="20201110 08:38:13.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.839" endtime="20201110 08:38:13.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.842" endtime="20201110 08:38:13.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.816" endtime="20201110 08:38:13.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.813" endtime="20201110 08:38:13.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.852" endtime="20201110 08:38:14.137"></status>
</kw>
<msg timestamp="20201110 08:38:14.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.851" endtime="20201110 08:38:14.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.141" endtime="20201110 08:38:14.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.150" endtime="20201110 08:38:14.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.848" endtime="20201110 08:38:14.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.846" endtime="20201110 08:38:14.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.157" level="INFO">${RESULT} = [{'time': 0.022212236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.94169999999983e-05, 'source_diff': 7.94169999999983e-05}, {'time': 0.022294236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.153" endtime="20201110 08:38:14.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.170" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:14.158" endtime="20201110 08:38:14.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.175" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.174" endtime="20201110 08:38:14.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.178" level="INFO">VALUE: [7.94169999999983e-05, 7.945799999999753e-05, 7.96389999999994e-05, 7.947200000000057e-05, 7.988899999999965e-05, 7.955599999999799e-05, 7.99030000000027e-05, 7.972200000000082e-05, 7.94169999999983e-05, 7.94030000000022e-05, 7.97230000000003e-05, 7.948600000000014e-05, 7.974999999999996e-05, 7.977699999999963e-05, 7.956999999999756e-05, 7.942999999999839e-05, 7.983300000000138e-05, 7.986100000000051e-05, 7.984700000000094e-05, 7.970800000000125e-05, 7.973600000000039e-05, 8.012500000000033e-05, 7.959800000000017e-05, 7.9458000000001e-05, 7.974999999999996e-05, 7.979199999999867e-05, 7.955600000000146e-05, 8.011100000000076e-05, 7.983400000000085e-05, 7.976399999999953e-05, 7.948600000000014e-05, 7.99580000000015e-05, 7.976300000000006e-05, 7.977699999999963e-05, 7.970800000000125e-05, 7.959699999999723e-05, 7.95970000000007e-05, 7.949999999999971e-05, 7.991600000000279e-05, 7.961100000000026e-05, 7.994399999999846e-05, 7.968000000000211e-05, 7.952799999999885e-05, 7.949999999999971e-05, 7.97779999999991e-05, 8.012500000000033e-05, 7.948600000000014e-05, 7.96389999999994e-05, 8.037499999999712e-05, 7.974999999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.176" endtime="20201110 08:38:14.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.171" endtime="20201110 08:38:14.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.181" endtime="20201110 08:38:14.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.185" endtime="20201110 08:38:14.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.183" endtime="20201110 08:38:14.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.180" endtime="20201110 08:38:14.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.812" endtime="20201110 08:38:14.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.811" endtime="20201110 08:38:14.206"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.214" endtime="20201110 08:38:14.232"></status>
</kw>
<msg timestamp="20201110 08:38:14.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.213" endtime="20201110 08:38:14.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.234" endtime="20201110 08:38:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.236" endtime="20201110 08:38:14.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.210" endtime="20201110 08:38:14.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.208" endtime="20201110 08:38:14.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.247" endtime="20201110 08:38:14.531"></status>
</kw>
<msg timestamp="20201110 08:38:14.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.245" endtime="20201110 08:38:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.536" endtime="20201110 08:38:14.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.544" endtime="20201110 08:38:14.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.242" endtime="20201110 08:38:14.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.241" endtime="20201110 08:38:14.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.551" level="INFO">${RESULT} = [{'time': 0.022429292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.06390000000004e-05, 'source_diff': 8.06390000000004e-05}, {'time': 0.022512306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.547" endtime="20201110 08:38:14.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:14.552" endtime="20201110 08:38:14.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.569" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.568" endtime="20201110 08:38:14.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.571" level="INFO">VALUE: [8.06390000000004e-05, 8.04169999999993e-05, 8.066700000000301e-05, 8.076299999999759e-05, 8.088900000000065e-05, 8.068000000000311e-05, 8.06390000000004e-05, 8.061100000000126e-05, 8.05840000000016e-05, 8.067999999999964e-05, 8.095900000000197e-05, 8.076400000000053e-05, 8.081899999999934e-05, 8.043100000000233e-05, 8.054099999999995e-05, 8.093099999999936e-05, 8.055599999999899e-05, 8.051400000000028e-05, 8.04169999999993e-05, 8.084799999999795e-05, 8.061200000000074e-05, 8.07780000000001e-05, 8.136199999999802e-05, 8.073600000000139e-05, 8.058300000000213e-05, 8.058300000000213e-05, 8.07780000000001e-05, 8.041599999999982e-05, 8.076400000000053e-05, 8.054099999999995e-05, 8.063899999999694e-05, 8.074999999999749e-05, 8.080500000000324e-05, 8.054199999999942e-05, 8.084700000000195e-05, 8.086100000000151e-05, 8.086099999999805e-05, 8.086099999999805e-05, 8.080599999999924e-05, 8.04719999999981e-05, 8.059800000000117e-05, 8.083400000000185e-05, 8.087500000000108e-05, 8.079199999999967e-05, 8.050000000000071e-05, 8.086099999999805e-05, 8.138900000000115e-05, 8.062500000000083e-05, 8.084699999999848e-05, 8.054199999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.570" endtime="20201110 08:38:14.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.565" endtime="20201110 08:38:14.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.575" endtime="20201110 08:38:14.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.579" endtime="20201110 08:38:14.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.577" endtime="20201110 08:38:14.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.573" endtime="20201110 08:38:14.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.206" endtime="20201110 08:38:14.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.206" endtime="20201110 08:38:14.600"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.608" endtime="20201110 08:38:14.627"></status>
</kw>
<msg timestamp="20201110 08:38:14.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.607" endtime="20201110 08:38:14.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.629" endtime="20201110 08:38:14.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.632" endtime="20201110 08:38:14.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.604" endtime="20201110 08:38:14.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.602" endtime="20201110 08:38:14.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.642" endtime="20201110 08:38:14.943"></status>
</kw>
<msg timestamp="20201110 08:38:14.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:14.641" endtime="20201110 08:38:14.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:14.953" endtime="20201110 08:38:14.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.973" endtime="20201110 08:38:14.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.638" endtime="20201110 08:38:14.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.636" endtime="20201110 08:38:14.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.988" level="INFO">${RESULT} = [{'time': 0.02242025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.152800000000085e-05, 'source_diff': 8.152800000000085e-05}, {'time': 0.02250425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.981" endtime="20201110 08:38:14.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:14.991" endtime="20201110 08:38:15.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.013" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.012" endtime="20201110 08:38:15.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.016" level="INFO">VALUE: [8.152800000000085e-05, 8.154200000000042e-05, 8.183399999999938e-05, 8.186099999999905e-05, 8.176400000000153e-05, 8.16109999999988e-05, 8.152800000000085e-05, 8.144499999999943e-05, 8.176400000000153e-05, 8.175000000000196e-05, 8.158299999999966e-05, 8.16109999999988e-05, 8.169400000000021e-05, 8.194400000000046e-05, 8.16390000000014e-05, 8.193000000000089e-05, 8.173600000000239e-05, 8.144399999999996e-05, 8.16529999999975e-05, 8.155500000000052e-05, 8.237500000000259e-05, 8.170800000000325e-05, 8.18329999999999e-05, 8.144499999999943e-05, 8.194499999999993e-05, 8.187500000000208e-05, 8.193100000000036e-05, 8.162500000000183e-05, 8.168100000000011e-05, 8.154200000000042e-05, 8.143099999999986e-05, 8.15130000000018e-05, 8.190200000000175e-05, 8.151399999999781e-05, 8.148599999999867e-05, 8.141600000000082e-05, 8.166700000000054e-05, 8.187500000000208e-05, 8.140300000000072e-05, 8.156900000000009e-05, 8.166699999999708e-05, 8.173599999999892e-05, 8.173599999999892e-05, 8.168100000000011e-05, 8.190300000000122e-05, 8.166700000000054e-05, 8.190299999999776e-05, 8.181999999999981e-05, 8.149999999999824e-05, 8.173599999999892e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.014" endtime="20201110 08:38:15.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.009" endtime="20201110 08:38:15.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.019" endtime="20201110 08:38:15.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.023" endtime="20201110 08:38:15.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.021" endtime="20201110 08:38:15.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.018" endtime="20201110 08:38:15.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.600" endtime="20201110 08:38:15.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.600" endtime="20201110 08:38:15.044"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.053" endtime="20201110 08:38:15.071"></status>
</kw>
<msg timestamp="20201110 08:38:15.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.051" endtime="20201110 08:38:15.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.073" endtime="20201110 08:38:15.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.075" endtime="20201110 08:38:15.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.049" endtime="20201110 08:38:15.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.046" endtime="20201110 08:38:15.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.086" endtime="20201110 08:38:15.372"></status>
</kw>
<msg timestamp="20201110 08:38:15.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.084" endtime="20201110 08:38:15.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.376" endtime="20201110 08:38:15.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.385" endtime="20201110 08:38:15.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.081" endtime="20201110 08:38:15.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.080" endtime="20201110 08:38:15.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.392" level="INFO">${RESULT} = [{'time': 0.022540958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.26659999999986e-05, 'source_diff': 8.26659999999986e-05}, {'time': 0.022625972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:15.388" endtime="20201110 08:38:15.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:15.393" endtime="20201110 08:38:15.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.410" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.409" endtime="20201110 08:38:15.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.413" level="INFO">VALUE: [8.26659999999986e-05, 8.251400000000228e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.249999999999924e-05, 8.262499999999937e-05, 8.24720000000001e-05, 8.283400000000038e-05, 8.238900000000215e-05, 8.240299999999826e-05, 8.283400000000038e-05, 8.248599999999967e-05, 8.288899999999919e-05, 8.290299999999876e-05, 8.24170000000013e-05, 8.291699999999833e-05, 8.280599999999777e-05, 8.277699999999916e-05, 8.28049999999983e-05, 8.284700000000048e-05, 8.249999999999924e-05, 8.288900000000265e-05, 8.281900000000134e-05, 8.24170000000013e-05, 8.290300000000222e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.288899999999919e-05, 8.29309999999979e-05, 8.27919999999982e-05, 8.24720000000001e-05, 8.287499999999962e-05, 8.252800000000185e-05, 8.241699999999783e-05, 8.29309999999979e-05, 8.28049999999983e-05, 8.290299999999876e-05, 8.251299999999934e-05, 8.281900000000134e-05, 8.240199999999878e-05, 8.29720000000006e-05, 8.287499999999962e-05, 8.26109999999998e-05, 8.290300000000222e-05, 8.24720000000001e-05, 8.280600000000124e-05, 8.283299999999744e-05, 8.244500000000043e-05, 8.344400000000196e-05, 8.269500000000068e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.411" endtime="20201110 08:38:15.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.407" endtime="20201110 08:38:15.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.417" endtime="20201110 08:38:15.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.420" endtime="20201110 08:38:15.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.419" endtime="20201110 08:38:15.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.415" endtime="20201110 08:38:15.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.045" endtime="20201110 08:38:15.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.044" endtime="20201110 08:38:15.441"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.450" endtime="20201110 08:38:15.468"></status>
</kw>
<msg timestamp="20201110 08:38:15.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.449" endtime="20201110 08:38:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.470" endtime="20201110 08:38:15.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.472" endtime="20201110 08:38:15.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.446" endtime="20201110 08:38:15.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.444" endtime="20201110 08:38:15.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.483" endtime="20201110 08:38:15.768"></status>
</kw>
<msg timestamp="20201110 08:38:15.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:15.481" endtime="20201110 08:38:15.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:15.772" endtime="20201110 08:38:15.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.781" endtime="20201110 08:38:15.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.478" endtime="20201110 08:38:15.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.477" endtime="20201110 08:38:15.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.788" level="INFO">${RESULT} = [{'time': 0.022698583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.358300000000166e-05, 'source_diff': 8.358300000000166e-05}, {'time': 0.022784569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.785" endtime="20201110 08:38:15.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.802" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:15.789" endtime="20201110 08:38:15.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.807" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.806" endtime="20201110 08:38:15.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.809" level="INFO">VALUE: [8.358300000000166e-05, 8.380500000000277e-05, 8.362500000000037e-05, 8.337500000000012e-05, 8.34720000000011e-05, 8.394400000000246e-05, 8.359700000000123e-05, 8.386099999999758e-05, 8.365300000000297e-05, 8.391699999999933e-05, 8.358299999999819e-05, 8.377799999999963e-05, 8.362500000000037e-05, 8.39309999999989e-05, 8.381999999999834e-05, 8.393100000000236e-05, 8.369500000000168e-05, 8.390299999999976e-05, 8.433299999999894e-05, 8.375000000000049e-05, 8.344399999999849e-05, 8.390299999999976e-05, 8.369399999999874e-05, 8.383299999999844e-05, 8.343000000000239e-05, 8.41110000000013e-05, 8.358300000000166e-05, 8.397199999999813e-05, 8.38330000000019e-05, 8.365200000000003e-05, 8.388900000000019e-05, 8.37919999999992e-05, 8.394500000000193e-05, 8.37919999999992e-05, 8.3459000000001e-05, 8.363899999999994e-05, 8.351399999999981e-05, 8.351399999999981e-05, 8.340299999999926e-05, 8.338800000000021e-05, 8.381900000000234e-05, 8.352699999999991e-05, 8.383299999999844e-05, 8.375000000000049e-05, 8.375000000000049e-05, 8.370800000000178e-05, 8.395799999999856e-05, 8.375000000000049e-05, 8.394400000000246e-05, 8.380599999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.808" endtime="20201110 08:38:15.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.803" endtime="20201110 08:38:15.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.813" endtime="20201110 08:38:15.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.817" endtime="20201110 08:38:15.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.815" endtime="20201110 08:38:15.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.811" endtime="20201110 08:38:15.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.442" endtime="20201110 08:38:15.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.442" endtime="20201110 08:38:15.838"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.847" endtime="20201110 08:38:15.865"></status>
</kw>
<msg timestamp="20201110 08:38:15.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.845" endtime="20201110 08:38:15.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.867" endtime="20201110 08:38:15.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.869" endtime="20201110 08:38:15.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.842" endtime="20201110 08:38:15.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.840" endtime="20201110 08:38:15.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.880" endtime="20201110 08:38:16.165"></status>
</kw>
<msg timestamp="20201110 08:38:16.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.878" endtime="20201110 08:38:16.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.170" endtime="20201110 08:38:16.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.178" endtime="20201110 08:38:16.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.875" endtime="20201110 08:38:16.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.874" endtime="20201110 08:38:16.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.185" level="INFO">${RESULT} = [{'time': 0.022591403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.49309999999999e-05, 'source_diff': 8.49309999999999e-05}, {'time': 0.022678417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:16.182" endtime="20201110 08:38:16.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.199" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:16.186" endtime="20201110 08:38:16.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.204" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.203" endtime="20201110 08:38:16.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.206" level="INFO">VALUE: [8.49309999999999e-05, 8.468099999999965e-05, 8.44859999999982e-05, 8.491700000000033e-05, 8.487499999999815e-05, 8.481999999999934e-05, 8.46110000000018e-05, 8.441600000000035e-05, 8.477700000000116e-05, 8.475000000000149e-05, 8.441600000000035e-05, 8.450000000000124e-05, 8.468000000000017e-05, 8.488900000000119e-05, 8.475000000000149e-05, 8.458299999999919e-05, 8.450000000000124e-05, 8.491700000000033e-05, 8.444500000000243e-05, 8.491700000000033e-05, 8.466700000000008e-05, 8.49590000000025e-05, 8.477800000000063e-05, 8.490300000000076e-05, 8.475000000000149e-05, 8.455500000000005e-05, 8.44859999999982e-05, 8.44720000000021e-05, 8.458299999999919e-05, 8.437499999999765e-05, 8.490299999999729e-05, 8.488899999999772e-05, 8.456899999999962e-05, 8.472199999999888e-05, 8.476400000000106e-05, 8.445799999999906e-05, 8.47920000000002e-05, 8.44729999999981e-05, 8.472199999999888e-05, 8.47920000000002e-05, 8.454199999999995e-05, 8.470800000000278e-05, 8.438900000000069e-05, 8.490300000000076e-05, 8.487500000000162e-05, 8.488900000000119e-05, 8.445800000000253e-05, 8.468000000000017e-05, 8.437500000000112e-05, 8.459700000000223e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.205" endtime="20201110 08:38:16.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.200" endtime="20201110 08:38:16.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.214" endtime="20201110 08:38:16.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.218" endtime="20201110 08:38:16.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.216" endtime="20201110 08:38:16.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.212" endtime="20201110 08:38:16.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.839" endtime="20201110 08:38:16.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.838" endtime="20201110 08:38:16.239"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.248" endtime="20201110 08:38:16.266"></status>
</kw>
<msg timestamp="20201110 08:38:16.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.246" endtime="20201110 08:38:16.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.267" endtime="20201110 08:38:16.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.270" endtime="20201110 08:38:16.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.243" endtime="20201110 08:38:16.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.241" endtime="20201110 08:38:16.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.280" endtime="20201110 08:38:16.566"></status>
</kw>
<msg timestamp="20201110 08:38:16.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.279" endtime="20201110 08:38:16.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.570" endtime="20201110 08:38:16.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.579" endtime="20201110 08:38:16.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.276" endtime="20201110 08:38:16.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.274" endtime="20201110 08:38:16.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.586" level="INFO">${RESULT} = [{'time': 0.022610514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.573600000000292e-05, 'source_diff': 8.573600000000292e-05}, {'time': 0.022698458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.582" endtime="20201110 08:38:16.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:16.587" endtime="20201110 08:38:16.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.605" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.604" endtime="20201110 08:38:16.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.608" level="INFO">VALUE: [8.573600000000292e-05, 8.56110000000028e-05, 8.542999999999745e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.555600000000052e-05, 8.544400000000049e-05, 8.588900000000219e-05, 8.591700000000133e-05, 8.566700000000108e-05, 8.563900000000194e-05, 8.59310000000009e-05, 8.54310000000004e-05, 8.580600000000077e-05, 8.547300000000257e-05, 8.573599999999945e-05, 8.602800000000188e-05, 8.555500000000105e-05, 8.579099999999826e-05, 8.574999999999902e-05, 8.556900000000062e-05, 8.555499999999758e-05, 8.552799999999791e-05, 8.563900000000194e-05, 8.54859999999992e-05, 8.597200000000013e-05, 8.59310000000009e-05, 8.587499999999915e-05, 8.559699999999976e-05, 8.541700000000083e-05, 8.554199999999748e-05, 8.61249999999994e-05, 8.59729999999996e-05, 8.59859999999997e-05, 8.590299999999829e-05, 8.59310000000009e-05, 8.545899999999954e-05, 8.577799999999816e-05, 8.561099999999933e-05, 8.555500000000105e-05, 8.561099999999933e-05, 8.561099999999933e-05, 8.591600000000185e-05, 8.576399999999859e-05, 8.586099999999958e-05, 8.56249999999989e-05, 8.586099999999958e-05, 8.572199999999988e-05, 8.561099999999933e-05, 8.543099999999693e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.607" endtime="20201110 08:38:16.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.602" endtime="20201110 08:38:16.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.612" endtime="20201110 08:38:16.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.615" endtime="20201110 08:38:16.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.614" endtime="20201110 08:38:16.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.610" endtime="20201110 08:38:16.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.240" endtime="20201110 08:38:16.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.239" endtime="20201110 08:38:16.636"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.645" endtime="20201110 08:38:16.664"></status>
</kw>
<msg timestamp="20201110 08:38:16.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.644" endtime="20201110 08:38:16.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.666" endtime="20201110 08:38:16.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.668" endtime="20201110 08:38:16.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.641" endtime="20201110 08:38:16.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.639" endtime="20201110 08:38:16.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.679" endtime="20201110 08:38:16.964"></status>
</kw>
<msg timestamp="20201110 08:38:16.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.677" endtime="20201110 08:38:16.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.969" endtime="20201110 08:38:16.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.977" endtime="20201110 08:38:16.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.674" endtime="20201110 08:38:16.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.672" endtime="20201110 08:38:16.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.984" level="INFO">${RESULT} = [{'time': 0.022744292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695899999999757e-05, 'source_diff': 8.695899999999757e-05}, {'time': 0.022834306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.981" endtime="20201110 08:38:16.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.998" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:16.985" endtime="20201110 08:38:16.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.003" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.002" endtime="20201110 08:38:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.006" level="INFO">VALUE: [8.695899999999757e-05, 8.737499999999718e-05, 8.691700000000233e-05, 8.66799999999987e-05, 8.650000000000324e-05, 8.651399999999934e-05, 8.672200000000088e-05, 8.669400000000174e-05, 8.670800000000131e-05, 8.652800000000238e-05, 8.640299999999879e-05, 8.675000000000002e-05, 8.652799999999891e-05, 8.690299999999929e-05, 8.656999999999762e-05, 8.66799999999987e-05, 8.643099999999793e-05, 8.672300000000036e-05, 8.673600000000045e-05, 8.66119999999998e-05, 8.648699999999968e-05, 8.64449999999975e-05, 8.640200000000278e-05, 8.691599999999938e-05, 8.643000000000192e-05, 8.704099999999951e-05, 8.665299999999904e-05, 8.71250000000004e-05, 8.645800000000106e-05, 8.670900000000079e-05, 8.691700000000233e-05, 8.675000000000002e-05, 8.675000000000002e-05, 8.683300000000144e-05, 8.654100000000248e-05, 8.659800000000023e-05, 8.6847000000001e-05, 8.683400000000091e-05, 8.64860000000002e-05, 8.655599999999805e-05, 8.64310000000014e-05, 8.6847000000001e-05, 8.683299999999797e-05, 8.66249999999999e-05, 8.691599999999938e-05, 8.693000000000242e-05, 8.645800000000106e-05, 8.691599999999938e-05, 8.680499999999883e-05, 8.679199999999873e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.004" endtime="20201110 08:38:17.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.999" endtime="20201110 08:38:17.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.010" endtime="20201110 08:38:17.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.013" endtime="20201110 08:38:17.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.011" endtime="20201110 08:38:17.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.008" endtime="20201110 08:38:17.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.637" endtime="20201110 08:38:17.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.637" endtime="20201110 08:38:17.034"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.043" endtime="20201110 08:38:17.061"></status>
</kw>
<msg timestamp="20201110 08:38:17.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.041" endtime="20201110 08:38:17.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.063" endtime="20201110 08:38:17.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.065" endtime="20201110 08:38:17.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.039" endtime="20201110 08:38:17.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.037" endtime="20201110 08:38:17.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.076" endtime="20201110 08:38:17.362"></status>
</kw>
<msg timestamp="20201110 08:38:17.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.074" endtime="20201110 08:38:17.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.366" endtime="20201110 08:38:17.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.375" endtime="20201110 08:38:17.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.071" endtime="20201110 08:38:17.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.070" endtime="20201110 08:38:17.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.382" level="INFO">${RESULT} = [{'time': 0.022756125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.802799999999694e-05, 'source_diff': 8.802799999999694e-05}, {'time': 0.022846111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.378" endtime="20201110 08:38:17.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:17.383" endtime="20201110 08:38:17.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.401" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.399" endtime="20201110 08:38:17.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.403" level="INFO">VALUE: [8.802799999999694e-05, 8.779199999999973e-05, 8.772199999999841e-05, 8.837499999999818e-05, 8.7944999999999e-05, 8.765300000000004e-05, 8.782000000000234e-05, 8.788900000000072e-05, 8.748700000000068e-05, 8.772300000000136e-05, 8.784800000000148e-05, 8.770799999999884e-05, 8.748700000000068e-05, 8.748599999999773e-05, 8.770799999999884e-05, 8.76669999999996e-05, 8.788900000000072e-05, 8.742999999999945e-05, 8.788900000000072e-05, 8.741699999999936e-05, 8.756899999999915e-05, 8.762499999999743e-05, 8.779100000000026e-05, 8.751400000000034e-05, 8.74310000000024e-05, 8.743099999999893e-05, 8.768099999999918e-05, 8.783399999999844e-05, 8.784800000000148e-05, 8.793099999999943e-05, 8.756900000000262e-05, 8.769499999999875e-05, 8.766600000000013e-05, 8.788900000000072e-05, 8.76799999999997e-05, 8.755499999999958e-05, 8.758299999999872e-05, 8.754100000000001e-05, 8.742999999999945e-05, 8.759699999999829e-05, 8.786099999999811e-05, 8.774999999999755e-05, 8.761100000000133e-05, 8.752799999999991e-05, 8.765300000000004e-05, 8.784700000000201e-05, 8.770899999999832e-05, 8.788900000000072e-05, 8.779199999999973e-05, 8.751400000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.402" endtime="20201110 08:38:17.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.397" endtime="20201110 08:38:17.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.407" endtime="20201110 08:38:17.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.410" endtime="20201110 08:38:17.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.409" endtime="20201110 08:38:17.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.405" endtime="20201110 08:38:17.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.035" endtime="20201110 08:38:17.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.034" endtime="20201110 08:38:17.431"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.440" endtime="20201110 08:38:17.459"></status>
</kw>
<msg timestamp="20201110 08:38:17.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.439" endtime="20201110 08:38:17.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.461" endtime="20201110 08:38:17.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.463" endtime="20201110 08:38:17.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.436" endtime="20201110 08:38:17.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.434" endtime="20201110 08:38:17.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.474" endtime="20201110 08:38:17.760"></status>
</kw>
<msg timestamp="20201110 08:38:17.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.472" endtime="20201110 08:38:17.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022733708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.765" endtime="20201110 08:38:17.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.773" endtime="20201110 08:38:17.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.469" endtime="20201110 08:38:17.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.468" endtime="20201110 08:38:17.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.780" level="INFO">${RESULT} = [{'time': 0.022822181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.84730000000021e-05, 'source_diff': 8.84730000000021e-05}, {'time': 0.022913181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:17.777" endtime="20201110 08:38:17.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.794" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:17.781" endtime="20201110 08:38:17.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.799" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.798" endtime="20201110 08:38:17.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.802" level="INFO">VALUE: [8.84730000000021e-05, 8.851400000000134e-05, 8.88190000000004e-05, 8.886099999999911e-05, 8.845799999999959e-05, 8.880500000000083e-05, 8.897199999999966e-05, 8.895800000000009e-05, 8.8638999999998e-05, 8.887499999999868e-05, 8.854200000000048e-05, 8.876400000000159e-05, 8.850000000000177e-05, 8.877800000000116e-05, 8.893100000000043e-05, 8.84869999999982e-05, 8.884799999999901e-05, 8.850000000000177e-05, 8.861100000000233e-05, 8.876400000000159e-05, 8.877699999999822e-05, 8.86800000000007e-05, 8.861099999999886e-05, 8.86250000000019e-05, 8.859699999999929e-05, 8.842999999999698e-05, 8.844400000000002e-05, 8.844400000000002e-05, 8.86670000000006e-05, 8.873600000000245e-05, 8.879200000000073e-05, 8.8638999999998e-05, 8.84449999999995e-05, 8.893100000000043e-05, 8.856999999999962e-05, 8.861100000000233e-05, 8.886099999999911e-05, 8.874999999999855e-05, 8.869499999999975e-05, 8.855500000000058e-05, 8.866600000000113e-05, 8.869400000000027e-05, 8.838899999999775e-05, 8.844400000000002e-05, 8.858299999999972e-05, 8.851400000000134e-05, 8.855500000000058e-05, 8.879200000000073e-05, 8.869499999999975e-05, 8.84449999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.800" endtime="20201110 08:38:17.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.795" endtime="20201110 08:38:17.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.805" endtime="20201110 08:38:17.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.809" endtime="20201110 08:38:17.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.807" endtime="20201110 08:38:17.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.804" endtime="20201110 08:38:17.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.432" endtime="20201110 08:38:17.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.432" endtime="20201110 08:38:17.830"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.839" endtime="20201110 08:38:17.858"></status>
</kw>
<msg timestamp="20201110 08:38:17.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.837" endtime="20201110 08:38:17.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.859" endtime="20201110 08:38:17.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.862" endtime="20201110 08:38:17.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.835" endtime="20201110 08:38:17.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.832" endtime="20201110 08:38:17.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.872" endtime="20201110 08:38:18.158"></status>
</kw>
<msg timestamp="20201110 08:38:18.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.871" endtime="20201110 08:38:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022634944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.163" endtime="20201110 08:38:18.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.171" endtime="20201110 08:38:18.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.868" endtime="20201110 08:38:18.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.866" endtime="20201110 08:38:18.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.178" level="INFO">${RESULT} = [{'time': 0.022634944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.01800000000022e-05, 'source_diff': 9.01800000000022e-05}, {'time': 0.022726944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:18.175" endtime="20201110 08:38:18.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.193" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:18.179" endtime="20201110 08:38:18.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.198" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.197" endtime="20201110 08:38:18.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.201" level="INFO">VALUE: [9.01800000000022e-05, 8.976299999999965e-05, 8.974999999999955e-05, 8.958300000000072e-05, 8.976399999999912e-05, 8.972199999999694e-05, 9.037500000000018e-05, 8.972199999999694e-05, 8.951399999999887e-05, 8.952799999999844e-05, 8.972200000000041e-05, 9.00129999999999e-05, 8.952800000000191e-05, 8.977800000000216e-05, 8.9945000000001e-05, 8.965300000000204e-05, 8.973599999999998e-05, 8.976400000000259e-05, 8.942999999999798e-05, 8.979100000000226e-05, 8.96519999999991e-05, 8.951399999999887e-05, 8.966599999999866e-05, 8.966699999999814e-05, 8.94999999999993e-05, 8.961099999999986e-05, 8.982000000000087e-05, 8.991699999999839e-05, 8.974999999999955e-05, 8.943100000000093e-05, 8.940300000000179e-05, 8.993099999999796e-05, 8.979200000000173e-05, 8.988899999999925e-05, 8.957000000000062e-05, 8.961199999999933e-05, 8.973599999999998e-05, 8.962499999999943e-05, 8.976299999999965e-05, 8.973599999999998e-05, 8.990199999999934e-05, 8.9638999999999e-05, 8.983399999999697e-05, 8.943100000000093e-05, 8.984700000000054e-05, 8.973599999999998e-05, 8.938899999999875e-05, 8.955600000000105e-05, 8.988899999999925e-05, 8.98060000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.199" endtime="20201110 08:38:18.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.194" endtime="20201110 08:38:18.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.205" endtime="20201110 08:38:18.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.208" endtime="20201110 08:38:18.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.207" endtime="20201110 08:38:18.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.203" endtime="20201110 08:38:18.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.831" endtime="20201110 08:38:18.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.830" endtime="20201110 08:38:18.229"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.238" endtime="20201110 08:38:18.257"></status>
</kw>
<msg timestamp="20201110 08:38:18.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.237" endtime="20201110 08:38:18.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.258" endtime="20201110 08:38:18.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.261" endtime="20201110 08:38:18.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.234" endtime="20201110 08:38:18.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.232" endtime="20201110 08:38:18.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.271" endtime="20201110 08:38:18.557"></status>
</kw>
<msg timestamp="20201110 08:38:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.270" endtime="20201110 08:38:18.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.561" endtime="20201110 08:38:18.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.570" endtime="20201110 08:38:18.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.267" endtime="20201110 08:38:18.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.265" endtime="20201110 08:38:18.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.577" level="INFO">${RESULT} = [{'time': 0.022650361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.094400000000252e-05, 'source_diff': 9.094400000000252e-05}, {'time': 0.022743389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.573" endtime="20201110 08:38:18.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.591" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:18.578" endtime="20201110 08:38:18.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.595" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.594" endtime="20201110 08:38:18.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.598" level="INFO">VALUE: [9.094400000000252e-05, 9.094499999999853e-05, 9.084699999999807e-05, 9.076400000000012e-05, 9.04450000000015e-05, 9.043099999999846e-05, 9.091699999999939e-05, 9.069400000000227e-05, 9.070900000000132e-05, 9.083399999999797e-05, 9.070899999999785e-05, 9.094399999999905e-05, 9.086100000000111e-05, 9.051399999999987e-05, 9.058299999999825e-05, 9.094399999999905e-05, 9.047200000000116e-05, 9.088900000000025e-05, 9.067999999999923e-05, 9.076400000000012e-05, 9.040299999999932e-05, 9.083399999999797e-05, 9.073600000000098e-05, 9.087500000000068e-05, 9.043099999999846e-05, 9.043099999999846e-05, 9.111199999999736e-05, 9.045900000000107e-05, 9.069500000000175e-05, 9.086100000000111e-05, 9.091599999999991e-05, 9.067999999999923e-05, 9.047200000000116e-05, 9.042999999999898e-05, 9.054099999999954e-05, 9.062499999999696e-05, 9.075000000000055e-05, 9.058300000000172e-05, 9.095799999999862e-05, 9.059699999999782e-05, 9.040299999999932e-05, 9.041699999999889e-05, 9.052799999999944e-05, 9.076300000000065e-05, 9.069500000000175e-05, 9.047300000000064e-05, 9.044399999999855e-05, 9.067999999999923e-05, 9.0639e-05, 9.092999999999948e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.596" endtime="20201110 08:38:18.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.591" endtime="20201110 08:38:18.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.602" endtime="20201110 08:38:18.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.605" endtime="20201110 08:38:18.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.604" endtime="20201110 08:38:18.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.600" endtime="20201110 08:38:18.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.230" endtime="20201110 08:38:18.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.229" endtime="20201110 08:38:18.626"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.635" endtime="20201110 08:38:18.653"></status>
</kw>
<msg timestamp="20201110 08:38:18.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.634" endtime="20201110 08:38:18.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.655" endtime="20201110 08:38:18.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.657" endtime="20201110 08:38:18.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.631" endtime="20201110 08:38:18.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.629" endtime="20201110 08:38:18.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.668" endtime="20201110 08:38:18.955"></status>
</kw>
<msg timestamp="20201110 08:38:18.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.666" endtime="20201110 08:38:18.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022731111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.959" endtime="20201110 08:38:18.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.968" endtime="20201110 08:38:18.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.663" endtime="20201110 08:38:18.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.662" endtime="20201110 08:38:18.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.974" level="INFO">${RESULT} = [{'time': 0.022731111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.19719999999992e-05, 'source_diff': 9.19719999999992e-05}, {'time': 0.022825111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:18.971" endtime="20201110 08:38:18.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.988" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:18.976" endtime="20201110 08:38:18.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.993" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.992" endtime="20201110 08:38:18.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.996" level="INFO">VALUE: [9.19719999999992e-05, 9.168000000000023e-05, 9.168099999999971e-05, 9.195799999999962e-05, 9.154200000000001e-05, 9.158399999999872e-05, 9.170899999999885e-05, 9.186099999999864e-05, 9.14589999999986e-05, 9.159799999999829e-05, 9.147299999999817e-05, 9.175000000000155e-05, 9.141600000000041e-05, 9.142999999999998e-05, 9.142999999999998e-05, 9.136100000000161e-05, 9.184699999999907e-05, 9.152800000000044e-05, 9.18199999999994e-05, 9.198699999999824e-05, 9.147200000000216e-05, 9.172200000000241e-05, 9.175000000000155e-05, 9.195900000000257e-05, 9.173600000000198e-05, 9.148599999999826e-05, 9.170899999999885e-05, 9.170899999999885e-05, 9.168099999999971e-05, 9.19589999999991e-05, 9.211099999999889e-05, 9.191600000000091e-05, 9.187499999999821e-05, 9.145799999999912e-05, 9.173599999999851e-05, 9.14719999999987e-05, 9.149999999999783e-05, 9.155500000000011e-05, 9.145799999999912e-05, 9.162500000000143e-05, 9.191700000000039e-05, 9.162500000000143e-05, 9.184700000000254e-05, 9.183400000000244e-05, 9.168100000000318e-05, 9.168099999999971e-05, 9.177799999999722e-05, 9.151400000000087e-05, 9.193099999999996e-05, 9.174999999999808e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.994" endtime="20201110 08:38:18.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.989" endtime="20201110 08:38:18.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.999" endtime="20201110 08:38:19.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.003" endtime="20201110 08:38:19.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.002" endtime="20201110 08:38:19.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.998" endtime="20201110 08:38:19.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.627" endtime="20201110 08:38:19.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.627" endtime="20201110 08:38:19.024"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.033" endtime="20201110 08:38:19.051"></status>
</kw>
<msg timestamp="20201110 08:38:19.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.031" endtime="20201110 08:38:19.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.053" endtime="20201110 08:38:19.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.055" endtime="20201110 08:38:19.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.029" endtime="20201110 08:38:19.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.027" endtime="20201110 08:38:19.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.066" endtime="20201110 08:38:19.352"></status>
</kw>
<msg timestamp="20201110 08:38:19.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.064" endtime="20201110 08:38:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.356" endtime="20201110 08:38:19.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.364" endtime="20201110 08:38:19.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.061" endtime="20201110 08:38:19.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.060" endtime="20201110 08:38:19.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.372" level="INFO">${RESULT} = [{'time': 0.022590222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277800000000169e-05, 'source_diff': 9.277800000000169e-05}, {'time': 0.022685222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:19.368" endtime="20201110 08:38:19.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:19.373" endtime="20201110 08:38:19.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.390" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.389" endtime="20201110 08:38:19.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.393" level="INFO">VALUE: [9.277800000000169e-05, 9.238900000000175e-05, 9.244399999999708e-05, 9.276399999999865e-05, 9.251400000000187e-05, 9.273599999999951e-05, 9.288899999999878e-05, 9.277800000000169e-05, 9.272300000000289e-05, 9.237499999999871e-05, 9.261099999999939e-05, 9.259799999999929e-05, 9.262499999999896e-05, 9.287500000000268e-05, 9.24719999999997e-05, 9.268000000000123e-05, 9.272199999999994e-05, 9.26659999999982e-05, 9.286099999999964e-05, 9.25000000000023e-05, 9.261099999999939e-05, 9.273599999999951e-05, 9.272199999999994e-05, 9.28330000000005e-05, 9.284700000000007e-05, 9.268100000000071e-05, 9.257000000000015e-05, 9.290300000000182e-05, 9.284700000000007e-05, 9.261099999999939e-05, 9.247299999999917e-05, 9.261200000000233e-05, 9.237499999999871e-05, 9.241600000000141e-05, 9.286099999999964e-05, 9.280500000000136e-05, 9.241700000000089e-05, 9.240300000000132e-05, 9.294399999999758e-05, 9.294400000000105e-05, 9.259699999999982e-05, 9.243099999999699e-05, 9.291700000000139e-05, 9.270800000000037e-05, 9.294500000000053e-05, 9.252799999999797e-05, 9.241700000000089e-05, 9.261099999999939e-05, 9.254099999999807e-05, 9.244500000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.391" endtime="20201110 08:38:19.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.387" endtime="20201110 08:38:19.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.397" endtime="20201110 08:38:19.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.400" endtime="20201110 08:38:19.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.399" endtime="20201110 08:38:19.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.395" endtime="20201110 08:38:19.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.025" endtime="20201110 08:38:19.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.024" endtime="20201110 08:38:19.421"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.430" endtime="20201110 08:38:19.449"></status>
</kw>
<msg timestamp="20201110 08:38:19.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.429" endtime="20201110 08:38:19.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.451" endtime="20201110 08:38:19.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.453" endtime="20201110 08:38:19.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.426" endtime="20201110 08:38:19.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.424" endtime="20201110 08:38:19.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.464" endtime="20201110 08:38:19.749"></status>
</kw>
<msg timestamp="20201110 08:38:19.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.462" endtime="20201110 08:38:19.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.754" endtime="20201110 08:38:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.763" endtime="20201110 08:38:19.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.459" endtime="20201110 08:38:19.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.458" endtime="20201110 08:38:19.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.770" level="INFO">${RESULT} = [{'time': 0.022770403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.338900000000275e-05, 'source_diff': 9.338900000000275e-05}, {'time': 0.022866403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:19.767" endtime="20201110 08:38:19.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.786" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:19.772" endtime="20201110 08:38:19.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.790" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.789" endtime="20201110 08:38:19.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.793" level="INFO">VALUE: [9.338900000000275e-05, 9.343100000000146e-05, 9.354199999999854e-05, 9.387500000000021e-05, 9.357000000000115e-05, 9.354100000000254e-05, 9.348600000000026e-05, 9.340199999999937e-05, 9.36529999999991e-05, 9.377699999999975e-05, 9.345799999999765e-05, 9.387500000000021e-05, 9.387500000000021e-05, 9.373599999999704e-05, 9.395800000000162e-05, 9.373600000000051e-05, 9.366700000000214e-05, 9.437500000000071e-05, 9.377699999999975e-05, 9.376399999999965e-05, 9.348600000000026e-05, 9.340299999999885e-05, 9.379100000000279e-05, 9.35139999999994e-05, 9.365199999999962e-05, 9.370800000000137e-05, 9.376400000000312e-05, 9.373599999999704e-05, 9.437500000000071e-05, 9.35139999999994e-05, 9.344399999999808e-05, 9.381900000000193e-05, 9.369399999999833e-05, 9.409700000000132e-05, 9.366699999999867e-05, 9.37079999999979e-05, 9.334800000000004e-05, 9.43200000000019e-05, 9.361100000000039e-05, 9.372300000000042e-05, 9.363899999999953e-05, 9.343099999999799e-05, 9.372200000000094e-05, 9.373600000000051e-05, 9.361099999999692e-05, 9.379100000000279e-05, 9.356899999999821e-05, 9.394400000000205e-05, 9.413900000000003e-05, 9.38469999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.792" endtime="20201110 08:38:19.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.787" endtime="20201110 08:38:19.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.797" endtime="20201110 08:38:19.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.800" endtime="20201110 08:38:19.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.799" endtime="20201110 08:38:19.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.795" endtime="20201110 08:38:19.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.422" endtime="20201110 08:38:19.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.421" endtime="20201110 08:38:19.821"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.830" endtime="20201110 08:38:19.849"></status>
</kw>
<msg timestamp="20201110 08:38:19.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.829" endtime="20201110 08:38:19.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.850" endtime="20201110 08:38:19.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.853" endtime="20201110 08:38:19.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.826" endtime="20201110 08:38:19.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.824" endtime="20201110 08:38:19.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.863" endtime="20201110 08:38:20.149"></status>
</kw>
<msg timestamp="20201110 08:38:20.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.862" endtime="20201110 08:38:20.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.154" endtime="20201110 08:38:20.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.162" endtime="20201110 08:38:20.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.859" endtime="20201110 08:38:20.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.857" endtime="20201110 08:38:20.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.169" level="INFO">${RESULT} = [{'time': 0.022685306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.495899999999863e-05, 'source_diff': 9.495899999999863e-05}, {'time': 0.022782333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.166" endtime="20201110 08:38:20.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:20.170" endtime="20201110 08:38:20.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.188" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.187" endtime="20201110 08:38:20.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.191" level="INFO">VALUE: [9.495899999999863e-05, 9.480499999999989e-05, 9.444399999999908e-05, 9.470800000000237e-05, 9.487500000000121e-05, 9.454100000000007e-05, 9.469399999999933e-05, 9.459800000000129e-05, 9.472199999999847e-05, 9.47079999999989e-05, 9.450000000000083e-05, 9.458299999999878e-05, 9.477800000000022e-05, 9.454100000000007e-05, 9.487500000000121e-05, 9.466699999999967e-05, 9.448700000000074e-05, 9.508299999999928e-05, 9.463800000000105e-05, 9.487500000000121e-05, 9.447199999999822e-05, 9.493000000000001e-05, 9.494400000000305e-05, 9.495799999999915e-05, 9.452799999999997e-05, 9.494399999999958e-05, 9.455599999999911e-05, 9.45140000000004e-05, 9.461199999999739e-05, 9.459699999999835e-05, 9.456999999999868e-05, 9.494499999999906e-05, 9.473599999999804e-05, 9.456999999999868e-05, 9.497199999999872e-05, 9.454199999999954e-05, 9.48880000000013e-05, 9.461100000000139e-05, 9.47079999999989e-05, 9.472199999999847e-05, 9.477800000000022e-05, 9.488900000000078e-05, 9.462499999999749e-05, 9.469399999999933e-05, 9.467999999999976e-05, 9.462500000000096e-05, 9.466699999999967e-05, 9.44590000000016e-05, 9.440299999999985e-05, 9.458400000000172e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.189" endtime="20201110 08:38:20.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.184" endtime="20201110 08:38:20.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.194" endtime="20201110 08:38:20.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.198" endtime="20201110 08:38:20.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.196" endtime="20201110 08:38:20.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.193" endtime="20201110 08:38:20.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.822" endtime="20201110 08:38:20.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.822" endtime="20201110 08:38:20.219"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.228" endtime="20201110 08:38:20.246"></status>
</kw>
<msg timestamp="20201110 08:38:20.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.226" endtime="20201110 08:38:20.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.248" endtime="20201110 08:38:20.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.250" endtime="20201110 08:38:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.224" endtime="20201110 08:38:20.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.221" endtime="20201110 08:38:20.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.261" endtime="20201110 08:38:20.546"></status>
</kw>
<msg timestamp="20201110 08:38:20.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.259" endtime="20201110 08:38:20.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.550" endtime="20201110 08:38:20.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.559" endtime="20201110 08:38:20.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.257" endtime="20201110 08:38:20.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.255" endtime="20201110 08:38:20.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.566" level="INFO">${RESULT} = [{'time': 0.022819181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.554200000000054e-05, 'source_diff': 9.554200000000054e-05}, {'time': 0.022917194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.562" endtime="20201110 08:38:20.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.580" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:20.567" endtime="20201110 08:38:20.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.585" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.584" endtime="20201110 08:38:20.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.587" level="INFO">VALUE: [9.554200000000054e-05, 9.545799999999965e-05, 9.574999999999861e-05, 9.574999999999861e-05, 9.541600000000094e-05, 9.593000000000101e-05, 9.566599999999773e-05, 9.591699999999745e-05, 9.556900000000021e-05, 9.633300000000053e-05, 9.56530000000011e-05, 9.566700000000067e-05, 9.561099999999892e-05, 9.573599999999904e-05, 9.550000000000183e-05, 9.572199999999947e-05, 9.544499999999956e-05, 9.574999999999861e-05, 9.572299999999895e-05, 9.55270000000015e-05, 9.587500000000221e-05, 9.547199999999922e-05, 9.550000000000183e-05, 9.569400000000033e-05, 9.56660000000012e-05, 9.588899999999831e-05, 9.58469999999996e-05, 9.538900000000128e-05, 9.576400000000165e-05, 9.575000000000208e-05, 9.55140000000014e-05, 9.541700000000042e-05, 9.554200000000054e-05, 9.586099999999917e-05, 9.576400000000165e-05, 9.576400000000165e-05, 9.612499999999899e-05, 9.555500000000064e-05, 9.559699999999935e-05, 9.581999999999993e-05, 9.538900000000128e-05, 9.566700000000067e-05, 9.56660000000012e-05, 9.54859999999988e-05, 9.561100000000239e-05, 9.573599999999904e-05, 9.552800000000097e-05, 9.572199999999947e-05, 9.59859999999993e-05, 9.559699999999935e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.586" endtime="20201110 08:38:20.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.581" endtime="20201110 08:38:20.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.591" endtime="20201110 08:38:20.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.595" endtime="20201110 08:38:20.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.593" endtime="20201110 08:38:20.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.589" endtime="20201110 08:38:20.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.220" endtime="20201110 08:38:20.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.219" endtime="20201110 08:38:20.616"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.625" endtime="20201110 08:38:20.644"></status>
</kw>
<msg timestamp="20201110 08:38:20.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.623" endtime="20201110 08:38:20.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.645" endtime="20201110 08:38:20.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.648" endtime="20201110 08:38:20.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.620" endtime="20201110 08:38:20.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.618" endtime="20201110 08:38:20.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.659" endtime="20201110 08:38:20.945"></status>
</kw>
<msg timestamp="20201110 08:38:20.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.657" endtime="20201110 08:38:20.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.949" endtime="20201110 08:38:20.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.958" endtime="20201110 08:38:20.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.654" endtime="20201110 08:38:20.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.652" endtime="20201110 08:38:20.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.965" level="INFO">${RESULT} = [{'time': 0.022833056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.673699999999952e-05, 'source_diff': 9.673699999999952e-05}, {'time': 0.022932069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.961" endtime="20201110 08:38:20.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.979" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:20.966" endtime="20201110 08:38:20.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.984" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.983" endtime="20201110 08:38:20.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.986" level="INFO">VALUE: [9.673699999999952e-05, 9.661099999999992e-05, 9.65270000000025e-05, 9.669399999999786e-05, 9.687499999999974e-05, 9.669399999999786e-05, 9.665299999999863e-05, 9.645799999999718e-05, 9.640300000000185e-05, 9.691699999999845e-05, 9.638899999999881e-05, 9.662499999999949e-05, 9.68470000000006e-05, 9.659699999999688e-05, 9.691699999999845e-05, 9.644500000000056e-05, 9.672299999999995e-05, 9.681900000000146e-05, 9.658300000000078e-05, 9.681899999999799e-05, 9.666599999999873e-05, 9.668000000000176e-05, 9.647200000000022e-05, 9.65140000000024e-05, 9.656899999999774e-05, 9.658300000000078e-05, 9.656999999999721e-05, 9.683300000000103e-05, 9.663899999999906e-05, 9.66530000000021e-05, 9.679199999999832e-05, 9.640300000000185e-05, 9.65279999999985e-05, 9.693100000000149e-05, 9.65409999999986e-05, 9.649999999999936e-05, 9.676399999999918e-05, 9.651399999999893e-05, 9.64859999999998e-05, 9.690299999999888e-05, 9.665299999999863e-05, 9.661099999999992e-05, 9.64859999999998e-05, 9.665299999999863e-05, 9.647199999999675e-05, 9.68059999999979e-05, 9.682000000000093e-05, 9.737500000000024e-05, 9.668099999999777e-05, 9.658400000000025e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.985" endtime="20201110 08:38:20.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.980" endtime="20201110 08:38:20.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.990" endtime="20201110 08:38:20.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.994" endtime="20201110 08:38:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.992" endtime="20201110 08:38:21.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.988" endtime="20201110 08:38:21.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.617" endtime="20201110 08:38:21.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.616" endtime="20201110 08:38:21.015"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.024" endtime="20201110 08:38:21.043"></status>
</kw>
<msg timestamp="20201110 08:38:21.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.022" endtime="20201110 08:38:21.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.044" endtime="20201110 08:38:21.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.047" endtime="20201110 08:38:21.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.019" endtime="20201110 08:38:21.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.017" endtime="20201110 08:38:21.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.058" endtime="20201110 08:38:21.344"></status>
</kw>
<msg timestamp="20201110 08:38:21.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02277475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:21.056" endtime="20201110 08:38:21.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02277475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:21.348" endtime="20201110 08:38:21.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.357" endtime="20201110 08:38:21.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.053" endtime="20201110 08:38:21.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.051" endtime="20201110 08:38:21.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.364" level="INFO">${RESULT} = [{'time': 0.022872194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.744399999999862e-05, 'source_diff': 9.744399999999862e-05}, {'time': 0.022972194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.360" endtime="20201110 08:38:21.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.379" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:21.365" endtime="20201110 08:38:21.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.383" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.382" endtime="20201110 08:38:21.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.386" level="INFO">VALUE: [9.744399999999862e-05, 9.777700000000028e-05, 9.763900000000006e-05, 9.811100000000142e-05, 9.743100000000199e-05, 9.737500000000024e-05, 9.791699999999945e-05, 9.755599999999864e-05, 9.774999999999714e-05, 9.737500000000024e-05, 9.772200000000147e-05, 9.793099999999902e-05, 9.744499999999809e-05, 9.783399999999803e-05, 9.788900000000031e-05, 9.781999999999846e-05, 9.758399999999778e-05, 9.791699999999945e-05, 9.762500000000049e-05, 9.786100000000117e-05, 9.784699999999813e-05, 9.758299999999831e-05, 9.741599999999948e-05, 9.812500000000099e-05, 9.772200000000147e-05, 9.747199999999775e-05, 9.794500000000206e-05, 9.751399999999993e-05, 9.755599999999864e-05, 9.765299999999963e-05, 9.762500000000049e-05, 9.768100000000224e-05, 9.769500000000181e-05, 9.781999999999846e-05, 9.794399999999912e-05, 9.747200000000122e-05, 9.759699999999788e-05, 9.783299999999856e-05, 9.744399999999862e-05, 9.76799999999993e-05, 9.794400000000258e-05, 9.794399999999912e-05, 9.745899999999766e-05, 9.784699999999813e-05, 9.790299999999988e-05, 9.76669999999992e-05, 9.787500000000074e-05, 9.772200000000147e-05, 9.757000000000168e-05, 9.74730000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.385" endtime="20201110 08:38:21.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.380" endtime="20201110 08:38:21.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.396" endtime="20201110 08:38:21.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.400" endtime="20201110 08:38:21.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.398" endtime="20201110 08:38:21.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.395" endtime="20201110 08:38:21.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.016" endtime="20201110 08:38:21.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.015" endtime="20201110 08:38:21.421"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.430" endtime="20201110 08:38:21.449"></status>
</kw>
<msg timestamp="20201110 08:38:21.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.428" endtime="20201110 08:38:21.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.451" endtime="20201110 08:38:21.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.453" endtime="20201110 08:38:21.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.426" endtime="20201110 08:38:21.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.423" endtime="20201110 08:38:21.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.464" endtime="20201110 08:38:21.749"></status>
</kw>
<msg timestamp="20201110 08:38:21.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.462" endtime="20201110 08:38:21.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.753" endtime="20201110 08:38:21.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.762" endtime="20201110 08:38:21.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.460" endtime="20201110 08:38:21.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.458" endtime="20201110 08:38:21.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.769" level="INFO">${RESULT} = [{'time': 0.022688278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.879200000000032e-05, 'source_diff': 9.879200000000032e-05}, {'time': 0.022789292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.765" endtime="20201110 08:38:21.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.783" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:21.770" endtime="20201110 08:38:21.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.788" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.786" endtime="20201110 08:38:21.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.790" level="INFO">VALUE: [9.879200000000032e-05, 9.872299999999848e-05, 9.883399999999903e-05, 9.890300000000088e-05, 9.876400000000118e-05, 9.886200000000164e-05, 9.856899999999974e-05, 9.888800000000184e-05, 9.869399999999987e-05, 9.841600000000048e-05, 9.843000000000005e-05, 9.862499999999802e-05, 9.844399999999962e-05, 9.854200000000007e-05, 9.85280000000005e-05, 9.93609999999992e-05, 9.893100000000002e-05, 9.865300000000063e-05, 9.86800000000003e-05, 9.894499999999959e-05, 9.868099999999977e-05, 9.888900000000131e-05, 9.894499999999959e-05, 9.84860000000018e-05, 9.843000000000005e-05, 9.879100000000085e-05, 9.848599999999832e-05, 9.892999999999708e-05, 9.891600000000098e-05, 9.870799999999944e-05, 9.865300000000063e-05, 9.859699999999888e-05, 9.868099999999977e-05, 9.887500000000174e-05, 9.881999999999946e-05, 9.861100000000192e-05, 9.877800000000075e-05, 9.840300000000038e-05, 9.883399999999903e-05, 9.877700000000128e-05, 9.875000000000161e-05, 9.876400000000118e-05, 9.852699999999756e-05, 9.862499999999802e-05, 9.844399999999962e-05, 9.870799999999944e-05, 9.88609999999987e-05, 9.84999999999979e-05, 9.848599999999832e-05, 9.937500000000224e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.789" endtime="20201110 08:38:21.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.783" endtime="20201110 08:38:21.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.795" endtime="20201110 08:38:21.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.799" endtime="20201110 08:38:21.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.797" endtime="20201110 08:38:21.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.793" endtime="20201110 08:38:21.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.422" endtime="20201110 08:38:21.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.421" endtime="20201110 08:38:21.820"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.829" endtime="20201110 08:38:21.848"></status>
</kw>
<msg timestamp="20201110 08:38:21.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.827" endtime="20201110 08:38:21.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.849" endtime="20201110 08:38:21.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.852" endtime="20201110 08:38:21.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.825" endtime="20201110 08:38:21.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.822" endtime="20201110 08:38:21.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.863" endtime="20201110 08:38:22.149"></status>
</kw>
<msg timestamp="20201110 08:38:22.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.861" endtime="20201110 08:38:22.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.153" endtime="20201110 08:38:22.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.162" endtime="20201110 08:38:22.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.858" endtime="20201110 08:38:22.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.857" endtime="20201110 08:38:22.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.169" level="INFO">${RESULT} = [{'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.954200000000107e-05, 'source_diff': 9.954200000000107e-05}, {'time': 0.022921056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.165" endtime="20201110 08:38:22.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.183" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:22.170" endtime="20201110 08:38:22.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.188" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.186" endtime="20201110 08:38:22.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.190" level="INFO">VALUE: [9.954200000000107e-05, 9.976399999999871e-05, 9.956900000000074e-05, 9.970800000000044e-05, 9.9415999999998e-05, 9.947199999999976e-05, 9.988900000000231e-05, 9.96939999999974e-05, 9.98609999999997e-05, 9.976400000000218e-05, 9.96800000000013e-05, 9.979200000000132e-05, 9.995900000000016e-05, 9.988899999999884e-05, 9.991699999999798e-05, 9.995900000000016e-05, 9.980499999999795e-05, 0.00010012499999999952, 9.950000000000236e-05, 9.958300000000031e-05, 9.976400000000218e-05, 9.965300000000163e-05, 9.980499999999795e-05, 9.958300000000031e-05, 9.988899999999884e-05, 9.944400000000062e-05, 9.981900000000099e-05, 9.938899999999834e-05, 9.94999999999989e-05, 9.940300000000138e-05, 9.966699999999773e-05, 9.954200000000107e-05, 9.948599999999932e-05, 9.997200000000026e-05, 9.980500000000142e-05, 9.987499999999927e-05, 9.945800000000019e-05, 9.990199999999894e-05, 9.983300000000056e-05, 0.00010009700000000038, 9.963899999999859e-05, 9.951400000000193e-05, 9.958300000000031e-05, 9.984700000000013e-05, 9.970899999999991e-05, 9.952799999999803e-05, 9.954200000000107e-05, 9.9722e-05, 9.973599999999957e-05, 9.957000000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.189" endtime="20201110 08:38:22.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.184" endtime="20201110 08:38:22.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.194" endtime="20201110 08:38:22.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.197" endtime="20201110 08:38:22.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.196" endtime="20201110 08:38:22.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.192" endtime="20201110 08:38:22.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.821" endtime="20201110 08:38:22.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.820" endtime="20201110 08:38:22.218"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.227" endtime="20201110 08:38:22.247"></status>
</kw>
<msg timestamp="20201110 08:38:22.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.226" endtime="20201110 08:38:22.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.248" endtime="20201110 08:38:22.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.251" endtime="20201110 08:38:22.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.223" endtime="20201110 08:38:22.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.221" endtime="20201110 08:38:22.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.261" endtime="20201110 08:38:22.546"></status>
</kw>
<msg timestamp="20201110 08:38:22.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.260" endtime="20201110 08:38:22.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.550" endtime="20201110 08:38:22.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.558" endtime="20201110 08:38:22.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.257" endtime="20201110 08:38:22.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.255" endtime="20201110 08:38:22.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.565" level="INFO">${RESULT} = [{'time': 0.022661306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010043099999999805, 'source_diff': 0.00010043099999999805}, {'time': 0.022764306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:22.562" endtime="20201110 08:38:22.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:22.566" endtime="20201110 08:38:22.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.583" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.582" endtime="20201110 08:38:22.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.585" level="INFO">VALUE: [0.00010043099999999805, 0.00010077800000000275, 0.00010069400000000187, 0.00010077699999999981, 0.00010079100000000285, 0.00010061100000000045, 0.00010062500000000002, 0.00010041700000000195, 0.0001004999999999999, 0.00010095800000000169, 0.00010095800000000169, 0.00010058400000000078, 0.00010047200000000076, 0.00010075000000000014, 0.000100819999999998, 0.0001004999999999999, 0.00010037499999999977, 0.00010065299999999916, 0.00010081900000000199, 0.00010084700000000113, 0.00010081900000000199, 0.00010059700000000088, 0.00010044399999999815, 0.00010045800000000119, 0.00010040299999999891, 0.00010077799999999928, 0.00010055600000000164, 0.00010087500000000027, 0.00010045900000000066, 0.0001005419999999986, 0.0001006809999999983, 0.0001005280000000025, 0.0001006809999999983, 0.000100819999999998, 0.00010070900000000091, 0.0001004999999999999, 0.00010070800000000144, 0.00010075000000000014, 0.00010065299999999916, 0.00010084699999999766, 0.00010054099999999913, 0.000100819999999998, 0.00010056900000000174, 0.00010051399999999946, 0.00010051400000000293, 0.00010041700000000195, 0.00010063899999999959, 0.00010069500000000134, 0.00010075000000000014, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201110 08:38:22.584" endtime="20201110 08:38:22.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.579" endtime="20201110 08:38:22.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.589" endtime="20201110 08:38:22.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.592" endtime="20201110 08:38:22.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.591" endtime="20201110 08:38:22.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.587" endtime="20201110 08:38:22.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.219" endtime="20201110 08:38:22.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.219" endtime="20201110 08:38:22.613"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.621" endtime="20201110 08:38:22.641"></status>
</kw>
<msg timestamp="20201110 08:38:22.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.620" endtime="20201110 08:38:22.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.642" endtime="20201110 08:38:22.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.645" endtime="20201110 08:38:22.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.617" endtime="20201110 08:38:22.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.615" endtime="20201110 08:38:22.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.655" endtime="20201110 08:38:22.956"></status>
</kw>
<msg timestamp="20201110 08:38:22.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.653" endtime="20201110 08:38:22.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.961" endtime="20201110 08:38:22.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.969" endtime="20201110 08:38:22.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.651" endtime="20201110 08:38:22.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.649" endtime="20201110 08:38:22.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.976" level="INFO">${RESULT} = [{'time': 0.022064403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001022359999999986, 'source_diff': 0.0001022359999999986}, {'time': 0.022168403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.972" endtime="20201110 08:38:22.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.990" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:22.977" endtime="20201110 08:38:22.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.995" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.994" endtime="20201110 08:38:22.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.997" level="INFO">VALUE: [0.0001022359999999986, 0.00010148600000000133, 0.00010140299999999991, 0.00010188900000000084, 0.0001013879999999974, 0.00010170799999999897, 0.00010152800000000003, 0.00010165200000000069, 0.00010180499999999995, 0.00010183299999999909, 0.00010173600000000158, 0.00010143099999999905, 0.00010167999999999983, 0.00010195799999999922, 0.00010177800000000028, 0.00010169499999999887, 0.00010177800000000028, 0.00010147199999999829, 0.00010197300000000173, 0.00010141700000000295, 0.00010147300000000123, 0.00010173600000000158, 0.00010170799999999897, 0.00010165200000000069, 0.00010168100000000277, 0.00010193099999999955, 0.0001015549999999997, 0.00010183299999999909, 0.00010174999999999768, 0.00010148599999999786, 0.0001018749999999978, 0.0001015000000000009, 0.0001016809999999993, 0.000101722000000002, 0.00010190300000000041, 0.00010140299999999991, 0.00010140200000000044, 0.0001018480000000016, 0.00010166600000000026, 0.00010236099999999873, 0.00010193000000000008, 0.00010176400000000071, 0.00010158299999999884, 0.00010151400000000046, 0.0001015000000000009, 0.00010145800000000219, 0.00010184699999999866, 0.00010175000000000115, 0.0001018610000000017, 0.00010159700000000188]</msg>
<status status="PASS" starttime="20201110 08:38:22.996" endtime="20201110 08:38:22.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.991" endtime="20201110 08:38:22.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.001" endtime="20201110 08:38:23.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.004" endtime="20201110 08:38:23.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.003" endtime="20201110 08:38:23.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.999" endtime="20201110 08:38:23.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.614" endtime="20201110 08:38:23.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.613" endtime="20201110 08:38:23.025"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.034" endtime="20201110 08:38:23.053"></status>
</kw>
<msg timestamp="20201110 08:38:23.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.032" endtime="20201110 08:38:23.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.054" endtime="20201110 08:38:23.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.057" endtime="20201110 08:38:23.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.030" endtime="20201110 08:38:23.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.028" endtime="20201110 08:38:23.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.067" endtime="20201110 08:38:23.353"></status>
</kw>
<msg timestamp="20201110 08:38:23.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.066" endtime="20201110 08:38:23.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.357" endtime="20201110 08:38:23.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.366" endtime="20201110 08:38:23.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.063" endtime="20201110 08:38:23.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.061" endtime="20201110 08:38:23.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.372" level="INFO">${RESULT} = [{'time': 0.022704319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010293000000000108, 'source_diff': 0.00010293000000000108}, {'time': 0.022809319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:23.369" endtime="20201110 08:38:23.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:23.373" endtime="20201110 08:38:23.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.390" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.389" endtime="20201110 08:38:23.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.393" level="INFO">VALUE: [0.00010293000000000108, 0.00010243000000000058, 0.00010283300000000009, 0.00010240199999999797, 0.00010245799999999972, 0.00010277800000000128, 0.00010283300000000009, 0.00010247199999999929, 0.00010277799999999782, 0.00010238900000000134, 0.00010291700000000098, 0.00010247199999999929, 0.00010276399999999825, 0.00010263899999999812, 0.00010251400000000147, 0.0001027359999999991, 0.00010254100000000113, 0.00010286099999999923, 0.0001023879999999984, 0.0001025420000000006, 0.0001025550000000007, 0.00010280499999999748, 0.00010241700000000048, 0.00010248599999999886, 0.00010284699999999966, 0.00010265199999999822, 0.00010280599999999696, 0.00010284699999999966, 0.00010261099999999898, 0.00010241700000000048, 0.00010277800000000128, 0.00010290300000000141, 0.00010263899999999812, 0.00010277700000000181, 0.00010308300000000034, 0.00010248600000000233, 0.00010272199999999954, 0.00010284699999999966, 0.00010283300000000009, 0.00010297199999999979, 0.00010251400000000147, 0.00010284799999999913, 0.0001027359999999991, 0.00010245799999999972, 0.00010291599999999804, 0.00010243100000000005, 0.00010244499999999962, 0.0001028619999999987, 0.00010281899999999705, 0.0001027359999999991]</msg>
<status status="PASS" starttime="20201110 08:38:23.391" endtime="20201110 08:38:23.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.387" endtime="20201110 08:38:23.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.396" endtime="20201110 08:38:23.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.400" endtime="20201110 08:38:23.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.398" endtime="20201110 08:38:23.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.395" endtime="20201110 08:38:23.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.026" endtime="20201110 08:38:23.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.025" endtime="20201110 08:38:23.421"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.429" endtime="20201110 08:38:23.449"></status>
</kw>
<msg timestamp="20201110 08:38:23.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.428" endtime="20201110 08:38:23.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.450" endtime="20201110 08:38:23.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.453" endtime="20201110 08:38:23.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.425" endtime="20201110 08:38:23.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.423" endtime="20201110 08:38:23.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.463" endtime="20201110 08:38:23.749"></status>
</kw>
<msg timestamp="20201110 08:38:23.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.461" endtime="20201110 08:38:23.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.753" endtime="20201110 08:38:23.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.761" endtime="20201110 08:38:23.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.459" endtime="20201110 08:38:23.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.457" endtime="20201110 08:38:23.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.768" level="INFO">${RESULT} = [{'time': 0.022819958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010415199999999972, 'source_diff': 0.00010415199999999972}, {'time': 0.022925889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:23.764" endtime="20201110 08:38:23.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:23.769" endtime="20201110 08:38:23.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.786" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.785" endtime="20201110 08:38:23.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.788" level="INFO">VALUE: [0.00010415199999999972, 0.00010370800000000097, 0.00010365299999999869, 0.00010352800000000204, 0.00010361199999999945, 0.00010384800000000013, 0.00010370900000000044, 0.00010366600000000226, 0.00010362499999999955, 0.00010376400000000272, 0.00010367999999999836, 0.00010343000000000158, 0.00010415299999999919, 0.00010394400000000165, 0.0001038749999999998, 0.00010338900000000234, 0.00010368099999999783, 0.0001036810000000013, 0.00010347200000000029, 0.00010393100000000155, 0.00010383400000000056, 0.00010391700000000198, 0.00010344500000000062, 0.000103513999999999, 0.00010358299999999737, 0.00010390199999999947, 0.00010341599999999854, 0.00010411100000000048, 0.00010390299999999894, 0.00010381900000000152, 0.00010376399999999925, 0.00010359799999999988, 0.0001036949999999974, 0.00010365299999999869, 0.00010341699999999801, 0.00010388899999999937, 0.00010390299999999894, 0.000103513999999999, 0.00010377699999999934, 0.00010352699999999909, 0.0001035689999999978, 0.00010355499999999823, 0.0001035689999999978, 0.00010349999999999943, 0.00010347200000000029, 0.00010372200000000054, 0.00010361099999999998, 0.00010363799999999965, 0.00010393099999999808, 0.00010357000000000074]</msg>
<status status="PASS" starttime="20201110 08:38:23.787" endtime="20201110 08:38:23.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.782" endtime="20201110 08:38:23.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.792" endtime="20201110 08:38:23.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.796" endtime="20201110 08:38:23.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.794" endtime="20201110 08:38:23.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.790" endtime="20201110 08:38:23.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.421" endtime="20201110 08:38:23.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.421" endtime="20201110 08:38:23.816"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.825" endtime="20201110 08:38:23.845"></status>
</kw>
<msg timestamp="20201110 08:38:23.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.824" endtime="20201110 08:38:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.847" endtime="20201110 08:38:23.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.849" endtime="20201110 08:38:23.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.821" endtime="20201110 08:38:23.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.819" endtime="20201110 08:38:23.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.859" endtime="20201110 08:38:24.145"></status>
</kw>
<msg timestamp="20201110 08:38:24.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.858" endtime="20201110 08:38:24.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.150" endtime="20201110 08:38:24.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.158" endtime="20201110 08:38:24.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.855" endtime="20201110 08:38:24.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.853" endtime="20201110 08:38:24.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.164" level="INFO">${RESULT} = [{'time': 0.022591681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001052499999999977, 'source_diff': 0.0001052499999999977}, {'time': 0.022698708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:24.161" endtime="20201110 08:38:24.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:24.166" endtime="20201110 08:38:24.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.183" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.182" endtime="20201110 08:38:24.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.185" level="INFO">VALUE: [0.0001052499999999977, 0.00010466599999999979, 0.00010452700000000009, 0.00010459700000000141, 0.00010445799999999825, 0.00010459699999999794, 0.00010461100000000098, 0.00010458300000000184, 0.00010512500000000105, 0.00010480599999999896, 0.00010487499999999733, 0.00010495799999999875, 0.00010472300000000101, 0.0001045559999999987, 0.00010452799999999957, 0.00010461200000000045, 0.00010463900000000012, 0.00010472200000000154, 0.00010495799999999875, 0.00010480499999999948, 0.00010444400000000215, 0.00010441699999999901, 0.00010491699999999951, 0.00010477799999999982, 0.0001046810000000023, 0.00010463900000000012, 0.00010459700000000141, 0.00010476400000000025, 0.00010454199999999914, 0.00010461200000000045, 0.00010459800000000088, 0.00010443099999999858, 0.00010448600000000086, 0.00010443000000000258, 0.00010463900000000012, 0.00010490299999999994, 0.00010461100000000098, 0.0001048750000000008, 0.00010473700000000058, 0.00010455499999999923, 0.00010475000000000068, 0.00010469399999999893, 0.00010445900000000119, 0.00010469500000000187, 0.00010468099999999883, 0.00010462500000000055, 0.00010490299999999994, 0.00010459700000000141, 0.00010481900000000252, 0.00010466599999999979]</msg>
<status status="PASS" starttime="20201110 08:38:24.184" endtime="20201110 08:38:24.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.179" endtime="20201110 08:38:24.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.189" endtime="20201110 08:38:24.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.192" endtime="20201110 08:38:24.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.191" endtime="20201110 08:38:24.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.187" endtime="20201110 08:38:24.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.817" endtime="20201110 08:38:24.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.817" endtime="20201110 08:38:24.213"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.222" endtime="20201110 08:38:24.241"></status>
</kw>
<msg timestamp="20201110 08:38:24.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.220" endtime="20201110 08:38:24.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.243" endtime="20201110 08:38:24.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.245" endtime="20201110 08:38:24.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.218" endtime="20201110 08:38:24.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.215" endtime="20201110 08:38:24.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.256" endtime="20201110 08:38:24.542"></status>
</kw>
<msg timestamp="20201110 08:38:24.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.254" endtime="20201110 08:38:24.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.546" endtime="20201110 08:38:24.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.554" endtime="20201110 08:38:24.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.251" endtime="20201110 08:38:24.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.250" endtime="20201110 08:38:24.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.561" level="INFO">${RESULT} = [{'time': 0.022385208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010548600000000186, 'source_diff': 0.00010548600000000186}, {'time': 0.022493181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:24.557" endtime="20201110 08:38:24.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:24.562" endtime="20201110 08:38:24.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.580" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.579" endtime="20201110 08:38:24.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.582" level="INFO">VALUE: [0.00010548600000000186, 0.00010558400000000231, 0.00010550000000000143, 0.00010556900000000327, 0.00010586099999999876, 0.00010587499999999833, 0.00010569399999999993, 0.00010554100000000066, 0.00010594400000000018, 0.00010584699999999919, 0.00010558299999999937, 0.0001055559999999997, 0.00010568099999999983, 0.00010561100000000198, 0.00010552800000000057, 0.00010565300000000069, 0.00010565300000000069, 0.00010570900000000244, 0.00010592999999999714, 0.0001054019999999975, 0.00010551299999999805, 0.00010547199999999882, 0.00010590200000000147, 0.00010547199999999882, 0.00010590300000000094, 0.00010636100000000273, 0.00010580599999999996, 0.00010565300000000069, 0.00010559700000000241, 0.00010566700000000026, 0.00010545900000000219, 0.00010562499999999808, 0.0001055559999999997, 0.0001058339999999991, 0.00010540300000000044, 0.00010568000000000036, 0.00010554100000000066, 0.00010591600000000104, 0.00010544399999999968, 0.0001057360000000021, 0.0001055689999999998, 0.00010550000000000143, 0.00010541700000000001, 0.00010559700000000241, 0.0001057499999999982, 0.00010586099999999876, 0.00010548699999999786, 0.00010594499999999965, 0.00010545899999999872, 0.0001053750000000013]</msg>
<status status="PASS" starttime="20201110 08:38:24.581" endtime="20201110 08:38:24.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.576" endtime="20201110 08:38:24.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.586" endtime="20201110 08:38:24.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.589" endtime="20201110 08:38:24.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.588" endtime="20201110 08:38:24.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.584" endtime="20201110 08:38:24.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.214" endtime="20201110 08:38:24.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.213" endtime="20201110 08:38:24.610"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.619" endtime="20201110 08:38:24.638"></status>
</kw>
<msg timestamp="20201110 08:38:24.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.617" endtime="20201110 08:38:24.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.640" endtime="20201110 08:38:24.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.642" endtime="20201110 08:38:24.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.615" endtime="20201110 08:38:24.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.613" endtime="20201110 08:38:24.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.652" endtime="20201110 08:38:24.940"></status>
</kw>
<msg timestamp="20201110 08:38:24.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.651" endtime="20201110 08:38:24.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.944" endtime="20201110 08:38:24.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.952" endtime="20201110 08:38:24.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.648" endtime="20201110 08:38:24.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.646" endtime="20201110 08:38:24.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.959" level="INFO">${RESULT} = [{'time': 0.022138972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010668000000000136, 'source_diff': 0.00010668000000000136}, {'time': 0.022247986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:24.955" endtime="20201110 08:38:24.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.972" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:24.959" endtime="20201110 08:38:24.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.976" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.975" endtime="20201110 08:38:24.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.979" level="INFO">VALUE: [0.00010668000000000136, 0.0001067080000000005, 0.00010677799999999835, 0.00010694500000000065, 0.00010681900000000105, 0.00010683300000000062, 0.00010647199999999982, 0.00010672200000000007, 0.00010642999999999764, 0.00010668100000000083, 0.00010665200000000222, 0.00010666599999999832, 0.00010649999999999896, 0.00010652699999999862, 0.00010694400000000118, 0.00010666600000000179, 0.00010666699999999779, 0.00010661099999999951, 0.00010693000000000161, 0.00010649999999999896, 0.00010659699999999994, 0.00010645800000000025, 0.00010670899999999997, 0.00010647299999999929, 0.00010647300000000276, 0.00010648599999999939, 0.00010738900000000287, 0.0001065690000000008, 0.00010675000000000268, 0.0001067499999999992, 0.00010647199999999982, 0.00010672200000000007, 0.00010663900000000212, 0.00010693100000000108, 0.00010668100000000083, 0.00010657000000000028, 0.00010673699999999911, 0.00010640300000000144, 0.00010643100000000058, 0.00010690300000000194, 0.00010715200000000272, 0.00010682000000000053, 0.00010680500000000148, 0.00010655499999999776, 0.00010658300000000037, 0.0001067080000000005, 0.00010655499999999776, 0.00010683300000000062, 0.00010683300000000062, 0.0001063889999999984]</msg>
<status status="PASS" starttime="20201110 08:38:24.977" endtime="20201110 08:38:24.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.973" endtime="20201110 08:38:24.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.982" endtime="20201110 08:38:24.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.986" endtime="20201110 08:38:25.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.984" endtime="20201110 08:38:25.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.981" endtime="20201110 08:38:25.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.611" endtime="20201110 08:38:25.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.611" endtime="20201110 08:38:25.010"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.029" endtime="20201110 08:38:25.051"></status>
</kw>
<msg timestamp="20201110 08:38:25.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.026" endtime="20201110 08:38:25.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.054" endtime="20201110 08:38:25.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.059" endtime="20201110 08:38:25.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.020" endtime="20201110 08:38:25.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.015" endtime="20201110 08:38:25.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.080" endtime="20201110 08:38:25.367"></status>
</kw>
<msg timestamp="20201110 08:38:25.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037194847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037302833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.077" endtime="20201110 08:38:25.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037194847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037302833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.371" endtime="20201110 08:38:25.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.379" endtime="20201110 08:38:25.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.071" endtime="20201110 08:38:25.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.068" endtime="20201110 08:38:25.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.385" level="INFO">${RESULT} = [{'time': 0.037302833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010798599999999742, 'source_diff': 0.00010798599999999742}, {'time': 0.037412833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:25.382" endtime="20201110 08:38:25.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.399" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:25.386" endtime="20201110 08:38:25.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.403" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.402" endtime="20201110 08:38:25.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.405" level="INFO">VALUE: [0.00010798599999999742, 0.0001077769999999964, 0.00010779099999999597, 0.0001077769999999964, 0.00010762500000000008, 0.00010776400000000325, 0.00010786100000000076, 0.00010784700000000119, 0.00010797199999999785, 0.00010782000000000153, 0.00010759800000000042, 0.00010747200000000429, 0.00010784800000000067, 0.00010745799999999778, 0.00010766699999999879, 0.00010766700000000573, 0.00010777700000000334, 0.00010767999999999889, 0.00010836100000000126, 0.00010737499999999983, 0.0001075419999999952, 0.00010747199999999735, 0.00010748600000000386, 0.00010777800000000282, 0.00010758300000000137, 0.00010776399999999631, 0.00010795899999999775, 0.00010741700000000548, 0.00010787500000000033, 0.00010775000000000368, 0.00010745899999999725, 0.00010738799999999993, 0.00010762500000000008, 0.00010783300000000162, 0.00010767999999999889, 0.0001077219999999976, 0.00010758300000000137, 0.00010768099999999836, 0.00010776400000000325, 0.00010772200000000454, 0.00010741699999999854, 0.00010749999999999649, 0.00010776399999999631, 0.00010781999999999459, 0.00010750000000000343, 0.00010773700000000358, 0.000107902, 0.00010742999999999864, 0.00010748599999999692, 0.00010744399999999821]</msg>
<status status="PASS" starttime="20201110 08:38:25.404" endtime="20201110 08:38:25.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.399" endtime="20201110 08:38:25.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.409" endtime="20201110 08:38:25.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.412" endtime="20201110 08:38:25.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.411" endtime="20201110 08:38:25.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.407" endtime="20201110 08:38:25.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.012" endtime="20201110 08:38:25.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.011" endtime="20201110 08:38:25.433"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.442" endtime="20201110 08:38:25.461"></status>
</kw>
<msg timestamp="20201110 08:38:25.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.440" endtime="20201110 08:38:25.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.462" endtime="20201110 08:38:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.465" endtime="20201110 08:38:25.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.438" endtime="20201110 08:38:25.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.436" endtime="20201110 08:38:25.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.475" endtime="20201110 08:38:25.760"></status>
</kw>
<msg timestamp="20201110 08:38:25.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.473" endtime="20201110 08:38:25.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.764" endtime="20201110 08:38:25.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.773" endtime="20201110 08:38:25.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.471" endtime="20201110 08:38:25.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.469" endtime="20201110 08:38:25.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.779" level="INFO">${RESULT} = [{'time': 0.022127681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010922299999999857, 'source_diff': 0.00010922299999999857}, {'time': 0.022238681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:25.776" endtime="20201110 08:38:25.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:25.780" endtime="20201110 08:38:25.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.797" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.796" endtime="20201110 08:38:25.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.799" level="INFO">VALUE: [0.00010922299999999857, 0.00010855599999999924, 0.00010865200000000075, 0.00010851400000000053, 0.0001093890000000014, 0.00010841600000000007, 0.00010873599999999817, 0.0001087219999999986, 0.00010877800000000035, 0.00010881899999999958, 0.00010857000000000228, 0.00010850000000000096, 0.00010868100000000283, 0.00010843100000000258, 0.00010847300000000129, 0.00010884800000000167, 0.0001088340000000021, 0.00010847300000000129, 0.00010862500000000108, 0.00010869399999999946, 0.00010866600000000032, 0.00010883299999999915, 0.00010875000000000121, 0.00010897199999999885, 0.00010877800000000035, 0.00010881899999999958, 0.00010876399999999731, 0.0001083890000000004, 0.00010843099999999911, 0.00010854100000000019, 0.0001086950000000024, 0.00010891700000000004, 0.0001083890000000004, 0.00010842999999999964, 0.0001085280000000001, 0.00010866600000000032, 0.00010887499999999786, 0.00010855499999999976, 0.00010863899999999718, 0.00010886099999999829, 0.0001085699999999988, 0.0001085280000000001, 0.00010937499999999836, 0.00010879199999999992, 0.00010841699999999954, 0.00010870900000000197, 0.00010848700000000086, 0.00010877800000000035, 0.00010894399999999971, 0.00010881899999999958]</msg>
<status status="PASS" starttime="20201110 08:38:25.798" endtime="20201110 08:38:25.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.793" endtime="20201110 08:38:25.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.803" endtime="20201110 08:38:25.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.806" endtime="20201110 08:38:25.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.805" endtime="20201110 08:38:25.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.801" endtime="20201110 08:38:25.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.434" endtime="20201110 08:38:25.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.433" endtime="20201110 08:38:25.827"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.836" endtime="20201110 08:38:25.855"></status>
</kw>
<msg timestamp="20201110 08:38:25.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.834" endtime="20201110 08:38:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.857" endtime="20201110 08:38:25.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.859" endtime="20201110 08:38:25.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.832" endtime="20201110 08:38:25.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.829" endtime="20201110 08:38:25.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.874" endtime="20201110 08:38:26.161"></status>
</kw>
<msg timestamp="20201110 08:38:26.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.873" endtime="20201110 08:38:26.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.165" endtime="20201110 08:38:26.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.173" endtime="20201110 08:38:26.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.870" endtime="20201110 08:38:26.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.868" endtime="20201110 08:38:26.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.180" level="INFO">${RESULT} = [{'time': 0.022080083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010991600000000157, 'source_diff': 0.00010991600000000157}, {'time': 0.022192097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.177" endtime="20201110 08:38:26.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.195" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:26.181" endtime="20201110 08:38:26.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.200" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.199" endtime="20201110 08:38:26.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.202" level="INFO">VALUE: [0.00010991600000000157, 0.00010990300000000147, 0.00010987499999999886, 0.00010944400000000021, 0.00010982000000000006, 0.00010963900000000165, 0.00010968100000000036, 0.00010941700000000054, 0.00010951399999999806, 0.00010994500000000018, 0.00010991700000000104, 0.00010990300000000147, 0.00010988899999999843, 0.00010951299999999858, 0.00010945799999999978, 0.00010948600000000239, 0.00010983300000000015, 0.00010984699999999972, 0.00010977800000000135, 0.00010954200000000067, 0.0001097089999999995, 0.00010979199999999745, 0.00010993100000000061, 0.00010956900000000033, 0.00010979200000000092, 0.0001094029999999975, 0.00010973699999999864, 0.00010945899999999925, 0.0001103890000000024, 0.00010969400000000046, 0.00010954100000000119, 0.00010943000000000064, 0.00010954100000000119, 0.00010981899999999711, 0.00010940300000000097, 0.00010991700000000104, 0.00010963899999999818, 0.00010998599999999942, 0.00010988899999999843, 0.0001093890000000014, 0.0001093890000000014, 0.00010988800000000243, 0.00010962499999999861, 0.0001097769999999984, 0.00010994400000000071, 0.00010979100000000144, 0.00010979100000000144, 0.00010977799999999788, 0.00010966700000000079, 0.00010947199999999935]</msg>
<status status="PASS" starttime="20201110 08:38:26.201" endtime="20201110 08:38:26.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.196" endtime="20201110 08:38:26.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.206" endtime="20201110 08:38:26.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.210" endtime="20201110 08:38:26.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.208" endtime="20201110 08:38:26.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.204" endtime="20201110 08:38:26.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.828" endtime="20201110 08:38:26.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.827" endtime="20201110 08:38:26.231"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.240" endtime="20201110 08:38:26.259"></status>
</kw>
<msg timestamp="20201110 08:38:26.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.238" endtime="20201110 08:38:26.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.261" endtime="20201110 08:38:26.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.263" endtime="20201110 08:38:26.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.235" endtime="20201110 08:38:26.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.233" endtime="20201110 08:38:26.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.274" endtime="20201110 08:38:26.577"></status>
</kw>
<msg timestamp="20201110 08:38:26.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.272" endtime="20201110 08:38:26.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.586" endtime="20201110 08:38:26.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.606" endtime="20201110 08:38:26.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.270" endtime="20201110 08:38:26.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.268" endtime="20201110 08:38:26.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.613" level="INFO">${RESULT} = [{'time': 0.022694097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011123600000000067, 'source_diff': 0.00011123600000000067}, {'time': 0.022807125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.610" endtime="20201110 08:38:26.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:26.614" endtime="20201110 08:38:26.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.632" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.631" endtime="20201110 08:38:26.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.634" level="INFO">VALUE: [0.00011123600000000067, 0.00011054200000000167, 0.00011063899999999918, 0.00011054200000000167, 0.00011045800000000078, 0.00011047200000000035, 0.00011037499999999936, 0.00011087500000000333, 0.00011076399999999931, 0.00011083400000000063, 0.0001104159999999986, 0.00011090199999999953, 0.00011061100000000004, 0.00011094399999999824, 0.00011044400000000121, 0.00011054099999999872, 0.00011068100000000136, 0.00011094399999999824, 0.0001104029999999985, 0.00011079199999999845, 0.00011045800000000078, 0.00011043000000000164, 0.00011061100000000004, 0.00011043100000000111, 0.00011088799999999996, 0.00011041700000000154, 0.00011113899999999968, 0.00011087499999999986, 0.00011040199999999903, 0.00011088899999999943, 0.00011065299999999875, 0.000110902999999999, 0.00011084700000000072, 0.0001104029999999985, 0.00011087499999999986, 0.00011045900000000025, 0.00011086100000000029, 0.00011063900000000265, 0.00011044500000000068, 0.00011073600000000017, 0.0001107090000000005, 0.00011065199999999928, 0.00011054100000000219, 0.00011073600000000017, 0.00011063899999999918, 0.00011070800000000103, 0.00011070800000000103, 0.0001104029999999985, 0.00011069400000000146, 0.00011084700000000072]</msg>
<status status="PASS" starttime="20201110 08:38:26.633" endtime="20201110 08:38:26.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.628" endtime="20201110 08:38:26.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.638" endtime="20201110 08:38:26.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.641" endtime="20201110 08:38:26.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.640" endtime="20201110 08:38:26.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.636" endtime="20201110 08:38:26.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.232" endtime="20201110 08:38:26.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.231" endtime="20201110 08:38:26.663"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.672" endtime="20201110 08:38:26.691"></status>
</kw>
<msg timestamp="20201110 08:38:26.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.670" endtime="20201110 08:38:26.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.693" endtime="20201110 08:38:26.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.696" endtime="20201110 08:38:26.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.667" endtime="20201110 08:38:26.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.665" endtime="20201110 08:38:26.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.706" endtime="20201110 08:38:26.993"></status>
</kw>
<msg timestamp="20201110 08:38:26.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.704" endtime="20201110 08:38:26.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.997" endtime="20201110 08:38:27.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.006" endtime="20201110 08:38:27.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.702" endtime="20201110 08:38:27.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.700" endtime="20201110 08:38:27.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.012" level="INFO">${RESULT} = [{'time': 0.023061028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001117220000000016, 'source_diff': 0.0001117220000000016}, {'time': 0.023175069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.009" endtime="20201110 08:38:27.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.026" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:27.013" endtime="20201110 08:38:27.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.031" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.030" endtime="20201110 08:38:27.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.033" level="INFO">VALUE: [0.0001117220000000016, 0.00011142999999999917, 0.00011181999999999859, 0.00011187499999999739, 0.00011197200000000185, 0.00011169399999999899, 0.0001114159999999996, 0.00011156899999999886, 0.00011145799999999831, 0.000111596999999998, 0.00011175000000000074, 0.00011159700000000147, 0.00011186099999999782, 0.00011161099999999757, 0.00011161100000000104, 0.00011141699999999907, 0.00011166699999999932, 0.0001114029999999995, 0.00011155599999999877, 0.00011158400000000138, 0.00011154099999999972, 0.00011173600000000117, 0.00011154099999999972, 0.00011166599999999985, 0.00011154200000000267, 0.00011148600000000092, 0.00011175000000000074, 0.00011194499999999871, 0.00011144499999999821, 0.00011194500000000218, 0.0001117359999999977, 0.00011172300000000107, 0.00011175000000000074, 0.00011187500000000086, 0.00011154200000000267, 0.00011183300000000215, 0.00011156899999999886, 0.00011163900000000018, 0.000111903, 0.00011170800000000203, 0.00011238900000000093, 0.00011195800000000228, 0.00011151400000000006, 0.00011151300000000058, 0.0001115419999999992, 0.00011154200000000267, 0.00011163900000000018, 0.0001115419999999992, 0.0001117229999999976, 0.00011168099999999889]</msg>
<status status="PASS" starttime="20201110 08:38:27.032" endtime="20201110 08:38:27.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.027" endtime="20201110 08:38:27.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.037" endtime="20201110 08:38:27.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.041" endtime="20201110 08:38:27.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.039" endtime="20201110 08:38:27.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.036" endtime="20201110 08:38:27.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.663" endtime="20201110 08:38:27.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.663" endtime="20201110 08:38:27.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.071" endtime="20201110 08:38:27.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.066" endtime="20201110 08:38:27.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.064" endtime="20201110 08:38:27.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.063" endtime="20201110 08:38:27.086"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:47.001" endtime="20201110 08:38:27.087" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:05.351" endtime="20201110 08:38:27.090"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.146" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:27.154" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:38:28.420" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:27.145" endtime="20201110 08:38:28.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.423" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:38:28.422" endtime="20201110 08:38:28.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.144" endtime="20201110 08:38:28.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.427" endtime="20201110 08:38:28.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.425" endtime="20201110 08:38:28.613"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.626" endtime="20201110 08:38:28.640"></status>
</kw>
<msg timestamp="20201110 08:38:28.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.624" endtime="20201110 08:38:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.642" endtime="20201110 08:38:28.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:28.644" endtime="20201110 08:38:28.647"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:28.621" endtime="20201110 08:38:28.648"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:28.619" endtime="20201110 08:38:28.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.618" endtime="20201110 08:38:28.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:28.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:28.653" endtime="20201110 08:38:28.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.649" endtime="20201110 08:38:28.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.617" endtime="20201110 08:38:28.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.617" endtime="20201110 08:38:28.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.655" endtime="20201110 08:38:28.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.615" endtime="20201110 08:38:28.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.659" endtime="20201110 08:38:28.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.614" endtime="20201110 08:38:28.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.142" endtime="20201110 08:38:28.661"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.667" endtime="20201110 08:38:28.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.666" endtime="20201110 08:38:28.687"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.701" endtime="20201110 08:38:28.715"></status>
</kw>
<msg timestamp="20201110 08:38:28.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.699" endtime="20201110 08:38:28.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.718" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.717" endtime="20201110 08:38:28.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.721" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:28.719" endtime="20201110 08:38:28.722"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:28.697" endtime="20201110 08:38:28.722"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:28.694" endtime="20201110 08:38:28.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.693" endtime="20201110 08:38:28.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:28.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:28.726" endtime="20201110 08:38:28.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.724" endtime="20201110 08:38:28.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.692" endtime="20201110 08:38:28.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.691" endtime="20201110 08:38:28.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.729" endtime="20201110 08:38:28.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.690" endtime="20201110 08:38:28.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.688" endtime="20201110 08:38:28.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.665" endtime="20201110 08:38:28.732"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:28.739" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.760" endtime="20201110 08:38:30.874"></status>
</kw>
<msg timestamp="20201110 08:38:30.876" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108440062, 'start-iter': 1, 'wakeups': [108450069, 108460068, 10847006...</msg>
<status status="PASS" starttime="20201110 08:38:28.756" endtime="20201110 08:38:30.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.882" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 108440062, 'start-iter': 1, 'wakeups': [108450069, 108460068, 10847006...</msg>
<status status="PASS" starttime="20201110 08:38:30.878" endtime="20201110 08:38:30.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.885" endtime="20201110 08:38:30.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.750" endtime="20201110 08:38:30.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.744" endtime="20201110 08:38:30.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.896" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-iter': 1, 'start-time': 108440062, 'wakeups': [108450069, 108460068, 108470069, 108480069, 108490068, 108500069, 108510068, 108520069, 108530068, 108...</msg>
<status status="PASS" starttime="20201110 08:38:30.892" endtime="20201110 08:38:30.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.905" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:30.903" endtime="20201110 08:38:30.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.910" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:30.908" endtime="20201110 08:38:30.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.898" endtime="20201110 08:38:30.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.920" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:30.918" endtime="20201110 08:38:30.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.924" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:30.922" endtime="20201110 08:38:30.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.913" endtime="20201110 08:38:30.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.934" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:30.932" endtime="20201110 08:38:30.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.939" level="INFO">VALUE: 108440062</msg>
<status status="PASS" starttime="20201110 08:38:30.937" endtime="20201110 08:38:30.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.927" endtime="20201110 08:38:30.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.949" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:30.947" endtime="20201110 08:38:30.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.954" level="INFO">VALUE: [108450069, 108460068, 108470069, 108480069, 108490068, 108500069, 108510068, 108520069, 108530068, 108540069, 108550068, 108560069, 108570068, 108580069, 108590068, 108600069, 108610068, 108620069, 108630068, 108640069, 108650068, 108660069, 108670068, 108680069, 108690068, 108700069, 108710068, 108720069, 108730068, 108740069, 108750068, 108760069, 108770068, 108780069, 108790068, 108800069, 108810068, 108820069, 108830068, 108840069, 108850068, 108860069, 108870068, 108880069, 108890068, 108900069, 108910068, 108920069, 108930068, 108940069, 108950068, 108960069, 108970068, 108980069, 108990068, 109000069, 109010068, 109020069, 109030068, 109040069, 109050068, 109060069, 109070068, 109080069, 109090068, 109100069, 109110068, 109120069, 109130068, 109140069, 109150068, 109160069, 109170068, 109180069, 109190068, 109200069, 109210068, 109220069, 109230068, 109240069, 109250068, 109260069, 109270068, 109280069, 109290068, 109300069, 109310068, 109320069, 109330068, 109340069, 109350068, 109360069, 109370068, 109380069, 109390068, 109400069, 109410068, 109420069, 109430068, 109440069]</msg>
<status status="PASS" starttime="20201110 08:38:30.951" endtime="20201110 08:38:30.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.942" endtime="20201110 08:38:30.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.969" endtime="20201110 08:38:31.289"></status>
</kw>
<msg timestamp="20201110 08:38:31.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084156486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094164167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.967" endtime="20201110 08:38:31.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084156486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094164167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.293" endtime="20201110 08:38:31.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.302" endtime="20201110 08:38:31.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.961" endtime="20201110 08:38:31.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.958" endtime="20201110 08:38:31.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.331" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:31.306" endtime="20201110 08:38:31.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.336" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:31.335" endtime="20201110 08:38:31.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.339" level="INFO">VALUE: 0.084156486</msg>
<status status="PASS" starttime="20201110 08:38:31.338" endtime="20201110 08:38:31.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.333" endtime="20201110 08:38:31.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.345" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:31.344" endtime="20201110 08:38:31.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.348" level="INFO">VALUE: [0.094164167, 0.104163875, 0.114165597, 0.124166208, 0.134166056, 0.144167694, 0.154167514, 0.164169167, 0.174169, 0.184170625, 0.194170458, 0.204172097, 0.214171958, 0.224173611, 0.234173417, 0.244175069, 0.254174903, 0.264176528, 0.274176375, 0.284178, 0.294177833, 0.304179514, 0.314179333, 0.324180972, 0.334180792, 0.344182431, 0.354182264, 0.364183917, 0.37418375, 0.384185389, 0.394185236, 0.404186917, 0.414186694, 0.424188333, 0.434188167, 0.444189861, 0.454189653, 0.464191264, 0.474191097, 0.484192736, 0.494192556, 0.504194194, 0.514194014, 0.524195653, 0.534195486, 0.544197125, 0.554196944, 0.564198583, 0.574198431, 0.584200069, 0.594199931, 0.604201583, 0.614201333, 0.624202972, 0.634202806, 0.644204458, 0.654204278, 0.664205903, 0.67420575, 0.684207361, 0.694207222, 0.704208833, 0.714208681, 0.724210333, 0.734210153, 0.744211778, 0.754211597, 0.764213222, 0.774213069, 0.784214694, 0.794214528, 0.804216153, 0.814216, 0.824217625, 0.834217486, 0.844219097, 0.854218917, 0.864220583, 0.874220417, 0.884222028, 0.894221875, 0.9042235, 0.914223361, 0.924224958, 0.934224778, 0.944226417, 0.954226264, 0.964227903, 0.974227722, 0.984229347, 0.994229181, 1.004230833, 1.014230653, 1.024232306, 1.034232125, 1.04423375, 1.054233583, 1.064235222, 1.074235042, 1.084236681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:31.347" endtime="20201110 08:38:31.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.341" endtime="20201110 08:38:31.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.351" endtime="20201110 08:38:31.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.355" endtime="20201110 08:38:31.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.354" endtime="20201110 08:38:31.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.350" endtime="20201110 08:38:31.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.741" endtime="20201110 08:38:31.377"></status>
</kw>
<msg timestamp="20201110 08:38:31.377" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.387" endtime="20201110 08:38:33.502"></status>
</kw>
<msg timestamp="20201110 08:38:33.504" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111067908, 'start-iter': 1, 'wakeups': [111077915, 111087914, 11109791...</msg>
<status status="PASS" starttime="20201110 08:38:31.385" endtime="20201110 08:38:33.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 111067908, 'start-iter': 1, 'wakeups': [111077915, 111087914, 11109791...</msg>
<status status="PASS" starttime="20201110 08:38:33.506" endtime="20201110 08:38:33.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.513" endtime="20201110 08:38:33.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.382" endtime="20201110 08:38:33.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.379" endtime="20201110 08:38:33.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.529" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-iter': 1, 'start-time': 111067908, 'wakeups': [111077915, 111087914, 111097915, 111107915, 111117914, 111127915, 111137914, 111147915, 111157914, 111...</msg>
<status status="PASS" starttime="20201110 08:38:33.524" endtime="20201110 08:38:33.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.540" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:33.537" endtime="20201110 08:38:33.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.544" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:33.542" endtime="20201110 08:38:33.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.531" endtime="20201110 08:38:33.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.554" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:33.552" endtime="20201110 08:38:33.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.559" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:33.557" endtime="20201110 08:38:33.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.547" endtime="20201110 08:38:33.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.569" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:33.567" endtime="20201110 08:38:33.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.573" level="INFO">VALUE: 111067908</msg>
<status status="PASS" starttime="20201110 08:38:33.571" endtime="20201110 08:38:33.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.562" endtime="20201110 08:38:33.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.583" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:33.581" endtime="20201110 08:38:33.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.588" level="INFO">VALUE: [111077915, 111087914, 111097915, 111107915, 111117914, 111127915, 111137914, 111147915, 111157914, 111167915, 111177914, 111187915, 111197914, 111207915, 111217914, 111227915, 111237914, 111247915, 111257914, 111267915, 111277914, 111287915, 111297914, 111307915, 111317914, 111327915, 111337914, 111347915, 111357914, 111367915, 111377914, 111387915, 111397914, 111407915, 111417914, 111427915, 111437914, 111447915, 111457914, 111467915, 111477914, 111487915, 111497914, 111507915, 111517914, 111527915, 111537914, 111547915, 111557914, 111567915, 111577914, 111587915, 111597914, 111607915, 111617914, 111627915, 111637914, 111647915, 111657914, 111667915, 111677914, 111687915, 111697914, 111707915, 111717914, 111727915, 111737914, 111747915, 111757914, 111767915, 111777914, 111787915, 111797914, 111807915, 111817914, 111827915, 111837914, 111847915, 111857914, 111867915, 111877914, 111887915, 111897914, 111907915, 111917914, 111927915, 111937914, 111947915, 111957914, 111967915, 111977914, 111987915, 111997914, 112007915, 112017914, 112027915, 112037914, 112047915, 112057914, 112067915]</msg>
<status status="PASS" starttime="20201110 08:38:33.585" endtime="20201110 08:38:33.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.576" endtime="20201110 08:38:33.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.603" endtime="20201110 08:38:33.894"></status>
</kw>
<msg timestamp="20201110 08:38:33.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034067694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:38:33.600" endtime="20201110 08:38:33.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02406, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034067694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:38:33.898" endtime="20201110 08:38:33.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.906" endtime="20201110 08:38:33.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.594" endtime="20201110 08:38:33.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.591" endtime="20201110 08:38:33.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.932" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:33.909" endtime="20201110 08:38:33.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.937" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:33.936" endtime="20201110 08:38:33.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.939" level="INFO">VALUE: 0.02406</msg>
<status status="PASS" starttime="20201110 08:38:33.938" endtime="20201110 08:38:33.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.933" endtime="20201110 08:38:33.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.945" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:33.944" endtime="20201110 08:38:33.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.947" level="INFO">VALUE: [0.034067694, 0.044067347, 0.054069069, 0.064069722, 0.074069556, 0.084071194, 0.094071042, 0.104072653, 0.1140725, 0.124074139, 0.134073958, 0.144075625, 0.154075444, 0.164077097, 0.174076917, 0.184078569, 0.194078389, 0.204080028, 0.214079861, 0.2240815, 0.234081333, 0.244083, 0.254082819, 0.264084472, 0.274084306, 0.284085944, 0.294085778, 0.304087431, 0.314087236, 0.324088889, 0.334088736, 0.344090361, 0.354090208, 0.364091875, 0.374091681, 0.384093306, 0.394093153, 0.404094792, 0.414094639, 0.424096319, 0.434096097, 0.444097736, 0.454097583, 0.464099194, 0.474099042, 0.484100681, 0.4941005, 0.504102139, 0.514101972, 0.524103597, 0.534103431, 0.544105069, 0.554104944, 0.564106597, 0.574106375, 0.584108028, 0.594107833, 0.604109472, 0.614109306, 0.624110944, 0.634110778, 0.644112417, 0.654112264, 0.664113903, 0.674113708, 0.684115361, 0.694115194, 0.704116819, 0.714116681, 0.724118292, 0.734118139, 0.744119764, 0.754119611, 0.764121236, 0.774121056, 0.784122694, 0.794122528, 0.804124181, 0.814124, 0.824125639, 0.834125486, 0.844127111, 0.854126944, 0.864128597, 0.874128431, 0.884130056, 0.894129889, 0.904131528, 0.914131347, 0.924132986, 0.934132819, 0.944134472, 0.954134292, 0.964135931, 0.974135778, 0.984137417, 0.994137236, 1.004138875, 1.014138708, 1.024140347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:33.946" endtime="20201110 08:38:33.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.941" endtime="20201110 08:38:33.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.950" endtime="20201110 08:38:33.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.953" endtime="20201110 08:38:33.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.952" endtime="20201110 08:38:33.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.948" endtime="20201110 08:38:33.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.378" endtime="20201110 08:38:33.974"></status>
</kw>
<msg timestamp="20201110 08:38:33.974" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.982" endtime="20201110 08:38:36.094"></status>
</kw>
<msg timestamp="20201110 08:38:36.096" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 113660646, 'start-iter': 1, 'wakeups': [113670652, 113680652, 11369065...</msg>
<status status="PASS" starttime="20201110 08:38:33.981" endtime="20201110 08:38:36.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.102" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 113660646, 'start-iter': 1, 'wakeups': [113670652, 113680652, 11369065...</msg>
<status status="PASS" starttime="20201110 08:38:36.098" endtime="20201110 08:38:36.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.104" endtime="20201110 08:38:36.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.978" endtime="20201110 08:38:36.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.976" endtime="20201110 08:38:36.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.115" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-iter': 1, 'start-time': 113660646, 'wakeups': [113670652, 113680652, 113690653, 113700653, 113710652, 113720653, 113730652, 113740653, 113750652, 113...</msg>
<status status="PASS" starttime="20201110 08:38:36.111" endtime="20201110 08:38:36.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.124" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:36.122" endtime="20201110 08:38:36.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.131" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:36.129" endtime="20201110 08:38:36.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.117" endtime="20201110 08:38:36.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.141" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:36.139" endtime="20201110 08:38:36.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.146" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:36.144" endtime="20201110 08:38:36.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.134" endtime="20201110 08:38:36.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.157" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:36.155" endtime="20201110 08:38:36.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.161" level="INFO">VALUE: 113660646</msg>
<status status="PASS" starttime="20201110 08:38:36.159" endtime="20201110 08:38:36.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.149" endtime="20201110 08:38:36.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.171" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:36.169" endtime="20201110 08:38:36.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.176" level="INFO">VALUE: [113670652, 113680652, 113690653, 113700653, 113710652, 113720653, 113730652, 113740653, 113750652, 113760653, 113770652, 113780653, 113790652, 113800653, 113810652, 113820653, 113830652, 113840653, 113850652, 113860653, 113870652, 113880653, 113890652, 113900653, 113910652, 113920653, 113930652, 113940653, 113950652, 113960653, 113970652, 113980653, 113990652, 114000653, 114010652, 114020653, 114030652, 114040653, 114050652, 114060653, 114070652, 114080653, 114090652, 114100653, 114110652, 114120653, 114130652, 114140653, 114150652, 114160653, 114170652, 114180653, 114190652, 114200653, 114210652, 114220653, 114230652, 114240653, 114250652, 114260653, 114270652, 114280653, 114290652, 114300653, 114310652, 114320653, 114330652, 114340653, 114350652, 114360653, 114370652, 114380653, 114390652, 114400653, 114410652, 114420653, 114430652, 114440653, 114450652, 114460653, 114470652, 114480653, 114490652, 114500653, 114510652, 114520653, 114530652, 114540653, 114550652, 114560653, 114570652, 114580653, 114590652, 114600653, 114610652, 114620653, 114630652, 114640653, 114650652, 114660653]</msg>
<status status="PASS" starttime="20201110 08:38:36.174" endtime="20201110 08:38:36.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.164" endtime="20201110 08:38:36.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.184" endtime="20201110 08:38:36.477"></status>
</kw>
<msg timestamp="20201110 08:38:36.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029045944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.183" endtime="20201110 08:38:36.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029045944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.480" endtime="20201110 08:38:36.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.488" endtime="20201110 08:38:36.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.180" endtime="20201110 08:38:36.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.178" endtime="20201110 08:38:36.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.515" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:36.491" endtime="20201110 08:38:36.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.520" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:36.519" endtime="20201110 08:38:36.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.522" level="INFO">VALUE: 0.019038611</msg>
<status status="PASS" starttime="20201110 08:38:36.521" endtime="20201110 08:38:36.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.516" endtime="20201110 08:38:36.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.527" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:36.526" endtime="20201110 08:38:36.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.529" level="INFO">VALUE: [0.029045944, 0.039046625, 0.049048333, 0.059048972, 0.069048819, 0.079050444, 0.089050292, 0.099051917, 0.10905175, 0.119053389, 0.129053292, 0.139054861, 0.149054708, 0.159056347, 0.169056194, 0.179057833, 0.189057667, 0.199059347, 0.209059181, 0.219060778, 0.229060611, 0.239062264, 0.249062097, 0.259063736, 0.269063569, 0.279065208, 0.289065042, 0.299066681, 0.3090665, 0.319068153, 0.329067986, 0.339069667, 0.349069431, 0.359071097, 0.369070944, 0.379072542, 0.389072375, 0.399074014, 0.409073889, 0.419075472, 0.429075319, 0.439076958, 0.449076764, 0.459078458, 0.469078236, 0.479079889, 0.489079764, 0.499081333, 0.509081167, 0.519082819, 0.529082653, 0.539084292, 0.549084153, 0.559085764, 0.569085583, 0.579087222, 0.589087042, 0.599088694, 0.6090885, 0.619090139, 0.629089986, 0.639091611, 0.649091444, 0.659093083, 0.669092917, 0.679094569, 0.689094375, 0.699096014, 0.709095861, 0.719097486, 0.729097319, 0.739098958, 0.749098806, 0.759100444, 0.769100264, 0.779101903, 0.789101722, 0.799103361, 0.809103194, 0.819104833, 0.829104681, 0.839106306, 0.849106125, 0.859107764, 0.869107597, 0.879109236, 0.889109083, 0.899110708, 0.909110597, 0.919112194, 0.929112, 0.939113653, 0.949113472, 0.959115125, 0.969114944, 0.979116583, 0.989116431, 0.999118056, 1.009117958, 1.019119528] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:36.528" endtime="20201110 08:38:36.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.523" endtime="20201110 08:38:36.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.533" endtime="20201110 08:38:36.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.536" endtime="20201110 08:38:36.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.534" endtime="20201110 08:38:36.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.531" endtime="20201110 08:38:36.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.975" endtime="20201110 08:38:36.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.736" endtime="20201110 08:38:36.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.734" endtime="20201110 08:38:36.557"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:36.560" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.568" endtime="20201110 08:38:38.682"></status>
</kw>
<msg timestamp="20201110 08:38:38.683" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116246112, 'start-iter': 1, 'wakeups': [116256122, 116266122, 11627612...</msg>
<status status="PASS" starttime="20201110 08:38:36.566" endtime="20201110 08:38:38.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.689" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 116246112, 'start-iter': 1, 'wakeups': [116256122, 116266122, 11627612...</msg>
<status status="PASS" starttime="20201110 08:38:38.686" endtime="20201110 08:38:38.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.692" endtime="20201110 08:38:38.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.563" endtime="20201110 08:38:38.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.562" endtime="20201110 08:38:38.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.703" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-iter': 1, 'start-time': 116246112, 'wakeups': [116256122, 116266122, 116276121, 116286121, 116296122, 116306121, 116316122, 116326121, 116336122, 116...</msg>
<status status="PASS" starttime="20201110 08:38:38.699" endtime="20201110 08:38:38.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.711" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:38.709" endtime="20201110 08:38:38.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.715" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:38.713" endtime="20201110 08:38:38.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.704" endtime="20201110 08:38:38.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.725" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:38.723" endtime="20201110 08:38:38.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.727" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:38.726" endtime="20201110 08:38:38.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.718" endtime="20201110 08:38:38.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.733" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:38.732" endtime="20201110 08:38:38.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.735" level="INFO">VALUE: 116246112</msg>
<status status="PASS" starttime="20201110 08:38:38.734" endtime="20201110 08:38:38.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.729" endtime="20201110 08:38:38.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.740" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:38.739" endtime="20201110 08:38:38.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.743" level="INFO">VALUE: [116256122, 116266122, 116276121, 116286121, 116296122, 116306121, 116316122, 116326121, 116336122, 116346121, 116356122, 116366121, 116376122, 116386121, 116396122, 116406121, 116416122, 116426121, 116436122, 116446121, 116456122, 116466121, 116476122, 116486121, 116496122, 116506121, 116516122, 116526121, 116536122, 116546121, 116556122, 116566121, 116576122, 116586121, 116596122, 116606121, 116616122, 116626121, 116636122, 116646121, 116656122, 116666121, 116676122, 116686121, 116696122, 116706121, 116716122, 116726121, 116736122, 116746121, 116756122, 116766121, 116776122, 116786121, 116796122, 116806121, 116816122, 116826121, 116836122, 116846121, 116856122, 116866121, 116876122, 116886121, 116896122, 116906121, 116916122, 116926121, 116936122, 116946121, 116956122, 116966121, 116976122, 116986121, 116996122, 117006121, 117016122, 117026121, 117036122, 117046121, 117056122, 117066121, 117076122, 117086121, 117096122, 117106121, 117116122, 117126121, 117136122, 117146121, 117156122, 117166121, 117176122, 117186121, 117196122, 117206121, 117216122, 117226121, 117236122, 117246121]</msg>
<status status="PASS" starttime="20201110 08:38:38.741" endtime="20201110 08:38:38.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.737" endtime="20201110 08:38:38.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.750" endtime="20201110 08:38:39.042"></status>
</kw>
<msg timestamp="20201110 08:38:39.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031620431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.749" endtime="20201110 08:38:39.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031620431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.046" endtime="20201110 08:38:39.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.053" endtime="20201110 08:38:39.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.746" endtime="20201110 08:38:39.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.744" endtime="20201110 08:38:39.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.080" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:39.057" endtime="20201110 08:38:39.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.084" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:39.083" endtime="20201110 08:38:39.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.087" level="INFO">VALUE: 0.021608458</msg>
<status status="PASS" starttime="20201110 08:38:39.086" endtime="20201110 08:38:39.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.081" endtime="20201110 08:38:39.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.092" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:39.091" endtime="20201110 08:38:39.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.095" level="INFO">VALUE: [0.031620431, 0.041621306, 0.051620972, 0.061621625, 0.071623458, 0.081623083, 0.091624931, 0.101624569, 0.111626403, 0.121626056, 0.131627889, 0.141627528, 0.151629361, 0.161629, 0.171630833, 0.181630458, 0.191632292, 0.201631944, 0.211633764, 0.221633444, 0.23163525, 0.241634889, 0.251636722, 0.261636361, 0.271638194, 0.281637847, 0.291639667, 0.301639306, 0.311641139, 0.321640792, 0.331642625, 0.341642292, 0.351644111, 0.36164375, 0.371645597, 0.381645236, 0.391647042, 0.401646694, 0.411648528, 0.421648139, 0.431649972, 0.441649611, 0.451651431, 0.461651069, 0.471652917, 0.481652528, 0.491654361, 0.501654, 0.511655819, 0.521655458, 0.531657375, 0.541656917, 0.551658764, 0.561658389, 0.571660208, 0.581659847, 0.591661694, 0.601661319, 0.611663139, 0.621662778, 0.631664611, 0.641664236, 0.651666069, 0.661665736, 0.671667528, 0.681667167, 0.691669, 0.701668653, 0.711670458, 0.721670111, 0.731671931, 0.741671583, 0.751673389, 0.761673042, 0.771674875, 0.781674514, 0.791676319, 0.801675958, 0.811677792, 0.821677458, 0.83167925, 0.841678889, 0.851680736, 0.861680375, 0.871682181, 0.881681833, 0.891683653, 0.901683292, 0.911685139, 0.921684764, 0.931686583, 0.941686222, 0.951688056, 0.961687681, 0.971689514, 0.981689167, 0.991691, 1.001690611, 1.011692472, 1.021692083] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:39.094" endtime="20201110 08:38:39.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.089" endtime="20201110 08:38:39.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.098" endtime="20201110 08:38:39.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.101" endtime="20201110 08:38:39.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.100" endtime="20201110 08:38:39.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.096" endtime="20201110 08:38:39.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.560" endtime="20201110 08:38:39.122"></status>
</kw>
<msg timestamp="20201110 08:38:39.122" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.130" endtime="20201110 08:38:41.244"></status>
</kw>
<msg timestamp="20201110 08:38:41.245" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118808966, 'start-iter': 1, 'wakeups': [118818977, 118828976, 11883897...</msg>
<status status="PASS" starttime="20201110 08:38:39.129" endtime="20201110 08:38:41.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.251" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 118808966, 'start-iter': 1, 'wakeups': [118818977, 118828976, 11883897...</msg>
<status status="PASS" starttime="20201110 08:38:41.247" endtime="20201110 08:38:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.253" endtime="20201110 08:38:41.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.126" endtime="20201110 08:38:41.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.124" endtime="20201110 08:38:41.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.265" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-iter': 1, 'start-time': 118808966, 'wakeups': [118818977, 118828976, 118838975, 118848975, 118858976, 118868975, 118878976, 118888975, 118898976, 118...</msg>
<status status="PASS" starttime="20201110 08:38:41.260" endtime="20201110 08:38:41.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.273" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:41.271" endtime="20201110 08:38:41.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.278" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:41.276" endtime="20201110 08:38:41.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.266" endtime="20201110 08:38:41.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.287" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:41.286" endtime="20201110 08:38:41.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.289" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:41.288" endtime="20201110 08:38:41.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.281" endtime="20201110 08:38:41.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.294" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:41.293" endtime="20201110 08:38:41.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.296" level="INFO">VALUE: 118808966</msg>
<status status="PASS" starttime="20201110 08:38:41.295" endtime="20201110 08:38:41.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.290" endtime="20201110 08:38:41.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.302" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:41.300" endtime="20201110 08:38:41.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.304" level="INFO">VALUE: [118818977, 118828976, 118838975, 118848975, 118858976, 118868975, 118878976, 118888975, 118898976, 118908975, 118918976, 118928975, 118938976, 118948975, 118958976, 118968975, 118978976, 118988975, 118998976, 119008975, 119018976, 119028975, 119038976, 119048975, 119058976, 119068975, 119078976, 119088975, 119098976, 119108975, 119118976, 119128975, 119138976, 119148975, 119158976, 119168975, 119178976, 119188975, 119198976, 119208975, 119218976, 119228975, 119238976, 119248975, 119258976, 119268975, 119278976, 119288975, 119298976, 119308975, 119318976, 119328975, 119338976, 119348975, 119358976, 119368975, 119378976, 119388975, 119398976, 119408975, 119418976, 119428975, 119438976, 119448975, 119458976, 119468975, 119478976, 119488975, 119498976, 119508975, 119518976, 119528975, 119538976, 119548975, 119558976, 119568975, 119578976, 119588975, 119598976, 119608975, 119618976, 119628975, 119638976, 119648975, 119658976, 119668975, 119678976, 119688975, 119698976, 119708975, 119718976, 119728975, 119738976, 119748975, 119758976, 119768975, 119778976, 119788975, 119798976, 119808975]</msg>
<status status="PASS" starttime="20201110 08:38:41.303" endtime="20201110 08:38:41.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.297" endtime="20201110 08:38:41.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.312" endtime="20201110 08:38:41.602"></status>
</kw>
<msg timestamp="20201110 08:38:41.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029462444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.311" endtime="20201110 08:38:41.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029462444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.606" endtime="20201110 08:38:41.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.614" endtime="20201110 08:38:41.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.308" endtime="20201110 08:38:41.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.306" endtime="20201110 08:38:41.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.641" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:41.617" endtime="20201110 08:38:41.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.645" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:41.644" endtime="20201110 08:38:41.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.647" level="INFO">VALUE: 0.019450083</msg>
<status status="PASS" starttime="20201110 08:38:41.646" endtime="20201110 08:38:41.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.642" endtime="20201110 08:38:41.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.653" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:41.652" endtime="20201110 08:38:41.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.655" level="INFO">VALUE: [0.029462444, 0.03946225, 0.049461944, 0.059462583, 0.069464458, 0.079464056, 0.089465889, 0.099465528, 0.109467361, 0.119467, 0.129468903, 0.139468458, 0.149470292, 0.159469931, 0.169471764, 0.179471444, 0.189473222, 0.199472861, 0.209474708, 0.219474389, 0.229476153, 0.239475792, 0.249477639, 0.259477278, 0.269479097, 0.279478722, 0.289480569, 0.299480208, 0.309482028, 0.319481653, 0.329483486, 0.339483125, 0.349485028, 0.359484597, 0.369486431, 0.379486056, 0.389487889, 0.399487528, 0.409489375, 0.419489014, 0.429490833, 0.439490486, 0.449492319, 0.459491944, 0.469493764, 0.479493403, 0.489495236, 0.499494875, 0.509496708, 0.519496347, 0.529498167, 0.539497806, 0.549499694, 0.559499278, 0.569501111, 0.57950075, 0.589502597, 0.599502222, 0.609504056, 0.619503681, 0.629505569, 0.639505167, 0.649506986, 0.659506625, 0.669508486, 0.679508097, 0.689509931, 0.699509583, 0.709511444, 0.719511042, 0.729512889, 0.7395125, 0.749514333, 0.759513972, 0.769515847, 0.779515458, 0.789517319, 0.799516917, 0.809518764, 0.819518375, 0.829520208, 0.839519847, 0.849521681, 0.859521333, 0.869523153, 0.879522792, 0.889524625, 0.899524264, 0.909526083, 0.919525722, 0.929527569, 0.939527222, 0.949529042, 0.959528667, 0.969530514, 0.979530139, 0.989531972, 0.999531611, 1.009533431, 1.019533069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:41.654" endtime="20201110 08:38:41.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.649" endtime="20201110 08:38:41.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.658" endtime="20201110 08:38:41.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.662" endtime="20201110 08:38:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.660" endtime="20201110 08:38:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.656" endtime="20201110 08:38:41.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.123" endtime="20201110 08:38:41.683"></status>
</kw>
<msg timestamp="20201110 08:38:41.683" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.693" endtime="20201110 08:38:43.806"></status>
</kw>
<msg timestamp="20201110 08:38:43.812" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 121372072, 'start-iter': 1, 'wakeups': [121382083, 121392082, 12140208...</msg>
<status status="PASS" starttime="20201110 08:38:41.692" endtime="20201110 08:38:43.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 121372072, 'start-iter': 1, 'wakeups': [121382083, 121392082, 12140208...</msg>
<status status="PASS" starttime="20201110 08:38:43.815" endtime="20201110 08:38:43.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.821" endtime="20201110 08:38:43.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.689" endtime="20201110 08:38:43.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.686" endtime="20201110 08:38:43.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.832" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-iter': 1, 'start-time': 121372072, 'wakeups': [121382083, 121392082, 121402081, 121412081, 121422082, 121432081, 121442082, 121452081, 121462082, 121...</msg>
<status status="PASS" starttime="20201110 08:38:43.828" endtime="20201110 08:38:43.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.840" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:43.838" endtime="20201110 08:38:43.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.845" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:43.843" endtime="20201110 08:38:43.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.834" endtime="20201110 08:38:43.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.855" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:43.853" endtime="20201110 08:38:43.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.858" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:43.857" endtime="20201110 08:38:43.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.848" endtime="20201110 08:38:43.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.863" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:43.862" endtime="20201110 08:38:43.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.865" level="INFO">VALUE: 121372072</msg>
<status status="PASS" starttime="20201110 08:38:43.864" endtime="20201110 08:38:43.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.860" endtime="20201110 08:38:43.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.870" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:43.869" endtime="20201110 08:38:43.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.872" level="INFO">VALUE: [121382083, 121392082, 121402081, 121412081, 121422082, 121432081, 121442082, 121452081, 121462082, 121472081, 121482082, 121492081, 121502082, 121512081, 121522082, 121532081, 121542082, 121552081, 121562082, 121572081, 121582082, 121592081, 121602082, 121612081, 121622082, 121632081, 121642082, 121652081, 121662082, 121672081, 121682082, 121692081, 121702082, 121712081, 121722082, 121732081, 121742082, 121752081, 121762082, 121772081, 121782082, 121792081, 121802082, 121812081, 121822082, 121832081, 121842082, 121852081, 121862082, 121872081, 121882082, 121892081, 121902082, 121912081, 121922082, 121932081, 121942082, 121952081, 121962082, 121972081, 121982082, 121992081, 122002082, 122012081, 122022082, 122032081, 122042082, 122052081, 122062082, 122072081, 122082082, 122092081, 122102082, 122112081, 122122082, 122132081, 122142082, 122152081, 122162082, 122172081, 122182082, 122192081, 122202082, 122212081, 122222082, 122232081, 122242082, 122252081, 122262082, 122272081, 122282082, 122292081, 122302082, 122312081, 122322082, 122332081, 122342082, 122352081, 122362082, 122372081]</msg>
<status status="PASS" starttime="20201110 08:38:43.871" endtime="20201110 08:38:43.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.867" endtime="20201110 08:38:43.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.880" endtime="20201110 08:38:44.171"></status>
</kw>
<msg timestamp="20201110 08:38:44.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031217792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.878" endtime="20201110 08:38:44.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031217792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.175" endtime="20201110 08:38:44.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.183" endtime="20201110 08:38:44.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.876" endtime="20201110 08:38:44.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.874" endtime="20201110 08:38:44.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.209" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:44.186" endtime="20201110 08:38:44.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.214" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:44.213" endtime="20201110 08:38:44.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.216" level="INFO">VALUE: 0.021205486</msg>
<status status="PASS" starttime="20201110 08:38:44.215" endtime="20201110 08:38:44.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.210" endtime="20201110 08:38:44.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.221" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:44.220" endtime="20201110 08:38:44.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.223" level="INFO">VALUE: [0.031217792, 0.041217653, 0.051217361, 0.061217986, 0.071219847, 0.081219458, 0.091221306, 0.101220931, 0.111222819, 0.121222444, 0.131224306, 0.141223889, 0.15122575, 0.161225361, 0.171227208, 0.181226833, 0.191228653, 0.201228292, 0.211230167, 0.221229792, 0.231231597, 0.24123125, 0.251233069, 0.26123275, 0.271234542, 0.281234236, 0.291236056, 0.301235667, 0.311237514, 0.321237153, 0.331238972, 0.341238611, 0.351240458, 0.361240139, 0.371241917, 0.381241556, 0.391243403, 0.401243083, 0.411244875, 0.421244528, 0.431246347, 0.441245986, 0.451247819, 0.461247444, 0.471249347, 0.481248903, 0.49125075, 0.501250375, 0.511252208, 0.521251833, 0.531253667, 0.541253292, 0.551255125, 0.561254764, 0.571256583, 0.581256222, 0.591258042, 0.601257694, 0.6112595, 0.621259139, 0.631260972, 0.641260611, 0.651262444, 0.661262069, 0.671263889, 0.681263528, 0.691265347, 0.701264986, 0.711266819, 0.7212665, 0.731268278, 0.741267917, 0.751269736, 0.761269375, 0.771271208, 0.781270847, 0.791272667, 0.801272319, 0.811274139, 0.821273778, 0.831275597, 0.841275236, 0.851277069, 0.861276708, 0.871278569, 0.881278167, 0.89128, 0.901279625, 0.911281486, 0.921281083, 0.931282986, 0.941282556, 0.951284375, 0.961284014, 0.971285847, 0.981285486, 0.991287306, 1.001286944, 1.011288778, 1.021288417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:44.222" endtime="20201110 08:38:44.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.217" endtime="20201110 08:38:44.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.227" endtime="20201110 08:38:44.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.230" endtime="20201110 08:38:44.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.229" endtime="20201110 08:38:44.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.225" endtime="20201110 08:38:44.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.684" endtime="20201110 08:38:44.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.558" endtime="20201110 08:38:44.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.557" endtime="20201110 08:38:44.251"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:44.254" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.263" endtime="20201110 08:38:46.377"></status>
</kw>
<msg timestamp="20201110 08:38:46.378" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123941678, 'start-iter': 1, 'wakeups': [123951693, 123961692, 12397169...</msg>
<status status="PASS" starttime="20201110 08:38:44.261" endtime="20201110 08:38:46.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.384" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 123941678, 'start-iter': 1, 'wakeups': [123951693, 123961692, 12397169...</msg>
<status status="PASS" starttime="20201110 08:38:46.380" endtime="20201110 08:38:46.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.387" endtime="20201110 08:38:46.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.258" endtime="20201110 08:38:46.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.256" endtime="20201110 08:38:46.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.398" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-iter': 1, 'start-time': 123941678, 'wakeups': [123951693, 123961692, 123971692, 123981692, 123991692, 124001692, 124011692, 124021692, 124031692, 124...</msg>
<status status="PASS" starttime="20201110 08:38:46.394" endtime="20201110 08:38:46.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.407" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:46.404" endtime="20201110 08:38:46.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.411" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:46.409" endtime="20201110 08:38:46.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.400" endtime="20201110 08:38:46.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.421" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:46.419" endtime="20201110 08:38:46.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.426" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:46.424" endtime="20201110 08:38:46.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.414" endtime="20201110 08:38:46.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.437" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:46.435" endtime="20201110 08:38:46.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.441" level="INFO">VALUE: 123941678</msg>
<status status="PASS" starttime="20201110 08:38:46.439" endtime="20201110 08:38:46.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.430" endtime="20201110 08:38:46.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.452" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:46.449" endtime="20201110 08:38:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.456" level="INFO">VALUE: [123951693, 123961692, 123971692, 123981692, 123991692, 124001692, 124011692, 124021692, 124031692, 124041692, 124051692, 124061692, 124071692, 124081692, 124091692, 124101692, 124111692, 124121692, 124131692, 124141692, 124151692, 124161692, 124171692, 124181692, 124191692, 124201692, 124211692, 124221692, 124231692, 124241692, 124251692, 124261692, 124271692, 124281692, 124291692, 124301692, 124311692, 124321692, 124331692, 124341692, 124351692, 124361692, 124371692, 124381692, 124391692, 124401692, 124411692, 124421692, 124431692, 124441692, 124451692, 124461692, 124471692, 124481692, 124491692, 124501692, 124511692, 124521692, 124531692, 124541692, 124551692, 124561692, 124571692, 124581692, 124591692, 124601692, 124611692, 124621692, 124631692, 124641692, 124651692, 124661692, 124671692, 124681692, 124691692, 124701692, 124711692, 124721692, 124731692, 124741692, 124751692, 124761692, 124771692, 124781692, 124791692, 124801692, 124811692, 124821692, 124831692, 124841692, 124851692, 124861692, 124871692, 124881692, 124891692, 124901692, 124911692, 124921692, 124931692, 124941692]</msg>
<status status="PASS" starttime="20201110 08:38:46.454" endtime="20201110 08:38:46.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.444" endtime="20201110 08:38:46.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.472" endtime="20201110 08:38:46.767"></status>
</kw>
<msg timestamp="20201110 08:38:46.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.469" endtime="20201110 08:38:46.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.771" endtime="20201110 08:38:46.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.779" endtime="20201110 08:38:46.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.463" endtime="20201110 08:38:46.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.459" endtime="20201110 08:38:46.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.807" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:46.783" endtime="20201110 08:38:46.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.812" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:46.811" endtime="20201110 08:38:46.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.814" level="INFO">VALUE: 0.023204792</msg>
<status status="PASS" starttime="20201110 08:38:46.813" endtime="20201110 08:38:46.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.808" endtime="20201110 08:38:46.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.819" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:46.818" endtime="20201110 08:38:46.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.821" level="INFO">VALUE: [0.033220806, 0.043220847, 0.053221458, 0.063221986, 0.073222833, 0.083223514, 0.093224292, 0.103224972, 0.113225778, 0.123226403, 0.133227236, 0.143227889, 0.153228708, 0.163229375, 0.173230181, 0.183230833, 0.193231653, 0.203232292, 0.213233125, 0.223233764, 0.233234597, 0.243235264, 0.253236083, 0.263236722, 0.273237556, 0.283238194, 0.293239014, 0.303239653, 0.313240486, 0.323241139, 0.333241958, 0.343242611, 0.353243472, 0.363244111, 0.373244917, 0.383245569, 0.393246403, 0.403247028, 0.413247861, 0.4232485, 0.433249333, 0.443249958, 0.453250792, 0.463251431, 0.473252306, 0.483252889, 0.493253722, 0.503254361, 0.513255194, 0.523255819, 0.533256681, 0.543257306, 0.553258125, 0.563258764, 0.573259597, 0.583260222, 0.593261042, 0.603261681, 0.613262528, 0.623263181, 0.633263986, 0.643264625, 0.653265458, 0.663266083, 0.673266917, 0.683267556, 0.693268389, 0.703269028, 0.713269903, 0.723270472, 0.733271319, 0.743271958, 0.753272778, 0.763273431, 0.773274236, 0.783274875, 0.793275708, 0.803276361, 0.813277181, 0.823277889, 0.833278653, 0.843279278, 0.853280111, 0.86328075, 0.873281569, 0.883282208, 0.893283083, 0.903283694, 0.913284542, 0.923285153, 0.933285972, 0.943286611, 0.953287444, 0.963288139, 0.973288917, 0.983289611, 0.993290389, 1.003291042, 1.013291847, 1.023292514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:46.820" endtime="20201110 08:38:46.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.815" endtime="20201110 08:38:46.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.825" endtime="20201110 08:38:46.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.828" endtime="20201110 08:38:46.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.827" endtime="20201110 08:38:46.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.823" endtime="20201110 08:38:46.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.254" endtime="20201110 08:38:46.849"></status>
</kw>
<msg timestamp="20201110 08:38:46.849" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.857" endtime="20201110 08:38:48.970"></status>
</kw>
<msg timestamp="20201110 08:38:48.971" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126535655, 'start-iter': 1, 'wakeups': [126545669, 126555669, 12656566...</msg>
<status status="PASS" starttime="20201110 08:38:46.856" endtime="20201110 08:38:48.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.977" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 126535655, 'start-iter': 1, 'wakeups': [126545669, 126555669, 12656566...</msg>
<status status="PASS" starttime="20201110 08:38:48.974" endtime="20201110 08:38:48.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.980" endtime="20201110 08:38:48.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.853" endtime="20201110 08:38:48.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.851" endtime="20201110 08:38:48.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.993" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-iter': 1, 'start-time': 126535655, 'wakeups': [126545669, 126555669, 126565668, 126575669, 126585668, 126595669, 126605668, 126615669, 126625669, 126...</msg>
<status status="PASS" starttime="20201110 08:38:48.987" endtime="20201110 08:38:48.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.007" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:49.004" endtime="20201110 08:38:49.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.011" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:49.009" endtime="20201110 08:38:49.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.995" endtime="20201110 08:38:49.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.021" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:49.019" endtime="20201110 08:38:49.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.026" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:49.024" endtime="20201110 08:38:49.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.014" endtime="20201110 08:38:49.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.036" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:49.034" endtime="20201110 08:38:49.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.040" level="INFO">VALUE: 126535655</msg>
<status status="PASS" starttime="20201110 08:38:49.038" endtime="20201110 08:38:49.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.029" endtime="20201110 08:38:49.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.051" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:49.049" endtime="20201110 08:38:49.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.055" level="INFO">VALUE: [126545669, 126555669, 126565668, 126575669, 126585668, 126595669, 126605668, 126615669, 126625669, 126635669, 126645668, 126655669, 126665668, 126675669, 126685668, 126695669, 126705668, 126715669, 126725668, 126735669, 126745668, 126755669, 126765668, 126775669, 126785669, 126795669, 126805668, 126815669, 126825668, 126835669, 126845668, 126855669, 126865668, 126875669, 126885668, 126895669, 126905668, 126915669, 126925668, 126935669, 126945669, 126955669, 126965668, 126975669, 126985668, 126995669, 127005668, 127015669, 127025668, 127035669, 127045668, 127055669, 127065668, 127075669, 127085668, 127095669, 127105669, 127115669, 127125668, 127135669, 127145668, 127155669, 127165668, 127175669, 127185668, 127195669, 127205668, 127215669, 127225668, 127235669, 127245668, 127255669, 127265669, 127275669, 127285668, 127295669, 127305668, 127315669, 127325668, 127335669, 127345668, 127355669, 127365668, 127375669, 127385668, 127395669, 127405668, 127415669, 127425669, 127435669, 127445668, 127455669, 127465668, 127475669, 127485668, 127495669, 127505668, 127515669, 127525668, 127535669]</msg>
<status status="PASS" starttime="20201110 08:38:49.053" endtime="20201110 08:38:49.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.044" endtime="20201110 08:38:49.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.069" endtime="20201110 08:38:49.361"></status>
</kw>
<msg timestamp="20201110 08:38:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029194042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.067" endtime="20201110 08:38:49.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029194042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.364" endtime="20201110 08:38:49.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.372" endtime="20201110 08:38:49.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.062" endtime="20201110 08:38:49.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.059" endtime="20201110 08:38:49.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.400" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:49.376" endtime="20201110 08:38:49.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.405" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:49.404" endtime="20201110 08:38:49.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.407" level="INFO">VALUE: 0.019178403</msg>
<status status="PASS" starttime="20201110 08:38:49.406" endtime="20201110 08:38:49.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.401" endtime="20201110 08:38:49.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.413" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:49.412" endtime="20201110 08:38:49.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.415" level="INFO">VALUE: [0.029194042, 0.039194903, 0.049194458, 0.059196375, 0.069195917, 0.079197861, 0.089197389, 0.099199181, 0.109199875, 0.119200847, 0.129200333, 0.139202306, 0.149201667, 0.159203736, 0.169203292, 0.179205208, 0.18920475, 0.199206681, 0.209206222, 0.219208153, 0.229207708, 0.239209639, 0.249209167, 0.259210986, 0.269211639, 0.279212583, 0.289212125, 0.299214056, 0.309213458, 0.319215528, 0.329215097, 0.339217, 0.349216542, 0.359218486, 0.369218056, 0.379219944, 0.3892195, 0.399221431, 0.409220986, 0.419222778, 0.429223431, 0.439224347, 0.449223889, 0.459225806, 0.469225208, 0.479227292, 0.489226806, 0.499228736, 0.509228319, 0.519230194, 0.529229736, 0.539231653, 0.549231194, 0.559233111, 0.569232653, 0.579234472, 0.589235125, 0.599236056, 0.609235583, 0.6192375, 0.629236903, 0.639238958, 0.6492385, 0.659240417, 0.669239958, 0.679241875, 0.689241417, 0.699243347, 0.709242889, 0.719244819, 0.729244347, 0.739246139, 0.749246806, 0.75924775, 0.769247264, 0.779249208, 0.789248597, 0.799250667, 0.809250208, 0.819252139, 0.829251653, 0.839253597, 0.849253139, 0.859255042, 0.869254597, 0.879256514, 0.889256042, 0.899257847, 0.909258514, 0.919259431, 0.929258972, 0.939260917, 0.949260306, 0.959262375, 0.969261903, 0.979263833, 0.989263361, 0.999265292, 1.009264861, 1.019266764] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:49.414" endtime="20201110 08:38:49.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.409" endtime="20201110 08:38:49.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.418" endtime="20201110 08:38:49.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.421" endtime="20201110 08:38:49.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.420" endtime="20201110 08:38:49.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.416" endtime="20201110 08:38:49.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.850" endtime="20201110 08:38:49.442"></status>
</kw>
<msg timestamp="20201110 08:38:49.442" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.451" endtime="20201110 08:38:51.563"></status>
</kw>
<msg timestamp="20201110 08:38:51.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 129129008, 'start-iter': 1, 'wakeups': [129139022, 129149022, 12915902...</msg>
<status status="PASS" starttime="20201110 08:38:49.449" endtime="20201110 08:38:51.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 129129008, 'start-iter': 1, 'wakeups': [129139022, 129149022, 12915902...</msg>
<status status="PASS" starttime="20201110 08:38:51.567" endtime="20201110 08:38:51.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.573" endtime="20201110 08:38:51.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.446" endtime="20201110 08:38:51.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.444" endtime="20201110 08:38:51.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.584" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-iter': 1, 'start-time': 129129008, 'wakeups': [129139022, 129149022, 129159021, 129169022, 129179021, 129189022, 129199022, 129209022, 129219021, 129...</msg>
<status status="PASS" starttime="20201110 08:38:51.580" endtime="20201110 08:38:51.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.592" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:51.590" endtime="20201110 08:38:51.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.597" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:51.595" endtime="20201110 08:38:51.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.586" endtime="20201110 08:38:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.607" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:51.606" endtime="20201110 08:38:51.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.610" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:51.609" endtime="20201110 08:38:51.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.600" endtime="20201110 08:38:51.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.615" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:51.614" endtime="20201110 08:38:51.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.617" level="INFO">VALUE: 129129008</msg>
<status status="PASS" starttime="20201110 08:38:51.616" endtime="20201110 08:38:51.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.611" endtime="20201110 08:38:51.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.622" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:51.621" endtime="20201110 08:38:51.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.624" level="INFO">VALUE: [129139022, 129149022, 129159021, 129169022, 129179021, 129189022, 129199022, 129209022, 129219021, 129229022, 129239021, 129249022, 129259021, 129269022, 129279021, 129289022, 129299021, 129309022, 129319021, 129329022, 129339021, 129349022, 129359022, 129369022, 129379021, 129389022, 129399021, 129409022, 129419021, 129429022, 129439021, 129449022, 129459021, 129469022, 129479021, 129489022, 129499021, 129509022, 129519022, 129529022, 129539021, 129549022, 129559021, 129569022, 129579021, 129589022, 129599021, 129609022, 129619021, 129629022, 129639021, 129649022, 129659021, 129669022, 129679022, 129689022, 129699021, 129709022, 129719021, 129729022, 129739021, 129749022, 129759021, 129769022, 129779021, 129789022, 129799021, 129809022, 129819021, 129829022, 129839022, 129849022, 129859021, 129869022, 129879021, 129889022, 129899021, 129909022, 129919021, 129929022, 129939021, 129949022, 129959021, 129969022, 129979021, 129989022, 129999022, 130009022, 130019021, 130029022, 130039021, 130049022, 130059021, 130069022, 130079021, 130089022, 130099021, 130109022, 130119021, 130129022]</msg>
<status status="PASS" starttime="20201110 08:38:51.623" endtime="20201110 08:38:51.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.618" endtime="20201110 08:38:51.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.632" endtime="20201110 08:38:51.922"></status>
</kw>
<msg timestamp="20201110 08:38:51.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029244042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.630" endtime="20201110 08:38:51.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019228056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029244042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.926" endtime="20201110 08:38:51.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.934" endtime="20201110 08:38:51.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.627" endtime="20201110 08:38:51.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.626" endtime="20201110 08:38:51.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.961" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:51.937" endtime="20201110 08:38:51.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.966" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:38:51.965" endtime="20201110 08:38:51.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.968" level="INFO">VALUE: 0.019228056</msg>
<status status="PASS" starttime="20201110 08:38:51.967" endtime="20201110 08:38:51.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.962" endtime="20201110 08:38:51.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.973" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:51.972" endtime="20201110 08:38:51.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.975" level="INFO">VALUE: [0.029244042, 0.039244917, 0.049244458, 0.059246389, 0.069245944, 0.07924775, 0.089248403, 0.099249333, 0.109248889, 0.119250819, 0.129250208, 0.139252278, 0.149251819, 0.159253764, 0.169253292, 0.179255236, 0.189254764, 0.199256722, 0.209256236, 0.219258167, 0.229257708, 0.239259514, 0.249260181, 0.259261111, 0.269260653, 0.279262597, 0.289262, 0.299264083, 0.309263694, 0.319265569, 0.329265097, 0.339267069, 0.349266569, 0.359268486, 0.369268028, 0.379269958, 0.389269486, 0.399271278, 0.409271958, 0.419272889, 0.429272431, 0.439274361, 0.449273764, 0.459275806, 0.469275347, 0.479277264, 0.489276819, 0.499278736, 0.509278264, 0.519280194, 0.529279736, 0.539281722, 0.549281208, 0.559283069, 0.569283653, 0.579284625, 0.589284125, 0.599286042, 0.609285458, 0.619287542, 0.629287042, 0.639288972, 0.649288514, 0.659290458, 0.669290014, 0.679291917, 0.689291444, 0.699293417, 0.709292972, 0.719294708, 0.729295389, 0.739296319, 0.749295833, 0.759297764, 0.769297167, 0.779299264, 0.789298778, 0.79930075, 0.809300236, 0.819302181, 0.829301694, 0.839303625, 0.849303181, 0.859305111, 0.869304639, 0.879306431, 0.889307111, 0.899308028, 0.909307597, 0.919309486, 0.929308889, 0.939310958, 0.949310486, 0.959312417, 0.969311972, 0.979313903, 0.9893135, 0.999315347, 1.009314903, 1.019316819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:51.974" endtime="20201110 08:38:51.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.969" endtime="20201110 08:38:51.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.979" endtime="20201110 08:38:51.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.983" endtime="20201110 08:38:52.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.981" endtime="20201110 08:38:52.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.977" endtime="20201110 08:38:52.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.443" endtime="20201110 08:38:52.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.252" endtime="20201110 08:38:52.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.251" endtime="20201110 08:38:52.004"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:52.006" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.014" endtime="20201110 08:38:54.127"></status>
</kw>
<msg timestamp="20201110 08:38:54.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131692980, 'start-iter': 1, 'wakeups': [131702999, 131712998, 13172299...</msg>
<status status="PASS" starttime="20201110 08:38:52.013" endtime="20201110 08:38:54.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 131692980, 'start-iter': 1, 'wakeups': [131702999, 131712998, 13172299...</msg>
<status status="PASS" starttime="20201110 08:38:54.131" endtime="20201110 08:38:54.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.137" endtime="20201110 08:38:54.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.010" endtime="20201110 08:38:54.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.008" endtime="20201110 08:38:54.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.148" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-iter': 1, 'start-time': 131692980, 'wakeups': [131702999, 131712998, 131722998, 131732997, 131742998, 131752998, 131762998, 131772997, 131782998, 131...</msg>
<status status="PASS" starttime="20201110 08:38:54.144" endtime="20201110 08:38:54.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.157" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:54.154" endtime="20201110 08:38:54.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.161" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:54.159" endtime="20201110 08:38:54.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.150" endtime="20201110 08:38:54.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.171" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:54.169" endtime="20201110 08:38:54.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.176" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:54.174" endtime="20201110 08:38:54.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.164" endtime="20201110 08:38:54.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.186" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:54.184" endtime="20201110 08:38:54.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.193" level="INFO">VALUE: 131692980</msg>
<status status="PASS" starttime="20201110 08:38:54.191" endtime="20201110 08:38:54.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.179" endtime="20201110 08:38:54.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.203" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:54.201" endtime="20201110 08:38:54.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.212" level="INFO">VALUE: [131702999, 131712998, 131722998, 131732997, 131742998, 131752998, 131762998, 131772997, 131782998, 131792998, 131802998, 131812997, 131822998, 131832998, 131842998, 131852997, 131862998, 131872998, 131882998, 131892997, 131902998, 131912998, 131922998, 131932997, 131942998, 131952998, 131962998, 131972997, 131982998, 131992998, 132002998, 132012997, 132022998, 132032998, 132042998, 132052997, 132062998, 132072998, 132082998, 132092997, 132102998, 132112998, 132122998, 132132997, 132142998, 132152998, 132162998, 132172997, 132182998, 132192998, 132202998, 132212997, 132222998, 132232998, 132242998, 132252997, 132262998, 132272998, 132282998, 132292997, 132302998, 132312998, 132322998, 132332997, 132342998, 132352998, 132362998, 132372997, 132382998, 132392998, 132402998, 132412997, 132422998, 132432998, 132442998, 132452997, 132462998, 132472998, 132482998, 132492997, 132502998, 132512998, 132522998, 132532997, 132542998, 132552998, 132562998, 132572997, 132582998, 132592998, 132602998, 132612997, 132622998, 132632998, 132642998, 132652997, 132662998, 132672998, 132682998, 132692997]</msg>
<status status="PASS" starttime="20201110 08:38:54.206" endtime="20201110 08:38:54.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.196" endtime="20201110 08:38:54.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.228" endtime="20201110 08:38:54.525"></status>
</kw>
<msg timestamp="20201110 08:38:54.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032022931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.225" endtime="20201110 08:38:54.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022002986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032022931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.529" endtime="20201110 08:38:54.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.536" endtime="20201110 08:38:54.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.220" endtime="20201110 08:38:54.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.216" endtime="20201110 08:38:54.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.563" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:54.540" endtime="20201110 08:38:54.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.568" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:54.567" endtime="20201110 08:38:54.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.570" level="INFO">VALUE: 0.022002986</msg>
<status status="PASS" starttime="20201110 08:38:54.569" endtime="20201110 08:38:54.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.564" endtime="20201110 08:38:54.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.575" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:54.574" endtime="20201110 08:38:54.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.578" level="INFO">VALUE: [0.032022931, 0.042022875, 0.052023319, 0.062023347, 0.072024903, 0.082025847, 0.09202625, 0.102026375, 0.112027833, 0.122028778, 0.132029208, 0.142029264, 0.152030792, 0.162031764, 0.172032153, 0.182032208, 0.192033792, 0.202034681, 0.212035097, 0.222035139, 0.232036681, 0.242037625, 0.252038042, 0.262038125, 0.272039653, 0.282040611, 0.292041, 0.302041042, 0.312042583, 0.322043514, 0.332043944, 0.342044028, 0.352045556, 0.362046472, 0.372046944, 0.382046944, 0.3920485, 0.402049431, 0.412049875, 0.422049889, 0.432051431, 0.442052347, 0.452052778, 0.462052833, 0.472054347, 0.482055278, 0.492055694, 0.502055764, 0.512057278, 0.522058194, 0.532058625, 0.542058667, 0.552060194, 0.562061139, 0.572061542, 0.582061597, 0.592063125, 0.602064042, 0.612064472, 0.622064542, 0.632066097, 0.642066972, 0.652067403, 0.662067431, 0.672068986, 0.682069903, 0.692070333, 0.702070375, 0.712071917, 0.722072833, 0.732073292, 0.742073292, 0.752074847, 0.76207575, 0.772076181, 0.782076306, 0.792077764, 0.802078681, 0.812079125, 0.822079167, 0.832080694, 0.842081625, 0.852082069, 0.862082083, 0.872083681, 0.882084542, 0.892084972, 0.902085014, 0.912086542, 0.922087472, 0.932087889, 0.942087944, 0.952089472, 0.962090403, 0.972090833, 0.982090889, 0.992092403, 1.002093347, 1.012093778, 1.022093819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:54.577" endtime="20201110 08:38:54.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.571" endtime="20201110 08:38:54.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.581" endtime="20201110 08:38:54.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.585" endtime="20201110 08:38:54.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.583" endtime="20201110 08:38:54.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.580" endtime="20201110 08:38:54.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.007" endtime="20201110 08:38:54.606"></status>
</kw>
<msg timestamp="20201110 08:38:54.606" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.614" endtime="20201110 08:38:56.727"></status>
</kw>
<msg timestamp="20201110 08:38:56.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134292842, 'start-iter': 1, 'wakeups': [134302860, 134312859, 13432285...</msg>
<status status="PASS" starttime="20201110 08:38:54.613" endtime="20201110 08:38:56.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 134292842, 'start-iter': 1, 'wakeups': [134302860, 134312859, 13432285...</msg>
<status status="PASS" starttime="20201110 08:38:56.732" endtime="20201110 08:38:56.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.738" endtime="20201110 08:38:56.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.610" endtime="20201110 08:38:56.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.608" endtime="20201110 08:38:56.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.749" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-iter': 1, 'start-time': 134292842, 'wakeups': [134302860, 134312859, 134322859, 134332859, 134342859, 134352859, 134362859, 134372859, 134382859, 134...</msg>
<status status="PASS" starttime="20201110 08:38:56.745" endtime="20201110 08:38:56.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.758" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:56.756" endtime="20201110 08:38:56.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.762" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:56.760" endtime="20201110 08:38:56.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.751" endtime="20201110 08:38:56.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.773" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:56.770" endtime="20201110 08:38:56.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.777" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:56.775" endtime="20201110 08:38:56.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.765" endtime="20201110 08:38:56.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.788" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:56.785" endtime="20201110 08:38:56.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.792" level="INFO">VALUE: 134292842</msg>
<status status="PASS" starttime="20201110 08:38:56.790" endtime="20201110 08:38:56.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.780" endtime="20201110 08:38:56.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.802" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:56.800" endtime="20201110 08:38:56.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.807" level="INFO">VALUE: [134302860, 134312859, 134322859, 134332859, 134342859, 134352859, 134362859, 134372859, 134382859, 134392859, 134402859, 134412859, 134422859, 134432859, 134442859, 134452859, 134462859, 134472859, 134482859, 134492859, 134502859, 134512859, 134522859, 134532859, 134542859, 134552859, 134562859, 134572859, 134582859, 134592859, 134602859, 134612859, 134622859, 134632859, 134642859, 134652859, 134662859, 134672859, 134682859, 134692859, 134702859, 134712859, 134722859, 134732859, 134742859, 134752859, 134762859, 134772859, 134782859, 134792859, 134802859, 134812859, 134822859, 134832859, 134842859, 134852859, 134862859, 134872859, 134882859, 134892859, 134902859, 134912859, 134922859, 134932859, 134942859, 134952859, 134962859, 134972859, 134982859, 134992859, 135002859, 135012859, 135022859, 135032859, 135042859, 135052859, 135062859, 135072859, 135082859, 135092859, 135102859, 135112859, 135122859, 135132859, 135142859, 135152859, 135162859, 135172859, 135182859, 135192859, 135202859, 135212859, 135222859, 135232859, 135242859, 135252859, 135262859, 135272859, 135282859, 135292859]</msg>
<status status="PASS" starttime="20201110 08:38:56.805" endtime="20201110 08:38:56.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.795" endtime="20201110 08:38:56.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.821" endtime="20201110 08:38:57.111"></status>
</kw>
<msg timestamp="20201110 08:38:57.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029486403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.819" endtime="20201110 08:38:57.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029486403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.115" endtime="20201110 08:38:57.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.123" endtime="20201110 08:38:57.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.814" endtime="20201110 08:38:57.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.811" endtime="20201110 08:38:57.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.150" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:57.126" endtime="20201110 08:38:57.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.154" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:57.153" endtime="20201110 08:38:57.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.157" level="INFO">VALUE: 0.019467236</msg>
<status status="PASS" starttime="20201110 08:38:57.156" endtime="20201110 08:38:57.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.151" endtime="20201110 08:38:57.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.162" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:57.161" endtime="20201110 08:38:57.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.164" level="INFO">VALUE: [0.029486403, 0.039486319, 0.049486861, 0.059487792, 0.069488194, 0.079489264, 0.089489819, 0.099490736, 0.109491167, 0.119492208, 0.12949275, 0.139493694, 0.149494097, 0.159495167, 0.169495694, 0.179496639, 0.189497028, 0.199498097, 0.209498639, 0.219499569, 0.229499986, 0.239501056, 0.249501597, 0.259502514, 0.269502931, 0.279503986, 0.289504542, 0.299505458, 0.309505875, 0.319506958, 0.329507486, 0.339508417, 0.349508819, 0.359509889, 0.369510417, 0.379511347, 0.38951175, 0.399512833, 0.409513347, 0.419514292, 0.429514694, 0.439515736, 0.449516292, 0.459517208, 0.469517639, 0.479518667, 0.489519208, 0.499520139, 0.509520556, 0.519521611, 0.529522139, 0.539523069, 0.549523472, 0.559524542, 0.569525069, 0.579526, 0.589526403, 0.599527486, 0.609528042, 0.619528931, 0.629529347, 0.639530417, 0.649530944, 0.659531875, 0.669532278, 0.679533333, 0.689533875, 0.699534806, 0.709535208, 0.719536292, 0.729536819, 0.739537736, 0.749538153, 0.759539236, 0.769539736, 0.779540667, 0.789541083, 0.799542139, 0.809542708, 0.819543611, 0.829544014, 0.839545069, 0.849545653, 0.859546542, 0.869546958, 0.879548028, 0.889548542, 0.899549472, 0.909549903, 0.919551014, 0.9295515, 0.939552431, 0.949552819, 0.959553889, 0.969554417, 0.979555347, 0.98955575, 0.999556875, 1.009557375, 1.019558278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:57.163" endtime="20201110 08:38:57.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.158" endtime="20201110 08:38:57.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.167" endtime="20201110 08:38:57.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.171" endtime="20201110 08:38:57.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.169" endtime="20201110 08:38:57.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.166" endtime="20201110 08:38:57.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.607" endtime="20201110 08:38:57.191"></status>
</kw>
<msg timestamp="20201110 08:38:57.192" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.201" endtime="20201110 08:38:59.314"></status>
</kw>
<msg timestamp="20201110 08:38:59.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 136879694, 'start-iter': 1, 'wakeups': [136889713, 136899711, 13690971...</msg>
<status status="PASS" starttime="20201110 08:38:57.199" endtime="20201110 08:38:59.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.321" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 136879694, 'start-iter': 1, 'wakeups': [136889713, 136899711, 13690971...</msg>
<status status="PASS" starttime="20201110 08:38:59.317" endtime="20201110 08:38:59.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.324" endtime="20201110 08:38:59.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.196" endtime="20201110 08:38:59.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.194" endtime="20201110 08:38:59.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.335" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-iter': 1, 'start-time': 136879694, 'wakeups': [136889713, 136899711, 136909711, 136919711, 136929711, 136939711, 136949711, 136959711, 136969711, 136...</msg>
<status status="PASS" starttime="20201110 08:38:59.331" endtime="20201110 08:38:59.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.344" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:59.342" endtime="20201110 08:38:59.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.348" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:59.346" endtime="20201110 08:38:59.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.337" endtime="20201110 08:38:59.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.358" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:59.356" endtime="20201110 08:38:59.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.363" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:59.361" endtime="20201110 08:38:59.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.351" endtime="20201110 08:38:59.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.373" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:59.371" endtime="20201110 08:38:59.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.377" level="INFO">VALUE: 136879694</msg>
<status status="PASS" starttime="20201110 08:38:59.375" endtime="20201110 08:38:59.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.366" endtime="20201110 08:38:59.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.383" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:59.382" endtime="20201110 08:38:59.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.385" level="INFO">VALUE: [136889713, 136899711, 136909711, 136919711, 136929711, 136939711, 136949711, 136959711, 136969711, 136979711, 136989711, 136999711, 137009711, 137019711, 137029711, 137039711, 137049711, 137059711, 137069711, 137079711, 137089711, 137099711, 137109711, 137119711, 137129711, 137139711, 137149711, 137159711, 137169711, 137179711, 137189711, 137199711, 137209711, 137219711, 137229711, 137239711, 137249711, 137259711, 137269711, 137279711, 137289711, 137299711, 137309711, 137319711, 137329711, 137339711, 137349711, 137359711, 137369711, 137379711, 137389711, 137399711, 137409711, 137419711, 137429711, 137439711, 137449711, 137459711, 137469711, 137479711, 137489711, 137499711, 137509711, 137519711, 137529711, 137539711, 137549711, 137559711, 137569711, 137579711, 137589711, 137599711, 137609711, 137619711, 137629711, 137639711, 137649711, 137659711, 137669711, 137679711, 137689711, 137699711, 137709711, 137719711, 137729711, 137739711, 137749711, 137759711, 137769711, 137779711, 137789711, 137799711, 137809711, 137819711, 137829711, 137839711, 137849711, 137859711, 137869711, 137879711]</msg>
<status status="PASS" starttime="20201110 08:38:59.384" endtime="20201110 08:38:59.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.380" endtime="20201110 08:38:59.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.393" endtime="20201110 08:38:59.684"></status>
</kw>
<msg timestamp="20201110 08:38:59.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030574514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:59.391" endtime="20201110 08:38:59.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030574514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:59.694" endtime="20201110 08:38:59.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.701" endtime="20201110 08:38:59.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.389" endtime="20201110 08:38:59.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.387" endtime="20201110 08:38:59.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.729" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:59.705" endtime="20201110 08:38:59.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.734" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:59.733" endtime="20201110 08:38:59.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.737" level="INFO">VALUE: 0.020555</msg>
<status status="PASS" starttime="20201110 08:38:59.736" endtime="20201110 08:38:59.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.730" endtime="20201110 08:38:59.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.743" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:59.742" endtime="20201110 08:38:59.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.745" level="INFO">VALUE: [0.030574514, 0.040573292, 0.050573958, 0.060574903, 0.070575458, 0.080576236, 0.090576944, 0.100577861, 0.110578389, 0.120579222, 0.130579861, 0.140580792, 0.150581347, 0.160582125, 0.170582806, 0.180583736, 0.190584278, 0.200585069, 0.21058575, 0.220586681, 0.230587236, 0.240588014, 0.250588694, 0.260589681, 0.270590167, 0.280590958, 0.290591653, 0.300592569, 0.310593111, 0.320593917, 0.330594611, 0.340595528, 0.350596083, 0.360596889, 0.370597625, 0.380598486, 0.390599056, 0.400599806, 0.4106005, 0.420601417, 0.430601972, 0.44060275, 0.450603417, 0.460604347, 0.470604875, 0.480605667, 0.490606333, 0.500607278, 0.510607792, 0.520608583, 0.530609264, 0.540610194, 0.550610722, 0.560611514, 0.570612181, 0.580613125, 0.590613639, 0.600614431, 0.610615125, 0.620616042, 0.630616569, 0.640617361, 0.650618042, 0.660618958, 0.670619486, 0.680620292, 0.690620986, 0.700621889, 0.710622431, 0.720623208, 0.730623931, 0.740624806, 0.750625347, 0.760626181, 0.770626806, 0.780627736, 0.790628278, 0.800629083, 0.810629764, 0.820630667, 0.830631194, 0.840632069, 0.850632667, 0.860633583, 0.870634125, 0.880634917, 0.890635597, 0.900636514, 0.910637056, 0.920637861, 0.930638528, 0.940639444, 0.950639986, 0.960640778, 0.970641444, 0.980642375, 0.990642931, 1.000643764, 1.010644375, 1.020645306] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:59.744" endtime="20201110 08:38:59.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.739" endtime="20201110 08:38:59.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.748" endtime="20201110 08:38:59.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.752" endtime="20201110 08:38:59.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.750" endtime="20201110 08:38:59.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.747" endtime="20201110 08:38:59.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.192" endtime="20201110 08:38:59.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.005" endtime="20201110 08:38:59.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.004" endtime="20201110 08:38:59.773"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:59.775" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.783" endtime="20201110 08:39:01.897"></status>
</kw>
<msg timestamp="20201110 08:39:01.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139462040, 'start-iter': 1, 'wakeups': [139472063, 139482059, 13949206...</msg>
<status status="PASS" starttime="20201110 08:38:59.782" endtime="20201110 08:39:01.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 139462040, 'start-iter': 1, 'wakeups': [139472063, 139482059, 13949206...</msg>
<status status="PASS" starttime="20201110 08:39:01.900" endtime="20201110 08:39:01.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.907" endtime="20201110 08:39:01.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.779" endtime="20201110 08:39:01.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.777" endtime="20201110 08:39:01.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.918" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-iter': 1, 'start-time': 139462040, 'wakeups': [139472063, 139482059, 139492060, 139502061, 139512059, 139522061, 139532061, 139542061, 139552059, 139...</msg>
<status status="PASS" starttime="20201110 08:39:01.914" endtime="20201110 08:39:01.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.929" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:01.925" endtime="20201110 08:39:01.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.933" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:01.931" endtime="20201110 08:39:01.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.920" endtime="20201110 08:39:01.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.944" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:01.942" endtime="20201110 08:39:01.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.948" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:01.946" endtime="20201110 08:39:01.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.937" endtime="20201110 08:39:01.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.959" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:01.957" endtime="20201110 08:39:01.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.963" level="INFO">VALUE: 139462040</msg>
<status status="PASS" starttime="20201110 08:39:01.961" endtime="20201110 08:39:01.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.951" endtime="20201110 08:39:01.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.973" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:01.971" endtime="20201110 08:39:01.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.978" levelmsg>
<status status="PASS" starttime="20201110 08:39:01.976" endtime="20201110 08:39:01.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.966" endtime="20201110 08:39:01.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.994" endtime="20201110 08:39:02.285"></status>
</kw>
<msg timestamp="20201110 08:39:02.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032103486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.990" endtime="20201110 08:39:02.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032103486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.289" endtime="20201110 08:39:02.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.296" endtime="20201110 08:39:02.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.985" endtime="20201110 08:39:02.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.981" endtime="20201110 08:39:02.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.325" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:02.300" endtime="20201110 08:39:02.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.329" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:02.328" endtime="20201110 08:39:02.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.331" level="INFO">VALUE: 0.022080042</msg>
<status status="PASS" starttime="20201110 08:39:02.330" endtime="20201110 08:39:02.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.326" endtime="20201110 08:39:02.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.337" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:02.336" endtime="20201110 08:39:02.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.339" level="INFO">VALUE: [0.032103486, 0.042100847, 0.052102542, 0.062104778, 0.072103014, 0.082105958, 0.092106486, 0.102107736, 0.112105958, 0.122108889, 0.132109431, 0.142110667, 0.152108903, 0.162111833, 0.172112375, 0.182113611, 0.192111847, 0.202114778, 0.212115319, 0.222116556, 0.232114792, 0.242117722, 0.252118278, 0.262119569, 0.272117736, 0.282120667, 0.292121208, 0.302122444, 0.312120681, 0.322123625, 0.332124167, 0.342125431, 0.352123639, 0.362126583, 0.372127111, 0.382128347, 0.392126583, 0.402129514, 0.412130069, 0.422131292, 0.432129611, 0.442132458, 0.452133028, 0.46213425, 0.472132486, 0.482135417, 0.492135958, 0.502137194, 0.512135472, 0.522138361, 0.532138917, 0.542140153, 0.552138375, 0.562141361, 0.572141833, 0.582143056, 0.592141306, 0.602144264, 0.61214475, 0.622146, 0.632144208, 0.642147139, 0.652147681, 0.662148944, 0.672147139, 0.682150056, 0.692150597, 0.702151833, 0.712150083, 0.722153, 0.732153528, 0.74215475, 0.752153, 0.762155917, 0.772156444, 0.782157722, 0.792155917, 0.802158833, 0.812159444, 0.822160611, 0.832158833, 0.842161764, 0.852162333, 0.862163528, 0.872161778, 0.882164694, 0.892165222, 0.902166458, 0.912164694, 0.922167611, 0.932168222, 0.942169403, 0.952167611, 0.962170556, 0.972171083, 0.982172319, 0.992170542, 1.002173486, 1.012174014, 1.022175236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:02.338" endtime="20201110 08:39:02.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.333" endtime="20201110 08:39:02.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.342" endtime="20201110 08:39:02.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.345" endtime="20201110 08:39:02.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.344" endtime="20201110 08:39:02.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.340" endtime="20201110 08:39:02.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.776" endtime="20201110 08:39:02.366"></status>
</kw>
<msg timestamp="20201110 08:39:02.366" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.374" endtime="20201110 08:39:04.487"></status>
</kw>
<msg timestamp="20201110 08:39:04.489" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 142052897, 'start-iter': 1, 'wakeups': [142062919, 142072916, 14208291...</msg>
<status status="PASS" starttime="20201110 08:39:02.373" endtime="20201110 08:39:04.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 142052897, 'start-iter': 1, 'wakeups': [142062919, 142072916, 14208291...</msg>
<status status="PASS" starttime="20201110 08:39:04.491" endtime="20201110 08:39:04.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.497" endtime="20201110 08:39:04.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.370" endtime="20201110 08:39:04.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.368" endtime="20201110 08:39:04.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.508" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-iter': 1, 'start-time': 142052897, 'wakeups': [142062919, 142072916, 142082917, 142092918, 142102918, 142112918, 142122918, 142132918, 142142918, 142...</msg>
<status status="PASS" starttime="20201110 08:39:04.504" endtime="20201110 08:39:04.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.518" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:04.516" endtime="20201110 08:39:04.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.522" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:04.520" endtime="20201110 08:39:04.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.510" endtime="20201110 08:39:04.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.533" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:04.530" endtime="20201110 08:39:04.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.539" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:04.535" endtime="20201110 08:39:04.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.525" endtime="20201110 08:39:04.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.553" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:04.550" endtime="20201110 08:39:04.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.555" level="INFO">VALUE: 142052897</msg>
<status status="PASS" starttime="20201110 08:39:04.554" endtime="20201110 08:39:04.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.542" endtime="20201110 08:39:04.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.560" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:04.559" endtime="20201110 08:39:04.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.562" level="INFO">VALUE: [142062919, 142072916, 142082917, 142092918, 142102918, 142112918, 142122918, 142132918, 142142918, 142152918, 142162918, 142172918, 142182918, 142192918, 142202918, 142212918, 142222918, 142232918, 142242918, 142252918, 142262918, 142272918, 142282918, 142292918, 142302918, 142312918, 142322918, 142332918, 142342918, 142352918, 142362918, 142372918, 142382918, 142392918, 142402918, 142412918, 142422918, 142432918, 142442918, 142452918, 142462918, 142472918, 142482918, 142492918, 142502918, 142512918, 142522918, 142532918, 142542918, 142552918, 142562918, 142572918, 142582918, 142592918, 142602918, 142612918, 142622918, 142632918, 142642918, 142652918, 142662918, 142672918, 142682918, 142692918, 142702918, 142712918, 142722918, 142732918, 142742918, 142752918, 142762918, 142772918, 142782918, 142792918, 142802918, 142812918, 142822918, 142832918, 142842918, 142852918, 142862918, 142872918, 142882918, 142892918, 142902918, 142912918, 142922918, 142932918, 142942918, 142952918, 142962918, 142972918, 142982918, 142992918, 143002918, 143012918, 143022918, 143032918, 143042918, 143052918]</msg>
<status status="PASS" starttime="20201110 08:39:04.561" endtime="20201110 08:39:04.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.556" endtime="20201110 08:39:04.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.569" endtime="20201110 08:39:04.860"></status>
</kw>
<msg timestamp="20201110 08:39:04.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029229264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.568" endtime="20201110 08:39:04.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019206542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029229264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.864" endtime="20201110 08:39:04.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.872" endtime="20201110 08:39:04.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.565" endtime="20201110 08:39:04.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.563" endtime="20201110 08:39:04.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.898" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:04.875" endtime="20201110 08:39:04.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.903" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:04.902" endtime="20201110 08:39:04.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.912" level="INFO">VALUE: 0.019206542</msg>
<status status="PASS" starttime="20201110 08:39:04.910" endtime="20201110 08:39:04.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.899" endtime="20201110 08:39:04.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.918" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:04.917" endtime="20201110 08:39:04.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.920" level="INFO">VALUE: [0.029229264, 0.039227653, 0.049229375, 0.059231292, 0.069231819, 0.07923275, 0.089233292, 0.09923425, 0.10923475, 0.119235681, 0.129236236, 0.139237208, 0.149237694, 0.159238625, 0.169239236, 0.179240097, 0.189240639, 0.199241569, 0.209242111, 0.219243056, 0.229243583, 0.239244514, 0.249245069, 0.259245986, 0.269246542, 0.279247472, 0.289248, 0.299248944, 0.309249472, 0.319250417, 0.329250958, 0.339251889, 0.349252444, 0.359253361, 0.369253903, 0.379254833, 0.389255375, 0.399256306, 0.409256861, 0.419257778, 0.429258319, 0.439259264, 0.449259792, 0.459260722, 0.469261264, 0.479262194, 0.489262708, 0.499263639, 0.509264222, 0.519265097, 0.529265625, 0.539266625, 0.549267111, 0.559268028, 0.569268556, 0.579269542, 0.589270028, 0.599270944, 0.609271542, 0.619272486, 0.629272958, 0.639273875, 0.649274417, 0.659275403, 0.669275889, 0.679276806, 0.689277375, 0.699278264, 0.709278806, 0.719279736, 0.729280292, 0.739281194, 0.749281736, 0.759282681, 0.769283194, 0.779284125, 0.789284667, 0.799285597, 0.809286139, 0.819287056, 0.829287597, 0.839288528, 0.849289097, 0.859290014, 0.869290542, 0.879291472, 0.889292014, 0.899292972, 0.909293458, 0.919294389, 0.929294931, 0.939295875, 0.949296417, 0.959297333, 0.969297875, 0.979298833, 0.989299347, 0.99930025, 1.009300806, 1.019301722] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:04.919" endtime="20201110 08:39:04.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.914" endtime="20201110 08:39:04.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.923" endtime="20201110 08:39:04.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.927" endtime="20201110 08:39:04.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.925" endtime="20201110 08:39:04.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.921" endtime="20201110 08:39:04.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.367" endtime="20201110 08:39:04.948"></status>
</kw>
<msg timestamp="20201110 08:39:04.948" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.957" endtime="20201110 08:39:07.070"></status>
</kw>
<msg timestamp="20201110 08:39:07.071" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 144635876, 'start-iter': 1, 'wakeups': [144645898, 144655895, 14466589...</msg>
<status status="PASS" starttime="20201110 08:39:04.955" endtime="20201110 08:39:07.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.077" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 144635876, 'start-iter': 1, 'wakeups': [144645898, 144655895, 14466589...</msg>
<status status="PASS" starttime="20201110 08:39:07.073" endtime="20201110 08:39:07.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.080" endtime="20201110 08:39:07.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.952" endtime="20201110 08:39:07.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.950" endtime="20201110 08:39:07.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.091" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-iter': 1, 'start-time': 144635876, 'wakeups': [144645898, 144655895, 144665896, 144675895, 144685897, 144695897, 144705897, 144715895, 144725897, 144...</msg>
<status status="PASS" starttime="20201110 08:39:07.087" endtime="20201110 08:39:07.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.099" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:07.097" endtime="20201110 08:39:07.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.104" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:07.102" endtime="20201110 08:39:07.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.093" endtime="20201110 08:39:07.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.114" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:07.112" endtime="20201110 08:39:07.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.119" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:07.117" endtime="20201110 08:39:07.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.107" endtime="20201110 08:39:07.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.130" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:07.128" endtime="20201110 08:39:07.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.134" level="INFO">VALUE: 144635876</msg>
<status status="PASS" starttime="20201110 08:39:07.132" endtime="20201110 08:39:07.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.122" endtime="20201110 08:39:07.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.141" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:07.139" endtime="20201110 08:39:07.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.143" levelmsg>
<status status="PASS" starttime="20201110 08:39:07.142" endtime="20201110 08:39:07.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.136" endtime="20201110 08:39:07.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.150" endtime="20201110 08:39:07.442"></status>
</kw>
<msg timestamp="20201110 08:39:07.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030715819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.149" endtime="20201110 08:39:07.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020692764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030715819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.446" endtime="20201110 08:39:07.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.453" endtime="20201110 08:39:07.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.146" endtime="20201110 08:39:07.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.144" endtime="20201110 08:39:07.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.481" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:07.457" endtime="20201110 08:39:07.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.485" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:07.484" endtime="20201110 08:39:07.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.487" level="INFO">VALUE: 0.020692764</msg>
<status status="PASS" starttime="20201110 08:39:07.486" endtime="20201110 08:39:07.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.482" endtime="20201110 08:39:07.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.493" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:07.492" endtime="20201110 08:39:07.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.495" level="INFO">VALUE: [0.030715819, 0.040714222, 0.050716264, 0.060715847, 0.070718375, 0.080719306, 0.090720153, 0.100718778, 0.110721319, 0.12072225, 0.130723111, 0.140721722, 0.150724264, 0.160725194, 0.170726042, 0.180724667, 0.190727208, 0.200728139, 0.210729, 0.220727611, 0.230730153, 0.240731083, 0.250731931, 0.260730556, 0.270733097, 0.280734056, 0.290734875, 0.300733514, 0.310736056, 0.320736972, 0.330737819, 0.340736458, 0.350739, 0.360739917, 0.370740764, 0.380739458, 0.390741944, 0.400742889, 0.410743694, 0.420742319, 0.430744861, 0.440745778, 0.450746611, 0.460745236, 0.470747778, 0.480748708, 0.490749542, 0.500748167, 0.510750708, 0.520751611, 0.530752472, 0.540751083, 0.550753611, 0.560754542, 0.570755389, 0.580754014, 0.590756556, 0.600757458, 0.610758319, 0.620756917, 0.630759472, 0.640760389, 0.650761222, 0.660759861, 0.670762389, 0.680763306, 0.690764167, 0.700762778, 0.710765306, 0.72076625, 0.730767069, 0.740765694, 0.750768236, 0.760769153, 0.77077, 0.780768625, 0.790771167, 0.800772111, 0.810772944, 0.820771597, 0.830774083, 0.840775028, 0.850775875, 0.860774486, 0.870777028, 0.880777931, 0.890778792, 0.900777431, 0.910779944, 0.920780889, 0.930781708, 0.940780333, 0.950782889, 0.960783819, 0.970784653, 0.980783264, 0.990785833, 1.000786736, 1.010787569, 1.020786194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:07.494" endtime="20201110 08:39:07.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.489" endtime="20201110 08:39:07.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.498" endtime="20201110 08:39:07.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.503" endtime="20201110 08:39:07.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.500" endtime="20201110 08:39:07.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.497" endtime="20201110 08:39:07.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.949" endtime="20201110 08:39:07.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.774" endtime="20201110 08:39:07.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.773" endtime="20201110 08:39:07.524"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:07.526" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.534" endtime="20201110 08:39:09.647"></status>
</kw>
<msg timestamp="20201110 08:39:09.649" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147212857, 'start-iter': 1, 'wakeups': [147222882, 147232880, 14724288...</msg>
<status status="PASS" starttime="20201110 08:39:07.533" endtime="20201110 08:39:09.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.654" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 147212857, 'start-iter': 1, 'wakeups': [147222882, 147232880, 14724288...</msg>
<status status="PASS" starttime="20201110 08:39:09.651" endtime="20201110 08:39:09.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.657" endtime="20201110 08:39:09.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.530" endtime="20201110 08:39:09.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.528" endtime="20201110 08:39:09.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.668" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-iter': 1, 'start-time': 147212857, 'wakeups': [147222882, 147232880, 147242881, 147252881, 147262881, 147272881, 147282881, 147292881, 147302881, 147...</msg>
<status status="PASS" starttime="20201110 08:39:09.664" endtime="20201110 08:39:09.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.677" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:09.675" endtime="20201110 08:39:09.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.681" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:09.679" endtime="20201110 08:39:09.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.670" endtime="20201110 08:39:09.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.688" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:09.687" endtime="20201110 08:39:09.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.690" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:09.690" endtime="20201110 08:39:09.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.684" endtime="20201110 08:39:09.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.695" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:09.694" endtime="20201110 08:39:09.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.697" level="INFO">VALUE: 147212857</msg>
<status status="PASS" starttime="20201110 08:39:09.696" endtime="20201110 08:39:09.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.692" endtime="20201110 08:39:09.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.702" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:09.701" endtime="20201110 08:39:09.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.705" level="INFO">VALUE: [147222882, 147232880, 147242881, 147252881, 147262881, 147272881, 147282881, 147292881, 147302881, 147312881, 147322881, 147332881, 147342881, 147352881, 147362881, 147372881, 147382881, 147392881, 147402881, 147412881, 147422881, 147432881, 147442881, 147452881, 147462881, 147472881, 147482881, 147492881, 147502881, 147512881, 147522881, 147532881, 147542881, 147552881, 147562881, 147572881, 147582881, 147592881, 147602881, 147612881, 147622881, 147632881, 147642881, 147652881, 147662881, 147672881, 147682881, 147692881, 147702881, 147712881, 147722881, 147732881, 147742881, 147752881, 147762881, 147772881, 147782881, 147792881, 147802881, 147812881, 147822881, 147832881, 147842881, 147852881, 147862881, 147872881, 147882881, 147892881, 147902881, 147912881, 147922881, 147932881, 147942881, 147952881, 147962881, 147972881, 147982881, 147992881, 148002881, 148012881, 148022881, 148032881, 148042881, 148052881, 148062881, 148072881, 148082881, 148092881, 148102881, 148112881, 148122881, 148132881, 148142881, 148152881, 148162881, 148172881, 148182881, 148192881, 148202881, 148212881]</msg>
<status status="PASS" starttime="20201110 08:39:09.703" endtime="20201110 08:39:09.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.699" endtime="20201110 08:39:09.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.714" endtime="20201110 08:39:10.006"></status>
</kw>
<msg timestamp="20201110 08:39:10.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031884597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:09.712" endtime="20201110 08:39:10.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031884597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:10.010" endtime="20201110 08:39:10.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.017" endtime="20201110 08:39:10.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.708" endtime="20201110 08:39:10.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.707" endtime="20201110 08:39:10.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.044" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:10.021" endtime="20201110 08:39:10.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.049" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:10.047" endtime="20201110 08:39:10.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.051" level="INFO">VALUE: 0.021858</msg>
<status status="PASS" starttime="20201110 08:39:10.050" endtime="20201110 08:39:10.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.045" endtime="20201110 08:39:10.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.056" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:10.055" endtime="20201110 08:39:10.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.058" level="INFO">VALUE: [0.031884597, 0.041883056, 0.051884597, 0.061885528, 0.071886083, 0.081887014, 0.091887597, 0.101888486, 0.111889014, 0.121889958, 0.1318905, 0.141891431, 0.151891972, 0.161892903, 0.171893514, 0.181894375, 0.191894917, 0.201895847, 0.211896403, 0.221897347, 0.231897875, 0.241898819, 0.251899361, 0.261900278, 0.271900833, 0.28190175, 0.291902306, 0.301903236, 0.311903806, 0.321904708, 0.33190525, 0.341906194, 0.351906708, 0.361907653, 0.371908181, 0.381909097, 0.391909639, 0.401910569, 0.411911097, 0.421912028, 0.431912569, 0.441913486, 0.451914042, 0.461914972, 0.4719155, 0.481916417, 0.491916958, 0.501917917, 0.511918417, 0.521919347, 0.531919889, 0.541920833, 0.551921347, 0.561922278, 0.571922806, 0.581923764, 0.591924278, 0.601925222, 0.61192575, 0.621926667, 0.631927208, 0.641928153, 0.651928681, 0.661929597, 0.671930153, 0.681931097, 0.691931597, 0.701932528, 0.711933069, 0.721934083, 0.731934528, 0.741935458, 0.751936, 0.761936931, 0.771937472, 0.781938389, 0.791938944, 0.801939861, 0.811940403, 0.821941319, 0.831941861, 0.841942792, 0.851943347, 0.861944306, 0.871944819, 0.881945736, 0.891946306, 0.901947194, 0.911947736, 0.921948653, 0.931949194, 0.941950125, 0.951950681, 0.961951583, 0.971952139, 0.981953069, 0.991953597, 1.001954514, 1.011955056, 1.021956] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:10.057" endtime="20201110 08:39:10.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.052" endtime="20201110 08:39:10.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.061" endtime="20201110 08:39:10.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.065" endtime="20201110 08:39:10.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.063" endtime="20201110 08:39:10.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.060" endtime="20201110 08:39:10.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.527" endtime="20201110 08:39:10.090"></status>
</kw>
<msg timestamp="20201110 08:39:10.090" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.099" endtime="20201110 08:39:12.211"></status>
</kw>
<msg timestamp="20201110 08:39:12.212" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149777202, 'start-iter': 1, 'wakeups': [149787228, 149797225, 14980722...</msg>
<status status="PASS" starttime="20201110 08:39:10.097" endtime="20201110 08:39:12.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 149777202, 'start-iter': 1, 'wakeups': [149787228, 149797225, 14980722...</msg>
<status status="PASS" starttime="20201110 08:39:12.215" endtime="20201110 08:39:12.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.221" endtime="20201110 08:39:12.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.094" endtime="20201110 08:39:12.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.092" endtime="20201110 08:39:12.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.232" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-iter': 1, 'start-time': 149777202, 'wakeups': [149787228, 149797225, 149807226, 149817226, 149827226, 149837226, 149847226, 149857226, 149867226, 149...</msg>
<status status="PASS" starttime="20201110 08:39:12.228" endtime="20201110 08:39:12.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.241" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:12.239" endtime="20201110 08:39:12.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.245" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:12.243" endtime="20201110 08:39:12.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.234" endtime="20201110 08:39:12.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.256" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:12.253" endtime="20201110 08:39:12.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.260" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:12.258" endtime="20201110 08:39:12.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.248" endtime="20201110 08:39:12.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.271" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:12.268" endtime="20201110 08:39:12.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.275" level="INFO">VALUE: 149777202</msg>
<status status="PASS" starttime="20201110 08:39:12.273" endtime="20201110 08:39:12.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.263" endtime="20201110 08:39:12.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.285" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:12.283" endtime="20201110 08:39:12.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.290" level="INFO">VALUE: [149787228, 149797225, 149807226, 149817226, 149827226, 149837226, 149847226, 149857226, 149867226, 149877226, 149887226, 149897226, 149907226, 149917226, 149927226, 149937226, 149947226, 149957226, 149967226, 149977226, 149987226, 149997226, 150007226, 150017226, 150027226, 150037226, 150047226, 150057226, 150067226, 150077226, 150087226, 150097226, 150107226, 150117226, 150127226, 150137226, 150147226, 150157226, 150167226, 150177226, 150187226, 150197226, 150207226, 150217226, 150227226, 150237226, 150247226, 150257226, 150267226, 150277226, 150287226, 150297226, 150307226, 150317226, 150327226, 150337226, 150347226, 150357226, 150367226, 150377226, 150387226, 150397226, 150407226, 150417226, 150427226, 150437226, 150447226, 150457226, 150467226, 150477226, 150487226, 150497226, 150507226, 150517226, 150527226, 150537226, 150547226, 150557226, 150567226, 150577226, 150587226, 150597226, 150607226, 150617226, 150627226, 150637226, 150647226, 150657226, 150667226, 150677226, 150687226, 150697226, 150707226, 150717226, 150727226, 150737226, 150747226, 150757226, 150767226, 150777226]</msg>
<status status="PASS" starttime="20201110 08:39:12.288" endtime="20201110 08:39:12.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.278" endtime="20201110 08:39:12.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.306" endtime="20201110 08:39:12.605"></status>
</kw>
<msg timestamp="20201110 08:39:12.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034117208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.303" endtime="20201110 08:39:12.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034117208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.609" endtime="20201110 08:39:12.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.617" endtime="20201110 08:39:12.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.298" endtime="20201110 08:39:12.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.294" endtime="20201110 08:39:12.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.644" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:12.620" endtime="20201110 08:39:12.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.649" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:12.648" endtime="20201110 08:39:12.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.651" level="INFO">VALUE: 0.024089944</msg>
<status status="PASS" starttime="20201110 08:39:12.650" endtime="20201110 08:39:12.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.645" endtime="20201110 08:39:12.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.656" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:12.655" endtime="20201110 08:39:12.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.658" level="INFO">VALUE: [0.034117208, 0.044114681, 0.054116222, 0.064117153, 0.07411775, 0.084118625, 0.094119167, 0.104120083, 0.114120625, 0.124121569, 0.134122125, 0.144123042, 0.154123583, 0.164124514, 0.174125056, 0.184126028, 0.194126528, 0.204127472, 0.214128014, 0.224128944, 0.2341295, 0.244130417, 0.254130958, 0.264131931, 0.274132486, 0.284133361, 0.294133917, 0.304134847, 0.314135389, 0.324136319, 0.334136875, 0.344137806, 0.354138333, 0.364139264, 0.374139806, 0.384140722, 0.394141264, 0.404142181, 0.414142736, 0.424143667, 0.434144194, 0.444145111, 0.454145653, 0.464146611, 0.474147111, 0.484148056, 0.494148583, 0.5041495, 0.514150056, 0.524150958, 0.5341515, 0.544152431, 0.554153, 0.564153903, 0.574154472, 0.584155361, 0.594155903, 0.604156819, 0.614157347, 0.624158333, 0.634158819, 0.64415975, 0.654160278, 0.664161208, 0.674161736, 0.684162681, 0.694163208, 0.704164139, 0.714164667, 0.724165597, 0.734166139, 0.744167083, 0.754167611, 0.764168556, 0.774169069, 0.784169986, 0.794170528, 0.8041715, 0.814172, 0.824172931, 0.834173458, 0.844174389, 0.854174944, 0.864175875, 0.874176458, 0.884177333, 0.894177875, 0.904178778, 0.914179403, 0.92418025, 0.934180806, 0.944181722, 0.954182264, 0.964183181, 0.974183722, 0.984184653, 0.994185194, 1.004186111, 1.014186653, 1.024187583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:12.657" endtime="20201110 08:39:12.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.652" endtime="20201110 08:39:12.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.661" endtime="20201110 08:39:12.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:12.665" endtime="20201110 08:39:12.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.663" endtime="20201110 08:39:12.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.660" endtime="20201110 08:39:12.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.090" endtime="20201110 08:39:12.686"></status>
</kw>
<msg timestamp="20201110 08:39:12.686" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.694" endtime="20201110 08:39:14.807"></status>
</kw>
<msg timestamp="20201110 08:39:14.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 152372184, 'start-iter': 1, 'wakeups': [152382210, 152392207, 15240220...</msg>
<status status="PASS" starttime="20201110 08:39:12.692" endtime="20201110 08:39:14.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.815" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 152372184, 'start-iter': 1, 'wakeups': [152382210, 152392207, 15240220...</msg>
<status status="PASS" starttime="20201110 08:39:14.811" endtime="20201110 08:39:14.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.817" endtime="20201110 08:39:14.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.690" endtime="20201110 08:39:14.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.688" endtime="20201110 08:39:14.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.831" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-iter': 1, 'start-time': 152372184, 'wakeups': [152382210, 152392207, 152402208, 152412208, 152422208, 152432208, 152442208, 152452208, 152462208, 152...</msg>
<status status="PASS" starttime="20201110 08:39:14.826" endtime="20201110 08:39:14.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.839" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:14.837" endtime="20201110 08:39:14.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.843" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:14.841" endtime="20201110 08:39:14.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.832" endtime="20201110 08:39:14.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.854" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:14.852" endtime="20201110 08:39:14.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.858" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:14.856" endtime="20201110 08:39:14.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.847" endtime="20201110 08:39:14.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.869" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:14.866" endtime="20201110 08:39:14.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.873" level="INFO">VALUE: 152372184</msg>
<status status="PASS" starttime="20201110 08:39:14.871" endtime="20201110 08:39:14.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.861" endtime="20201110 08:39:14.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.883" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:14.881" endtime="20201110 08:39:14.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.888" level="INFO">VALUE: [152382210, 152392207, 152402208, 152412208, 152422208, 152432208, 152442208, 152452208, 152462208, 152472208, 152482208, 152492208, 152502208, 152512208, 152522208, 152532208, 152542208, 152552208, 152562208, 152572208, 152582208, 152592208, 152602208, 152612208, 152622208, 152632208, 152642208, 152652208, 152662208, 152672208, 152682208, 152692208, 152702208, 152712208, 152722208, 152732208, 152742208, 152752208, 152762208, 152772208, 152782208, 152792208, 152802208, 152812208, 152822208, 152832208, 152842208, 152852208, 152862208, 152872208, 152882208, 152892208, 152902208, 152912208, 152922208, 152932208, 152942208, 152952208, 152962208, 152972208, 152982208, 152992208, 153002208, 153012208, 153022208, 153032208, 153042208, 153052208, 153062208, 153072208, 153082208, 153092208, 153102208, 153112208, 153122208, 153132208, 153142208, 153152208, 153162208, 153172208, 153182208, 153192208, 153202208, 153212208, 153222208, 153232208, 153242208, 153252208, 153262208, 153272208, 153282208, 153292208, 153302208, 153312208, 153322208, 153332208, 153342208, 153352208, 153362208, 153372208]</msg>
<status status="PASS" starttime="20201110 08:39:14.886" endtime="20201110 08:39:14.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.876" endtime="20201110 08:39:14.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.904" endtime="20201110 08:39:15.198"></status>
</kw>
<msg timestamp="20201110 08:39:15.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019085625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029112917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.900" endtime="20201110 08:39:15.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019085625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029112917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.205" endtime="20201110 08:39:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.213" endtime="20201110 08:39:15.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.895" endtime="20201110 08:39:15.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.891" endtime="20201110 08:39:15.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.240" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:15.217" endtime="20201110 08:39:15.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.245" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:15.244" endtime="20201110 08:39:15.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.247" level="INFO">VALUE: 0.019085625</msg>
<status status="PASS" starttime="20201110 08:39:15.246" endtime="20201110 08:39:15.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.241" endtime="20201110 08:39:15.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.253" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:15.252" endtime="20201110 08:39:15.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.255" level="INFO">VALUE: [0.029112917, 0.039110347, 0.049111944, 0.059112819, 0.069113361, 0.079114319, 0.089114847, 0.099115792, 0.109116306, 0.119117292, 0.129117778, 0.139118722, 0.14911925, 0.159120194, 0.16912075, 0.179121667, 0.189122208, 0.199123153, 0.209123694, 0.219124611, 0.229125153, 0.239126083, 0.249126653, 0.259127556, 0.269128097, 0.279129111, 0.289129569, 0.299130514, 0.309131042, 0.319131972, 0.329132514, 0.339133458, 0.349134042, 0.359134944, 0.369135472, 0.379136403, 0.389136944, 0.399137875, 0.409138431, 0.419139347, 0.429139903, 0.439140806, 0.449141347, 0.459142278, 0.469142806, 0.47914375, 0.489144264, 0.499145236, 0.509145722, 0.519146653, 0.529147194, 0.539148125, 0.549148653, 0.559149583, 0.569150111, 0.579151042, 0.589151583, 0.599152514, 0.609153042, 0.619153958, 0.629154514, 0.639155431, 0.649155986, 0.659156903, 0.669157431, 0.679158347, 0.689158903, 0.699159819, 0.709160347, 0.719161306, 0.729161819, 0.739162736, 0.749163278, 0.759164208, 0.76916475, 0.779165681, 0.789166208, 0.799167125, 0.809167667, 0.819168597, 0.829169139, 0.839170083, 0.849170597, 0.859171528, 0.869172056, 0.879172986, 0.889173528, 0.899174458, 0.909175, 0.919175917, 0.929176458, 0.939177375, 0.949177917, 0.959178847, 0.969179403, 0.979180319, 0.989180861, 0.999181792, 1.009182306, 1.01918325] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:15.254" endtime="20201110 08:39:15.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.249" endtime="20201110 08:39:15.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.258" endtime="20201110 08:39:15.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.261" endtime="20201110 08:39:15.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.260" endtime="20201110 08:39:15.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.256" endtime="20201110 08:39:15.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.686" endtime="20201110 08:39:15.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.525" endtime="20201110 08:39:15.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.524" endtime="20201110 08:39:15.282"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:15.285" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.293" endtime="20201110 08:39:17.406"></status>
</kw>
<msg timestamp="20201110 08:39:17.407" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154971534, 'start-iter': 1, 'wakeups': [154981564, 154991562, 15500156...</msg>
<status status="PASS" starttime="20201110 08:39:15.292" endtime="20201110 08:39:17.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.413" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 154971534, 'start-iter': 1, 'wakeups': [154981564, 154991562, 15500156...</msg>
<status status="PASS" starttime="20201110 08:39:17.409" endtime="20201110 08:39:17.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.416" endtime="20201110 08:39:17.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.289" endtime="20201110 08:39:17.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.287" endtime="20201110 08:39:17.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.428" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-iter': 1, 'start-time': 154971534, 'wakeups': [154981564, 154991562, 155001562, 155011562, 155021562, 155031562, 155041562, 155051562, 155061562, 155...</msg>
<status status="PASS" starttime="20201110 08:39:17.423" endtime="20201110 08:39:17.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.438" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:17.434" endtime="20201110 08:39:17.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.443" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:17.441" endtime="20201110 08:39:17.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.429" endtime="20201110 08:39:17.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.453" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:17.451" endtime="20201110 08:39:17.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.455" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:17.454" endtime="20201110 08:39:17.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.446" endtime="20201110 08:39:17.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.460" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:17.459" endtime="20201110 08:39:17.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.462" level="INFO">VALUE: 154971534</msg>
<status status="PASS" starttime="20201110 08:39:17.461" endtime="20201110 08:39:17.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.456" endtime="20201110 08:39:17.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.466" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:17.465" endtime="20201110 08:39:17.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.469" level="INFO">VALUE: [154981564, 154991562, 155001562, 155011562, 155021562, 155031562, 155041562, 155051562, 155061562, 155071562, 155081562, 155091562, 155101562, 155111562, 155121562, 155131562, 155141562, 155151562, 155161562, 155171562, 155181562, 155191562, 155201562, 155211562, 155221562, 155231562, 155241562, 155251562, 155261562, 155271562, 155281562, 155291562, 155301562, 155311562, 155321562, 155331562, 155341562, 155351562, 155361562, 155371562, 155381562, 155391562, 155401562, 155411562, 155421562, 155431562, 155441562, 155451562, 155461562, 155471562, 155481562, 155491562, 155501562, 155511562, 155521562, 155531562, 155541562, 155551562, 155561562, 155571562, 155581562, 155591562, 155601562, 155611562, 155621562, 155631562, 155641562, 155651562, 155661562, 155671562, 155681562, 155691562, 155701562, 155711562, 155721562, 155731562, 155741562, 155751562, 155761562, 155771562, 155781562, 155791562, 155801562, 155811562, 155821562, 155831562, 155841562, 155851562, 155861562, 155871562, 155881562, 155891562, 155901562, 155911562, 155921562, 155931562, 155941562, 155951562, 155961562, 155971562]</msg>
<status status="PASS" starttime="20201110 08:39:17.468" endtime="20201110 08:39:17.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.463" endtime="20201110 08:39:17.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.476" endtime="20201110 08:39:17.767"></status>
</kw>
<msg timestamp="20201110 08:39:17.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031959639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.475" endtime="20201110 08:39:17.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031959639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.771" endtime="20201110 08:39:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.780" endtime="20201110 08:39:17.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.472" endtime="20201110 08:39:17.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.470" endtime="20201110 08:39:17.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.809" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:17.785" endtime="20201110 08:39:17.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.814" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:17.813" endtime="20201110 08:39:17.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.816" level="INFO">VALUE: 0.021928639</msg>
<status status="PASS" starttime="20201110 08:39:17.815" endtime="20201110 08:39:17.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.810" endtime="20201110 08:39:17.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.821" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:17.820" endtime="20201110 08:39:17.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.823" level="INFO">VALUE: [0.031959639, 0.041958319, 0.051958847, 0.061959792, 0.071960333, 0.08196125, 0.091961792, 0.101962722, 0.111963292, 0.121964194, 0.131964736, 0.141965667, 0.151966208, 0.161967153, 0.171967708, 0.181968611, 0.191969153, 0.201970125, 0.211970639, 0.221971569, 0.231972097, 0.241973042, 0.251973611, 0.261974514, 0.271975111, 0.281975986, 0.291976528, 0.301977486, 0.311978042, 0.321978931, 0.331979472, 0.341980403, 0.351980944, 0.361981875, 0.371982417, 0.381983361, 0.391983889, 0.401984847, 0.411985375, 0.421986319, 0.431986833, 0.441987764, 0.451988333, 0.461989222, 0.471989764, 0.481990681, 0.491991222, 0.501992139, 0.511992736, 0.521993611, 0.531994139, 0.541995069, 0.551995611, 0.561996528, 0.571997069, 0.581998014, 0.591998542, 0.601999458, 0.612, 0.622000958, 0.632001472, 0.642002375, 0.652002944, 0.662003847, 0.672004375, 0.682005306, 0.692005931, 0.702006764, 0.712007347, 0.722008236, 0.732008764, 0.742009694, 0.75201025, 0.762011153, 0.772011708, 0.782012667, 0.792013194, 0.802014097, 0.812014625, 0.822015569, 0.832016083, 0.842017028, 0.852017556, 0.862018486, 0.872019014, 0.882019944, 0.8920205, 0.902021458, 0.912021944, 0.922022875, 0.932023417, 0.942024347, 0.952024875, 0.962025819, 0.972026347, 0.982027292, 0.992027806, 1.002028736, 1.012029264, 1.022030194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:17.822" endtime="20201110 08:39:17.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.817" endtime="20201110 08:39:17.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.827" endtime="20201110 08:39:17.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:17.830" endtime="20201110 08:39:17.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.829" endtime="20201110 08:39:17.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.825" endtime="20201110 08:39:17.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.286" endtime="20201110 08:39:17.851"></status>
</kw>
<msg timestamp="20201110 08:39:17.851" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.859" endtime="20201110 08:39:19.973"></status>
</kw>
<msg timestamp="20201110 08:39:19.974" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157537518, 'start-iter': 1, 'wakeups': [157547547, 157557546, 15756754...</msg>
<status status="PASS" starttime="20201110 08:39:17.858" endtime="20201110 08:39:19.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.980" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 157537518, 'start-iter': 1, 'wakeups': [157547547, 157557546, 15756754...</msg>
<status status="PASS" starttime="20201110 08:39:19.976" endtime="20201110 08:39:19.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.982" endtime="20201110 08:39:19.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.855" endtime="20201110 08:39:19.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.853" endtime="20201110 08:39:19.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.994" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-iter': 1, 'start-time': 157537518, 'wakeups': [157547547, 157557546, 157567546, 157577545, 157587545, 157597545, 157607547, 157617545, 157627545, 157...</msg>
<status status="PASS" starttime="20201110 08:39:19.990" endtime="20201110 08:39:19.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.003" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:20.001" endtime="20201110 08:39:20.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.007" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:20.005" endtime="20201110 08:39:20.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.995" endtime="20201110 08:39:20.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.017" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:20.016" endtime="20201110 08:39:20.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.019" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:20.018" endtime="20201110 08:39:20.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.011" endtime="20201110 08:39:20.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.026" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:20.025" endtime="20201110 08:39:20.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.028" level="INFO">VALUE: 157537518</msg>
<status status="PASS" starttime="20201110 08:39:20.027" endtime="20201110 08:39:20.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.021" endtime="20201110 08:39:20.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.033" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:20.032" endtime="20201110 08:39:20.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.036" level="INFO">VALUE: [157547547, 157557546, 157567546, 157577545, 157587545, 157597545, 157607547, 157617545, 157627545, 157637545, 157647547, 157657545, 157667545, 157677545, 157687547, 157697545, 157707545, 157717545, 157727547, 157737545, 157747545, 157757545, 157767547, 157777545, 157787545, 157797545, 157807547, 157817545, 157827545, 157837545, 157847547, 157857545, 157867545, 157877545, 157887547, 157897545, 157907545, 157917545, 157927547, 157937545, 157947545, 157957545, 157967547, 157977545, 157987545, 157997545, 158007547, 158017545, 158027545, 158037545, 158047547, 158057545, 158067545, 158077545, 158087547, 158097545, 158107545, 158117545, 158127547, 158137545, 158147545, 158157545, 158167547, 158177545, 158187545, 158197545, 158207547, 158217545, 158227545, 158237545, 158247547, 158257545, 158267545, 158277545, 158287547, 158297545, 158307545, 158317545, 158327547, 158337545, 158347545, 158357545, 158367547, 158377545, 158387545, 158397545, 158407547, 158417545, 158427545, 158437545, 158447547, 158457545, 158467545, 158477545, 158487547, 158497545, 158507545, 158517545, 158527547, 158537545]</msg>
<status status="PASS" starttime="20201110 08:39:20.034" endtime="20201110 08:39:20.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.030" endtime="20201110 08:39:20.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.043" endtime="20201110 08:39:20.335"></status>
</kw>
<msg timestamp="20201110 08:39:20.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019145042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.042" endtime="20201110 08:39:20.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019145042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.339" endtime="20201110 08:39:20.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.346" endtime="20201110 08:39:20.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.039" endtime="20201110 08:39:20.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.037" endtime="20201110 08:39:20.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.373" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:20.349" endtime="20201110 08:39:20.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.377" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:20.376" endtime="20201110 08:39:20.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.384" level="INFO">VALUE: 0.019145042</msg>
<status status="PASS" starttime="20201110 08:39:20.382" endtime="20201110 08:39:20.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.374" endtime="20201110 08:39:20.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.390" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:20.388" endtime="20201110 08:39:20.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.392" level="INFO">VALUE: [0.029175694, 0.039175722, 0.049175583, 0.059175514, 0.069176056, 0.07917725, 0.089179542, 0.099178444, 0.109178986, 0.119180194, 0.129182472, 0.139181389, 0.149181944, 0.159183139, 0.169185417, 0.179184333, 0.189184875, 0.199186097, 0.209188361, 0.219187278, 0.229187833, 0.239189028, 0.249191319, 0.25919025, 0.269190806, 0.279192, 0.289194306, 0.299193181, 0.309193722, 0.319194917, 0.329197222, 0.339196111, 0.349196639, 0.359197847, 0.369200111, 0.379199028, 0.389199556, 0.399200778, 0.409203042, 0.419201944, 0.429202486, 0.439203681, 0.449205972, 0.459204861, 0.469205403, 0.479206611, 0.489208875, 0.499207792, 0.509208347, 0.519209542, 0.529211819, 0.539210722, 0.549211264, 0.559212458, 0.569214722, 0.579213639, 0.589214181, 0.599215403, 0.609217653, 0.619216583, 0.629217097, 0.639218306, 0.649220583, 0.6592195, 0.669220042, 0.679221236, 0.689223514, 0.699222444, 0.709222972, 0.719224167, 0.729226431, 0.739225375, 0.749225889, 0.759227111, 0.769229361, 0.779228278, 0.789228819, 0.799230028, 0.809232292, 0.819231222, 0.829231736, 0.839233028, 0.849235264, 0.859234125, 0.869234667, 0.879235875, 0.889238181, 0.899237111, 0.909237597, 0.919238833, 0.929241069, 0.93924, 0.949240528, 0.959241722, 0.969244, 0.979242931, 0.989243458, 0.999244653, 1.009246931, 1.019245847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:20.391" endtime="20201110 08:39:20.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.385" endtime="20201110 08:39:20.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.395" endtime="20201110 08:39:20.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.399" endtime="20201110 08:39:20.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.397" endtime="20201110 08:39:20.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.394" endtime="20201110 08:39:20.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.852" endtime="20201110 08:39:20.420"></status>
</kw>
<msg timestamp="20201110 08:39:20.420" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.428" endtime="20201110 08:39:22.540"></status>
</kw>
<msg timestamp="20201110 08:39:22.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 160106240, 'start-iter': 1, 'wakeups': [160116269, 160126268, 16013626...</msg>
<status status="PASS" starttime="20201110 08:39:20.426" endtime="20201110 08:39:22.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.548" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 160106240, 'start-iter': 1, 'wakeups': [160116269, 160126268, 16013626...</msg>
<status status="PASS" starttime="20201110 08:39:22.544" endtime="20201110 08:39:22.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.550" endtime="20201110 08:39:22.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.424" endtime="20201110 08:39:22.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.422" endtime="20201110 08:39:22.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.561" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-iter': 1, 'start-time': 160106240, 'wakeups': [160116269, 160126268, 160136268, 160146268, 160156268, 160166268, 160176268, 160186268, 160196268, 160...</msg>
<status status="PASS" starttime="20201110 08:39:22.557" endtime="20201110 08:39:22.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.570" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:22.568" endtime="20201110 08:39:22.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.574" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:22.572" endtime="20201110 08:39:22.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.563" endtime="20201110 08:39:22.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.585" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:22.582" endtime="20201110 08:39:22.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.590" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:22.588" endtime="20201110 08:39:22.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.577" endtime="20201110 08:39:22.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.600" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:22.598" endtime="20201110 08:39:22.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.604" level="INFO">VALUE: 160106240</msg>
<status status="PASS" starttime="20201110 08:39:22.602" endtime="20201110 08:39:22.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.593" endtime="20201110 08:39:22.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.615" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:22.613" endtime="20201110 08:39:22.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.619" level="INFO">VALUE: [160116269, 160126268, 160136268, 160146268, 160156268, 160166268, 160176268, 160186268, 160196268, 160206268, 160216268, 160226268, 160236268, 160246268, 160256268, 160266268, 160276268, 160286268, 160296268, 160306268, 160316268, 160326268, 160336268, 160346268, 160356268, 160366268, 160376268, 160386268, 160396268, 160406268, 160416268, 160426268, 160436268, 160446268, 160456268, 160466268, 160476268, 160486268, 160496268, 160506268, 160516268, 160526268, 160536268, 160546268, 160556268, 160566268, 160576268, 160586268, 160596268, 160606268, 160616268, 160626268, 160636268, 160646268, 160656268, 160666268, 160676268, 160686268, 160696268, 160706268, 160716268, 160726268, 160736268, 160746268, 160756268, 160766268, 160776268, 160786268, 160796268, 160806268, 160816268, 160826268, 160836268, 160846268, 160856268, 160866268, 160876268, 160886268, 160896268, 160906268, 160916268, 160926268, 160936268, 160946268, 160956268, 160966268, 160976268, 160986268, 160996268, 161006268, 161016268, 161026268, 161036268, 161046268, 161056268, 161066268, 161076268, 161086268, 161096268, 161106268]</msg>
<status status="PASS" starttime="20201110 08:39:22.617" endtime="20201110 08:39:22.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.608" endtime="20201110 08:39:22.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.637" endtime="20201110 08:39:22.936"></status>
</kw>
<msg timestamp="20201110 08:39:22.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019100306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.634" endtime="20201110 08:39:22.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019100306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.940" endtime="20201110 08:39:22.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.947" endtime="20201110 08:39:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.626" endtime="20201110 08:39:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.623" endtime="20201110 08:39:22.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.974" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:22.951" endtime="20201110 08:39:22.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.979" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:22.978" endtime="20201110 08:39:22.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.981" level="INFO">VALUE: 0.019100306</msg>
<status status="PASS" starttime="20201110 08:39:22.980" endtime="20201110 08:39:22.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.975" endtime="20201110 08:39:22.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.987" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:22.986" endtime="20201110 08:39:22.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.989" level="INFO">VALUE: [0.029130958, 0.039130639, 0.049131181, 0.059132111, 0.069132694, 0.079133597, 0.089134125, 0.099135056, 0.109135611, 0.119136528, 0.129137083, 0.139138042, 0.149138542, 0.159139472, 0.169140014, 0.179140944, 0.189141486, 0.199142417, 0.209142958, 0.219143903, 0.229144444, 0.239145361, 0.249145917, 0.259146833, 0.269147403, 0.279148347, 0.289148847, 0.299149778, 0.309150333, 0.31915125, 0.329151792, 0.339152778, 0.349153278, 0.359154208, 0.36915475, 0.379155681, 0.389156236, 0.399157153, 0.409157681, 0.419158625, 0.429159139, 0.439160069, 0.449160611, 0.459161542, 0.469162139, 0.479162986, 0.489163542, 0.499164458, 0.509164986, 0.519165931, 0.529166458, 0.539167403, 0.549167917, 0.559168833, 0.569169375, 0.579170292, 0.589170847, 0.599171806, 0.609172292, 0.619173222, 0.629173764, 0.639174681, 0.649175236, 0.659176167, 0.669176681, 0.679177667, 0.689178181, 0.699179125, 0.709179611, 0.719180611, 0.729181083, 0.739182, 0.749182542, 0.759183458, 0.769184, 0.779184931, 0.789185458, 0.799186389, 0.809186944, 0.819187861, 0.829188389, 0.839189319, 0.849189847, 0.859190792, 0.869191319, 0.879192236, 0.889192778, 0.899193708, 0.909194236, 0.919195181, 0.929195722, 0.939196639, 0.949197181, 0.959198111, 0.969198639, 0.979199556, 0.989200097, 0.999201028, 1.009201569, 1.019202486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:22.988" endtime="20201110 08:39:22.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.982" endtime="20201110 08:39:22.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.992" endtime="20201110 08:39:22.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.996" endtime="20201110 08:39:23.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.994" endtime="20201110 08:39:23.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.991" endtime="20201110 08:39:23.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.420" endtime="20201110 08:39:23.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.284" endtime="20201110 08:39:23.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.283" endtime="20201110 08:39:23.017"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:23.020" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.029" endtime="20201110 08:39:25.141"></status>
</kw>
<msg timestamp="20201110 08:39:25.142" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162707098, 'start-iter': 1, 'wakeups': [162717132, 162727129, 16273713...</msg>
<status status="PASS" starttime="20201110 08:39:23.027" endtime="20201110 08:39:25.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 162707098, 'start-iter': 1, 'wakeups': [162717132, 162727129, 16273713...</msg>
<status status="PASS" starttime="20201110 08:39:25.145" endtime="20201110 08:39:25.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.151" endtime="20201110 08:39:25.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.024" endtime="20201110 08:39:25.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.022" endtime="20201110 08:39:25.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:25.163" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-iter': 1, 'start-time': 162707098, 'wakeups': [162717132, 162727129, 162737130, 162747131, 162757129, 162767130, 162777130, 162787129, 162797128, 162...</msg>
<status status="PASS" starttime="20201110 08:39:25.159" endtime="20201110 08:39:25.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:25.169" endtime="20201110 08:39:25.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.176" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:25.174" endtime="20201110 08:39:25.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.164" endtime="20201110 08:39:25.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.186" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:25.184" endtime="20201110 08:39:25.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.191" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:25.188" endtime="20201110 08:39:25.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.179" endtime="20201110 08:39:25.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.201" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:25.199" endtime="20201110 08:39:25.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.205" level="INFO">VALUE: 162707098</msg>
<status status="PASS" starttime="20201110 08:39:25.203" endtime="20201110 08:39:25.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.194" endtime="20201110 08:39:25.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.217" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:25.213" endtime="20201110 08:39:25.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.220" levelmsg>
<status status="PASS" starttime="20201110 08:39:25.218" endtime="20201110 08:39:25.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.208" endtime="20201110 08:39:25.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.227" endtime="20201110 08:39:25.516"></status>
</kw>
<msg timestamp="20201110 08:39:25.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:25.225" endtime="20201110 08:39:25.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:25.520" endtime="20201110 08:39:25.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.527" endtime="20201110 08:39:25.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.223" endtime="20201110 08:39:25.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.221" endtime="20201110 08:39:25.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:25.555" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:25.531" endtime="20201110 08:39:25.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.559" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:25.558" endtime="20201110 08:39:25.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.561" level="INFO">VALUE: 0.022932417</msg>
<status status="PASS" starttime="20201110 08:39:25.560" endtime="20201110 08:39:25.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.556" endtime="20201110 08:39:25.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.567" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:25.566" endtime="20201110 08:39:25.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.569" level="INFO">VALUE: [0.032967569, 0.042965569, 0.052967306, 0.062969167, 0.072968319, 0.082969639, 0.092970181, 0.102970722, 0.112970194, 0.122972597, 0.132973194, 0.142973722, 0.152973167, 0.162975528, 0.172976069, 0.182976597, 0.192976083, 0.202978514, 0.212979014, 0.222979556, 0.232979014, 0.242981431, 0.252981958, 0.2629825, 0.272981958, 0.282984375, 0.292984931, 0.302985528, 0.312984903, 0.322987319, 0.332987875, 0.342988403, 0.352987847, 0.362990264, 0.372990806, 0.382991333, 0.392990792, 0.402993236, 0.412993778, 0.42299425, 0.432993708, 0.442996139, 0.452996667, 0.462997264, 0.472996639, 0.482999042, 0.492999583, 0.503000097, 0.512999556, 0.523001958, 0.533002514, 0.543003014, 0.553002472, 0.563004903, 0.573005417, 0.583005944, 0.593005417, 0.603007819, 0.613008347, 0.623008861, 0.633008319, 0.643010736, 0.653011264, 0.663011792, 0.673011264, 0.683013653, 0.693014194, 0.703014722, 0.713014181, 0.723016597, 0.733017111, 0.743017639, 0.753017111, 0.7630195, 0.773020083, 0.783020569, 0.793020028, 0.803022431, 0.813022972, 0.8230235, 0.833022958, 0.843025375, 0.853025903, 0.863026417, 0.873025889, 0.883028306, 0.893028819, 0.903029361, 0.913028819, 0.923031222, 0.93303175, 0.943032278, 0.953031736, 0.963034139, 0.973034681, 0.983035236, 0.993034667, 1.003037083, 1.013037611, 1.023038125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:25.568" endtime="20201110 08:39:25.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.563" endtime="20201110 08:39:25.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.572" endtime="20201110 08:39:25.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:25.575" endtime="20201110 08:39:25.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.574" endtime="20201110 08:39:25.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.570" endtime="20201110 08:39:25.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.020" endtime="20201110 08:39:25.601"></status>
</kw>
<msg timestamp="20201110 08:39:25.601" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.609" endtime="20201110 08:39:27.722"></status>
</kw>
<msg timestamp="20201110 08:39:27.723" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165287572, 'start-iter': 1, 'wakeups': [165297605, 165307603, 16531760...</msg>
<status status="PASS" starttime="20201110 08:39:25.608" endtime="20201110 08:39:27.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 165287572, 'start-iter': 1, 'wakeups': [165297605, 165307603, 16531760...</msg>
<status status="PASS" starttime="20201110 08:39:27.726" endtime="20201110 08:39:27.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.732" endtime="20201110 08:39:27.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.605" endtime="20201110 08:39:27.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.603" endtime="20201110 08:39:27.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:27.743" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-iter': 1, 'start-time': 165287572, 'wakeups': [165297605, 165307603, 165317603, 165327604, 165337604, 165347603, 165357602, 165367604, 165377604, 165...</msg>
<status status="PASS" starttime="20201110 08:39:27.739" endtime="20201110 08:39:27.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.754" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:27.750" endtime="20201110 08:39:27.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.758" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:27.756" endtime="20201110 08:39:27.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.745" endtime="20201110 08:39:27.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.769" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:27.767" endtime="20201110 08:39:27.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.773" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:27.771" endtime="20201110 08:39:27.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.761" endtime="20201110 08:39:27.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.780" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:27.779" endtime="20201110 08:39:27.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.782" level="INFO">VALUE: 165287572</msg>
<status status="PASS" starttime="20201110 08:39:27.781" endtime="20201110 08:39:27.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.776" endtime="20201110 08:39:27.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.786" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:27.785" endtime="20201110 08:39:27.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.789" levelmsg>
<status status="PASS" starttime="20201110 08:39:27.788" endtime="20201110 08:39:27.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.783" endtime="20201110 08:39:27.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.797" endtime="20201110 08:39:28.087"></status>
</kw>
<msg timestamp="20201110 08:39:28.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033901667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:27.795" endtime="20201110 08:39:28.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023866778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033901667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:28.091" endtime="20201110 08:39:28.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.099" endtime="20201110 08:39:28.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.792" endtime="20201110 08:39:28.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.791" endtime="20201110 08:39:28.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:28.127" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:28.102" endtime="20201110 08:39:28.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.132" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:28.131" endtime="20201110 08:39:28.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.134" level="INFO">VALUE: 0.023866778</msg>
<status status="PASS" starttime="20201110 08:39:28.133" endtime="20201110 08:39:28.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.128" endtime="20201110 08:39:28.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.139" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:28.138" endtime="20201110 08:39:28.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.142" level="INFO">VALUE: [0.033901667, 0.043900236, 0.053901139, 0.063902556, 0.073903083, 0.083903611, 0.093903111, 0.103905486, 0.113906028, 0.123906556, 0.133906014, 0.143908444, 0.153908972, 0.1639095, 0.173908972, 0.183911375, 0.193911972, 0.203912444, 0.213911931, 0.223914319, 0.233914861, 0.243915403, 0.253914847, 0.263917264, 0.273917819, 0.283918333, 0.293917792, 0.303920208, 0.31392075, 0.323921278, 0.33392075, 0.343923153, 0.353923694, 0.363924278, 0.373923694, 0.383926111, 0.393926653, 0.403927181, 0.413926639, 0.423929042, 0.433929569, 0.443930097, 0.453929542, 0.463931958, 0.473932486, 0.483933028, 0.493932472, 0.503934875, 0.513935444, 0.523935986, 0.533935389, 0.543937833, 0.553938361, 0.563938861, 0.573938319, 0.583940792, 0.59394125, 0.603941778, 0.613941236, 0.623943653, 0.633944181, 0.643944708, 0.653944153, 0.663946569, 0.673947097, 0.683947639, 0.693947083, 0.7039495, 0.713950028, 0.723950569, 0.733950014, 0.743952431, 0.753952958, 0.763953472, 0.773952986, 0.783955361, 0.793955875, 0.803956403, 0.813955875, 0.823958264, 0.833958806, 0.843959347, 0.853958792, 0.863961194, 0.87396175, 0.88396225, 0.893961708, 0.903964125, 0.913964653, 0.923965208, 0.933964708, 0.943967042, 0.953967583, 0.963968111, 0.973967569, 0.983969972, 0.993970528, 1.003971042, 1.013970486, 1.023972917] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:28.141" endtime="20201110 08:39:28.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.135" endtime="20201110 08:39:28.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.145" endtime="20201110 08:39:28.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:28.148" endtime="20201110 08:39:28.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.147" endtime="20201110 08:39:28.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.143" endtime="20201110 08:39:28.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.602" endtime="20201110 08:39:28.169"></status>
</kw>
<msg timestamp="20201110 08:39:28.169" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.178" endtime="20201110 08:39:30.292"></status>
</kw>
<msg timestamp="20201110 08:39:30.293" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 167856675, 'start-iter': 1, 'wakeups': [167866708, 167876706, 16788670...</msg>
<status status="PASS" starttime="20201110 08:39:28.176" endtime="20201110 08:39:30.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 167856675, 'start-iter': 1, 'wakeups': [167866708, 167876706, 16788670...</msg>
<status status="PASS" starttime="20201110 08:39:30.296" endtime="20201110 08:39:30.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.302" endtime="20201110 08:39:30.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.173" endtime="20201110 08:39:30.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.171" endtime="20201110 08:39:30.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:30.314" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-iter': 1, 'start-time': 167856675, 'wakeups': [167866708, 167876706, 167886707, 167896706, 167906706, 167916707, 167926707, 167936706, 167946706, 167...</msg>
<status status="PASS" starttime="20201110 08:39:30.310" endtime="20201110 08:39:30.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.323" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:30.321" endtime="20201110 08:39:30.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.328" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:30.325" endtime="20201110 08:39:30.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.316" endtime="20201110 08:39:30.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.338" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:30.336" endtime="20201110 08:39:30.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.341" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:30.340" endtime="20201110 08:39:30.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.331" endtime="20201110 08:39:30.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.347" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:30.346" endtime="20201110 08:39:30.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.349" level="INFO">VALUE: 167856675</msg>
<status status="PASS" starttime="20201110 08:39:30.348" endtime="20201110 08:39:30.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.342" endtime="20201110 08:39:30.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.355" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:30.354" endtime="20201110 08:39:30.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.357" levelmsg>
<status status="PASS" starttime="20201110 08:39:30.356" endtime="20201110 08:39:30.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.351" endtime="20201110 08:39:30.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.365" endtime="20201110 08:39:30.656"></status>
</kw>
<msg timestamp="20201110 08:39:30.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029995361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.363" endtime="20201110 08:39:30.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029995361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.666" endtime="20201110 08:39:30.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.674" endtime="20201110 08:39:30.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.360" endtime="20201110 08:39:30.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.359" endtime="20201110 08:39:30.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:30.701" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:30.677" endtime="20201110 08:39:30.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.706" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:30.705" endtime="20201110 08:39:30.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.708" level="INFO">VALUE: 0.019960889</msg>
<status status="PASS" starttime="20201110 08:39:30.707" endtime="20201110 08:39:30.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.702" endtime="20201110 08:39:30.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.714" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:30.713" endtime="20201110 08:39:30.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.717" level="INFO">VALUE: [0.029995361, 0.039994014, 0.049995375, 0.059995653, 0.069996014, 0.079997792, 0.089998319, 0.099998625, 0.109998986, 0.120000722, 0.130001264, 0.140001542, 0.150001917, 0.160003694, 0.170004222, 0.1800045, 0.190004861, 0.200006639, 0.210007181, 0.220007444, 0.230007819, 0.240009569, 0.250010139, 0.260010403, 0.270010778, 0.280012528, 0.290013069, 0.300013347, 0.31001375, 0.3200155, 0.330016042, 0.340016306, 0.350016667, 0.360018444, 0.370018986, 0.38001925, 0.390019667, 0.400021389, 0.410021917, 0.420022208, 0.430022556, 0.440024333, 0.450024847, 0.460025125, 0.470025486, 0.48002725, 0.490027778, 0.500028042, 0.510028417, 0.520030167, 0.530030694, 0.540030972, 0.550031333, 0.560033083, 0.570033639, 0.580033903, 0.590034278, 0.600036028, 0.610036556, 0.620036833, 0.630037222, 0.640038944, 0.6500395, 0.660039778, 0.670040139, 0.680041889, 0.690042403, 0.700042681, 0.710043042, 0.720044806, 0.730045347, 0.740045625, 0.750045972, 0.760047736, 0.770048306, 0.780048542, 0.790048917, 0.800050681, 0.810051208, 0.820051542, 0.830051861, 0.840053653, 0.850054125, 0.860054472, 0.870054764, 0.880056556, 0.890057069, 0.900057333, 0.910057694, 0.920059472, 0.930059986, 0.940060319, 0.950060625, 0.960062389, 0.970062931, 0.980063208, 0.990063569, 1.000065319, 1.010065875, 1.020066167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:30.716" endtime="20201110 08:39:30.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.710" endtime="20201110 08:39:30.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.720" endtime="20201110 08:39:30.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:30.724" endtime="20201110 08:39:30.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.722" endtime="20201110 08:39:30.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.718" endtime="20201110 08:39:30.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.170" endtime="20201110 08:39:30.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.018" endtime="20201110 08:39:30.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.017" endtime="20201110 08:39:30.745"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:30.748" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.756" endtime="20201110 08:39:32.870"></status>
</kw>
<msg timestamp="20201110 08:39:32.871" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170434402, 'start-iter': 1, 'wakeups': [170444440, 170454436, 17046443...</msg>
<status status="PASS" starttime="20201110 08:39:30.754" endtime="20201110 08:39:32.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 170434402, 'start-iter': 1, 'wakeups': [170444440, 170454436, 17046443...</msg>
<status status="PASS" starttime="20201110 08:39:32.874" endtime="20201110 08:39:32.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.881" endtime="20201110 08:39:32.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.752" endtime="20201110 08:39:32.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.750" endtime="20201110 08:39:32.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:32.893" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-iter': 1, 'start-time': 170434402, 'wakeups': [170444440, 170454436, 170464436, 170474436, 170484437, 170494437, 170504436, 170514436, 170524437, 170...</msg>
<status status="PASS" starttime="20201110 08:39:32.888" endtime="20201110 08:39:32.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.902" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:32.899" endtime="20201110 08:39:32.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.906" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:32.904" endtime="20201110 08:39:32.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.894" endtime="20201110 08:39:32.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.917" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:32.915" endtime="20201110 08:39:32.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.922" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:32.920" endtime="20201110 08:39:32.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.910" endtime="20201110 08:39:32.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.933" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:32.930" endtime="20201110 08:39:32.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.937" level="INFO">VALUE: 170434402</msg>
<status status="PASS" starttime="20201110 08:39:32.935" endtime="20201110 08:39:32.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.925" endtime="20201110 08:39:32.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.948" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:32.946" endtime="20201110 08:39:32.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.953" levelmsg>
<status status="PASS" starttime="20201110 08:39:32.950" endtime="20201110 08:39:32.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.940" endtime="20201110 08:39:32.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.971" endtime="20201110 08:39:33.266"></status>
</kw>
<msg timestamp="20201110 08:39:33.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032521083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.968" endtime="20201110 08:39:33.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032521083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:33.270" endtime="20201110 08:39:33.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.277" endtime="20201110 08:39:33.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.960" endtime="20201110 08:39:33.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.956" endtime="20201110 08:39:33.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:33.305" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:33.281" endtime="20201110 08:39:33.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.310" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:33.309" endtime="20201110 08:39:33.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.312" level="INFO">VALUE: 0.022481944</msg>
<status status="PASS" starttime="20201110 08:39:33.311" endtime="20201110 08:39:33.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.306" endtime="20201110 08:39:33.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.318" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:33.317" endtime="20201110 08:39:33.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.320" level="INFO">VALUE: [0.032521083, 0.042518514, 0.052519347, 0.062520056, 0.072521292, 0.082522458, 0.092522292, 0.102523, 0.112524236, 0.122525417, 0.132525236, 0.142526, 0.152527181, 0.162528361, 0.172528194, 0.182528903, 0.192530181, 0.202531361, 0.212531139, 0.222531861, 0.232533083, 0.242534278, 0.252534083, 0.262534861, 0.272536028, 0.282537208, 0.292537042, 0.302537736, 0.312539, 0.322540153, 0.33254, 0.342540694, 0.352541944, 0.362543111, 0.372542944, 0.382543639, 0.392544889, 0.402546111, 0.412545903, 0.422546597, 0.432547847, 0.442549028, 0.452548861, 0.462549542, 0.472550778, 0.482551944, 0.492551792, 0.502552486, 0.512553722, 0.522554917, 0.532554722, 0.542555389, 0.552556639, 0.562557806, 0.572557639, 0.582558319, 0.592559569, 0.602560736, 0.612560542, 0.622561236, 0.632562486, 0.642563667, 0.652563472, 0.662564167, 0.672565403, 0.682566569, 0.692566403, 0.702567097, 0.712568347, 0.7225695, 0.732569333, 0.742570028, 0.752571292, 0.762572444, 0.77257225, 0.782572972, 0.792574194, 0.802575375, 0.812575181, 0.822575875, 0.832577139, 0.842578292, 0.852578139, 0.862578847, 0.872580042, 0.882581222, 0.892581042, 0.902581736, 0.912582986, 0.922584194, 0.932583972, 0.942584667, 0.952585903, 0.962587083, 0.972586903, 0.982587597, 0.992588847, 1.00259, 1.012589833, 1.022590542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:33.319" endtime="20201110 08:39:33.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.314" endtime="20201110 08:39:33.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.323" endtime="20201110 08:39:33.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:33.327" endtime="20201110 08:39:33.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.325" endtime="20201110 08:39:33.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.321" endtime="20201110 08:39:33.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.748" endtime="20201110 08:39:33.348"></status>
</kw>
<msg timestamp="20201110 08:39:33.348" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.358" endtime="20201110 08:39:35.472"></status>
</kw>
<msg timestamp="20201110 08:39:35.473" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 173036386, 'start-iter': 1, 'wakeups': [173046425, 173056420, 17306642...</msg>
<status status="PASS" starttime="20201110 08:39:33.356" endtime="20201110 08:39:35.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 173036386, 'start-iter': 1, 'wakeups': [173046425, 173056420, 17306642...</msg>
<status status="PASS" starttime="20201110 08:39:35.475" endtime="20201110 08:39:35.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.482" endtime="20201110 08:39:35.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.353" endtime="20201110 08:39:35.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.350" endtime="20201110 08:39:35.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.494" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-iter': 1, 'start-time': 173036386, 'wakeups': [173046425, 173056420, 173066420, 173076420, 173086421, 173096421, 173106420, 173116420, 173126421, 173...</msg>
<status status="PASS" starttime="20201110 08:39:35.489" endtime="20201110 08:39:35.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.503" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:35.501" endtime="20201110 08:39:35.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.508" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:35.506" endtime="20201110 08:39:35.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.496" endtime="20201110 08:39:35.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.519" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:35.517" endtime="20201110 08:39:35.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.523" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:35.521" endtime="20201110 08:39:35.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.511" endtime="20201110 08:39:35.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.531" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:35.530" endtime="20201110 08:39:35.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.533" level="INFO">VALUE: 173036386</msg>
<status status="PASS" starttime="20201110 08:39:35.532" endtime="20201110 08:39:35.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.527" endtime="20201110 08:39:35.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.538" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:35.537" endtime="20201110 08:39:35.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.540" levelmsg>
<status status="PASS" starttime="20201110 08:39:35.539" endtime="20201110 08:39:35.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.534" endtime="20201110 08:39:35.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.548" endtime="20201110 08:39:35.838"></status>
</kw>
<msg timestamp="20201110 08:39:35.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031407181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:35.546" endtime="20201110 08:39:35.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031407181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:35.842" endtime="20201110 08:39:35.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.850" endtime="20201110 08:39:35.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.543" endtime="20201110 08:39:35.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.542" endtime="20201110 08:39:35.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.878" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:35.853" endtime="20201110 08:39:35.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.883" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:35.882" endtime="20201110 08:39:35.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.885" level="INFO">VALUE: 0.021367722</msg>
<status status="PASS" starttime="20201110 08:39:35.884" endtime="20201110 08:39:35.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.879" endtime="20201110 08:39:35.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.891" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:35.890" endtime="20201110 08:39:35.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.893" level="INFO">VALUE: [0.031407181, 0.041403639, 0.051404458, 0.061405167, 0.071406417, 0.081407569, 0.091407417, 0.101408125, 0.111409347, 0.121410542, 0.131410347, 0.141411056, 0.151412292, 0.1614135, 0.171413319, 0.181414, 0.19141525, 0.201416417, 0.21141625, 0.221416944, 0.231418194, 0.241419389, 0.251419208, 0.261419903, 0.271421153, 0.281422319, 0.291422153, 0.301422847, 0.311424097, 0.321425292, 0.331425111, 0.341425806, 0.351427056, 0.361428222, 0.371428056, 0.38142875, 0.39143, 0.401431222, 0.411431, 0.421431681, 0.431432917, 0.441434097, 0.451433944, 0.461434667, 0.471435847, 0.481437014, 0.491436861, 0.501437528, 0.511438764, 0.521439931, 0.531439778, 0.541440472, 0.551441708, 0.561442861, 0.571442694, 0.581443389, 0.591444639, 0.601445792, 0.611445625, 0.621446333, 0.631447583, 0.641448736, 0.651448583, 0.66144925, 0.671450472, 0.681451639, 0.691451472, 0.701452181, 0.711453403, 0.721454583, 0.731454417, 0.741455097, 0.751456333, 0.761457542, 0.771457333, 0.781458028, 0.791459306, 0.801460444, 0.811460264, 0.821460958, 0.831462194, 0.841463361, 0.851463194, 0.861463889, 0.871465139, 0.881466306, 0.891466125, 0.901466819, 0.911468056, 0.921469222, 0.931469056, 0.941469778, 0.951471, 0.961472167, 0.971471986, 0.981472694, 0.991473917, 1.001475083, 1.011474917, 1.021475611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:35.892" endtime="20201110 08:39:35.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.887" endtime="20201110 08:39:35.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.897" endtime="20201110 08:39:35.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:35.900" endtime="20201110 08:39:35.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.898" endtime="20201110 08:39:35.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.895" endtime="20201110 08:39:35.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.348" endtime="20201110 08:39:35.921"></status>
</kw>
<msg timestamp="20201110 08:39:35.921" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.930" endtime="20201110 08:39:38.043"></status>
</kw>
<msg timestamp="20201110 08:39:38.045" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 175608107, 'start-iter': 1, 'wakeups': [175618145, 175628141, 17563814...</msg>
<status status="PASS" starttime="20201110 08:39:35.928" endtime="20201110 08:39:38.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.051" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 175608107, 'start-iter': 1, 'wakeups': [175618145, 175628141, 17563814...</msg>
<status status="PASS" starttime="20201110 08:39:38.047" endtime="20201110 08:39:38.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.053" endtime="20201110 08:39:38.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.925" endtime="20201110 08:39:38.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.923" endtime="20201110 08:39:38.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.065" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-iter': 1, 'start-time': 175608107, 'wakeups': [175618145, 175628141, 175638142, 175648141, 175658142, 175668142, 175678141, 175688141, 175698142, 175...</msg>
<status status="PASS" starttime="20201110 08:39:38.061" endtime="20201110 08:39:38.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.076" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:38.074" endtime="20201110 08:39:38.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.081" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:38.079" endtime="20201110 08:39:38.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.067" endtime="20201110 08:39:38.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.087" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:38.085" endtime="20201110 08:39:38.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.089" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:38.088" endtime="20201110 08:39:38.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.083" endtime="20201110 08:39:38.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.094" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:38.093" endtime="20201110 08:39:38.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.096" level="INFO">VALUE: 175608107</msg>
<status status="PASS" starttime="20201110 08:39:38.095" endtime="20201110 08:39:38.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.091" endtime="20201110 08:39:38.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.101" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:38.100" endtime="20201110 08:39:38.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.104" levelmsg>
<status status="PASS" starttime="20201110 08:39:38.103" endtime="20201110 08:39:38.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.098" endtime="20201110 08:39:38.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.111" endtime="20201110 08:39:38.403"></status>
</kw>
<msg timestamp="20201110 08:39:38.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029813292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.110" endtime="20201110 08:39:38.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029813292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.407" endtime="20201110 08:39:38.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.415" endtime="20201110 08:39:38.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.107" endtime="20201110 08:39:38.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.105" endtime="20201110 08:39:38.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.443" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:38.419" endtime="20201110 08:39:38.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.448" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:38.446" endtime="20201110 08:39:38.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.450" level="INFO">VALUE: 0.019774597</msg>
<status status="PASS" starttime="20201110 08:39:38.449" endtime="20201110 08:39:38.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.444" endtime="20201110 08:39:38.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.455" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:38.454" endtime="20201110 08:39:38.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.458" level="INFO">VALUE: [0.029813292, 0.039810694, 0.049812667, 0.059812333, 0.069813583, 0.07981475, 0.089814583, 0.099815278, 0.109816528, 0.119817694, 0.129817528, 0.13981825, 0.149819472, 0.159820653, 0.1698205, 0.179821181, 0.189822431, 0.199823625, 0.209823444, 0.219824167, 0.229825375, 0.239826569, 0.249826375, 0.259827083, 0.269828319, 0.279829514, 0.289829333, 0.299830028, 0.309831278, 0.319832458, 0.329832264, 0.339832958, 0.349834222, 0.359835361, 0.369835194, 0.379835903, 0.389837125, 0.399838306, 0.409838111, 0.419838806, 0.429840042, 0.439841264, 0.449841042, 0.459841736, 0.469843, 0.479844153, 0.489843972, 0.499844736, 0.509845903, 0.519847069, 0.529846889, 0.539847583, 0.549848819, 0.559849986, 0.569849833, 0.579850528, 0.58985175, 0.599852972, 0.60985275, 0.619853444, 0.629854764, 0.639855861, 0.649855694, 0.659856375, 0.669857611, 0.679858833, 0.689858611, 0.699859333, 0.709860556, 0.719861708, 0.729861542, 0.739862236, 0.749863472, 0.759864639, 0.769864458, 0.779865167, 0.789866403, 0.799867583, 0.809867389, 0.819868097, 0.829869333, 0.839870514, 0.849870319, 0.859871042, 0.869872278, 0.879873431, 0.889873333, 0.899873958, 0.909875194, 0.919876389, 0.929876181, 0.939876917, 0.949878125, 0.959879292, 0.969879111, 0.979879806, 0.989881042, 0.999882222, 1.009882042, 1.019882736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:38.456" endtime="20201110 08:39:38.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.451" endtime="20201110 08:39:38.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.462" endtime="20201110 08:39:38.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.466" endtime="20201110 08:39:38.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.464" endtime="20201110 08:39:38.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.460" endtime="20201110 08:39:38.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.922" endtime="20201110 08:39:38.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.746" endtime="20201110 08:39:38.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.745" endtime="20201110 08:39:38.487"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:38.490" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.498" endtime="20201110 08:39:40.612"></status>
</kw>
<msg timestamp="20201110 08:39:40.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178176937, 'start-iter': 1, 'wakeups': [178186979, 178196976, 178206...</msg>
<status status="PASS" starttime="20201110 08:39:38.497" endtime="20201110 08:39:40.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.620" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 178176937, 'start-iter': 1, 'wakeups': [178186979, 178196976, 178206...</msg>
<status status="PASS" starttime="20201110 08:39:40.616" endtime="20201110 08:39:40.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.622" endtime="20201110 08:39:40.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.494" endtime="20201110 08:39:40.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.492" endtime="20201110 08:39:40.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:40.634" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-iter': 1, 'start-time': 178176937, 'wakeups': [178186979, 178196976, 178206976, 178216975, 178226976, 178236976, 178246976, 178256975, 178266976, 17...</msg>
<status status="PASS" starttime="20201110 08:39:40.630" endtime="20201110 08:39:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.643" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:40.641" endtime="20201110 08:39:40.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.648" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:40.646" endtime="20201110 08:39:40.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.636" endtime="20201110 08:39:40.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.659" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:40.656" endtime="20201110 08:39:40.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.666" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:40.664" endtime="20201110 08:39:40.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.651" endtime="20201110 08:39:40.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.677" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:40.675" endtime="20201110 08:39:40.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.682" level="INFO">VALUE: 178176937</msg>
<status status="PASS" starttime="20201110 08:39:40.680" endtime="20201110 08:39:40.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.670" endtime="20201110 08:39:40.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.693" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:40.690" endtime="20201110 08:39:40.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.698" level="INFO">VALUE: [178186979, 178196976, 178206976, 178216975, 178226976, 178236976, 178246976, 178256975, 178266976, 178276976, 178286976, 178296975, 178306976, 178316976, 178326976, 178336975, 178346976, 178356976, 178366976, 178376975, 178386976, 178396976, 178406976, 178416975, 178426976, 178436976, 178446976, 178456975, 178466976, 178476976, 178486976, 178496975, 178506976, 178516976, 178526976, 178536975, 178546976, 178556976, 178566976, 178576975, 178586976, 178596976, 178606976, 178616975, 178626976, 178636976, 178646976, 178656975, 178666976, 178676976, 178686976, 178696975, 178706976, 178716976, 178726976, 178736975, 178746976, 178756976, 178766976, 178776975, 178786976, 178796976, 178806976, 178816975, 178826976, 178836976, 178846976, 178856975, 178866976, 178876976, 178886976, 178896975, 178906976, 178916976, 178926976, 178936975, 178946976, 178956976, 178966976, 178976975, 178986976, 178996976, 179006976, 179016975, 179026976, 179036976, 179046976, 179056975, 179066976, 179076976, 179086976, 179096975, 179106976, 179116976, 179126976, 179136975, 179146976, 179156976, 179166976, 179176975]</msg>
<status status="PASS" starttime="20201110 08:39:40.695" endtime="20201110 08:39:40.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.685" endtime="20201110 08:39:40.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.715" endtime="20201110 08:39:41.012"></status>
</kw>
<msg timestamp="20201110 08:39:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032658153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.711" endtime="20201110 08:39:41.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032658153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.016" endtime="20201110 08:39:41.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.024" endtime="20201110 08:39:41.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.706" endtime="20201110 08:39:41.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.702" endtime="20201110 08:39:41.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.051" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:41.027" endtime="20201110 08:39:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.057" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:41.056" endtime="20201110 08:39:41.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.059" level="INFO">VALUE: 0.022615306</msg>
<status status="PASS" starttime="20201110 08:39:41.058" endtime="20201110 08:39:41.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.052" endtime="20201110 08:39:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.064" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:41.063" endtime="20201110 08:39:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.067" level="INFO">VALUE: [0.032658153, 0.042656417, 0.052657264, 0.062657, 0.072658014, 0.082659375, 0.092660208, 0.102659944, 0.112660944, 0.122662361, 0.132663153, 0.142662903, 0.152663903, 0.162665264, 0.172666111, 0.182665833, 0.192666833, 0.202668194, 0.212669056, 0.222668792, 0.232669778, 0.242671153, 0.252672, 0.262671736, 0.272672722, 0.282674097, 0.292674944, 0.302674736, 0.312675667, 0.322677042, 0.332677931, 0.342677625, 0.352678639, 0.362680014, 0.372680847, 0.382680569, 0.392681569, 0.402682958, 0.412683792, 0.422683528, 0.432684514, 0.442685889, 0.452686792, 0.462686472, 0.472687458, 0.482688819, 0.492689667, 0.502689389, 0.512690389, 0.522691764, 0.532692597, 0.542692319, 0.552693306, 0.562694681, 0.572695514, 0.582695236, 0.592696236, 0.602697597, 0.612698458, 0.622698181, 0.632699167, 0.642700556, 0.652701361, 0.662701083, 0.672702069, 0.682703458, 0.692704292, 0.702704014, 0.712705, 0.722706375, 0.732707222, 0.742706958, 0.752707944, 0.762709319, 0.772710194, 0.782709917, 0.792710861, 0.802712222, 0.812713069, 0.822712847, 0.832713792, 0.842715153, 0.852716014, 0.86271575, 0.872716708, 0.882718083, 0.892718931, 0.902718653, 0.912719653, 0.922721, 0.932721889, 0.942721597, 0.952722583, 0.962723931, 0.972724778, 0.982724514, 0.992725486, 1.002726861, 1.012727708, 1.022727431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:41.066" endtime="20201110 08:39:41.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.060" endtime="20201110 08:39:41.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.070" endtime="20201110 08:39:41.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.073" endtime="20201110 08:39:41.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.072" endtime="20201110 08:39:41.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.068" endtime="20201110 08:39:41.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.491" endtime="20201110 08:39:41.095"></status>
</kw>
<msg timestamp="20201110 08:39:41.095" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.103" endtime="20201110 08:39:43.217"></status>
</kw>
<msg timestamp="20201110 08:39:43.218" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180781920, 'start-iter': 1, 'wakeups': [180791963, 180801960, 180811...</msg>
<status status="PASS" starttime="20201110 08:39:41.102" endtime="20201110 08:39:43.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.224" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 180781920, 'start-iter': 1, 'wakeups': [180791963, 180801960, 180811...</msg>
<status status="PASS" starttime="20201110 08:39:43.221" endtime="20201110 08:39:43.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.227" endtime="20201110 08:39:43.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.099" endtime="20201110 08:39:43.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.097" endtime="20201110 08:39:43.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:43.239" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-iter': 1, 'start-time': 180781920, 'wakeups': [180791963, 180801960, 180811959, 180821959, 180831958, 180841960, 180851959, 180861959, 180871958, 18...</msg>
<status status="PASS" starttime="20201110 08:39:43.234" endtime="20201110 08:39:43.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.248" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:43.246" endtime="20201110 08:39:43.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.252" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:43.250" endtime="20201110 08:39:43.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.241" endtime="20201110 08:39:43.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.263" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:43.261" endtime="20201110 08:39:43.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.268" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:43.265" endtime="20201110 08:39:43.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.256" endtime="20201110 08:39:43.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.278" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:43.276" endtime="20201110 08:39:43.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.283" level="INFO">VALUE: 180781920</msg>
<status status="PASS" starttime="20201110 08:39:43.281" endtime="20201110 08:39:43.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.271" endtime="20201110 08:39:43.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.296" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:43.294" endtime="20201110 08:39:43.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.301" levelmsg>
<status status="PASS" starttime="20201110 08:39:43.299" endtime="20201110 08:39:43.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.286" endtime="20201110 08:39:43.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.312" endtime="20201110 08:39:43.602"></status>
</kw>
<msg timestamp="20201110 08:39:43.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030301417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.311" endtime="20201110 08:39:43.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030301417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.606" endtime="20201110 08:39:43.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.614" endtime="20201110 08:39:43.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.308" endtime="20201110 08:39:43.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.305" endtime="20201110 08:39:43.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:43.642" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:43.618" endtime="20201110 08:39:43.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.646" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:43.645" endtime="20201110 08:39:43.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.649" level="INFO">VALUE: 0.020257569</msg>
<status status="PASS" starttime="20201110 08:39:43.648" endtime="20201110 08:39:43.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.642" endtime="20201110 08:39:43.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.654" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:43.653" endtime="20201110 08:39:43.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.656" level="INFO">VALUE: [0.030301417, 0.040298944, 0.050298917, 0.060300167, 0.0702995, 0.080301861, 0.090301847, 0.100303097, 0.110302431, 0.120304806, 0.130304833, 0.140306042, 0.150305375, 0.16030775, 0.170307736, 0.180309, 0.190308361, 0.200310694, 0.210310722, 0.220311931, 0.230311264, 0.240313667, 0.250313653, 0.260314875, 0.270314222, 0.280316597, 0.290316583, 0.300317833, 0.310317167, 0.320319542, 0.330319542, 0.340320778, 0.350320125, 0.360322486, 0.370322472, 0.380323792, 0.390323069, 0.400325514, 0.4103255, 0.420326722, 0.430326, 0.440328375, 0.450328417, 0.460329597, 0.470328931, 0.480331319, 0.490331278, 0.500332528, 0.510331861, 0.520334236, 0.530334194, 0.540335431, 0.550334778, 0.560337139, 0.570337125, 0.580338361, 0.590337694, 0.600340069, 0.610340056, 0.620341319, 0.630340611, 0.640343042, 0.650342972, 0.660344208, 0.670343542, 0.680345972, 0.690345889, 0.700347153, 0.710346514, 0.720348833, 0.730348833, 0.740350069, 0.750349458, 0.760351764, 0.77035175, 0.780353, 0.790352319, 0.800354694, 0.810354681, 0.820355931, 0.83035525, 0.840357625, 0.850357597, 0.860358847, 0.870358167, 0.880360542, 0.890360528, 0.900361819, 0.910361097, 0.920363472, 0.930363458, 0.940364694, 0.950364028, 0.960366458, 0.970366403, 0.980367625, 0.990366972, 1.000369333, 1.010369319, 1.020370542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:43.655" endtime="20201110 08:39:43.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.650" endtime="20201110 08:39:43.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.660" endtime="20201110 08:39:43.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:43.664" endtime="20201110 08:39:43.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.662" endtime="20201110 08:39:43.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.658" endtime="20201110 08:39:43.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.096" endtime="20201110 08:39:43.685"></status>
</kw>
<msg timestamp="20201110 08:39:43.685" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.693" endtime="20201110 08:39:45.807"></status>
</kw>
<msg timestamp="20201110 08:39:45.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 183372014, 'start-iter': 1, 'wakeups': [183382057, 183392054, 183402...</msg>
<status status="PASS" starttime="20201110 08:39:43.692" endtime="20201110 08:39:45.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.815" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 183372014, 'start-iter': 1, 'wakeups': [183382057, 183392054, 183402...</msg>
<status status="PASS" starttime="20201110 08:39:45.811" endtime="20201110 08:39:45.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.818" endtime="20201110 08:39:45.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.689" endtime="20201110 08:39:45.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.687" endtime="20201110 08:39:45.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:45.829" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-iter': 1, 'start-time': 183372014, 'wakeups': [183382057, 183392054, 183402053, 183412053, 183422052, 183432054, 183442053, 183452053, 183462052, 18...</msg>
<status status="PASS" starttime="20201110 08:39:45.825" endtime="20201110 08:39:45.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.838" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:45.836" endtime="20201110 08:39:45.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.843" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:45.841" endtime="20201110 08:39:45.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.831" endtime="20201110 08:39:45.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.854" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:45.851" endtime="20201110 08:39:45.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.858" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:45.856" endtime="20201110 08:39:45.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.846" endtime="20201110 08:39:45.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.863" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:45.862" endtime="20201110 08:39:45.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.865" level="INFO">VALUE: 183372014</msg>
<status status="PASS" starttime="20201110 08:39:45.864" endtime="20201110 08:39:45.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.859" endtime="20201110 08:39:45.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.870" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:45.869" endtime="20201110 08:39:45.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.872" levelmsg>
<status status="PASS" starttime="20201110 08:39:45.871" endtime="20201110 08:39:45.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.866" endtime="20201110 08:39:45.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.882" endtime="20201110 08:39:46.174"></status>
</kw>
<msg timestamp="20201110 08:39:46.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029716889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:45.878" endtime="20201110 08:39:46.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029716889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:46.182" endtime="20201110 08:39:46.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.190" endtime="20201110 08:39:46.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.876" endtime="20201110 08:39:46.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.874" endtime="20201110 08:39:46.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:46.218" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:46.194" endtime="20201110 08:39:46.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.222" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:46.221" endtime="20201110 08:39:46.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.224" level="INFO">VALUE: 0.019673083</msg>
<status status="PASS" starttime="20201110 08:39:46.223" endtime="20201110 08:39:46.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.219" endtime="20201110 08:39:46.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.230" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:46.229" endtime="20201110 08:39:46.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.232" level="INFO">VALUE: [0.029716889, 0.039714375, 0.049714375, 0.059715611, 0.069714972, 0.079717319, 0.089717319, 0.099718611, 0.109717944, 0.119720264, 0.12972025, 0.139721486, 0.149720833, 0.159723208, 0.169723194, 0.179724444, 0.189723861, 0.199726153, 0.209726139, 0.219727389, 0.229726722, 0.239729097, 0.249729083, 0.259730333, 0.269729667, 0.279732056, 0.289732069, 0.299733278, 0.309732667, 0.319735, 0.329734986, 0.339736222, 0.349735556, 0.359737944, 0.369737917, 0.379739167, 0.389738486, 0.399740889, 0.409740833, 0.419742069, 0.429741417, 0.439743778, 0.449743764, 0.459744986, 0.469744319, 0.47974675, 0.489746694, 0.499748, 0.509747278, 0.519749625, 0.529749597, 0.539750833, 0.549750167, 0.559752542, 0.569752528, 0.579753764, 0.589753097, 0.599755472, 0.609755472, 0.619756694, 0.629756042, 0.639758389, 0.649758431, 0.659759625, 0.669758958, 0.679761333, 0.689761306, 0.699762542, 0.709761889, 0.719764278, 0.729764236, 0.739765486, 0.749764806, 0.759767181, 0.769767167, 0.779768389, 0.789767736, 0.799770111, 0.809770083, 0.819771333, 0.829770653, 0.839773056, 0.849773014, 0.859774292, 0.869773611, 0.879775958, 0.889775944, 0.89977725, 0.909776514, 0.919778889, 0.929778875, 0.939780097, 0.949779472, 0.959781833, 0.969781792, 0.979783069, 0.989782361, 0.999784764, 1.009784722, 1.019785972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:46.231" endtime="20201110 08:39:46.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.226" endtime="20201110 08:39:46.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.236" endtime="20201110 08:39:46.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:46.239" endtime="20201110 08:39:46.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.238" endtime="20201110 08:39:46.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.234" endtime="20201110 08:39:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.686" endtime="20201110 08:39:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.489" endtime="20201110 08:39:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.488" endtime="20201110 08:39:46.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.733" endtime="20201110 08:39:46.260"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:28.662" endtime="20201110 08:39:46.261" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:38:27.099" endtime="20201110 08:39:46.264"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:36:42.683" endtime="20201110 08:39:46.279"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
