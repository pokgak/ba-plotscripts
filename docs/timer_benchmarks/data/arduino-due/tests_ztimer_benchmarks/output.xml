<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:38:24.335" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.999" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:28.007" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:38:29.173" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:27.997" endtime="20201110 08:38:29.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.177" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:38:29.175" endtime="20201110 08:38:32.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.996" endtime="20201110 08:38:32.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.184" endtime="20201110 08:38:32.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.181" endtime="20201110 08:38:32.416"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.429" endtime="20201110 08:38:35.450"></status>
</kw>
<msg timestamp="20201110 08:38:35.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.427" endtime="20201110 08:38:35.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.453" endtime="20201110 08:38:35.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.462" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:35.458" endtime="20201110 08:38:35.463"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:32.425" endtime="20201110 08:38:35.465"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:32.423" endtime="20201110 08:38:35.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.421" endtime="20201110 08:38:35.467"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:35.476" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:35.474" endtime="20201110 08:38:35.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.468" endtime="20201110 08:38:35.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.421" endtime="20201110 08:38:35.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.420" endtime="20201110 08:38:35.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.479" endtime="20201110 08:38:35.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.419" endtime="20201110 08:38:35.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.485" endtime="20201110 08:38:35.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.417" endtime="20201110 08:38:35.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.994" endtime="20201110 08:38:35.490"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.502" endtime="20201110 08:38:35.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.499" endtime="20201110 08:38:35.525"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.552" endtime="20201110 08:38:38.576"></status>
</kw>
<msg timestamp="20201110 08:38:38.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.549" endtime="20201110 08:38:38.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.579" endtime="20201110 08:38:38.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.588" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:38.584" endtime="20201110 08:38:38.589"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:35.543" endtime="20201110 08:38:38.590"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:35.539" endtime="20201110 08:38:38.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.535" endtime="20201110 08:38:38.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:38.599" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:38.598" endtime="20201110 08:38:38.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.594" endtime="20201110 08:38:38.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.533" endtime="20201110 08:38:38.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.532" endtime="20201110 08:38:38.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.603" endtime="20201110 08:38:38.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.529" endtime="20201110 08:38:38.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.526" endtime="20201110 08:38:38.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.496" endtime="20201110 08:38:38.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.624" endtime="20201110 08:38:38.636"></status>
</kw>
<msg timestamp="20201110 08:38:38.637" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.621" endtime="20201110 08:38:38.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.639" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.638" endtime="20201110 08:38:38.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.640" endtime="20201110 08:38:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.614" endtime="20201110 08:38:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.610" endtime="20201110 08:38:38.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.647" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:38:38.646" endtime="20201110 08:38:38.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.649" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:38:38.648" endtime="20201110 08:38:38.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.643" endtime="20201110 08:38:38.649"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:35.491" endtime="20201110 08:38:38.650" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:38:24.468" endtime="20201110 08:38:38.653"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.706" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:38.714" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:38:39.861" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:38.705" endtime="20201110 08:38:39.862"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.865" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:38:39.863" endtime="20201110 08:38:42.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.703" endtime="20201110 08:38:42.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.871" endtime="20201110 08:38:43.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.868" endtime="20201110 08:38:43.178"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.190" endtime="20201110 08:38:46.211"></status>
</kw>
<msg timestamp="20201110 08:38:46.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.188" endtime="20201110 08:38:46.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.214" endtime="20201110 08:38:46.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:46.219" endtime="20201110 08:38:46.224"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:43.186" endtime="20201110 08:38:46.225"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:43.184" endtime="20201110 08:38:46.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.182" endtime="20201110 08:38:46.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:46.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:46.233" endtime="20201110 08:38:46.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.229" endtime="20201110 08:38:46.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.182" endtime="20201110 08:38:46.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.181" endtime="20201110 08:38:46.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.238" endtime="20201110 08:38:46.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.180" endtime="20201110 08:38:46.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.244" endtime="20201110 08:38:46.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.178" endtime="20201110 08:38:46.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.702" endtime="20201110 08:38:46.249"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.262" endtime="20201110 08:38:46.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.257" endtime="20201110 08:38:46.285"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.311" endtime="20201110 08:38:49.330"></status>
</kw>
<msg timestamp="20201110 08:38:49.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.308" endtime="20201110 08:38:49.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.336" endtime="20201110 08:38:49.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.341" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:49.339" endtime="20201110 08:38:49.341"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:46.303" endtime="20201110 08:38:49.342"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:46.298" endtime="20201110 08:38:49.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.295" endtime="20201110 08:38:49.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:49.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:49.346" endtime="20201110 08:38:49.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.343" endtime="20201110 08:38:49.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.293" endtime="20201110 08:38:49.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.292" endtime="20201110 08:38:49.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.348" endtime="20201110 08:38:49.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.290" endtime="20201110 08:38:49.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.286" endtime="20201110 08:38:49.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.254" endtime="20201110 08:38:49.351"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:38:49.352" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.360" endtime="20201110 08:38:49.372"></status>
</kw>
<msg timestamp="20201110 08:38:49.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.359" endtime="20201110 08:38:49.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.374" endtime="20201110 08:38:49.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.376" endtime="20201110 08:38:49.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.356" endtime="20201110 08:38:49.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.354" endtime="20201110 08:38:49.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.385" endtime="20201110 08:38:49.692"></status>
</kw>
<msg timestamp="20201110 08:38:49.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.087793542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.087798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.383" endtime="20201110 08:38:49.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.087793542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.087798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.695" endtime="20201110 08:38:49.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.700" endtime="20201110 08:38:49.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.381" endtime="20201110 08:38:49.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.379" endtime="20201110 08:38:49.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.707" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:49.706" endtime="20201110 08:38:49.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.711" level="INFO">VALUE: [{'time': 3.087793542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.087798736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.193999999875132e-06, 'source_diff': 5.193999999875132e-06}, {'time': 3.087802556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.820000000320789e-06, 'source_diff': 3.820000000320789e-06}, {'time': 3.087806458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 3.087809861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4030000000129235e-06, 'source_diff': 3.4030000000129235e-06}, {'time': 3.087812889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02799999962744e-06, 'source_diff': 3.02799999962744e-06}, {'time': 3.087818625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000311492e-06, 'source_diff': 5.736000000311492e-06}, {'time': 3.087823639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.013999999636809e-06, 'source_diff': 5.013999999636809e-06}, {'time': 3.087825972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3330000002985685e-06, 'source_diff': 2.3330000002985685e-06}, {'time': 3.087831931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.959000000110848e-06, 'source_diff': 5.959000000110848e-06}, {'time': 3.087836514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999946935e-06, 'source_diff': 4.582999999946935e-06}, {'time': 3.087841347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999759835e-06, 'source_diff': 4.832999999759835e-06}, {'time': 3.087846972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000009095e-06, 'source_diff': 5.625000000009095e-06}, {'time': 3.087850014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999998976266e-06, 'source_diff': 3.0419999998976266e-06}, {'time': 3.087853722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000379741e-06, 'source_diff': 3.708000000379741e-06}, {'time': 3.087859556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833999999982353e-06, 'source_diff': 5.833999999982353e-06}, {'time': 3.087864931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999752106e-06, 'source_diff': 5.374999999752106e-06}, {'time': 3.087867444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.513000000092802e-06, 'source_diff': 2.513000000092802e-06}, {'time': 3.087870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000026121e-06, 'source_diff': 3.167000000026121e-06}, {'time': 3.087876403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000059971e-06, 'source_diff': 5.792000000059971e-06}, {'time': 3.087880347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999922454e-06, 'source_diff': 3.943999999922454e-06}, {'time': 3.087884931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5840000000296754e-06, 'source_diff': 4.5840000000296754e-06}, {'time': 3.087887264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3329999998544793e-06, 'source_diff': 2.3329999998544793e-06}, {'time': 3.087892111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000030022e-06, 'source_diff': 4.847000000030022e-06}, {'time': 3.087896639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000281196e-06, 'source_diff': 4.528000000281196e-06}, {'time': 3.087899333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.693999999969776e-06, 'source_diff': 2.693999999969776e-06}, {'time': 3.087901667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3339999999372196e-06, 'source_diff': 2.3339999999372196e-06}, {'time': 3.087905556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999812626e-06, 'source_diff': 3.888999999812626e-06}, {'time': 3.087909611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.055000000224851e-06, 'source_diff': 4.055000000224851e-06}, {'time': 3.087915625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013999999776587e-06, 'source_diff': 6.013999999776587e-06}, {'time': 3.087920639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000080898e-06, 'source_diff': 5.014000000080898e-06}, {'time': 3.087923389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.750000000162345e-06, 'source_diff': 2.750000000162345e-06}, {'time': 3.087929028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999998351925e-06, 'source_diff': 5.6389999998351925e-06}, {'time': 3.087931403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.374999999776861e-06, 'source_diff': 2.374999999776861e-06}, {'time': 3.087937, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5970000003569e-06, 'source_diff': 5.5970000003569e-06}, {'time': 3.087942153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15300000003549e-06, 'source_diff': 5.15300000003549e-06}, {'time': 3.087947931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.777999999789785e-06, 'source_diff': 5.777999999789785e-06}, {'time': 3.087951319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3880000001040855e-06, 'source_diff': 3.3880000001040855e-06}, {'time': 3.087956875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000073169e-06, 'source_diff': 5.556000000073169e-06}, {'time': 3.087959806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000039319e-06, 'source_diff': 2.931000000039319e-06}, {'time': 3.087964931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.124999999939206e-06, 'source_diff': 5.124999999939206e-06}, {'time': 3.087968694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.76300000004548e-06, 'source_diff': 3.76300000004548e-06}, {'time': 3.087972042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347999999903095e-06, 'source_diff': 3.347999999903095e-06}, {'time': 3.087976778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999727625e-06, 'source_diff': 4.735999999727625e-06}, {'time': 3.087982597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000073515e-06, 'source_diff': 5.819000000073515e-06}, {'time': 3.087988125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999976885e-06, 'source_diff': 5.527999999976885e-06}, {'time': 3.087992625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000184912e-06, 'source_diff': 4.500000000184912e-06}, {'time': 3.087996333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999356517e-06, 'source_diff': 3.7079999999356517e-06}, {'time': 3.088000208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.874999999986528e-06, 'source_diff': 3.874999999986528e-06}, {'time': 3.088004333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000243517e-06, 'source_diff': 4.125000000243517e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:49.708" endtime="20201110 08:38:49.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.704" endtime="20201110 08:38:49.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:49.727" level="INFO">${debug-compressed} = {'time': [3.087793542, 3.087798736, 3.087802556, 3.087806458, 3.087809861, 3.087812889, 3.087818625, 3.087823639, 3.087825972, 3.087831931, 3.087836514, 3.087841347, 3.087846972, 3.087850014, 3.087853...</msg>
<status status="PASS" starttime="20201110 08:38:49.714" endtime="20201110 08:38:49.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.731" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:49.730" endtime="20201110 08:38:49.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.734" level="INFO">VALUE: {'time': [3.087793542, 3.087798736, 3.087802556, 3.087806458, 3.087809861, 3.087812889, 3.087818625, 3.087823639, 3.087825972, 3.087831931, 3.087836514, 3.087841347, 3.087846972, 3.087850014, 3.087853722, 3.087859556, 3.087864931, 3.087867444, 3.087870611, 3.087876403, 3.087880347, 3.087884931, 3.087887264, 3.087892111, 3.087896639, 3.087899333, 3.087901667, 3.087905556, 3.087909611, 3.087915625, 3.087920639, 3.087923389, 3.087929028, 3.087931403, 3.087937, 3.087942153, 3.087947931, 3.087951319, 3.087956875, 3.087959806, 3.087964931, 3.087968694, 3.087972042, 3.087976778, 3.087982597, 3.087988125, 3.087992625, 3.087996333, 3.088000208, 3.088004333], 'eventdiff': [0, 5.193999999875132e-06, 3.820000000320789e-06, 3.902000000000072e-06, 3.4030000000129235e-06, 3.02799999962744e-06, 5.736000000311492e-06, 5.013999999636809e-06, 2.3330000002985685e-06, 5.959000000110848e-06, 4.582999999946935e-06, 4.832999999759835e-06, 5.625000000009095e-06, 3.0419999998976266e-06, 3.708000000379741e-06, 5.833999999982353e-06, 5.374999999752106e-06, 2.513000000092802e-06, 3.167000000026121e-06, 5.792000000059971e-06, 3.943999999922454e-06, 4.5840000000296754e-06, 2.3329999998544793e-06, 4.847000000030022e-06, 4.528000000281196e-06, 2.693999999969776e-06, 2.3339999999372196e-06, 3.888999999812626e-06, 4.055000000224851e-06, 6.013999999776587e-06, 5.014000000080898e-06, 2.750000000162345e-06, 5.6389999998351925e-06, 2.374999999776861e-06, 5.5970000003569e-06, 5.15300000003549e-06, 5.777999999789785e-06, 3.3880000001040855e-06, 5.556000000073169e-06, 2.931000000039319e-06, 5.124999999939206e-06, 3.76300000004548e-06, 3.347999999903095e-06, 4.735999999727625e-06, 5.819000000073515e-06, 5.527999999976885e-06, 4.500000000184912e-06, 3.7079999999356517e-06, 3.874999999986528e-06, 4.125000000243517e-06], 'source_diff': [0, 5.193999999875132e-06, 3.820000000320789e-06, 3.902000000000072e-06, 3.4030000000129235e-06, 3.02799999962744e-06, 5.736000000311492e-06, 5.013999999636809e-06, 2.3330000002985685e-06, 5.959000000110848e-06, 4.582999999946935e-06, 4.832999999759835e-06, 5.625000000009095e-06, 3.0419999998976266e-06, 3.708000000379741e-06, 5.833999999982353e-06, 5.374999999752106e-06, 2.513000000092802e-06, 3.167000000026121e-06, 5.792000000059971e-06, 3.943999999922454e-06, 4.5840000000296754e-06, 2.3329999998544793e-06, 4.847000000030022e-06, 4.528000000281196e-06, 2.693999999969776e-06, 2.3339999999372196e-06, 3.888999999812626e-06, 4.055000000224851e-06, 6.013999999776587e-06, 5.014000000080898e-06, 2.750000000162345e-06, 5.6389999998351925e-06, 2.374999999776861e-06, 5.5970000003569e-06, 5.15300000003549e-06, 5.777999999789785e-06, 3.3880000001040855e-06, 5.556000000073169e-06, 2.931000000039319e-06, 5.124999999939206e-06, 3.76300000004548e-06, 3.347999999903095e-06, 4.735999999727625e-06, 5.819000000073515e-06, 5.527999999976885e-06, 4.500000000184912e-06, 3.7079999999356517e-06, 3.874999999986528e-06, 4.125000000243517e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:49.732" endtime="20201110 08:38:49.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.728" endtime="20201110 08:38:49.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.739" level="INFO">${RESULT} = [{'time': 3.087798736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.193999999875132e-06, 'source_diff': 5.193999999875132e-06}, {'time': 3.087806458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:49.736" endtime="20201110 08:38:49.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:49.747" level="INFO">${GPIO_OVERHEAD} = {'time': [3.087798736, 3.087806458, 3.087812889, 3.087823639, 3.087831931, 3.087841347, 3.087850014, 3.087859556, 3.087867444, 3.087876403, 3.087884931, 3.087892111, 3.087899333, 3.087905556, 3.087915...</msg>
<status status="PASS" starttime="20201110 08:38:49.740" endtime="20201110 08:38:49.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.752" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:49.751" endtime="20201110 08:38:49.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.754" level="INFO">VALUE: [5.193999999875132e-06, 3.902000000000072e-06, 3.02799999962744e-06, 5.013999999636809e-06, 5.959000000110848e-06, 4.832999999759835e-06, 3.0419999998976266e-06, 5.833999999982353e-06, 2.513000000092802e-06, 5.792000000059971e-06, 4.5840000000296754e-06, 4.847000000030022e-06, 2.693999999969776e-06, 3.888999999812626e-06, 6.013999999776587e-06, 2.750000000162345e-06, 2.374999999776861e-06, 5.15300000003549e-06, 3.3880000001040855e-06, 2.931000000039319e-06, 3.76300000004548e-06, 4.735999999727625e-06, 5.527999999976885e-06, 3.7079999999356517e-06, 4.125000000243517e-06]</msg>
<status status="PASS" starttime="20201110 08:38:49.753" endtime="20201110 08:38:49.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.748" endtime="20201110 08:38:49.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.757" endtime="20201110 08:38:49.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.761" endtime="20201110 08:38:49.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.759" endtime="20201110 08:38:49.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.756" endtime="20201110 08:38:49.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.353" endtime="20201110 08:38:49.782"></status>
</kw>
<msg timestamp="20201110 08:38:49.782" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.791" endtime="20201110 08:38:49.801"></status>
</kw>
<msg timestamp="20201110 08:38:49.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.789" endtime="20201110 08:38:49.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.803" endtime="20201110 08:38:49.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.805" endtime="20201110 08:38:49.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.786" endtime="20201110 08:38:49.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.784" endtime="20201110 08:38:49.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.815" endtime="20201110 08:38:50.082"></status>
</kw>
<msg timestamp="20201110 08:38:50.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018986347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.813" endtime="20201110 08:38:50.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018986347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.085" endtime="20201110 08:38:50.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.096" endtime="20201110 08:38:50.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.811" endtime="20201110 08:38:50.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.809" endtime="20201110 08:38:50.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.104" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:50.103" endtime="20201110 08:38:50.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.107" level="INFO">VALUE: [{'time': 0.018986347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018996861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018999292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.0190045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.019007569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0689999999979067e-06, 'source_diff': 3.0689999999979067e-06}, {'time': 0.019009889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3200000000000998e-06, 'source_diff': 2.3200000000000998e-06}, {'time': 0.019013778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.019016347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.019019861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.019025764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.01902875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.019033111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.019038194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.019043792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.019049056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.019052069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.012999999999627e-06, 'source_diff': 3.012999999999627e-06}, {'time': 0.019057042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.019060625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.01906375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.019068167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.019073403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.019075917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.019081403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019083806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.019089833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019094903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.019097306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.019099917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.019105889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019108403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.019111806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.019117264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.019121597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.019123847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.019129083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.019131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.019136722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.019142694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019148542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.019153194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.651999999997353e-06, 'source_diff': 4.651999999997353e-06}, {'time': 0.019156944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.019159542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.598000000002959e-06, 'source_diff': 2.598000000002959e-06}, {'time': 0.019164361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019169014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.019174083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.019176722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.0191825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.019185194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.019190931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.737000000002185e-06, 'source_diff': 5.737000000002185e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:50.105" endtime="20201110 08:38:50.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.100" endtime="20201110 08:38:50.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:50.122" level="INFO">${debug-compressed} = {'time': [0.018986347, 0.018991333, 0.018996861, 0.018999292, 0.0190045, 0.019007569, 0.019009889, 0.019013778, 0.019016347, 0.019019861, 0.019025764, 0.01902875, 0.019033111, 0.019038194, 0.019043792...</msg>
<status status="PASS" starttime="20201110 08:38:50.109" endtime="20201110 08:38:50.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.126" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:50.125" endtime="20201110 08:38:50.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.130" level="INFO">VALUE: {'time': [0.018986347, 0.018991333, 0.018996861, 0.018999292, 0.0190045, 0.019007569, 0.019009889, 0.019013778, 0.019016347, 0.019019861, 0.019025764, 0.01902875, 0.019033111, 0.019038194, 0.019043792, 0.019049056, 0.019052069, 0.019057042, 0.019060625, 0.01906375, 0.019068167, 0.019073403, 0.019075917, 0.019081403, 0.019083806, 0.019089833, 0.019094903, 0.019097306, 0.019099917, 0.019105889, 0.019108403, 0.019111806, 0.019117264, 0.019121597, 0.019123847, 0.019129083, 0.019131847, 0.019136722, 0.019142694, 0.019148542, 0.019153194, 0.019156944, 0.019159542, 0.019164361, 0.019169014, 0.019174083, 0.019176722, 0.0191825, 0.019185194, 0.019190931], 'eventdiff': [0, 4.985999999998492e-06, 5.528000000001171e-06, 2.431000000000655e-06, 5.207999999999602e-06, 3.0689999999979067e-06, 2.3200000000000998e-06, 3.888999999999976e-06, 2.569000000000876e-06, 3.5139999999996008e-06, 5.903000000001546e-06, 2.985999999999961e-06, 4.360999999997867e-06, 5.083000000002946e-06, 5.5979999999990204e-06, 5.264000000001351e-06, 3.012999999999627e-06, 4.972999999998395e-06, 3.583000000001446e-06, 3.124999999999656e-06, 4.416999999999616e-06, 5.235999999998742e-06, 2.51400000000207e-06, 5.485999999998992e-06, 2.4029999999980456e-06, 6.027000000002197e-06, 5.0699999999993806e-06, 2.403000000001515e-06, 2.610999999999586e-06, 5.971999999999922e-06, 2.5139999999986007e-06, 3.4029999999990457e-06, 5.457999999999852e-06, 4.333000000002196e-06, 2.2499999999987808e-06, 5.236000000002211e-06, 2.7639999999988507e-06, 4.8749999999979365e-06, 5.971999999999922e-06, 5.84800000000274e-06, 4.651999999997353e-06, 3.750000000000281e-06, 2.598000000002959e-06, 4.818999999999657e-06, 4.653000000000296e-06, 5.068999999999907e-06, 2.6389999999987257e-06, 5.778000000001421e-06, 2.6939999999975317e-06, 5.737000000002185e-06], 'source_diff': [0, 4.985999999998492e-06, 5.528000000001171e-06, 2.431000000000655e-06, 5.207999999999602e-06, 3.0689999999979067e-06, 2.3200000000000998e-06, 3.888999999999976e-06, 2.569000000000876e-06, 3.5139999999996008e-06, 5.903000000001546e-06, 2.985999999999961e-06, 4.360999999997867e-06, 5.083000000002946e-06, 5.5979999999990204e-06, 5.264000000001351e-06, 3.012999999999627e-06, 4.972999999998395e-06, 3.583000000001446e-06, 3.124999999999656e-06, 4.416999999999616e-06, 5.235999999998742e-06, 2.51400000000207e-06, 5.485999999998992e-06, 2.4029999999980456e-06, 6.027000000002197e-06, 5.0699999999993806e-06, 2.403000000001515e-06, 2.610999999999586e-06, 5.971999999999922e-06, 2.5139999999986007e-06, 3.4029999999990457e-06, 5.457999999999852e-06, 4.333000000002196e-06, 2.2499999999987808e-06, 5.236000000002211e-06, 2.7639999999988507e-06, 4.8749999999979365e-06, 5.971999999999922e-06, 5.84800000000274e-06, 4.651999999997353e-06, 3.750000000000281e-06, 2.598000000002959e-06, 4.818999999999657e-06, 4.653000000000296e-06, 5.068999999999907e-06, 2.6389999999987257e-06, 5.778000000001421e-06, 2.6939999999975317e-06, 5.737000000002185e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:50.128" endtime="20201110 08:38:50.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.123" endtime="20201110 08:38:50.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.134" level="INFO">${RESULT} = [{'time': 0.018991333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018999292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:50.131" endtime="20201110 08:38:50.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:50.143" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018991333, 0.018999292, 0.019007569, 0.019013778, 0.019019861, 0.01902875, 0.019038194, 0.019049056, 0.019057042, 0.01906375, 0.019073403, 0.019081403, 0.019089833, 0.019097306, 0.01910588...</msg>
<status status="PASS" starttime="20201110 08:38:50.135" endtime="20201110 08:38:50.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:50.146" endtime="20201110 08:38:50.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.149" level="INFO">VALUE: [4.985999999998492e-06, 2.431000000000655e-06, 3.0689999999979067e-06, 3.888999999999976e-06, 3.5139999999996008e-06, 2.985999999999961e-06, 5.083000000002946e-06, 5.264000000001351e-06, 4.972999999998395e-06, 3.124999999999656e-06, 5.235999999998742e-06, 5.485999999998992e-06, 6.027000000002197e-06, 2.403000000001515e-06, 5.971999999999922e-06, 3.4029999999990457e-06, 4.333000000002196e-06, 5.236000000002211e-06, 4.8749999999979365e-06, 5.84800000000274e-06, 3.750000000000281e-06, 4.818999999999657e-06, 5.068999999999907e-06, 5.778000000001421e-06, 5.737000000002185e-06]</msg>
<status status="PASS" starttime="20201110 08:38:50.148" endtime="20201110 08:38:50.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.144" endtime="20201110 08:38:50.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.152" endtime="20201110 08:38:50.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.156" endtime="20201110 08:38:50.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.154" endtime="20201110 08:38:50.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.151" endtime="20201110 08:38:50.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.783" endtime="20201110 08:38:50.178"></status>
</kw>
<msg timestamp="20201110 08:38:50.178" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.185" endtime="20201110 08:38:50.196"></status>
</kw>
<msg timestamp="20201110 08:38:50.196" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.184" endtime="20201110 08:38:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.199" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.197" endtime="20201110 08:38:50.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.200" endtime="20201110 08:38:50.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.181" endtime="20201110 08:38:50.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.180" endtime="20201110 08:38:50.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.209" endtime="20201110 08:38:50.491"></status>
</kw>
<msg timestamp="20201110 08:38:50.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017471903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.207" endtime="20201110 08:38:50.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017467125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017471903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.494" endtime="20201110 08:38:50.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.499" endtime="20201110 08:38:50.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.205" endtime="20201110 08:38:50.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.203" endtime="20201110 08:38:50.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.506" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:50.505" endtime="20201110 08:38:50.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.509" level="INFO">VALUE: [{'time': 0.017467125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017471903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017475792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017479944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.017484431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.017489708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.017493028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.01749825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017500458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.208000000000071e-06, 'source_diff': 2.208000000000071e-06}, {'time': 0.017506431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017509431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017513319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888000000000502e-06, 'source_diff': 3.888000000000502e-06}, {'time': 0.017518847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017525958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017531139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017534194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.017539028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.017541778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017546611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017551625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017556347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017560542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.017565528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017570958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.01757675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.017581042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.017586764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017590417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017594944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5839999999974503e-06, 'source_diff': 3.5839999999974503e-06}, {'time': 0.017604194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.017608611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017611083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017613403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3200000000000998e-06, 'source_diff': 2.3200000000000998e-06}, {'time': 0.017616764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017621222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.017627194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017632333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017636278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.017640764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017645389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.017649347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017654944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017659069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017662111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017665458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.017668083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017673944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017677819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:50.507" endtime="20201110 08:38:50.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.503" endtime="20201110 08:38:50.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:50.525" level="INFO">${debug-compressed} = {'time': [0.017467125, 0.017471903, 0.017475792, 0.017479944, 0.017484431, 0.017489708, 0.017493028, 0.01749825, 0.017500458, 0.017506431, 0.017509431, 0.017513319, 0.017518847, 0.017522847, 0.0175259...</msg>
<status status="PASS" starttime="20201110 08:38:50.512" endtime="20201110 08:38:50.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.528" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:50.527" endtime="20201110 08:38:50.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.532" level="INFO">VALUE: {'time': [0.017467125, 0.017471903, 0.017475792, 0.017479944, 0.017484431, 0.017489708, 0.017493028, 0.01749825, 0.017500458, 0.017506431, 0.017509431, 0.017513319, 0.017518847, 0.017522847, 0.017525958, 0.017531139, 0.017534194, 0.017539028, 0.017541778, 0.017546611, 0.017551625, 0.017556347, 0.017560542, 0.017565528, 0.017570958, 0.01757675, 0.017581042, 0.017586764, 0.017590417, 0.017594944, 0.017598528, 0.017604194, 0.017608611, 0.017611083, 0.017613403, 0.017616764, 0.017621222, 0.017627194, 0.017632333, 0.017636278, 0.017640764, 0.017645389, 0.017649347, 0.017654944, 0.017659069, 0.017662111, 0.017665458, 0.017668083, 0.017673944, 0.017677819], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.778000000000421e-06, 3.888999999999976e-06, 4.152000000000322e-06, 4.487000000000935e-06, 5.276999999997978e-06, 3.3200000000011e-06, 5.221999999999172e-06, 2.208000000000071e-06, 5.9729999999993955e-06, 2.999999999999531e-06, 3.888000000000502e-06, 5.528000000001171e-06, 4.000000000000531e-06, 3.111000000000086e-06, 5.180999999999936e-06, 3.054999999998337e-06, 4.83400000000217e-06, 2.749999999999281e-06, 4.832999999999227e-06, 5.014000000001101e-06, 4.721999999998672e-06, 4.1949999999985055e-06, 4.986000000001961e-06, 5.430000000000712e-06, 5.791999999997521e-06, 4.29200000000296e-06, 5.721999999999672e-06, 3.6529999999992957e-06, 4.527000000000697e-06, 3.5839999999974503e-06, 5.666000000001392e-06, 4.416999999999616e-06, 2.471999999999891e-06, 2.3200000000000998e-06, 3.361000000000336e-06, 4.457999999998852e-06, 5.971999999999922e-06, 5.139000000001226e-06, 3.9449999999982555e-06, 4.486000000001461e-06, 4.625000000001156e-06, 3.957999999998352e-06, 5.596999999999547e-06, 4.125000000000656e-06, 3.04200000000171e-06, 3.3469999999972966e-06, 2.6250000000026252e-06, 5.860999999999367e-06, 3.875000000000406e-06], 'source_diff': [0, 4.778000000000421e-06, 3.888999999999976e-06, 4.152000000000322e-06, 4.487000000000935e-06, 5.276999999997978e-06, 3.3200000000011e-06, 5.221999999999172e-06, 2.208000000000071e-06, 5.9729999999993955e-06, 2.999999999999531e-06, 3.888000000000502e-06, 5.528000000001171e-06, 4.000000000000531e-06, 3.111000000000086e-06, 5.180999999999936e-06, 3.054999999998337e-06, 4.83400000000217e-06, 2.749999999999281e-06, 4.832999999999227e-06, 5.014000000001101e-06, 4.721999999998672e-06, 4.1949999999985055e-06, 4.986000000001961e-06, 5.430000000000712e-06, 5.791999999997521e-06, 4.29200000000296e-06, 5.721999999999672e-06, 3.6529999999992957e-06, 4.527000000000697e-06, 3.5839999999974503e-06, 5.666000000001392e-06, 4.416999999999616e-06, 2.471999999999891e-06, 2.3200000000000998e-06, 3.361000000000336e-06, 4.457999999998852e-06, 5.971999999999922e-06, 5.139000000001226e-06, 3.9449999999982555e-06, 4.486000000001461e-06, 4.625000000001156e-06, 3.957999999998352e-06, 5.596999999999547e-06, 4.125000000000656e-06, 3.04200000000171e-06, 3.3469999999972966e-06, 2.6250000000026252e-06, 5.860999999999367e-06, 3.875000000000406e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:50.529" endtime="20201110 08:38:50.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.526" endtime="20201110 08:38:50.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.536" level="INFO">${RESULT} = [{'time': 0.017471903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017479944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:50.533" endtime="20201110 08:38:50.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:50.544" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017471903, 0.017479944, 0.017489708, 0.01749825, 0.017506431, 0.017513319, 0.017522847, 0.017531139, 0.017539028, 0.017546611, 0.017556347, 0.017565528, 0.01757675, 0.017586764, 0.01759494...</msg>
<status status="PASS" starttime="20201110 08:38:50.537" endtime="20201110 08:38:50.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.549" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:50.548" endtime="20201110 08:38:50.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.551" level="INFO">VALUE: [4.778000000000421e-06, 4.152000000000322e-06, 5.276999999997978e-06, 5.221999999999172e-06, 5.9729999999993955e-06, 3.888000000000502e-06, 4.000000000000531e-06, 5.180999999999936e-06, 4.83400000000217e-06, 4.832999999999227e-06, 4.721999999998672e-06, 4.986000000001961e-06, 5.791999999997521e-06, 5.721999999999672e-06, 4.527000000000697e-06, 5.666000000001392e-06, 2.471999999999891e-06, 3.361000000000336e-06, 5.971999999999922e-06, 3.9449999999982555e-06, 4.625000000001156e-06, 5.596999999999547e-06, 3.04200000000171e-06, 2.6250000000026252e-06, 3.875000000000406e-06]</msg>
<status status="PASS" starttime="20201110 08:38:50.550" endtime="20201110 08:38:50.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.545" endtime="20201110 08:38:50.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.554" endtime="20201110 08:38:50.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.558" endtime="20201110 08:38:50.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.556" endtime="20201110 08:38:50.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.553" endtime="20201110 08:38:50.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.178" endtime="20201110 08:38:50.578"></status>
</kw>
<msg timestamp="20201110 08:38:50.579" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.586" endtime="20201110 08:38:50.596"></status>
</kw>
<msg timestamp="20201110 08:38:50.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.585" endtime="20201110 08:38:50.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.599" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.598" endtime="20201110 08:38:50.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.600" endtime="20201110 08:38:50.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.582" endtime="20201110 08:38:50.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.581" endtime="20201110 08:38:50.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.609" endtime="20201110 08:38:50.876"></status>
</kw>
<msg timestamp="20201110 08:38:50.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017549861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.608" endtime="20201110 08:38:50.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017549861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.878" endtime="20201110 08:38:50.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.884" endtime="20201110 08:38:50.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.605" endtime="20201110 08:38:50.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.603" endtime="20201110 08:38:50.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.890" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:50.889" endtime="20201110 08:38:50.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.894" level="INFO">VALUE: [{'time': 0.017545639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017549861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017552917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.017558806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.017562153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017567472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.017573264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017577319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017583278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.017586389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017590625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017593319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.017599333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017603944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017606625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017611458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017614264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.017619472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.017625361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.017630028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017632958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.017638681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017643458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.017649139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.017654278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.017658278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017663278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.017667111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.017670694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017674028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3340000000006698e-06, 'source_diff': 3.3340000000006698e-06}, {'time': 0.017679875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017684583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017686931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017689847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017692847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017698264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.017703931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017708056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017710806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017715694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.017720181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.0177255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.017728361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017732319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017737681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.36200000000181e-06, 'source_diff': 5.36200000000181e-06}, {'time': 0.017740472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.017745722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017750208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017752597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:50.891" endtime="20201110 08:38:50.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.887" endtime="20201110 08:38:50.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:50.909" level="INFO">${debug-compressed} = {'time': [0.017545639, 0.017549861, 0.017552917, 0.017558806, 0.017562153, 0.017567472, 0.017573264, 0.017577319, 0.017583278, 0.017586389, 0.017590625, 0.017593319, 0.017599333, 0.017603944, 0.017606...</msg>
<status status="PASS" starttime="20201110 08:38:50.896" endtime="20201110 08:38:50.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.913" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:50.912" endtime="20201110 08:38:50.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.916" level="INFO">VALUE: {'time': [0.017545639, 0.017549861, 0.017552917, 0.017558806, 0.017562153, 0.017567472, 0.017573264, 0.017577319, 0.017583278, 0.017586389, 0.017590625, 0.017593319, 0.017599333, 0.017603944, 0.017606625, 0.017611458, 0.017614264, 0.017619472, 0.017625361, 0.017630028, 0.017632958, 0.017638681, 0.017643458, 0.017649139, 0.017654278, 0.017658278, 0.017660903, 0.017663278, 0.017667111, 0.017670694, 0.017674028, 0.017679875, 0.017684583, 0.017686931, 0.017689847, 0.017692847, 0.017698264, 0.017703931, 0.017708056, 0.017710806, 0.017715694, 0.017720181, 0.0177255, 0.017728361, 0.017732319, 0.017737681, 0.017740472, 0.017745722, 0.017750208, 0.017752597], 'eventdiff': [0, 4.222000000001641e-06, 3.05600000000128e-06, 5.8889999999985065e-06, 3.347000000000766e-06, 5.319000000000157e-06, 5.792000000000991e-06, 4.054999999999337e-06, 5.9589999999998255e-06, 3.111000000000086e-06, 4.2359999999977416e-06, 2.694000000001001e-06, 6.014000000002101e-06, 4.610999999998117e-06, 2.681000000000905e-06, 4.832999999999227e-06, 2.80600000000103e-06, 5.207999999999602e-06, 5.8889999999985065e-06, 4.666999999999866e-06, 2.9300000000016813e-06, 5.7229999999991454e-06, 4.777000000000947e-06, 5.681000000000436e-06, 5.1389999999977565e-06, 4.000000000000531e-06, 2.6249999999991558e-06, 2.375000000002375e-06, 3.832999999998227e-06, 3.583000000001446e-06, 3.3340000000006698e-06, 5.846999999999797e-06, 4.707999999999102e-06, 2.3479999999992396e-06, 2.9160000000021113e-06, 2.999999999999531e-06, 5.416999999997146e-06, 5.667000000000866e-06, 4.125000000000656e-06, 2.749999999999281e-06, 4.888000000001502e-06, 4.487000000000935e-06, 5.319000000000157e-06, 2.860999999999836e-06, 3.957999999998352e-06, 5.36200000000181e-06, 2.790999999998517e-06, 5.2499999999983116e-06, 4.486000000001461e-06, 2.3889999999984757e-06], 'source_diff': [0, 4.222000000001641e-06, 3.05600000000128e-06, 5.8889999999985065e-06, 3.347000000000766e-06, 5.319000000000157e-06, 5.792000000000991e-06, 4.054999999999337e-06, 5.9589999999998255e-06, 3.111000000000086e-06, 4.2359999999977416e-06, 2.694000000001001e-06, 6.014000000002101e-06, 4.610999999998117e-06, 2.681000000000905e-06, 4.832999999999227e-06, 2.80600000000103e-06, 5.207999999999602e-06, 5.8889999999985065e-06, 4.666999999999866e-06, 2.9300000000016813e-06, 5.7229999999991454e-06, 4.777000000000947e-06, 5.681000000000436e-06, 5.1389999999977565e-06, 4.000000000000531e-06, 2.6249999999991558e-06, 2.375000000002375e-06, 3.832999999998227e-06, 3.583000000001446e-06, 3.3340000000006698e-06, 5.846999999999797e-06, 4.707999999999102e-06, 2.3479999999992396e-06, 2.9160000000021113e-06, 2.999999999999531e-06, 5.416999999997146e-06, 5.667000000000866e-06, 4.125000000000656e-06, 2.749999999999281e-06, 4.888000000001502e-06, 4.487000000000935e-06, 5.319000000000157e-06, 2.860999999999836e-06, 3.957999999998352e-06, 5.36200000000181e-06, 2.790999999998517e-06, 5.2499999999983116e-06, 4.486000000001461e-06, 2.3889999999984757e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:50.914" endtime="20201110 08:38:50.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.910" endtime="20201110 08:38:50.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.921" level="INFO">${RESULT} = [{'time': 0.017549861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017558806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:50.918" endtime="20201110 08:38:50.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:50.928" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017549861, 0.017558806, 0.017567472, 0.017577319, 0.017586389, 0.017593319, 0.017603944, 0.017611458, 0.017619472, 0.017630028, 0.017638681, 0.017649139, 0.017658278, 0.017663278, 0.017670...</msg>
<status status="PASS" starttime="20201110 08:38:50.921" endtime="20201110 08:38:50.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.933" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:50.932" endtime="20201110 08:38:50.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.935" level="INFO">VALUE: [4.222000000001641e-06, 5.8889999999985065e-06, 5.319000000000157e-06, 4.054999999999337e-06, 3.111000000000086e-06, 2.694000000001001e-06, 4.610999999998117e-06, 4.832999999999227e-06, 5.207999999999602e-06, 4.666999999999866e-06, 5.7229999999991454e-06, 5.681000000000436e-06, 4.000000000000531e-06, 2.375000000002375e-06, 3.583000000001446e-06, 5.846999999999797e-06, 2.3479999999992396e-06, 2.999999999999531e-06, 5.667000000000866e-06, 2.749999999999281e-06, 4.487000000000935e-06, 2.860999999999836e-06, 5.36200000000181e-06, 5.2499999999983116e-06, 2.3889999999984757e-06]</msg>
<status status="PASS" starttime="20201110 08:38:50.934" endtime="20201110 08:38:50.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.929" endtime="20201110 08:38:50.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.938" endtime="20201110 08:38:50.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.942" endtime="20201110 08:38:50.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.940" endtime="20201110 08:38:50.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.937" endtime="20201110 08:38:50.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.579" endtime="20201110 08:38:50.962"></status>
</kw>
<msg timestamp="20201110 08:38:50.963" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.970" endtime="20201110 08:38:50.981"></status>
</kw>
<msg timestamp="20201110 08:38:50.982" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.969" endtime="20201110 08:38:50.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.983" endtime="20201110 08:38:50.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.985" endtime="20201110 08:38:50.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.966" endtime="20201110 08:38:50.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.964" endtime="20201110 08:38:50.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.994" endtime="20201110 08:38:51.276"></status>
</kw>
<msg timestamp="20201110 08:38:51.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017452153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.992" endtime="20201110 08:38:51.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017448903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017452153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.279" endtime="20201110 08:38:51.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.285" endtime="20201110 08:38:51.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.990" endtime="20201110 08:38:51.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.988" endtime="20201110 08:38:51.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.292" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:51.291" endtime="20201110 08:38:51.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.296" level="INFO">VALUE: [{'time': 0.017448903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017452153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.017456014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.017460792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017464736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.017470458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017478042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.017480375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017485639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.017488264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017493444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.017498278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017503417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017507069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.017510639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.017514042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017518583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017522875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017528319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.017531236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017536139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017539278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017542847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.017546125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017548681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.017553931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017558056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017562056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017567306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.017570458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.017575903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.017580139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017583375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.017587972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017593458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017599417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.017602819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017607417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.017610056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017612889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.017615847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.017619722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017625222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.01762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017634319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017641569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.017645819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017650292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:51.293" endtime="20201110 08:38:51.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.289" endtime="20201110 08:38:51.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:51.311" level="INFO">${debug-compressed} = {'time': [0.017448903, 0.017452153, 0.017456014, 0.017460792, 0.017464736, 0.017470458, 0.017475111, 0.017478042, 0.017480375, 0.017485639, 0.017488264, 0.017493444, 0.017498278, 0.017503417, 0.017507...</msg>
<status status="PASS" starttime="20201110 08:38:51.298" endtime="20201110 08:38:51.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.315" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:51.314" endtime="20201110 08:38:51.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.318" level="INFO">VALUE: {'time': [0.017448903, 0.017452153, 0.017456014, 0.017460792, 0.017464736, 0.017470458, 0.017475111, 0.017478042, 0.017480375, 0.017485639, 0.017488264, 0.017493444, 0.017498278, 0.017503417, 0.017507069, 0.017510639, 0.017514042, 0.017518583, 0.017522875, 0.017528319, 0.017531236, 0.017536139, 0.017539278, 0.017542847, 0.017546125, 0.017548681, 0.017553931, 0.017558056, 0.017562056, 0.017567306, 0.017570458, 0.017575903, 0.017580139, 0.017583375, 0.017587972, 0.017593458, 0.017599417, 0.017602819, 0.017607417, 0.017610056, 0.017612889, 0.017615847, 0.017619722, 0.017625222, 0.01762875, 0.017634319, 0.017639, 0.017641569, 0.017645819, 0.017650292], 'eventdiff': [0, 3.249999999999781e-06, 3.8609999999973665e-06, 4.778000000000421e-06, 3.944000000002251e-06, 5.721999999999672e-06, 4.653000000000296e-06, 2.9309999999976855e-06, 2.333000000000196e-06, 5.264000000001351e-06, 2.6249999999991558e-06, 5.180000000000462e-06, 4.8339999999987004e-06, 5.139000000001226e-06, 3.651999999999822e-06, 3.57000000000135e-06, 3.4029999999990457e-06, 4.541000000000267e-06, 4.291999999999491e-06, 5.444000000000282e-06, 2.9169999999981155e-06, 4.903000000000546e-06, 3.1389999999992257e-06, 3.5690000000018762e-06, 3.2779999999989207e-06, 2.55600000000078e-06, 5.2499999999983116e-06, 4.125000000000656e-06, 4.000000000000531e-06, 5.250000000001781e-06, 3.151999999999322e-06, 5.444999999999756e-06, 4.236000000001211e-06, 3.2359999999967415e-06, 4.597000000002016e-06, 5.485999999998992e-06, 5.9589999999998255e-06, 3.401999999999572e-06, 4.59800000000149e-06, 2.6389999999987257e-06, 2.833000000000696e-06, 2.958000000000821e-06, 3.875000000000406e-06, 5.499999999998562e-06, 3.5279999999991707e-06, 5.569000000000407e-06, 4.680999999999436e-06, 2.569000000000876e-06, 4.250000000000781e-06, 4.473000000001365e-06], 'source_diff': [0, 3.249999999999781e-06, 3.8609999999973665e-06, 4.778000000000421e-06, 3.944000000002251e-06, 5.721999999999672e-06, 4.653000000000296e-06, 2.9309999999976855e-06, 2.333000000000196e-06, 5.264000000001351e-06, 2.6249999999991558e-06, 5.180000000000462e-06, 4.8339999999987004e-06, 5.139000000001226e-06, 3.651999999999822e-06, 3.57000000000135e-06, 3.4029999999990457e-06, 4.541000000000267e-06, 4.291999999999491e-06, 5.444000000000282e-06, 2.9169999999981155e-06, 4.903000000000546e-06, 3.1389999999992257e-06, 3.5690000000018762e-06, 3.2779999999989207e-06, 2.55600000000078e-06, 5.2499999999983116e-06, 4.125000000000656e-06, 4.000000000000531e-06, 5.250000000001781e-06, 3.151999999999322e-06, 5.444999999999756e-06, 4.236000000001211e-06, 3.2359999999967415e-06, 4.597000000002016e-06, 5.485999999998992e-06, 5.9589999999998255e-06, 3.401999999999572e-06, 4.59800000000149e-06, 2.6389999999987257e-06, 2.833000000000696e-06, 2.958000000000821e-06, 3.875000000000406e-06, 5.499999999998562e-06, 3.5279999999991707e-06, 5.569000000000407e-06, 4.680999999999436e-06, 2.569000000000876e-06, 4.250000000000781e-06, 4.473000000001365e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:38:51.316" endtime="20201110 08:38:51.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.312" endtime="20201110 08:38:51.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.323" level="INFO">${RESULT} = [{'time': 0.017452153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.017460792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:51.320" endtime="20201110 08:38:51.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:51.331" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017452153, 0.017460792, 0.017470458, 0.017478042, 0.017485639, 0.017493444, 0.017503417, 0.017510639, 0.017518583, 0.017528319, 0.017536139, 0.017542847, 0.017548681, 0.017558056, 0.017567...</msg>
<status status="PASS" starttime="20201110 08:38:51.324" endtime="20201110 08:38:51.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.335" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:51.334" endtime="20201110 08:38:51.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.337" level="INFO">VALUE: [3.249999999999781e-06, 4.778000000000421e-06, 5.721999999999672e-06, 2.9309999999976855e-06, 5.264000000001351e-06, 5.180000000000462e-06, 5.139000000001226e-06, 3.57000000000135e-06, 4.541000000000267e-06, 5.444000000000282e-06, 4.903000000000546e-06, 3.5690000000018762e-06, 2.55600000000078e-06, 4.125000000000656e-06, 5.250000000001781e-06, 5.444999999999756e-06, 3.2359999999967415e-06, 5.485999999998992e-06, 3.401999999999572e-06, 2.6389999999987257e-06, 2.958000000000821e-06, 5.499999999998562e-06, 5.569000000000407e-06, 2.569000000000876e-06, 4.473000000001365e-06]</msg>
<status status="PASS" starttime="20201110 08:38:51.336" endtime="20201110 08:38:51.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.332" endtime="20201110 08:38:51.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.341" endtime="20201110 08:38:51.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.344" endtime="20201110 08:38:51.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.343" endtime="20201110 08:38:51.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.339" endtime="20201110 08:38:51.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.963" endtime="20201110 08:38:51.365"></status>
</kw>
<msg timestamp="20201110 08:38:51.365" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.373" endtime="20201110 08:38:51.384"></status>
</kw>
<msg timestamp="20201110 08:38:51.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.371" endtime="20201110 08:38:51.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.385" endtime="20201110 08:38:51.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.388" endtime="20201110 08:38:51.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.369" endtime="20201110 08:38:51.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.367" endtime="20201110 08:38:51.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.398" endtime="20201110 08:38:51.666"></status>
</kw>
<msg timestamp="20201110 08:38:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017623931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.396" endtime="20201110 08:38:51.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017623931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.669" endtime="20201110 08:38:51.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.674" endtime="20201110 08:38:51.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.392" endtime="20201110 08:38:51.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.391" endtime="20201110 08:38:51.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.681" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:51.680" endtime="20201110 08:38:51.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.684" level="INFO">VALUE: [{'time': 0.017623931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.017630014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.0176345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017637181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017641778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017644653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.017647097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017649931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.017654028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017658764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017661278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017665264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017670153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017675056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017679528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017683347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017688542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.017694139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017697514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017700847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.017706347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.017712056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017717792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.01772375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017727639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017730389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017734458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.017739583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017741958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017747028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.017750986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017756042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017761889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017765181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.017768222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.017771986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017777708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017782111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017785431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.017791028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017793417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.017796889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017801, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017803472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017806153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017810444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017814986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017817611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017820778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:51.682" endtime="20201110 08:38:51.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.677" endtime="20201110 08:38:51.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:51.699" level="INFO">${debug-compressed} = {'time': [0.017623931, 0.017626681, 0.017630014, 0.0176345, 0.017637181, 0.017641778, 0.017644653, 0.017647097, 0.017649931, 0.017654028, 0.017658764, 0.017661278, 0.017665264, 0.017670153, 0.01767505...</msg>
<status status="PASS" starttime="20201110 08:38:51.687" endtime="20201110 08:38:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.703" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:51.702" endtime="20201110 08:38:51.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.706" level="INFO">VALUE: {'time': [0.017623931, 0.017626681, 0.017630014, 0.0176345, 0.017637181, 0.017641778, 0.017644653, 0.017647097, 0.017649931, 0.017654028, 0.017658764, 0.017661278, 0.017665264, 0.017670153, 0.017675056, 0.017679528, 0.017683347, 0.017688542, 0.017694139, 0.017697514, 0.017700847, 0.017706347, 0.017712056, 0.017717792, 0.01772375, 0.017727639, 0.017730389, 0.017734458, 0.017739583, 0.017741958, 0.017747028, 0.017750986, 0.017756042, 0.017761889, 0.017765181, 0.017768222, 0.017771986, 0.017777708, 0.017782111, 0.017785431, 0.017791028, 0.017793417, 0.017796889, 0.017801, 0.017803472, 0.017806153, 0.017810444, 0.017814986, 0.017817611, 0.017820778], 'eventdiff': [0, 2.7500000000027502e-06, 3.3329999999977267e-06, 4.486000000001461e-06, 2.6809999999974354e-06, 4.597000000002016e-06, 2.874999999999406e-06, 2.444000000000751e-06, 2.8340000000001697e-06, 4.096999999998047e-06, 4.736000000001711e-06, 2.5139999999986007e-06, 3.986000000000961e-06, 4.889000000000976e-06, 4.903000000000546e-06, 4.471999999998422e-06, 3.818999999998657e-06, 5.195000000002975e-06, 5.596999999999547e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 5.500000000002031e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 5.958000000000352e-06, 3.888999999999976e-06, 2.749999999999281e-06, 4.069000000002376e-06, 5.1249999999981866e-06, 2.3749999999989058e-06, 5.07000000000285e-06, 3.957999999998352e-06, 5.055999999999811e-06, 5.846999999999797e-06, 3.29200000000196e-06, 3.040999999998767e-06, 3.763999999999851e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.3200000000011e-06, 5.596999999999547e-06, 2.3889999999984757e-06, 3.472000000000891e-06, 4.111000000001086e-06, 2.471999999999891e-06, 2.681000000000905e-06, 4.291000000000017e-06, 4.541999999999741e-06, 2.6249999999991558e-06, 3.1669999999983656e-06], 'source_diff': [0, 2.7500000000027502e-06, 3.3329999999977267e-06, 4.486000000001461e-06, 2.6809999999974354e-06, 4.597000000002016e-06, 2.874999999999406e-06, 2.444000000000751e-06, 2.8340000000001697e-06, 4.096999999998047e-06, 4.736000000001711e-06, 2.5139999999986007e-06, 3.986000000000961e-06, 4.889000000000976e-06, 4.903000000000546e-06, 4.471999999998422e-06, 3.818999999998657e-06, 5.195000000002975e-06, 5.596999999999547e-06, 3.374999999999906e-06, 3.3329999999977267e-06, 5.500000000002031e-06, 5.7089999999995755e-06, 5.735999999999242e-06, 5.958000000000352e-06, 3.888999999999976e-06, 2.749999999999281e-06, 4.069000000002376e-06, 5.1249999999981866e-06, 2.3749999999989058e-06, 5.07000000000285e-06, 3.957999999998352e-06, 5.055999999999811e-06, 5.846999999999797e-06, 3.29200000000196e-06, 3.040999999998767e-06, 3.763999999999851e-06, 5.721999999999672e-06, 4.403000000000046e-06, 3.3200000000011e-06, 5.596999999999547e-06, 2.3889999999984757e-06, 3.472000000000891e-06, 4.111000000001086e-06, 2.471999999999891e-06, 2.681000000000905e-06, 4.291000000000017e-06, 4.541999999999741e-06, 2.6249999999991558e-06, 3.1669999999983656e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:51.704" endtime="20201110 08:38:51.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.700" endtime="20201110 08:38:51.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.711" level="INFO">${RESULT} = [{'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.0176345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:51.708" endtime="20201110 08:38:51.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:51.719" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017626681, 0.0176345, 0.017641778, 0.017647097, 0.017654028, 0.017661278, 0.017670153, 0.017679528, 0.017688542, 0.017697514, 0.017706347, 0.017717792, 0.017727639, 0.017734458, 0.01774195...</msg>
<status status="PASS" starttime="20201110 08:38:51.712" endtime="20201110 08:38:51.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:51.722" endtime="20201110 08:38:51.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.725" level="INFO">VALUE: [2.7500000000027502e-06, 4.486000000001461e-06, 4.597000000002016e-06, 2.444000000000751e-06, 4.096999999998047e-06, 2.5139999999986007e-06, 4.889000000000976e-06, 4.471999999998422e-06, 5.195000000002975e-06, 3.374999999999906e-06, 5.500000000002031e-06, 5.735999999999242e-06, 3.888999999999976e-06, 4.069000000002376e-06, 2.3749999999989058e-06, 3.957999999998352e-06, 5.846999999999797e-06, 3.040999999998767e-06, 5.721999999999672e-06, 3.3200000000011e-06, 2.3889999999984757e-06, 4.111000000001086e-06, 2.681000000000905e-06, 4.541999999999741e-06, 3.1669999999983656e-06]</msg>
<status status="PASS" starttime="20201110 08:38:51.724" endtime="20201110 08:38:51.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.720" endtime="20201110 08:38:51.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.729" endtime="20201110 08:38:51.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.732" endtime="20201110 08:38:51.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.731" endtime="20201110 08:38:51.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.727" endtime="20201110 08:38:51.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.366" endtime="20201110 08:38:51.753"></status>
</kw>
<msg timestamp="20201110 08:38:51.753" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.761" endtime="20201110 08:38:51.773"></status>
</kw>
<msg timestamp="20201110 08:38:51.773" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.759" endtime="20201110 08:38:51.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.774" endtime="20201110 08:38:51.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.777" endtime="20201110 08:38:51.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.757" endtime="20201110 08:38:51.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.755" endtime="20201110 08:38:51.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.786" endtime="20201110 08:38:52.052"></status>
</kw>
<msg timestamp="20201110 08:38:52.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.784" endtime="20201110 08:38:52.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.055" endtime="20201110 08:38:52.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.060" endtime="20201110 08:38:52.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.782" endtime="20201110 08:38:52.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.780" endtime="20201110 08:38:52.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.067" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:52.066" endtime="20201110 08:38:52.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.071" level="INFO">VALUE: [{'time': 0.018365806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.018375722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018379111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018384069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.018386472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018391472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018395833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018400764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.018405139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018408542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018410944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018413986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018417653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.01842175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018426167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018428792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018433861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.018439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018442181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.018448125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.018453806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018458333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018463764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018468208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.018472917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.018478681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.764000000001851e-06, 'source_diff': 5.764000000001851e-06}, {'time': 0.018482681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018487042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018489847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018493931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}, {'time': 0.018498153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018503278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018505764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1669999999973655e-06, 'source_diff': 2.1669999999973655e-06}, {'time': 0.018512264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018519681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.0185235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.018528444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.944000000003251e-06, 'source_diff': 4.944000000003251e-06}, {'time': 0.018532569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018537458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018541583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018545764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018550194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.01855675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018562611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018566903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018572083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:52.068" endtime="20201110 08:38:52.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.063" endtime="20201110 08:38:52.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:52.086" level="INFO">${debug-compressed} = {'time': [0.018365806, 0.018371833, 0.018375722, 0.018379111, 0.018384069, 0.018386472, 0.018391472, 0.018395833, 0.018400764, 0.018405139, 0.018408542, 0.018410944, 0.018413986, 0.018417653, 0.018421...</msg>
<status status="PASS" starttime="20201110 08:38:52.073" endtime="20201110 08:38:52.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.090" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:52.089" endtime="20201110 08:38:52.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.094" level="INFO">VALUE: {'time': [0.018365806, 0.018371833, 0.018375722, 0.018379111, 0.018384069, 0.018386472, 0.018391472, 0.018395833, 0.018400764, 0.018405139, 0.018408542, 0.018410944, 0.018413986, 0.018417653, 0.01842175, 0.018426167, 0.018428792, 0.018433861, 0.018439, 0.018442181, 0.018448125, 0.018453806, 0.018458333, 0.018463764, 0.018468208, 0.018472917, 0.018478681, 0.018482681, 0.018487042, 0.018489847, 0.018493931, 0.018498153, 0.018503278, 0.018505764, 0.018507931, 0.018512264, 0.018515917, 0.018519681, 0.0185235, 0.018528444, 0.018532569, 0.018537458, 0.018541583, 0.018545764, 0.018550194, 0.018552569, 0.01855675, 0.018562611, 0.018566903, 0.018572083], 'eventdiff': [0, 6.027000000002197e-06, 3.888999999999976e-06, 3.3889999999994758e-06, 4.957999999999352e-06, 2.403000000001515e-06, 4.9999999999980616e-06, 4.361000000001336e-06, 4.930999999999686e-06, 4.375000000000906e-06, 3.4029999999990457e-06, 2.401999999998572e-06, 3.04200000000171e-06, 3.6669999999988656e-06, 4.097000000001516e-06, 4.416999999999616e-06, 2.6249999999991558e-06, 5.068999999999907e-06, 5.139000000001226e-06, 3.1809999999979355e-06, 5.944000000000782e-06, 5.681000000000436e-06, 4.527000000000697e-06, 5.431000000000186e-06, 4.443999999999282e-06, 4.7089999999985754e-06, 5.764000000001851e-06, 4.000000000000531e-06, 4.360999999997867e-06, 2.8050000000015562e-06, 4.08400000000142e-06, 4.221999999998172e-06, 5.125000000001656e-06, 2.485999999999461e-06, 2.1669999999973655e-06, 4.333000000002196e-06, 3.6529999999992957e-06, 3.763999999999851e-06, 3.818999999998657e-06, 4.944000000003251e-06, 4.1249999999971865e-06, 4.889000000000976e-06, 4.125000000000656e-06, 4.1809999999989356e-06, 4.429999999999712e-06, 2.375000000002375e-06, 4.1809999999989356e-06, 5.860999999999367e-06, 4.291999999999491e-06, 5.180000000000462e-06], 'source_diff': [0, 6.027000000002197e-06, 3.888999999999976e-06, 3.3889999999994758e-06, 4.957999999999352e-06, 2.403000000001515e-06, 4.9999999999980616e-06, 4.361000000001336e-06, 4.930999999999686e-06, 4.375000000000906e-06, 3.4029999999990457e-06, 2.401999999998572e-06, 3.04200000000171e-06, 3.6669999999988656e-06, 4.097000000001516e-06, 4.416999999999616e-06, 2.6249999999991558e-06, 5.068999999999907e-06, 5.139000000001226e-06, 3.1809999999979355e-06, 5.944000000000782e-06, 5.681000000000436e-06, 4.527000000000697e-06, 5.431000000000186e-06, 4.443999999999282e-06, 4.7089999999985754e-06, 5.764000000001851e-06, 4.000000000000531e-06, 4.360999999997867e-06, 2.8050000000015562e-06, 4.08400000000142e-06, 4.221999999998172e-06, 5.125000000001656e-06, 2.485999999999461e-06, 2.1669999999973655e-06, 4.333000000002196e-06, 3.6529999999992957e-06, 3.763999999999851e-06, 3.818999999998657e-06, 4.944000000003251e-06, 4.1249999999971865e-06, 4.889000000000976e-06, 4.125000000000656e-06, 4.1809999999989356e-06, 4.429999999999712e-06, 2.375000000002375e-06, 4.1809999999989356e-06, 5.860999999999367e-06, 4.291999999999491e-06, 5.180000000000462e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:52.092" endtime="20201110 08:38:52.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.087" endtime="20201110 08:38:52.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.098" level="INFO">${RESULT} = [{'time': 0.018371833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.018379111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:52.096" endtime="20201110 08:38:52.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:52.107" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018371833, 0.018379111, 0.018386472, 0.018395833, 0.018405139, 0.018410944, 0.018417653, 0.018426167, 0.018433861, 0.018442181, 0.018453806, 0.018463764, 0.018472917, 0.018482681, 0.018489...</msg>
<status status="PASS" starttime="20201110 08:38:52.099" endtime="20201110 08:38:52.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.111" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:52.110" endtime="20201110 08:38:52.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.113" level="INFO">VALUE: [6.027000000002197e-06, 3.3889999999994758e-06, 2.403000000001515e-06, 4.361000000001336e-06, 4.375000000000906e-06, 2.401999999998572e-06, 3.6669999999988656e-06, 4.416999999999616e-06, 5.068999999999907e-06, 3.1809999999979355e-06, 5.681000000000436e-06, 5.431000000000186e-06, 4.7089999999985754e-06, 4.000000000000531e-06, 2.8050000000015562e-06, 4.221999999998172e-06, 2.485999999999461e-06, 4.333000000002196e-06, 3.763999999999851e-06, 4.944000000003251e-06, 4.889000000000976e-06, 4.1809999999989356e-06, 2.375000000002375e-06, 5.860999999999367e-06, 5.180000000000462e-06]</msg>
<status status="PASS" starttime="20201110 08:38:52.112" endtime="20201110 08:38:52.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.108" endtime="20201110 08:38:52.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.117" endtime="20201110 08:38:52.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.120" endtime="20201110 08:38:52.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.119" endtime="20201110 08:38:52.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.115" endtime="20201110 08:38:52.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.754" endtime="20201110 08:38:52.142"></status>
</kw>
<msg timestamp="20201110 08:38:52.142" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.150" endtime="20201110 08:38:52.162"></status>
</kw>
<msg timestamp="20201110 08:38:52.162" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.149" endtime="20201110 08:38:52.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.163" endtime="20201110 08:38:52.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.166" endtime="20201110 08:38:52.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.145" endtime="20201110 08:38:52.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.144" endtime="20201110 08:38:52.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.176" endtime="20201110 08:38:52.444"></status>
</kw>
<msg timestamp="20201110 08:38:52.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.174" endtime="20201110 08:38:52.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.447" endtime="20201110 08:38:52.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.453" endtime="20201110 08:38:52.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.172" endtime="20201110 08:38:52.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.170" endtime="20201110 08:38:52.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.459" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:52.458" endtime="20201110 08:38:52.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.463" level="INFO">VALUE: [{'time': 0.018696042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.01870375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.018709778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018713417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018717125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018719583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018724181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.018730083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.018734972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018739042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.018744042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018747528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018753472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.018756458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018759097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.018761861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.018764778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018767944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1660000000023614e-06, 'source_diff': 3.1660000000023614e-06}, {'time': 0.018771347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018775222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.018780958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018783403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.01878725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018792833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018797736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018802917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018806347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.018808778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.431000000000655e-06, 'source_diff': 2.431000000000655e-06}, {'time': 0.018814625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018820347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018824833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018828111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.018831, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.018833792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018838264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018843889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018846639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018851819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018857542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.018862931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.018867403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018872347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.018875458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018879653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.018885472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.018889236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018893958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018902264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:52.460" endtime="20201110 08:38:52.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.456" endtime="20201110 08:38:52.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:52.479" level="INFO">${debug-compressed} = {'time': [0.018696042, 0.018699694, 0.01870375, 0.018709778, 0.018713417, 0.018717125, 0.018719583, 0.018724181, 0.018730083, 0.018734972, 0.018739042, 0.018744042, 0.018747528, 0.018753472, 0.0187564...</msg>
<status status="PASS" starttime="20201110 08:38:52.465" endtime="20201110 08:38:52.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.482" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:52.481" endtime="20201110 08:38:52.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.486" level="INFO">VALUE: {'time': [0.018696042, 0.018699694, 0.01870375, 0.018709778, 0.018713417, 0.018717125, 0.018719583, 0.018724181, 0.018730083, 0.018734972, 0.018739042, 0.018744042, 0.018747528, 0.018753472, 0.018756458, 0.018759097, 0.018761861, 0.018764778, 0.018767944, 0.018771347, 0.018775222, 0.018780958, 0.018783403, 0.01878725, 0.018792833, 0.018797736, 0.018802917, 0.018806347, 0.018808778, 0.018814625, 0.018820347, 0.018824833, 0.018828111, 0.018831, 0.018833792, 0.018838264, 0.018843889, 0.018846639, 0.018851819, 0.018857542, 0.018862931, 0.018867403, 0.018872347, 0.018875458, 0.018879653, 0.018885472, 0.018889236, 0.018893958, 0.018896486, 0.018902264], 'eventdiff': [0, 3.651999999999822e-06, 4.05600000000228e-06, 6.0279999999982015e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 2.458000000000321e-06, 4.59799999999802e-06, 5.902000000002072e-06, 4.8889999999975065e-06, 4.07000000000185e-06, 4.9999999999980616e-06, 3.486000000000461e-06, 5.944000000000782e-06, 2.985999999999961e-06, 2.6389999999987257e-06, 2.76400000000232e-06, 2.9169999999981155e-06, 3.1660000000023614e-06, 3.4029999999990457e-06, 3.875000000000406e-06, 5.735999999999242e-06, 2.4450000000002248e-06, 3.846999999997797e-06, 5.582999999999977e-06, 4.903000000000546e-06, 5.180999999999936e-06, 3.4300000000021813e-06, 2.431000000000655e-06, 5.846999999999797e-06, 5.721999999999672e-06, 4.485999999997992e-06, 3.27800000000239e-06, 2.8889999999989757e-06, 2.7919999999979905e-06, 4.472000000001891e-06, 5.624999999998687e-06, 2.749999999999281e-06, 5.180000000000462e-06, 5.723000000002615e-06, 5.3889999999980065e-06, 4.472000000001891e-06, 4.943999999999782e-06, 3.111000000000086e-06, 4.1949999999985055e-06, 5.819000000000657e-06, 3.763999999999851e-06, 4.721999999998672e-06, 2.52800000000164e-06, 5.7779999999979514e-06], 'source_diff': [0, 3.651999999999822e-06, 4.05600000000228e-06, 6.0279999999982015e-06, 3.6389999999997258e-06, 3.708000000001571e-06, 2.458000000000321e-06, 4.59799999999802e-06, 5.902000000002072e-06, 4.8889999999975065e-06, 4.07000000000185e-06, 4.9999999999980616e-06, 3.486000000000461e-06, 5.944000000000782e-06, 2.985999999999961e-06, 2.6389999999987257e-06, 2.76400000000232e-06, 2.9169999999981155e-06, 3.1660000000023614e-06, 3.4029999999990457e-06, 3.875000000000406e-06, 5.735999999999242e-06, 2.4450000000002248e-06, 3.846999999997797e-06, 5.582999999999977e-06, 4.903000000000546e-06, 5.180999999999936e-06, 3.4300000000021813e-06, 2.431000000000655e-06, 5.846999999999797e-06, 5.721999999999672e-06, 4.485999999997992e-06, 3.27800000000239e-06, 2.8889999999989757e-06, 2.7919999999979905e-06, 4.472000000001891e-06, 5.624999999998687e-06, 2.749999999999281e-06, 5.180000000000462e-06, 5.723000000002615e-06, 5.3889999999980065e-06, 4.472000000001891e-06, 4.943999999999782e-06, 3.111000000000086e-06, 4.1949999999985055e-06, 5.819000000000657e-06, 3.763999999999851e-06, 4.721999999998672e-06, 2.52800000000164e-06, 5.7779999999979514e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:38:52.483" endtime="20201110 08:38:52.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.479" endtime="20201110 08:38:52.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.490" level="INFO">${RESULT} = [{'time': 0.018699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.018709778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:52.487" endtime="20201110 08:38:52.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:52.498" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018699694, 0.018709778, 0.018717125, 0.018724181, 0.018734972, 0.018744042, 0.018753472, 0.018759097, 0.018764778, 0.018771347, 0.018780958, 0.01878725, 0.018797736, 0.018806347, 0.0188146...</msg>
<status status="PASS" starttime="20201110 08:38:52.491" endtime="20201110 08:38:52.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.502" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:52.501" endtime="20201110 08:38:52.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.504" level="INFO">VALUE: [3.651999999999822e-06, 6.0279999999982015e-06, 3.708000000001571e-06, 4.59799999999802e-06, 4.8889999999975065e-06, 4.9999999999980616e-06, 5.944000000000782e-06, 2.6389999999987257e-06, 2.9169999999981155e-06, 3.4029999999990457e-06, 5.735999999999242e-06, 3.846999999997797e-06, 4.903000000000546e-06, 3.4300000000021813e-06, 5.846999999999797e-06, 4.485999999997992e-06, 2.8889999999989757e-06, 4.472000000001891e-06, 2.749999999999281e-06, 5.723000000002615e-06, 4.472000000001891e-06, 3.111000000000086e-06, 5.819000000000657e-06, 4.721999999998672e-06, 5.7779999999979514e-06]</msg>
<status status="PASS" starttime="20201110 08:38:52.503" endtime="20201110 08:38:52.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.499" endtime="20201110 08:38:52.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.508" endtime="20201110 08:38:52.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.511" endtime="20201110 08:38:52.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.510" endtime="20201110 08:38:52.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.506" endtime="20201110 08:38:52.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.142" endtime="20201110 08:38:52.533"></status>
</kw>
<msg timestamp="20201110 08:38:52.533" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.540" endtime="20201110 08:38:52.550"></status>
</kw>
<msg timestamp="20201110 08:38:52.551" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.539" endtime="20201110 08:38:52.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.552" endtime="20201110 08:38:52.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.554" endtime="20201110 08:38:52.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.536" endtime="20201110 08:38:52.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.535" endtime="20201110 08:38:52.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.563" endtime="20201110 08:38:52.845"></status>
</kw>
<msg timestamp="20201110 08:38:52.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.562" endtime="20201110 08:38:52.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.848" endtime="20201110 08:38:52.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.853" endtime="20201110 08:38:52.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.559" endtime="20201110 08:38:52.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.557" endtime="20201110 08:38:52.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.860" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:52.859" endtime="20201110 08:38:52.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.863" level="INFO">VALUE: [{'time': 0.017409653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017411917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.017417917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.017421167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.017426167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017430569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.017434417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017439889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017445694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017451167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.017453917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017456917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017461083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.017463944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017469042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.017472486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.017477556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.017482694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.137999999998283e-06, 'source_diff': 5.137999999998283e-06}, {'time': 0.017485083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.017489736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017497444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.017500194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017503, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.017506653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017510417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017513639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017515889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.017521194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017523819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017529542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.017534917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017540931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017546361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017552208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017554972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017557597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017562069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017564694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017567278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.017570319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017574458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017580042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.017583694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.017586444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.0175905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017593903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.017598639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.017602889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017606264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:52.861" endtime="20201110 08:38:52.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.857" endtime="20201110 08:38:52.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:52.878" level="INFO">${debug-compressed} = {'time': [0.017409653, 0.017411917, 0.017417917, 0.017421167, 0.017426167, 0.017430569, 0.017434417, 0.017439889, 0.017445694, 0.017451167, 0.017453917, 0.017456917, 0.017461083, 0.017463944, 0.017469...</msg>
<status status="PASS" starttime="20201110 08:38:52.866" endtime="20201110 08:38:52.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.882" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:52.881" endtime="20201110 08:38:52.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.885" level="INFO">VALUE: {'time': [0.017409653, 0.017411917, 0.017417917, 0.017421167, 0.017426167, 0.017430569, 0.017434417, 0.017439889, 0.017445694, 0.017451167, 0.017453917, 0.017456917, 0.017461083, 0.017463944, 0.017469042, 0.017472486, 0.017477556, 0.017482694, 0.017485083, 0.017489736, 0.017494639, 0.017497444, 0.017500194, 0.017503, 0.017506653, 0.017510417, 0.017513639, 0.017515889, 0.017521194, 0.017523819, 0.017529542, 0.017534917, 0.017540931, 0.017546361, 0.017552208, 0.017554972, 0.017557597, 0.017562069, 0.017564694, 0.017567278, 0.017570319, 0.017574458, 0.017580042, 0.017583694, 0.017586444, 0.0175905, 0.017593903, 0.017598639, 0.017602889, 0.017606264], 'eventdiff': [0, 2.2639999999983507e-06, 6.000000000002531e-06, 3.249999999999781e-06, 4.9999999999980616e-06, 4.402000000000572e-06, 3.84800000000074e-06, 5.471999999999422e-06, 5.805000000001087e-06, 5.472999999998895e-06, 2.749999999999281e-06, 2.999999999999531e-06, 4.165999999999892e-06, 2.860999999999836e-06, 5.09800000000199e-06, 3.4439999999982818e-06, 5.07000000000285e-06, 5.137999999998283e-06, 2.3889999999984757e-06, 4.653000000000296e-06, 4.903000000000546e-06, 2.8050000000015562e-06, 2.749999999999281e-06, 2.80600000000103e-06, 3.6529999999992957e-06, 3.763999999999851e-06, 3.222000000000641e-06, 2.2499999999987808e-06, 5.305000000000587e-06, 2.6249999999991558e-06, 5.7229999999991454e-06, 5.375000000001906e-06, 6.0139999999986316e-06, 5.430000000000712e-06, 5.846999999999797e-06, 2.7639999999988507e-06, 2.6250000000026252e-06, 4.471999999998422e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 3.0410000000022364e-06, 4.139000000000226e-06, 5.5839999999994505e-06, 3.651999999999822e-06, 2.749999999999281e-06, 4.0559999999988106e-06, 3.403000000002515e-06, 4.735999999998242e-06, 4.250000000000781e-06, 3.374999999999906e-06], 'source_diff': [0, 2.2639999999983507e-06, 6.000000000002531e-06, 3.249999999999781e-06, 4.9999999999980616e-06, 4.402000000000572e-06, 3.84800000000074e-06, 5.471999999999422e-06, 5.805000000001087e-06, 5.472999999998895e-06, 2.749999999999281e-06, 2.999999999999531e-06, 4.165999999999892e-06, 2.860999999999836e-06, 5.09800000000199e-06, 3.4439999999982818e-06, 5.07000000000285e-06, 5.137999999998283e-06, 2.3889999999984757e-06, 4.653000000000296e-06, 4.903000000000546e-06, 2.8050000000015562e-06, 2.749999999999281e-06, 2.80600000000103e-06, 3.6529999999992957e-06, 3.763999999999851e-06, 3.222000000000641e-06, 2.2499999999987808e-06, 5.305000000000587e-06, 2.6249999999991558e-06, 5.7229999999991454e-06, 5.375000000001906e-06, 6.0139999999986316e-06, 5.430000000000712e-06, 5.846999999999797e-06, 2.7639999999988507e-06, 2.6250000000026252e-06, 4.471999999998422e-06, 2.6249999999991558e-06, 2.5839999999999197e-06, 3.0410000000022364e-06, 4.139000000000226e-06, 5.5839999999994505e-06, 3.651999999999822e-06, 2.749999999999281e-06, 4.0559999999988106e-06, 3.403000000002515e-06, 4.735999999998242e-06, 4.250000000000781e-06, 3.374999999999906e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:52.883" endtime="20201110 08:38:52.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.879" endtime="20201110 08:38:52.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.890" level="INFO">${RESULT} = [{'time': 0.017411917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.017421167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:52.887" endtime="20201110 08:38:52.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:52.898" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017411917, 0.017421167, 0.017430569, 0.017439889, 0.017451167, 0.017456917, 0.017463944, 0.017472486, 0.017482694, 0.017489736, 0.017497444, 0.017503, 0.017510417, 0.017515889, 0.017523819...</msg>
<status status="PASS" starttime="20201110 08:38:52.891" endtime="20201110 08:38:52.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.902" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:52.901" endtime="20201110 08:38:52.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.905" level="INFO">VALUE: [2.2639999999983507e-06, 3.249999999999781e-06, 4.402000000000572e-06, 5.471999999999422e-06, 5.472999999998895e-06, 2.999999999999531e-06, 2.860999999999836e-06, 3.4439999999982818e-06, 5.137999999998283e-06, 4.653000000000296e-06, 2.8050000000015562e-06, 2.80600000000103e-06, 3.763999999999851e-06, 2.2499999999987808e-06, 2.6249999999991558e-06, 5.375000000001906e-06, 5.430000000000712e-06, 2.7639999999988507e-06, 4.471999999998422e-06, 2.5839999999999197e-06, 4.139000000000226e-06, 3.651999999999822e-06, 4.0559999999988106e-06, 4.735999999998242e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201110 08:38:52.903" endtime="20201110 08:38:52.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.899" endtime="20201110 08:38:52.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.908" endtime="20201110 08:38:52.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.912" endtime="20201110 08:38:52.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.910" endtime="20201110 08:38:52.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.907" endtime="20201110 08:38:52.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.533" endtime="20201110 08:38:52.932"></status>
</kw>
<msg timestamp="20201110 08:38:52.933" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.940" endtime="20201110 08:38:52.951"></status>
</kw>
<msg timestamp="20201110 08:38:52.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.939" endtime="20201110 08:38:52.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.954" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.952" endtime="20201110 08:38:52.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.955" endtime="20201110 08:38:52.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.936" endtime="20201110 08:38:52.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.934" endtime="20201110 08:38:52.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.964" endtime="20201110 08:38:53.230"></status>
</kw>
<msg timestamp="20201110 08:38:53.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017421125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.962" endtime="20201110 08:38:53.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017421125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.232" endtime="20201110 08:38:53.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.238" endtime="20201110 08:38:53.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.960" endtime="20201110 08:38:53.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.958" endtime="20201110 08:38:53.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.244" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:53.243" endtime="20201110 08:38:53.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.248" level="INFO">VALUE: [{'time': 0.017418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017421125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.017424958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.017428528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5699999999978804e-06, 'source_diff': 3.5699999999978804e-06}, {'time': 0.017432472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.017435153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017440056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017443458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017447708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017452069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017458083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.017460708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.017465139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.431000000002655e-06, 'source_diff': 4.431000000002655e-06}, {'time': 0.017467819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.017472056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017474292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.235999999999211e-06, 'source_diff': 2.235999999999211e-06}, {'time': 0.017477694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017480819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1250000000031253e-06, 'source_diff': 3.1250000000031253e-06}, {'time': 0.017484569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.017488708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017493764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017499375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.017501889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.01750725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017511847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017517097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017519903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.017523083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.017526069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017528514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017532333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.017538125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017541403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017544458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.017549347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017554556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.017557889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.017561472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017564875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017570778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017576153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017580972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.017583167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1949999999999747e-06, 'source_diff': 2.1949999999999747e-06}, {'time': 0.017585403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.235999999999211e-06, 'source_diff': 2.235999999999211e-06}, {'time': 0.01759025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017595778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.017601208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017605889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017608944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.017613292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:53.245" endtime="20201110 08:38:53.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.241" endtime="20201110 08:38:53.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:53.263" level="INFO">${debug-compressed} = {'time': [0.017418306, 0.017421125, 0.017424958, 0.017428528, 0.017432472, 0.017435153, 0.017440056, 0.017443458, 0.017447708, 0.017452069, 0.017458083, 0.017460708, 0.017465139, 0.017467819, 0.017472...</msg>
<status status="PASS" starttime="20201110 08:38:53.250" endtime="20201110 08:38:53.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.267" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:53.266" endtime="20201110 08:38:53.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.271" level="INFO">VALUE: {'time': [0.017418306, 0.017421125, 0.017424958, 0.017428528, 0.017432472, 0.017435153, 0.017440056, 0.017443458, 0.017447708, 0.017452069, 0.017458083, 0.017460708, 0.017465139, 0.017467819, 0.017472056, 0.017474292, 0.017477694, 0.017480819, 0.017484569, 0.017488708, 0.017493764, 0.017499375, 0.017501889, 0.01750725, 0.017511847, 0.017517097, 0.017519903, 0.017523083, 0.017526069, 0.017528514, 0.017532333, 0.017538125, 0.017541403, 0.017544458, 0.017549347, 0.017554556, 0.017557889, 0.017561472, 0.017564875, 0.017570778, 0.017576153, 0.017580972, 0.017583167, 0.017585403, 0.01759025, 0.017595778, 0.017601208, 0.017605889, 0.017608944, 0.017613292], 'eventdiff': [0, 2.8189999999976567e-06, 3.833000000001696e-06, 3.5699999999978804e-06, 3.944000000002251e-06, 2.6809999999974354e-06, 4.903000000000546e-06, 3.401999999999572e-06, 4.250000000000781e-06, 4.361000000001336e-06, 6.0139999999986316e-06, 2.6249999999991558e-06, 4.431000000002655e-06, 2.679999999997962e-06, 4.237000000000685e-06, 2.235999999999211e-06, 3.401999999999572e-06, 3.1250000000031253e-06, 3.7499999999968114e-06, 4.139000000000226e-06, 5.055999999999811e-06, 5.611000000002586e-06, 2.5139999999986007e-06, 5.360999999998867e-06, 4.597000000002016e-06, 5.2499999999983116e-06, 2.80600000000103e-06, 3.179999999998462e-06, 2.985999999999961e-06, 2.4450000000002248e-06, 3.819000000002126e-06, 5.792000000000991e-06, 3.2779999999989207e-06, 3.054999999998337e-06, 4.889000000000976e-06, 5.2089999999990755e-06, 3.333000000001196e-06, 3.583000000001446e-06, 3.4029999999990457e-06, 5.9029999999980765e-06, 5.375000000001906e-06, 4.818999999999657e-06, 2.1949999999999747e-06, 2.235999999999211e-06, 4.847000000002266e-06, 5.527999999997701e-06, 5.430000000000712e-06, 4.680999999999436e-06, 3.0550000000018063e-06, 4.34799999999777e-06], 'source_diff': [0, 2.8189999999976567e-06, 3.833000000001696e-06, 3.5699999999978804e-06, 3.944000000002251e-06, 2.6809999999974354e-06, 4.903000000000546e-06, 3.401999999999572e-06, 4.250000000000781e-06, 4.361000000001336e-06, 6.0139999999986316e-06, 2.6249999999991558e-06, 4.431000000002655e-06, 2.679999999997962e-06, 4.237000000000685e-06, 2.235999999999211e-06, 3.401999999999572e-06, 3.1250000000031253e-06, 3.7499999999968114e-06, 4.139000000000226e-06, 5.055999999999811e-06, 5.611000000002586e-06, 2.5139999999986007e-06, 5.360999999998867e-06, 4.597000000002016e-06, 5.2499999999983116e-06, 2.80600000000103e-06, 3.179999999998462e-06, 2.985999999999961e-06, 2.4450000000002248e-06, 3.819000000002126e-06, 5.792000000000991e-06, 3.2779999999989207e-06, 3.054999999998337e-06, 4.889000000000976e-06, 5.2089999999990755e-06, 3.333000000001196e-06, 3.583000000001446e-06, 3.4029999999990457e-06, 5.9029999999980765e-06, 5.375000000001906e-06, 4.818999999999657e-06, 2.1949999999999747e-06, 2.235999999999211e-06, 4.847000000002266e-06, 5.527999999997701e-06, 5.430000000000712e-06, 4.680999999999436e-06, 3.0550000000018063e-06, 4.34799999999777e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:53.268" endtime="20201110 08:38:53.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.264" endtime="20201110 08:38:53.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.277" level="INFO">${RESULT} = [{'time': 0.017421125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.017428528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:53.274" endtime="20201110 08:38:53.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:53.284" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017421125, 0.017428528, 0.017435153, 0.017443458, 0.017452069, 0.017460708, 0.017467819, 0.017474292, 0.017480819, 0.017488708, 0.017499375, 0.01750725, 0.017517097, 0.017523083, 0.0175285...</msg>
<status status="PASS" starttime="20201110 08:38:53.278" endtime="20201110 08:38:53.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:53.288" endtime="20201110 08:38:53.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.291" level="INFO">VALUE: [2.8189999999976567e-06, 3.5699999999978804e-06, 2.6809999999974354e-06, 3.401999999999572e-06, 4.361000000001336e-06, 2.6249999999991558e-06, 2.679999999997962e-06, 2.235999999999211e-06, 3.1250000000031253e-06, 4.139000000000226e-06, 5.611000000002586e-06, 5.360999999998867e-06, 5.2499999999983116e-06, 3.179999999998462e-06, 2.4450000000002248e-06, 5.792000000000991e-06, 3.054999999998337e-06, 5.2089999999990755e-06, 3.583000000001446e-06, 5.9029999999980765e-06, 4.818999999999657e-06, 2.235999999999211e-06, 5.527999999997701e-06, 4.680999999999436e-06, 4.34799999999777e-06]</msg>
<status status="PASS" starttime="20201110 08:38:53.290" endtime="20201110 08:38:53.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.285" endtime="20201110 08:38:53.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.294" endtime="20201110 08:38:53.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.298" endtime="20201110 08:38:53.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.296" endtime="20201110 08:38:53.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.293" endtime="20201110 08:38:53.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.933" endtime="20201110 08:38:53.319"></status>
</kw>
<msg timestamp="20201110 08:38:53.319" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.327" endtime="20201110 08:38:53.337"></status>
</kw>
<msg timestamp="20201110 08:38:53.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.325" endtime="20201110 08:38:53.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.339" endtime="20201110 08:38:53.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.341" endtime="20201110 08:38:53.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.322" endtime="20201110 08:38:53.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.321" endtime="20201110 08:38:53.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.350" endtime="20201110 08:38:53.616"></status>
</kw>
<msg timestamp="20201110 08:38:53.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.349" endtime="20201110 08:38:53.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017462778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.619" endtime="20201110 08:38:53.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.624" endtime="20201110 08:38:53.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.346" endtime="20201110 08:38:53.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.344" endtime="20201110 08:38:53.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.630" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:53.629" endtime="20201110 08:38:53.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.634" level="INFO">VALUE: [{'time': 0.017462778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017468292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017472931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017475958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.017478792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.017482431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017485944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.513000000000127e-06, 'source_diff': 3.513000000000127e-06}, {'time': 0.0174915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.017497111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017499861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017503319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017507681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.017511611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.017515125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017517542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017520292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017523708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017528764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.017534083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.017539389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017542389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017545778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3890000000029452e-06, 'source_diff': 3.3890000000029452e-06}, {'time': 0.017548764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017552167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017556778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017560472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.017566014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017568722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.017574736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017580278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017583931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017587681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017592875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.017595208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017598681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.017602389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.017604625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.235999999999211e-06, 'source_diff': 2.235999999999211e-06}, {'time': 0.017609861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.017614778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017617514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017622639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017628028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.017632667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017635125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017639778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.017644569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017650389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017654333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.944000000002251e-06, 'source_diff': 3.944000000002251e-06}, {'time': 0.017657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.017662, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:53.631" endtime="20201110 08:38:53.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.627" endtime="20201110 08:38:53.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:53.650" level="INFO">${debug-compressed} = {'time': [0.017462778, 0.017468292, 0.017472931, 0.017475958, 0.017478792, 0.017482431, 0.017485944, 0.0174915, 0.017497111, 0.017499861, 0.017503319, 0.017507681, 0.017511611, 0.017515125, 0.01751754...</msg>
<status status="PASS" starttime="20201110 08:38:53.636" endtime="20201110 08:38:53.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.653" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:53.652" endtime="20201110 08:38:53.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.656" level="INFO">VALUE: {'time': [0.017462778, 0.017468292, 0.017472931, 0.017475958, 0.017478792, 0.017482431, 0.017485944, 0.0174915, 0.017497111, 0.017499861, 0.017503319, 0.017507681, 0.017511611, 0.017515125, 0.017517542, 0.017520292, 0.017523708, 0.017528764, 0.017534083, 0.017539389, 0.017542389, 0.017545778, 0.017548764, 0.017552167, 0.017556778, 0.017560472, 0.017566014, 0.017568722, 0.017574736, 0.017580278, 0.017583931, 0.017587681, 0.017592875, 0.017595208, 0.017598681, 0.017602389, 0.017604625, 0.017609861, 0.017614778, 0.017617514, 0.017622639, 0.017628028, 0.017632667, 0.017635125, 0.017639778, 0.017644569, 0.017650389, 0.017654333, 0.017657972, 0.017662], 'eventdiff': [0, 5.5139999999981315e-06, 4.639000000000726e-06, 3.026999999999197e-06, 2.8340000000001697e-06, 3.6389999999997258e-06, 3.513000000000127e-06, 5.556000000000311e-06, 5.610999999999117e-06, 2.749999999999281e-06, 3.458000000001321e-06, 4.36200000000081e-06, 3.929999999999212e-06, 3.5139999999996008e-06, 2.417000000001085e-06, 2.749999999999281e-06, 3.415999999999142e-06, 5.055999999999811e-06, 5.319000000000157e-06, 5.306000000000061e-06, 2.999999999999531e-06, 3.3890000000029452e-06, 2.985999999999961e-06, 3.4029999999990457e-06, 4.610999999998117e-06, 3.6940000000020012e-06, 5.542000000000741e-06, 2.7079999999971016e-06, 6.014000000002101e-06, 5.542000000000741e-06, 3.6529999999992957e-06, 3.750000000000281e-06, 5.194000000000032e-06, 2.333000000000196e-06, 3.4730000000003647e-06, 3.7079999999981017e-06, 2.235999999999211e-06, 5.236000000002211e-06, 4.917000000000116e-06, 2.735999999999711e-06, 5.1249999999981866e-06, 5.389000000001476e-06, 4.639000000000726e-06, 2.458000000000321e-06, 4.652999999996826e-06, 4.791000000000517e-06, 5.820000000000131e-06, 3.944000000002251e-06, 3.6389999999997258e-06, 4.027999999999671e-06], 'source_diff': [0, 5.5139999999981315e-06, 4.639000000000726e-06, 3.026999999999197e-06, 2.8340000000001697e-06, 3.6389999999997258e-06, 3.513000000000127e-06, 5.556000000000311e-06, 5.610999999999117e-06, 2.749999999999281e-06, 3.458000000001321e-06, 4.36200000000081e-06, 3.929999999999212e-06, 3.5139999999996008e-06, 2.417000000001085e-06, 2.749999999999281e-06, 3.415999999999142e-06, 5.055999999999811e-06, 5.319000000000157e-06, 5.306000000000061e-06, 2.999999999999531e-06, 3.3890000000029452e-06, 2.985999999999961e-06, 3.4029999999990457e-06, 4.610999999998117e-06, 3.6940000000020012e-06, 5.542000000000741e-06, 2.7079999999971016e-06, 6.014000000002101e-06, 5.542000000000741e-06, 3.6529999999992957e-06, 3.750000000000281e-06, 5.194000000000032e-06, 2.333000000000196e-06, 3.4730000000003647e-06, 3.7079999999981017e-06, 2.235999999999211e-06, 5.236000000002211e-06, 4.917000000000116e-06, 2.735999999999711e-06, 5.1249999999981866e-06, 5.389000000001476e-06, 4.639000000000726e-06, 2.458000000000321e-06, 4.652999999996826e-06, 4.791000000000517e-06, 5.820000000000131e-06, 3.944000000002251e-06, 3.6389999999997258e-06, 4.027999999999671e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:38:53.654" endtime="20201110 08:38:53.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.650" endtime="20201110 08:38:53.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.661" level="INFO">${RESULT} = [{'time': 0.017468292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.017475958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:53.658" endtime="20201110 08:38:53.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:53.669" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017468292, 0.017475958, 0.017482431, 0.0174915, 0.017499861, 0.017507681, 0.017515125, 0.017520292, 0.017528764, 0.017539389, 0.017545778, 0.017552167, 0.017560472, 0.017568722, 0.01758027...</msg>
<status status="PASS" starttime="20201110 08:38:53.662" endtime="20201110 08:38:53.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.673" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:53.672" endtime="20201110 08:38:53.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.675" level="INFO">VALUE: [5.5139999999981315e-06, 3.026999999999197e-06, 3.6389999999997258e-06, 5.556000000000311e-06, 2.749999999999281e-06, 4.36200000000081e-06, 3.5139999999996008e-06, 2.749999999999281e-06, 5.055999999999811e-06, 5.306000000000061e-06, 3.3890000000029452e-06, 3.4029999999990457e-06, 3.6940000000020012e-06, 2.7079999999971016e-06, 5.542000000000741e-06, 3.750000000000281e-06, 2.333000000000196e-06, 3.7079999999981017e-06, 5.236000000002211e-06, 2.735999999999711e-06, 5.389000000001476e-06, 2.458000000000321e-06, 4.791000000000517e-06, 3.944000000002251e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201110 08:38:53.674" endtime="20201110 08:38:53.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.670" endtime="20201110 08:38:53.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.679" endtime="20201110 08:38:53.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.682" endtime="20201110 08:38:53.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.680" endtime="20201110 08:38:53.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.677" endtime="20201110 08:38:53.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.319" endtime="20201110 08:38:53.703"></status>
</kw>
<msg timestamp="20201110 08:38:53.703" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.710" endtime="20201110 08:38:53.721"></status>
</kw>
<msg timestamp="20201110 08:38:53.721" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.709" endtime="20201110 08:38:53.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.722" endtime="20201110 08:38:53.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.725" endtime="20201110 08:38:53.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.706" endtime="20201110 08:38:53.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.705" endtime="20201110 08:38:53.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.735" endtime="20201110 08:38:54.000"></status>
</kw>
<msg timestamp="20201110 08:38:54.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017388917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.733" endtime="20201110 08:38:54.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017388917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.003" endtime="20201110 08:38:54.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.008" endtime="20201110 08:38:54.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.730" endtime="20201110 08:38:54.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.728" endtime="20201110 08:38:54.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.014" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:54.013" endtime="20201110 08:38:54.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.018" level="INFO">VALUE: [{'time': 0.017388917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.017398514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017403625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017408528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017411931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017417958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.017422014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017425361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.0174305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017434611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.017438986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017442306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.017448167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017453972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017459319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017462722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017466667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.017469306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017471986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.01747575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.017481542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.017484403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017489125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017492542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017495833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.290999999999017e-06, 'source_diff': 3.290999999999017e-06}, {'time': 0.017500292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.017505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017508111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017512139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.01751625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017519903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999989207e-06, 'source_diff': 3.2779999999989207e-06}, {'time': 0.017525917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017529264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017534153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017538986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017543292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017546917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017552542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.017556597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017560292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.017564431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.138999999996756e-06, 'source_diff': 4.138999999996756e-06}, {'time': 0.017567708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2770000000029165e-06, 'source_diff': 3.2770000000029165e-06}, {'time': 0.017573667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.017579583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.017583111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017587958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017590264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.017593083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:54.016" endtime="20201110 08:38:54.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.011" endtime="20201110 08:38:54.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:54.033" level="INFO">${debug-compressed} = {'time': [0.017388917, 0.017393667, 0.017398514, 0.017403625, 0.017408528, 0.017411931, 0.017417958, 0.017422014, 0.017425361, 0.0174305, 0.017434611, 0.017438986, 0.017442306, 0.017448167, 0.01745397...</msg>
<status status="PASS" starttime="20201110 08:38:54.020" endtime="20201110 08:38:54.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.037" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:54.036" endtime="20201110 08:38:54.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.040" level="INFO">VALUE: {'time': [0.017388917, 0.017393667, 0.017398514, 0.017403625, 0.017408528, 0.017411931, 0.017417958, 0.017422014, 0.017425361, 0.0174305, 0.017434611, 0.017438986, 0.017442306, 0.017448167, 0.017453972, 0.017459319, 0.017462722, 0.017466667, 0.017469306, 0.017471986, 0.01747575, 0.017481542, 0.017484403, 0.017489125, 0.017492542, 0.017495833, 0.017500292, 0.017505, 0.017508111, 0.017512139, 0.01751625, 0.017519903, 0.017523181, 0.017525917, 0.017529264, 0.017534153, 0.017538986, 0.017543292, 0.017546917, 0.017552542, 0.017556597, 0.017560292, 0.017564431, 0.017567708, 0.017573667, 0.017579583, 0.017583111, 0.017587958, 0.017590264, 0.017593083], 'eventdiff': [0, 4.750000000001281e-06, 4.846999999998797e-06, 5.110999999998617e-06, 4.903000000000546e-06, 3.4029999999990457e-06, 6.027000000002197e-06, 4.0559999999988106e-06, 3.347000000000766e-06, 5.139000000001226e-06, 4.1109999999976166e-06, 4.375000000000906e-06, 3.3200000000011e-06, 5.860999999999367e-06, 5.805000000001087e-06, 5.346999999999297e-06, 3.4029999999990457e-06, 3.945000000001725e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 3.7640000000033202e-06, 5.791999999997521e-06, 2.860999999999836e-06, 4.722000000002141e-06, 3.4169999999986156e-06, 3.290999999999017e-06, 4.459000000001795e-06, 4.707999999999102e-06, 3.111000000000086e-06, 4.027999999999671e-06, 4.111000000001086e-06, 3.6529999999992957e-06, 3.2779999999989207e-06, 2.735999999999711e-06, 3.347000000000766e-06, 4.889000000000976e-06, 4.832999999999227e-06, 4.305999999999061e-06, 3.625000000000156e-06, 5.625000000002156e-06, 4.054999999999337e-06, 3.695000000001475e-06, 4.138999999996756e-06, 3.2770000000029165e-06, 5.9589999999998255e-06, 5.915999999998173e-06, 3.5279999999991707e-06, 4.847000000002266e-06, 2.30600000000053e-06, 2.8189999999976567e-06], 'source_diff': [0, 4.750000000001281e-06, 4.846999999998797e-06, 5.110999999998617e-06, 4.903000000000546e-06, 3.4029999999990457e-06, 6.027000000002197e-06, 4.0559999999988106e-06, 3.347000000000766e-06, 5.139000000001226e-06, 4.1109999999976166e-06, 4.375000000000906e-06, 3.3200000000011e-06, 5.860999999999367e-06, 5.805000000001087e-06, 5.346999999999297e-06, 3.4029999999990457e-06, 3.945000000001725e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 3.7640000000033202e-06, 5.791999999997521e-06, 2.860999999999836e-06, 4.722000000002141e-06, 3.4169999999986156e-06, 3.290999999999017e-06, 4.459000000001795e-06, 4.707999999999102e-06, 3.111000000000086e-06, 4.027999999999671e-06, 4.111000000001086e-06, 3.6529999999992957e-06, 3.2779999999989207e-06, 2.735999999999711e-06, 3.347000000000766e-06, 4.889000000000976e-06, 4.832999999999227e-06, 4.305999999999061e-06, 3.625000000000156e-06, 5.625000000002156e-06, 4.054999999999337e-06, 3.695000000001475e-06, 4.138999999996756e-06, 3.2770000000029165e-06, 5.9589999999998255e-06, 5.915999999998173e-06, 3.5279999999991707e-06, 4.847000000002266e-06, 2.30600000000053e-06, 2.8189999999976567e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:54.038" endtime="20201110 08:38:54.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.034" endtime="20201110 08:38:54.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.044" level="INFO">${RESULT} = [{'time': 0.017393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.017403625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:54.042" endtime="20201110 08:38:54.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:54.052" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017393667, 0.017403625, 0.017411931, 0.017422014, 0.0174305, 0.017438986, 0.017448167, 0.017459319, 0.017466667, 0.017471986, 0.017481542, 0.017489125, 0.017495833, 0.017505, 0.017512139, ...</msg>
<status status="PASS" starttime="20201110 08:38:54.045" endtime="20201110 08:38:54.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.056" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:54.055" endtime="20201110 08:38:54.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.059" level="INFO">VALUE: [4.750000000001281e-06, 5.110999999998617e-06, 3.4029999999990457e-06, 4.0559999999988106e-06, 5.139000000001226e-06, 4.375000000000906e-06, 5.860999999999367e-06, 5.346999999999297e-06, 3.945000000001725e-06, 2.679999999997962e-06, 5.791999999997521e-06, 4.722000000002141e-06, 3.290999999999017e-06, 4.707999999999102e-06, 4.027999999999671e-06, 3.6529999999992957e-06, 2.735999999999711e-06, 4.889000000000976e-06, 4.305999999999061e-06, 5.625000000002156e-06, 3.695000000001475e-06, 3.2770000000029165e-06, 5.915999999998173e-06, 4.847000000002266e-06, 2.8189999999976567e-06]</msg>
<status status="PASS" starttime="20201110 08:38:54.057" endtime="20201110 08:38:54.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.053" endtime="20201110 08:38:54.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.062" endtime="20201110 08:38:54.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.066" endtime="20201110 08:38:54.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.064" endtime="20201110 08:38:54.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.060" endtime="20201110 08:38:54.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.703" endtime="20201110 08:38:54.086"></status>
</kw>
<msg timestamp="20201110 08:38:54.087" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.094" endtime="20201110 08:38:54.106"></status>
</kw>
<msg timestamp="20201110 08:38:54.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.093" endtime="20201110 08:38:54.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.109" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.108" endtime="20201110 08:38:54.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.110" endtime="20201110 08:38:54.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.090" endtime="20201110 08:38:54.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.088" endtime="20201110 08:38:54.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.119" endtime="20201110 08:38:54.386"></status>
</kw>
<msg timestamp="20201110 08:38:54.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.117" endtime="20201110 08:38:54.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.389" endtime="20201110 08:38:54.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.396" endtime="20201110 08:38:54.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.115" endtime="20201110 08:38:54.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.113" endtime="20201110 08:38:54.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.403" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:54.402" endtime="20201110 08:38:54.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.407" level="INFO">VALUE: [{'time': 0.018146625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018149319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018153556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.018156375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.018160597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018166389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018169972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.018172611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.018175458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.018179181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.018183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018189569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018193861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018196486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.018201278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018206389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018210458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.018216181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.018221069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.887999999998033e-06, 'source_diff': 4.887999999998033e-06}, {'time': 0.018225694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018228958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018233069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018236597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018241014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018245028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018247403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.018251819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018254694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018257625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018261569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.018264514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.018269153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018273083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018276319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018282097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.018287347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.018291347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018297014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018301458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.018306444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018312181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736999999998715e-06, 'source_diff': 5.736999999998715e-06}, {'time': 0.018315819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.018321514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018324306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018329194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.018334389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018337139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018342083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.01834775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018351472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:54.404" endtime="20201110 08:38:54.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.400" endtime="20201110 08:38:54.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:54.426" level="INFO">${debug-compressed} = {'time': [0.018146625, 0.018149319, 0.018153556, 0.018156375, 0.018160597, 0.018166389, 0.018169972, 0.018172611, 0.018175458, 0.018179181, 0.018183597, 0.018189569, 0.018193861, 0.018196486, 0.018201...</msg>
<status status="PASS" starttime="20201110 08:38:54.413" endtime="20201110 08:38:54.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.430" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:54.429" endtime="20201110 08:38:54.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.433" level="INFO">VALUE: {'time': [0.018146625, 0.018149319, 0.018153556, 0.018156375, 0.018160597, 0.018166389, 0.018169972, 0.018172611, 0.018175458, 0.018179181, 0.018183597, 0.018189569, 0.018193861, 0.018196486, 0.018201278, 0.018206389, 0.018210458, 0.018216181, 0.018221069, 0.018225694, 0.018228958, 0.018233069, 0.018236597, 0.018241014, 0.018245028, 0.018247403, 0.018251819, 0.018254694, 0.018257625, 0.018261569, 0.018264514, 0.018269153, 0.018273083, 0.018276319, 0.018282097, 0.018287347, 0.018291347, 0.018297014, 0.018301458, 0.018306444, 0.018312181, 0.018315819, 0.018321514, 0.018324306, 0.018329194, 0.018334389, 0.018337139, 0.018342083, 0.01834775, 0.018351472], 'eventdiff': [0, 2.694000000001001e-06, 4.237000000000685e-06, 2.8189999999976567e-06, 4.222000000001641e-06, 5.792000000000991e-06, 3.5829999999979767e-06, 2.639000000002195e-06, 2.8469999999967965e-06, 3.7230000000006147e-06, 4.416000000000142e-06, 5.971999999999922e-06, 4.291999999999491e-06, 2.6250000000026252e-06, 4.791999999999991e-06, 5.110999999998617e-06, 4.068999999998907e-06, 5.723000000002615e-06, 4.887999999998033e-06, 4.625000000001156e-06, 3.2639999999993508e-06, 4.111000000001086e-06, 3.5279999999991707e-06, 4.416999999999616e-06, 4.014000000000101e-06, 2.3749999999989058e-06, 4.416000000000142e-06, 2.874999999999406e-06, 2.931000000001155e-06, 3.943999999998782e-06, 2.945000000000725e-06, 4.639000000000726e-06, 3.929999999999212e-06, 3.236000000000211e-06, 5.778000000001421e-06, 5.2499999999983116e-06, 4.000000000000531e-06, 5.667000000000866e-06, 4.443999999999282e-06, 4.986000000001961e-06, 5.736999999998715e-06, 3.638000000000252e-06, 5.695000000000006e-06, 2.7919999999979905e-06, 4.888000000001502e-06, 5.1949999999995056e-06, 2.749999999999281e-06, 4.943999999999782e-06, 5.667000000000866e-06, 3.722000000001141e-06], 'source_diff': [0, 2.694000000001001e-06, 4.237000000000685e-06, 2.8189999999976567e-06, 4.222000000001641e-06, 5.792000000000991e-06, 3.5829999999979767e-06, 2.639000000002195e-06, 2.8469999999967965e-06, 3.7230000000006147e-06, 4.416000000000142e-06, 5.971999999999922e-06, 4.291999999999491e-06, 2.6250000000026252e-06, 4.791999999999991e-06, 5.110999999998617e-06, 4.068999999998907e-06, 5.723000000002615e-06, 4.887999999998033e-06, 4.625000000001156e-06, 3.2639999999993508e-06, 4.111000000001086e-06, 3.5279999999991707e-06, 4.416999999999616e-06, 4.014000000000101e-06, 2.3749999999989058e-06, 4.416000000000142e-06, 2.874999999999406e-06, 2.931000000001155e-06, 3.943999999998782e-06, 2.945000000000725e-06, 4.639000000000726e-06, 3.929999999999212e-06, 3.236000000000211e-06, 5.778000000001421e-06, 5.2499999999983116e-06, 4.000000000000531e-06, 5.667000000000866e-06, 4.443999999999282e-06, 4.986000000001961e-06, 5.736999999998715e-06, 3.638000000000252e-06, 5.695000000000006e-06, 2.7919999999979905e-06, 4.888000000001502e-06, 5.1949999999995056e-06, 2.749999999999281e-06, 4.943999999999782e-06, 5.667000000000866e-06, 3.722000000001141e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:54.431" endtime="20201110 08:38:54.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.427" endtime="20201110 08:38:54.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.437" level="INFO">${RESULT} = [{'time': 0.018149319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018156375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:54.435" endtime="20201110 08:38:54.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:54.445" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018149319, 0.018156375, 0.018166389, 0.018172611, 0.018179181, 0.018189569, 0.018196486, 0.018206389, 0.018216181, 0.018225694, 0.018233069, 0.018241014, 0.018247403, 0.018254694, 0.018261...</msg>
<status status="PASS" starttime="20201110 08:38:54.438" endtime="20201110 08:38:54.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.449" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:54.448" endtime="20201110 08:38:54.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.452" level="INFO">VALUE: [2.694000000001001e-06, 2.8189999999976567e-06, 5.792000000000991e-06, 2.639000000002195e-06, 3.7230000000006147e-06, 5.971999999999922e-06, 2.6250000000026252e-06, 5.110999999998617e-06, 5.723000000002615e-06, 4.625000000001156e-06, 4.111000000001086e-06, 4.416999999999616e-06, 2.3749999999989058e-06, 2.874999999999406e-06, 3.943999999998782e-06, 4.639000000000726e-06, 3.236000000000211e-06, 5.2499999999983116e-06, 5.667000000000866e-06, 4.986000000001961e-06, 3.638000000000252e-06, 2.7919999999979905e-06, 5.1949999999995056e-06, 4.943999999999782e-06, 3.722000000001141e-06]</msg>
<status status="PASS" starttime="20201110 08:38:54.450" endtime="20201110 08:38:54.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.446" endtime="20201110 08:38:54.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.455" endtime="20201110 08:38:54.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.459" endtime="20201110 08:38:54.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.457" endtime="20201110 08:38:54.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.453" endtime="20201110 08:38:54.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.087" endtime="20201110 08:38:54.479"></status>
</kw>
<msg timestamp="20201110 08:38:54.480" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.488" endtime="20201110 08:38:54.499"></status>
</kw>
<msg timestamp="20201110 08:38:54.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.486" endtime="20201110 08:38:54.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.502" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.501" endtime="20201110 08:38:54.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.503" endtime="20201110 08:38:54.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.483" endtime="20201110 08:38:54.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.481" endtime="20201110 08:38:54.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.512" endtime="20201110 08:38:54.776"></status>
</kw>
<msg timestamp="20201110 08:38:54.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018228569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018233708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.510" endtime="20201110 08:38:54.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018228569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018233708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.779" endtime="20201110 08:38:54.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.784" endtime="20201110 08:38:54.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.508" endtime="20201110 08:38:54.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.506" endtime="20201110 08:38:54.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.791" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:54.790" endtime="20201110 08:38:54.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.794" level="INFO">VALUE: [{'time': 0.018228569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018233708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018237472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018241958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018245181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018251083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.018255847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.018260875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018263736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018267014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.018272208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.0182755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.018277889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018283681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.018286778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018292806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018298833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018303722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018307667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.018313625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018319181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018322819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.018325694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018328986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.01833125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.018334917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.01833725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.018341903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018346431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018351181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.018356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.018361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018364417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018368944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018378139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.018383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.018387681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018392986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018396792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.018401417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.018406778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018412764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.018416514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.018420222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018426181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018431486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018434722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018438722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018444264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:54.792" endtime="20201110 08:38:54.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.787" endtime="20201110 08:38:54.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:54.810" level="INFO">${debug-compressed} = {'time': [0.018228569, 0.018233708, 0.018237472, 0.018241958, 0.018245181, 0.018251083, 0.018255847, 0.018260875, 0.018263736, 0.018267014, 0.018272208, 0.0182755, 0.018277889, 0.018283681, 0.01828677...</msg>
<status status="PASS" starttime="20201110 08:38:54.796" endtime="20201110 08:38:54.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.814" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:54.813" endtime="20201110 08:38:54.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.817" level="INFO">VALUE: {'time': [0.018228569, 0.018233708, 0.018237472, 0.018241958, 0.018245181, 0.018251083, 0.018255847, 0.018260875, 0.018263736, 0.018267014, 0.018272208, 0.0182755, 0.018277889, 0.018283681, 0.018286778, 0.018292806, 0.018298833, 0.018303722, 0.018307667, 0.018313625, 0.018319181, 0.018322819, 0.018325694, 0.018328986, 0.01833125, 0.018334917, 0.01833725, 0.018341903, 0.018346431, 0.018351181, 0.018356833, 0.018361, 0.018364417, 0.018368944, 0.018374611, 0.018378139, 0.018383153, 0.018387681, 0.018392986, 0.018396792, 0.018401417, 0.018406778, 0.018412764, 0.018416514, 0.018420222, 0.018426181, 0.018431486, 0.018434722, 0.018438722, 0.018444264], 'eventdiff': [0, 5.139000000001226e-06, 3.763999999999851e-06, 4.485999999997992e-06, 3.2230000000001147e-06, 5.902000000002072e-06, 4.7639999999973814e-06, 5.028000000000671e-06, 2.860999999999836e-06, 3.27800000000239e-06, 5.194000000000032e-06, 3.2919999999984906e-06, 2.3889999999984757e-06, 5.792000000000991e-06, 3.097000000000516e-06, 6.028000000001671e-06, 6.026999999998728e-06, 4.889000000000976e-06, 3.9449999999982555e-06, 5.958000000000352e-06, 5.556000000000311e-06, 3.638000000000252e-06, 2.874999999999406e-06, 3.2919999999984906e-06, 2.26400000000182e-06, 3.6669999999988656e-06, 2.333000000000196e-06, 4.653000000000296e-06, 4.528000000000171e-06, 4.750000000001281e-06, 5.651999999998353e-06, 4.166999999999366e-06, 3.417000000002085e-06, 4.527000000000697e-06, 5.666999999997396e-06, 3.52800000000264e-06, 5.0139999999976315e-06, 4.528000000000171e-06, 5.305000000000587e-06, 3.8059999999985605e-06, 4.625000000001156e-06, 5.360999999998867e-06, 5.986000000002961e-06, 3.7499999999968114e-06, 3.708000000001571e-06, 5.9589999999998255e-06, 5.305000000000587e-06, 3.236000000000211e-06, 4.000000000000531e-06, 5.541999999997271e-06], 'source_diff': [0, 5.139000000001226e-06, 3.763999999999851e-06, 4.485999999997992e-06, 3.2230000000001147e-06, 5.902000000002072e-06, 4.7639999999973814e-06, 5.028000000000671e-06, 2.860999999999836e-06, 3.27800000000239e-06, 5.194000000000032e-06, 3.2919999999984906e-06, 2.3889999999984757e-06, 5.792000000000991e-06, 3.097000000000516e-06, 6.028000000001671e-06, 6.026999999998728e-06, 4.889000000000976e-06, 3.9449999999982555e-06, 5.958000000000352e-06, 5.556000000000311e-06, 3.638000000000252e-06, 2.874999999999406e-06, 3.2919999999984906e-06, 2.26400000000182e-06, 3.6669999999988656e-06, 2.333000000000196e-06, 4.653000000000296e-06, 4.528000000000171e-06, 4.750000000001281e-06, 5.651999999998353e-06, 4.166999999999366e-06, 3.417000000002085e-06, 4.527000000000697e-06, 5.666999999997396e-06, 3.52800000000264e-06, 5.0139999999976315e-06, 4.528000000000171e-06, 5.305000000000587e-06, 3.8059999999985605e-06, 4.625000000001156e-06, 5.360999999998867e-06, 5.986000000002961e-06, 3.7499999999968114e-06, 3.708000000001571e-06, 5.9589999999998255e-06, 5.305000000000587e-06, 3.236000000000211e-06, 4.000000000000531e-06, 5.541999999997271e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:54.815" endtime="20201110 08:38:54.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.811" endtime="20201110 08:38:54.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.821" level="INFO">${RESULT} = [{'time': 0.018233708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018241958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:54.819" endtime="20201110 08:38:54.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:54.829" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018233708, 0.018241958, 0.018251083, 0.018260875, 0.018267014, 0.0182755, 0.018283681, 0.018292806, 0.018303722, 0.018313625, 0.018322819, 0.018328986, 0.018334917, 0.018341903, 0.01835118...</msg>
<status status="PASS" starttime="20201110 08:38:54.822" endtime="20201110 08:38:54.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.833" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:54.832" endtime="20201110 08:38:54.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.836" level="INFO">VALUE: [5.139000000001226e-06, 4.485999999997992e-06, 5.902000000002072e-06, 5.028000000000671e-06, 3.27800000000239e-06, 3.2919999999984906e-06, 5.792000000000991e-06, 6.028000000001671e-06, 4.889000000000976e-06, 5.958000000000352e-06, 3.638000000000252e-06, 3.2919999999984906e-06, 3.6669999999988656e-06, 4.653000000000296e-06, 4.750000000001281e-06, 4.166999999999366e-06, 4.527000000000697e-06, 3.52800000000264e-06, 4.528000000000171e-06, 3.8059999999985605e-06, 5.360999999998867e-06, 3.7499999999968114e-06, 5.9589999999998255e-06, 3.236000000000211e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201110 08:38:54.835" endtime="20201110 08:38:54.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.830" endtime="20201110 08:38:54.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.839" endtime="20201110 08:38:54.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.843" endtime="20201110 08:38:54.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.841" endtime="20201110 08:38:54.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.838" endtime="20201110 08:38:54.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.480" endtime="20201110 08:38:54.864"></status>
</kw>
<msg timestamp="20201110 08:38:54.864" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.872" endtime="20201110 08:38:54.884"></status>
</kw>
<msg timestamp="20201110 08:38:54.885" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.870" endtime="20201110 08:38:54.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.887" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.886" endtime="20201110 08:38:54.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.888" endtime="20201110 08:38:54.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.868" endtime="20201110 08:38:54.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.866" endtime="20201110 08:38:54.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.897" endtime="20201110 08:38:55.162"></status>
</kw>
<msg timestamp="20201110 08:38:55.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017380625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017383847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.895" endtime="20201110 08:38:55.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017380625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017383847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.165" endtime="20201110 08:38:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.171" endtime="20201110 08:38:55.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.893" endtime="20201110 08:38:55.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.891" endtime="20201110 08:38:55.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.179" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:55.177" endtime="20201110 08:38:55.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.182" level="INFO">VALUE: [{'time': 0.017380625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017383847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017392222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017394903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017397778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.017401375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017405583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.017411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.017414556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.0174205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9439999999973125e-06, 'source_diff': 5.9439999999973125e-06}, {'time': 0.017424972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017429458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.017433792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.017438319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017442181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.017446417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017451972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017456972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.0174615, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017467167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.017471, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.017473639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017479653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.017482292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017487847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017491958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.017494583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000026252e-06, 'source_diff': 2.6250000000026252e-06}, {'time': 0.017497278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.695000000000475e-06, 'source_diff': 2.695000000000475e-06}, {'time': 0.017502653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017506167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017511, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017516611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.017522458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017528056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017530403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017534, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017538528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017542153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017546569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017551903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.017557569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017563403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017566583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1800000000019313e-06, 'source_diff': 3.1800000000019313e-06}, {'time': 0.017569681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.017574222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017578917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.017581264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017585431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017590569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:55.180" endtime="20201110 08:38:55.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.175" endtime="20201110 08:38:55.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:55.198" level="INFO">${debug-compressed} = {'time': [0.017380625, 0.017383847, 0.017388444, 0.017392222, 0.017394903, 0.017397778, 0.017401375, 0.017405583, 0.017411542, 0.017414556, 0.0174205, 0.017424972, 0.017429458, 0.017433792, 0.01743831...</msg>
<status status="PASS" starttime="20201110 08:38:55.185" endtime="20201110 08:38:55.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.202" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:55.201" endtime="20201110 08:38:55.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.205" level="INFO">VALUE: {'time': [0.017380625, 0.017383847, 0.017388444, 0.017392222, 0.017394903, 0.017397778, 0.017401375, 0.017405583, 0.017411542, 0.017414556, 0.0174205, 0.017424972, 0.017429458, 0.017433792, 0.017438319, 0.017442181, 0.017446417, 0.017451972, 0.017456972, 0.0174615, 0.017467167, 0.017471, 0.017473639, 0.017479653, 0.017482292, 0.017487847, 0.017491958, 0.017494583, 0.017497278, 0.017502653, 0.017506167, 0.017511, 0.017516611, 0.017522458, 0.017528056, 0.017530403, 0.017534, 0.017538528, 0.017542153, 0.017546569, 0.017551903, 0.017557569, 0.017563403, 0.017566583, 0.017569681, 0.017574222, 0.017578917, 0.017581264, 0.017585431, 0.017590569], 'eventdiff': [0, 3.222000000000641e-06, 4.596999999998547e-06, 3.7779999999994207e-06, 2.681000000000905e-06, 2.874999999999406e-06, 3.597000000001016e-06, 4.207999999998602e-06, 5.9589999999998255e-06, 3.01400000000257e-06, 5.9439999999973125e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.33400000000167e-06, 4.527000000000697e-06, 3.86200000000031e-06, 4.2359999999977416e-06, 5.555000000000837e-06, 5.000000000001531e-06, 4.528000000000171e-06, 5.666999999997396e-06, 3.833000000001696e-06, 2.6389999999987257e-06, 6.014000000002101e-06, 2.6389999999987257e-06, 5.555000000000837e-06, 4.1109999999976166e-06, 2.6250000000026252e-06, 2.695000000000475e-06, 5.374999999998437e-06, 3.5139999999996008e-06, 4.832999999999227e-06, 5.611000000002586e-06, 5.846999999999797e-06, 5.5979999999990204e-06, 2.346999999999766e-06, 3.597000000001016e-06, 4.528000000000171e-06, 3.625000000000156e-06, 4.416000000000142e-06, 5.3339999999992005e-06, 5.665999999997923e-06, 5.8339999999997005e-06, 3.1800000000019313e-06, 3.0979999999999897e-06, 4.541000000000267e-06, 4.6949999999990055e-06, 2.346999999999766e-06, 4.166999999999366e-06, 5.138000000001752e-06], 'source_diff': [0, 3.222000000000641e-06, 4.596999999998547e-06, 3.7779999999994207e-06, 2.681000000000905e-06, 2.874999999999406e-06, 3.597000000001016e-06, 4.207999999998602e-06, 5.9589999999998255e-06, 3.01400000000257e-06, 5.9439999999973125e-06, 4.472000000001891e-06, 4.485999999997992e-06, 4.33400000000167e-06, 4.527000000000697e-06, 3.86200000000031e-06, 4.2359999999977416e-06, 5.555000000000837e-06, 5.000000000001531e-06, 4.528000000000171e-06, 5.666999999997396e-06, 3.833000000001696e-06, 2.6389999999987257e-06, 6.014000000002101e-06, 2.6389999999987257e-06, 5.555000000000837e-06, 4.1109999999976166e-06, 2.6250000000026252e-06, 2.695000000000475e-06, 5.374999999998437e-06, 3.5139999999996008e-06, 4.832999999999227e-06, 5.611000000002586e-06, 5.846999999999797e-06, 5.5979999999990204e-06, 2.346999999999766e-06, 3.597000000001016e-06, 4.528000000000171e-06, 3.625000000000156e-06, 4.416000000000142e-06, 5.3339999999992005e-06, 5.665999999997923e-06, 5.8339999999997005e-06, 3.1800000000019313e-06, 3.0979999999999897e-06, 4.541000000000267e-06, 4.6949999999990055e-06, 2.346999999999766e-06, 4.166999999999366e-06, 5.138000000001752e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:55.203" endtime="20201110 08:38:55.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.199" endtime="20201110 08:38:55.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.209" level="INFO">${RESULT} = [{'time': 0.017383847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017392222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:55.207" endtime="20201110 08:38:55.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:55.218" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017383847, 0.017392222, 0.017397778, 0.017405583, 0.017414556, 0.017424972, 0.017433792, 0.017442181, 0.017451972, 0.0174615, 0.017471, 0.017479653, 0.017487847, 0.017494583, 0.017502653, ...</msg>
<status status="PASS" starttime="20201110 08:38:55.210" endtime="20201110 08:38:55.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.222" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:55.221" endtime="20201110 08:38:55.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.224" level="INFO">VALUE: [3.222000000000641e-06, 3.7779999999994207e-06, 2.874999999999406e-06, 4.207999999998602e-06, 3.01400000000257e-06, 4.472000000001891e-06, 4.33400000000167e-06, 3.86200000000031e-06, 5.555000000000837e-06, 4.528000000000171e-06, 3.833000000001696e-06, 6.014000000002101e-06, 5.555000000000837e-06, 2.6250000000026252e-06, 5.374999999998437e-06, 4.832999999999227e-06, 5.846999999999797e-06, 2.346999999999766e-06, 4.528000000000171e-06, 4.416000000000142e-06, 5.665999999997923e-06, 3.1800000000019313e-06, 4.541000000000267e-06, 2.346999999999766e-06, 5.138000000001752e-06]</msg>
<status status="PASS" starttime="20201110 08:38:55.223" endtime="20201110 08:38:55.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.219" endtime="20201110 08:38:55.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.228" endtime="20201110 08:38:55.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.231" endtime="20201110 08:38:55.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.229" endtime="20201110 08:38:55.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.226" endtime="20201110 08:38:55.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.865" endtime="20201110 08:38:55.252"></status>
</kw>
<msg timestamp="20201110 08:38:55.252" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.260" endtime="20201110 08:38:55.270"></status>
</kw>
<msg timestamp="20201110 08:38:55.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.258" endtime="20201110 08:38:55.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.271" endtime="20201110 08:38:55.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.274" endtime="20201110 08:38:55.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.256" endtime="20201110 08:38:55.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.254" endtime="20201110 08:38:55.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.283" endtime="20201110 08:38:55.549"></status>
</kw>
<msg timestamp="20201110 08:38:55.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017548347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.281" endtime="20201110 08:38:55.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017548347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.552" endtime="20201110 08:38:55.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.557" endtime="20201110 08:38:55.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.279" endtime="20201110 08:38:55.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.277" endtime="20201110 08:38:55.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.563" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:55.562" endtime="20201110 08:38:55.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.568" level="INFO">VALUE: [{'time': 0.017545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017548347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.017552583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017557944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017563139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.017567028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017571806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017576042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017580694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017586542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017589819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.017594056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017600042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017604097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017606917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8200000000006e-06, 'source_diff': 2.8200000000006e-06}, {'time': 0.01760925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017612486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017615931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.445000000001225e-06, 'source_diff': 3.445000000001225e-06}, {'time': 0.017619514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.017623222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.017627153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.017630444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.290999999999017e-06, 'source_diff': 3.290999999999017e-06}, {'time': 0.017636417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.973000000002865e-06, 'source_diff': 5.973000000002865e-06}, {'time': 0.017638653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.235999999999211e-06, 'source_diff': 2.235999999999211e-06}, {'time': 0.017643, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017648736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017653389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.017658583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.017662458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017665861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.0176685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017674222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017677569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017682236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017686611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017690708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017694528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}, {'time': 0.017699472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.017704319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017707972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017711542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.017715417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017718472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.017724194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017728972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.017734514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017738333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017741861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017746764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:55.565" endtime="20201110 08:38:55.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.560" endtime="20201110 08:38:55.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:55.584" level="INFO">${debug-compressed} = {'time': [0.017545903, 0.017548347, 0.017552583, 0.017557944, 0.017563139, 0.017567028, 0.017571806, 0.017576042, 0.017580694, 0.017586542, 0.017589819, 0.017594056, 0.017596806, 0.017600042, 0.017604...</msg>
<status status="PASS" starttime="20201110 08:38:55.570" endtime="20201110 08:38:55.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.588" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:55.587" endtime="20201110 08:38:55.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.591" level="INFO">VALUE: {'time': [0.017545903, 0.017548347, 0.017552583, 0.017557944, 0.017563139, 0.017567028, 0.017571806, 0.017576042, 0.017580694, 0.017586542, 0.017589819, 0.017594056, 0.017596806, 0.017600042, 0.017604097, 0.017606917, 0.01760925, 0.017612486, 0.017615931, 0.017619514, 0.017623222, 0.017627153, 0.017630444, 0.017636417, 0.017638653, 0.017643, 0.017648736, 0.017653389, 0.017658583, 0.017662458, 0.017665861, 0.0176685, 0.017674222, 0.017677569, 0.017682236, 0.017686611, 0.017690708, 0.017694528, 0.017699472, 0.017704319, 0.017707972, 0.017711542, 0.017715417, 0.017718472, 0.017724194, 0.017728972, 0.017734514, 0.017738333, 0.017741861, 0.017746764], 'eventdiff': [0, 2.4439999999972817e-06, 4.236000000001211e-06, 5.360999999998867e-06, 5.1949999999995056e-06, 3.888999999999976e-06, 4.778000000000421e-06, 4.236000000001211e-06, 4.652000000000822e-06, 5.8479999999992704e-06, 3.276999999999447e-06, 4.237000000000685e-06, 2.749999999999281e-06, 3.236000000000211e-06, 4.054999999999337e-06, 2.8200000000006e-06, 2.333000000000196e-06, 3.236000000000211e-06, 3.445000000001225e-06, 3.5829999999979767e-06, 3.708000000001571e-06, 3.9309999999986855e-06, 3.290999999999017e-06, 5.973000000002865e-06, 2.235999999999211e-06, 4.346999999998297e-06, 5.736000000002711e-06, 4.652999999996826e-06, 5.194000000000032e-06, 3.875000000000406e-06, 3.403000000002515e-06, 2.6389999999987257e-06, 5.721999999999672e-06, 3.347000000000766e-06, 4.666999999999866e-06, 4.375000000000906e-06, 4.096999999998047e-06, 3.8200000000016e-06, 4.943999999999782e-06, 4.846999999998797e-06, 3.6529999999992957e-06, 3.57000000000135e-06, 3.875000000000406e-06, 3.054999999998337e-06, 5.721999999999672e-06, 4.778000000000421e-06, 5.542000000000741e-06, 3.818999999998657e-06, 3.52800000000264e-06, 4.903000000000546e-06], 'source_diff': [0, 2.4439999999972817e-06, 4.236000000001211e-06, 5.360999999998867e-06, 5.1949999999995056e-06, 3.888999999999976e-06, 4.778000000000421e-06, 4.236000000001211e-06, 4.652000000000822e-06, 5.8479999999992704e-06, 3.276999999999447e-06, 4.237000000000685e-06, 2.749999999999281e-06, 3.236000000000211e-06, 4.054999999999337e-06, 2.8200000000006e-06, 2.333000000000196e-06, 3.236000000000211e-06, 3.445000000001225e-06, 3.5829999999979767e-06, 3.708000000001571e-06, 3.9309999999986855e-06, 3.290999999999017e-06, 5.973000000002865e-06, 2.235999999999211e-06, 4.346999999998297e-06, 5.736000000002711e-06, 4.652999999996826e-06, 5.194000000000032e-06, 3.875000000000406e-06, 3.403000000002515e-06, 2.6389999999987257e-06, 5.721999999999672e-06, 3.347000000000766e-06, 4.666999999999866e-06, 4.375000000000906e-06, 4.096999999998047e-06, 3.8200000000016e-06, 4.943999999999782e-06, 4.846999999998797e-06, 3.6529999999992957e-06, 3.57000000000135e-06, 3.875000000000406e-06, 3.054999999998337e-06, 5.721999999999672e-06, 4.778000000000421e-06, 5.542000000000741e-06, 3.818999999998657e-06, 3.52800000000264e-06, 4.903000000000546e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:55.589" endtime="20201110 08:38:55.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.585" endtime="20201110 08:38:55.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.596" level="INFO">${RESULT} = [{'time': 0.017548347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4439999999972817e-06, 'source_diff': 2.4439999999972817e-06}, {'time': 0.017557944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:55.593" endtime="20201110 08:38:55.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:55.604" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017548347, 0.017557944, 0.017567028, 0.017576042, 0.017586542, 0.017594056, 0.017600042, 0.017606917, 0.017612486, 0.017619514, 0.017627153, 0.017636417, 0.017643, 0.017653389, 0.017662458...</msg>
<status status="PASS" starttime="20201110 08:38:55.597" endtime="20201110 08:38:55.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.608" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:55.607" endtime="20201110 08:38:55.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.610" level="INFO">VALUE: [2.4439999999972817e-06, 5.360999999998867e-06, 3.888999999999976e-06, 4.236000000001211e-06, 5.8479999999992704e-06, 4.237000000000685e-06, 3.236000000000211e-06, 2.8200000000006e-06, 3.236000000000211e-06, 3.5829999999979767e-06, 3.9309999999986855e-06, 5.973000000002865e-06, 4.346999999998297e-06, 4.652999999996826e-06, 3.875000000000406e-06, 2.6389999999987257e-06, 3.347000000000766e-06, 4.375000000000906e-06, 3.8200000000016e-06, 4.846999999998797e-06, 3.57000000000135e-06, 3.054999999998337e-06, 4.778000000000421e-06, 3.818999999998657e-06, 4.903000000000546e-06]</msg>
<status status="PASS" starttime="20201110 08:38:55.609" endtime="20201110 08:38:55.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.605" endtime="20201110 08:38:55.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.614" endtime="20201110 08:38:55.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.617" endtime="20201110 08:38:55.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.616" endtime="20201110 08:38:55.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.612" endtime="20201110 08:38:55.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.253" endtime="20201110 08:38:55.638"></status>
</kw>
<msg timestamp="20201110 08:38:55.638" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.646" endtime="20201110 08:38:55.658"></status>
</kw>
<msg timestamp="20201110 08:38:55.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.644" endtime="20201110 08:38:55.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.659" endtime="20201110 08:38:55.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.662" endtime="20201110 08:38:55.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.642" endtime="20201110 08:38:55.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.640" endtime="20201110 08:38:55.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.671" endtime="20201110 08:38:55.937"></status>
</kw>
<msg timestamp="20201110 08:38:55.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017547083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.669" endtime="20201110 08:38:55.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017547083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.940" endtime="20201110 08:38:55.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.945" endtime="20201110 08:38:55.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.667" endtime="20201110 08:38:55.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.665" endtime="20201110 08:38:55.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.952" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:55.951" endtime="20201110 08:38:55.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.956" level="INFO">VALUE: [{'time': 0.017543153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017547083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.017552986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017557125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017561125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017566264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017569208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.017574014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017580236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017584042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.017589472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.429999999997243e-06, 'source_diff': 5.429999999997243e-06}, {'time': 0.017594125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017597958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.017601667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.709000000001045e-06, 'source_diff': 3.709000000001045e-06}, {'time': 0.017605417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017611139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017615083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.017620986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.017625347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017630153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017635667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.017638472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.017642014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017647667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.017650972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3050000000020563e-06, 'source_diff': 3.3050000000020563e-06}, {'time': 0.017653375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.017658069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.017662778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.017666903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017671444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017674903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4589999999973253e-06, 'source_diff': 3.4589999999973253e-06}, {'time': 0.017679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017683319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017685778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.017690542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.017695556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017700333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.01770475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017708556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.017711444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.887999999999502e-06, 'source_diff': 2.887999999999502e-06}, {'time': 0.017713889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4450000000002248e-06, 'source_diff': 2.4450000000002248e-06}, {'time': 0.017719083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.017723556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.017726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.01773025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017733069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.017738903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017743931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017746722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:55.953" endtime="20201110 08:38:55.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.949" endtime="20201110 08:38:55.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:55.973" level="INFO">${debug-compressed} = {'time': [0.017543153, 0.017547083, 0.017552986, 0.017557125, 0.017561125, 0.017566264, 0.017569208, 0.017574014, 0.017577597, 0.017580236, 0.017584042, 0.017589472, 0.017594125, 0.017597958, 0.017601...</msg>
<status status="PASS" starttime="20201110 08:38:55.958" endtime="20201110 08:38:55.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.979" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:55.977" endtime="20201110 08:38:55.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.984" level="INFO">VALUE: {'time': [0.017543153, 0.017547083, 0.017552986, 0.017557125, 0.017561125, 0.017566264, 0.017569208, 0.017574014, 0.017577597, 0.017580236, 0.017584042, 0.017589472, 0.017594125, 0.017597958, 0.017601667, 0.017605417, 0.017611139, 0.017615083, 0.017620986, 0.017625347, 0.017630153, 0.017635667, 0.017638472, 0.017642014, 0.017647667, 0.017650972, 0.017653375, 0.017658069, 0.017662778, 0.017666903, 0.017671444, 0.017674903, 0.017679917, 0.017683319, 0.017685778, 0.017690542, 0.017695556, 0.017700333, 0.01770475, 0.017708556, 0.017711444, 0.017713889, 0.017719083, 0.017723556, 0.017726833, 0.01773025, 0.017733069, 0.017738903, 0.017743931, 0.017746722], 'eventdiff': [0, 3.930000000002681e-06, 5.9029999999980765e-06, 4.139000000000226e-06, 4.000000000000531e-06, 5.139000000001226e-06, 2.9439999999977817e-06, 4.805999999999561e-06, 3.583000000001446e-06, 2.6389999999987257e-06, 3.80600000000203e-06, 5.429999999997243e-06, 4.653000000000296e-06, 3.833000000001696e-06, 3.709000000001045e-06, 3.750000000000281e-06, 5.721999999999672e-06, 3.943999999998782e-06, 5.903000000001546e-06, 4.360999999997867e-06, 4.805999999999561e-06, 5.514000000001601e-06, 2.804999999998087e-06, 3.54200000000221e-06, 5.6529999999978264e-06, 3.3050000000020563e-06, 2.4029999999980456e-06, 4.693999999999532e-06, 4.709000000002045e-06, 4.125000000000656e-06, 4.541000000000267e-06, 3.4589999999973253e-06, 5.014000000001101e-06, 3.401999999999572e-06, 2.4589999999997947e-06, 4.764000000000851e-06, 5.014000000001101e-06, 4.776999999997478e-06, 4.416999999999616e-06, 3.80600000000203e-06, 2.887999999999502e-06, 2.4450000000002248e-06, 5.194000000000032e-06, 4.473000000001365e-06, 3.276999999999447e-06, 3.4169999999986156e-06, 2.819000000001126e-06, 5.8339999999997005e-06, 5.028000000000671e-06, 2.790999999998517e-06], 'source_diff': [0, 3.930000000002681e-06, 5.9029999999980765e-06, 4.139000000000226e-06, 4.000000000000531e-06, 5.139000000001226e-06, 2.9439999999977817e-06, 4.805999999999561e-06, 3.583000000001446e-06, 2.6389999999987257e-06, 3.80600000000203e-06, 5.429999999997243e-06, 4.653000000000296e-06, 3.833000000001696e-06, 3.709000000001045e-06, 3.750000000000281e-06, 5.721999999999672e-06, 3.943999999998782e-06, 5.903000000001546e-06, 4.360999999997867e-06, 4.805999999999561e-06, 5.514000000001601e-06, 2.804999999998087e-06, 3.54200000000221e-06, 5.6529999999978264e-06, 3.3050000000020563e-06, 2.4029999999980456e-06, 4.693999999999532e-06, 4.709000000002045e-06, 4.125000000000656e-06, 4.541000000000267e-06, 3.4589999999973253e-06, 5.014000000001101e-06, 3.401999999999572e-06, 2.4589999999997947e-06, 4.764000000000851e-06, 5.014000000001101e-06, 4.776999999997478e-06, 4.416999999999616e-06, 3.80600000000203e-06, 2.887999999999502e-06, 2.4450000000002248e-06, 5.194000000000032e-06, 4.473000000001365e-06, 3.276999999999447e-06, 3.4169999999986156e-06, 2.819000000001126e-06, 5.8339999999997005e-06, 5.028000000000671e-06, 2.790999999998517e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:55.981" endtime="20201110 08:38:55.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.975" endtime="20201110 08:38:55.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.990" level="INFO">${RESULT} = [{'time': 0.017547083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.930000000002681e-06, 'source_diff': 3.930000000002681e-06}, {'time': 0.017557125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:55.987" endtime="20201110 08:38:55.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:55.999" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017547083, 0.017557125, 0.017566264, 0.017574014, 0.017580236, 0.017589472, 0.017597958, 0.017605417, 0.017615083, 0.017625347, 0.017635667, 0.017642014, 0.017650972, 0.017658069, 0.017666...</msg>
<status status="PASS" starttime="20201110 08:38:55.991" endtime="20201110 08:38:55.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.005" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:56.004" endtime="20201110 08:38:56.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.008" level="INFO">VALUE: [3.930000000002681e-06, 4.139000000000226e-06, 5.139000000001226e-06, 4.805999999999561e-06, 2.6389999999987257e-06, 5.429999999997243e-06, 3.833000000001696e-06, 3.750000000000281e-06, 3.943999999998782e-06, 4.360999999997867e-06, 5.514000000001601e-06, 3.54200000000221e-06, 3.3050000000020563e-06, 4.693999999999532e-06, 4.125000000000656e-06, 3.4589999999973253e-06, 3.401999999999572e-06, 4.764000000000851e-06, 4.776999999997478e-06, 3.80600000000203e-06, 2.4450000000002248e-06, 4.473000000001365e-06, 3.4169999999986156e-06, 5.8339999999997005e-06, 2.790999999998517e-06]</msg>
<status status="PASS" starttime="20201110 08:38:56.007" endtime="20201110 08:38:56.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.000" endtime="20201110 08:38:56.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.012" endtime="20201110 08:38:56.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.015" endtime="20201110 08:38:56.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.014" endtime="20201110 08:38:56.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.010" endtime="20201110 08:38:56.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.639" endtime="20201110 08:38:56.036"></status>
</kw>
<msg timestamp="20201110 08:38:56.036" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.044" endtime="20201110 08:38:56.055"></status>
</kw>
<msg timestamp="20201110 08:38:56.056" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.042" endtime="20201110 08:38:56.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.058" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.057" endtime="20201110 08:38:56.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.059" endtime="20201110 08:38:56.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.040" endtime="20201110 08:38:56.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.038" endtime="20201110 08:38:56.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.069" endtime="20201110 08:38:56.338"></status>
</kw>
<msg timestamp="20201110 08:38:56.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.068" endtime="20201110 08:38:56.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.341" endtime="20201110 08:38:56.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.346" endtime="20201110 08:38:56.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.064" endtime="20201110 08:38:56.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.062" endtime="20201110 08:38:56.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.352" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:56.351" endtime="20201110 08:38:56.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.356" level="INFO">VALUE: [{'time': 0.017708403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017716333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017721764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.017725708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.017731444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017739736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017742681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.017746611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.017751264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017754361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017758486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017762722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017765903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.017770431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017772944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512999999999127e-06, 'source_diff': 2.512999999999127e-06}, {'time': 0.017777, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.017782375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.017787556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017792458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.017796569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017802069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017806125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017809347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017812931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.017816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.017824694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.638000000000252e-06, 'source_diff': 3.638000000000252e-06}, {'time': 0.017827681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.987000000002904e-06, 'source_diff': 2.987000000002904e-06}, {'time': 0.017829958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.276999999998447e-06, 'source_diff': 2.276999999998447e-06}, {'time': 0.017834986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017839167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.017844514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017849528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017853653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.017856181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017859986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.017865972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017869194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.017873875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25000000000225e-06, 'source_diff': 2.25000000000225e-06}, {'time': 0.017877694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017882639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.017887, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017889333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017891806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017897194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388000000002002e-06, 'source_diff': 5.388000000002002e-06}, {'time': 0.017899986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017905153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:56.354" endtime="20201110 08:38:56.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.349" endtime="20201110 08:38:56.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:56.372" level="INFO">${debug-compressed} = {'time': [0.017708403, 0.017712056, 0.017716333, 0.017721764, 0.017725708, 0.017731444, 0.017735569, 0.017739736, 0.017742681, 0.017746611, 0.017751264, 0.017754361, 0.017758486, 0.017762722, 0.017765...</msg>
<status status="PASS" starttime="20201110 08:38:56.359" endtime="20201110 08:38:56.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.376" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:56.375" endtime="20201110 08:38:56.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.379" level="INFO">VALUE: {'time': [0.017708403, 0.017712056, 0.017716333, 0.017721764, 0.017725708, 0.017731444, 0.017735569, 0.017739736, 0.017742681, 0.017746611, 0.017751264, 0.017754361, 0.017758486, 0.017762722, 0.017765903, 0.017770431, 0.017772944, 0.017777, 0.017782375, 0.017787556, 0.017792458, 0.017796569, 0.017802069, 0.017806125, 0.017809347, 0.017812931, 0.017816097, 0.017821056, 0.017824694, 0.017827681, 0.017829958, 0.017834986, 0.017839167, 0.017844514, 0.017849528, 0.017853653, 0.017856181, 0.017859986, 0.017865972, 0.017869194, 0.017871625, 0.017873875, 0.017877694, 0.017882639, 0.017887, 0.017889333, 0.017891806, 0.017897194, 0.017899986, 0.017905153], 'eventdiff': [0, 3.6529999999992957e-06, 4.277000000000447e-06, 5.431000000000186e-06, 3.943999999998782e-06, 5.735999999999242e-06, 4.125000000000656e-06, 4.166999999999366e-06, 2.945000000000725e-06, 3.929999999999212e-06, 4.653000000000296e-06, 3.097000000000516e-06, 4.125000000000656e-06, 4.236000000001211e-06, 3.1809999999979355e-06, 4.528000000000171e-06, 2.512999999999127e-06, 4.05600000000228e-06, 5.374999999998437e-06, 5.180999999999936e-06, 4.902000000001072e-06, 4.111000000001086e-06, 5.499999999998562e-06, 4.0559999999988106e-06, 3.222000000000641e-06, 3.5840000000009198e-06, 3.165999999998892e-06, 4.9589999999988255e-06, 3.638000000000252e-06, 2.987000000002904e-06, 2.276999999998447e-06, 5.028000000000671e-06, 4.1809999999989356e-06, 5.346999999999297e-06, 5.014000000001101e-06, 4.125000000000656e-06, 2.5279999999981706e-06, 3.8050000000025563e-06, 5.985999999999492e-06, 3.222000000000641e-06, 2.4309999999971854e-06, 2.25000000000225e-06, 3.818999999998657e-06, 4.9449999999992555e-06, 4.361000000001336e-06, 2.333000000000196e-06, 2.4729999999993646e-06, 5.388000000002002e-06, 2.7919999999979905e-06, 5.167000000000366e-06], 'source_diff': [0, 3.6529999999992957e-06, 4.277000000000447e-06, 5.431000000000186e-06, 3.943999999998782e-06, 5.735999999999242e-06, 4.125000000000656e-06, 4.166999999999366e-06, 2.945000000000725e-06, 3.929999999999212e-06, 4.653000000000296e-06, 3.097000000000516e-06, 4.125000000000656e-06, 4.236000000001211e-06, 3.1809999999979355e-06, 4.528000000000171e-06, 2.512999999999127e-06, 4.05600000000228e-06, 5.374999999998437e-06, 5.180999999999936e-06, 4.902000000001072e-06, 4.111000000001086e-06, 5.499999999998562e-06, 4.0559999999988106e-06, 3.222000000000641e-06, 3.5840000000009198e-06, 3.165999999998892e-06, 4.9589999999988255e-06, 3.638000000000252e-06, 2.987000000002904e-06, 2.276999999998447e-06, 5.028000000000671e-06, 4.1809999999989356e-06, 5.346999999999297e-06, 5.014000000001101e-06, 4.125000000000656e-06, 2.5279999999981706e-06, 3.8050000000025563e-06, 5.985999999999492e-06, 3.222000000000641e-06, 2.4309999999971854e-06, 2.25000000000225e-06, 3.818999999998657e-06, 4.9449999999992555e-06, 4.361000000001336e-06, 2.333000000000196e-06, 2.4729999999993646e-06, 5.388000000002002e-06, 2.7919999999979905e-06, 5.167000000000366e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:38:56.377" endtime="20201110 08:38:56.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.373" endtime="20201110 08:38:56.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.383" level="INFO">${RESULT} = [{'time': 0.017712056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017721764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:56.381" endtime="20201110 08:38:56.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:56.391" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017712056, 0.017721764, 0.017731444, 0.017739736, 0.017746611, 0.017754361, 0.017762722, 0.017770431, 0.017777, 0.017787556, 0.017796569, 0.017806125, 0.017812931, 0.017821056, 0.017827681...</msg>
<status status="PASS" starttime="20201110 08:38:56.385" endtime="20201110 08:38:56.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:56.395" endtime="20201110 08:38:56.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.398" level="INFO">VALUE: [3.6529999999992957e-06, 5.431000000000186e-06, 5.735999999999242e-06, 4.166999999999366e-06, 3.929999999999212e-06, 3.097000000000516e-06, 4.236000000001211e-06, 4.528000000000171e-06, 4.05600000000228e-06, 5.180999999999936e-06, 4.111000000001086e-06, 4.0559999999988106e-06, 3.5840000000009198e-06, 4.9589999999988255e-06, 2.987000000002904e-06, 5.028000000000671e-06, 5.346999999999297e-06, 4.125000000000656e-06, 3.8050000000025563e-06, 3.222000000000641e-06, 2.25000000000225e-06, 4.9449999999992555e-06, 2.333000000000196e-06, 5.388000000002002e-06, 5.167000000000366e-06]</msg>
<status status="PASS" starttime="20201110 08:38:56.397" endtime="20201110 08:38:56.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.392" endtime="20201110 08:38:56.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.401" endtime="20201110 08:38:56.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.405" endtime="20201110 08:38:56.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.403" endtime="20201110 08:38:56.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.400" endtime="20201110 08:38:56.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.037" endtime="20201110 08:38:56.426"></status>
</kw>
<msg timestamp="20201110 08:38:56.426" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.433" endtime="20201110 08:38:56.445"></status>
</kw>
<msg timestamp="20201110 08:38:56.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.432" endtime="20201110 08:38:56.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.447" endtime="20201110 08:38:56.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.449" endtime="20201110 08:38:56.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.429" endtime="20201110 08:38:56.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.428" endtime="20201110 08:38:56.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.458" endtime="20201110 08:38:56.723"></status>
</kw>
<msg timestamp="20201110 08:38:56.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018161042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.457" endtime="20201110 08:38:56.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018161042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.725" endtime="20201110 08:38:56.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.731" endtime="20201110 08:38:56.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.454" endtime="20201110 08:38:56.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.452" endtime="20201110 08:38:56.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.737" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:56.736" endtime="20201110 08:38:56.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.741" level="INFO">VALUE: [{'time': 0.018155181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018161042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018165931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018171958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018176264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.018180319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.018186278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018190639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018193806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.018196194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.387999999999002e-06, 'source_diff': 2.387999999999002e-06}, {'time': 0.018200264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.018204458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.018207375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018212083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018217472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}, {'time': 0.018220083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6110000000030553e-06, 'source_diff': 2.6110000000030553e-06}, {'time': 0.018224806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.018228556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018234167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018240139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018252125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018257486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018261431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.018265375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.018270861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018276056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018280944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.888000000001502e-06, 'source_diff': 4.888000000001502e-06}, {'time': 0.018286431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.018290694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.263000000000877e-06, 'source_diff': 4.263000000000877e-06}, {'time': 0.018294264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.018297667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.0183025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018306667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018310875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018313097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.221999999999641e-06, 'source_diff': 2.221999999999641e-06}, {'time': 0.018315486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.018318014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018320931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018326653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018330236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.018332569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.018338056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.018342472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018344847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.018347056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2089999999995447e-06, 'source_diff': 2.2089999999995447e-06}, {'time': 0.018352736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018358153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.018362306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018365986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6800000000024313e-06, 'source_diff': 3.6800000000024313e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:56.738" endtime="20201110 08:38:56.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.734" endtime="20201110 08:38:56.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:56.756" level="INFO">${debug-compressed} = {'time': [0.018155181, 0.018161042, 0.018165931, 0.018171958, 0.018176264, 0.018180319, 0.018186278, 0.018190639, 0.018193806, 0.018196194, 0.018200264, 0.018204458, 0.018207375, 0.018212083, 0.018217...</msg>
<status status="PASS" starttime="20201110 08:38:56.743" endtime="20201110 08:38:56.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.760" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:56.759" endtime="20201110 08:38:56.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.763" level="INFO">VALUE: {'time': [0.018155181, 0.018161042, 0.018165931, 0.018171958, 0.018176264, 0.018180319, 0.018186278, 0.018190639, 0.018193806, 0.018196194, 0.018200264, 0.018204458, 0.018207375, 0.018212083, 0.018217472, 0.018220083, 0.018224806, 0.018228556, 0.018234167, 0.018240139, 0.018246167, 0.018252125, 0.018257486, 0.018261431, 0.018265375, 0.018270861, 0.018276056, 0.018280944, 0.018286431, 0.018290694, 0.018294264, 0.018297667, 0.0183025, 0.018306667, 0.018310875, 0.018313097, 0.018315486, 0.018318014, 0.018320931, 0.018326653, 0.018330236, 0.018332569, 0.018338056, 0.018342472, 0.018344847, 0.018347056, 0.018352736, 0.018358153, 0.018362306, 0.018365986], 'eventdiff': [0, 5.860999999999367e-06, 4.889000000000976e-06, 6.026999999998728e-06, 4.30600000000253e-06, 4.054999999999337e-06, 5.9589999999998255e-06, 4.361000000001336e-06, 3.1669999999983656e-06, 2.387999999999002e-06, 4.07000000000185e-06, 4.193999999999032e-06, 2.917000000001585e-06, 4.707999999999102e-06, 5.3889999999980065e-06, 2.6110000000030553e-06, 4.722999999998145e-06, 3.750000000000281e-06, 5.610999999999117e-06, 5.971999999999922e-06, 6.028000000001671e-06, 5.958000000000352e-06, 5.360999999998867e-06, 3.945000000001725e-06, 3.943999999998782e-06, 5.485999999998992e-06, 5.1949999999995056e-06, 4.888000000001502e-06, 5.486999999998465e-06, 4.263000000000877e-06, 3.57000000000135e-06, 3.4029999999990457e-06, 4.832999999999227e-06, 4.166999999999366e-06, 4.208000000002071e-06, 2.221999999999641e-06, 2.3889999999984757e-06, 2.52800000000164e-06, 2.9169999999981155e-06, 5.721999999999672e-06, 3.583000000001446e-06, 2.333000000000196e-06, 5.486999999998465e-06, 4.416000000000142e-06, 2.375000000002375e-06, 2.2089999999995447e-06, 5.680000000000962e-06, 5.416999999997146e-06, 4.152999999999796e-06, 3.6800000000024313e-06], 'source_diff': [0, 5.860999999999367e-06, 4.889000000000976e-06, 6.026999999998728e-06, 4.30600000000253e-06, 4.054999999999337e-06, 5.9589999999998255e-06, 4.361000000001336e-06, 3.1669999999983656e-06, 2.387999999999002e-06, 4.07000000000185e-06, 4.193999999999032e-06, 2.917000000001585e-06, 4.707999999999102e-06, 5.3889999999980065e-06, 2.6110000000030553e-06, 4.722999999998145e-06, 3.750000000000281e-06, 5.610999999999117e-06, 5.971999999999922e-06, 6.028000000001671e-06, 5.958000000000352e-06, 5.360999999998867e-06, 3.945000000001725e-06, 3.943999999998782e-06, 5.485999999998992e-06, 5.1949999999995056e-06, 4.888000000001502e-06, 5.486999999998465e-06, 4.263000000000877e-06, 3.57000000000135e-06, 3.4029999999990457e-06, 4.832999999999227e-06, 4.166999999999366e-06, 4.208000000002071e-06, 2.221999999999641e-06, 2.3889999999984757e-06, 2.52800000000164e-06, 2.9169999999981155e-06, 5.721999999999672e-06, 3.583000000001446e-06, 2.333000000000196e-06, 5.486999999998465e-06, 4.416000000000142e-06, 2.375000000002375e-06, 2.2089999999995447e-06, 5.680000000000962e-06, 5.416999999997146e-06, 4.152999999999796e-06, 3.6800000000024313e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:56.761" endtime="20201110 08:38:56.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.757" endtime="20201110 08:38:56.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.768" level="INFO">${RESULT} = [{'time': 0.018161042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018171958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:56.765" endtime="20201110 08:38:56.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:56.776" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018161042, 0.018171958, 0.018180319, 0.018190639, 0.018196194, 0.018204458, 0.018212083, 0.018220083, 0.018228556, 0.018240139, 0.018252125, 0.018261431, 0.018270861, 0.018280944, 0.018290...</msg>
<status status="PASS" starttime="20201110 08:38:56.769" endtime="20201110 08:38:56.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:56.779" endtime="20201110 08:38:56.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.783" level="INFO">VALUE: [5.860999999999367e-06, 6.026999999998728e-06, 4.054999999999337e-06, 4.361000000001336e-06, 2.387999999999002e-06, 4.193999999999032e-06, 4.707999999999102e-06, 2.6110000000030553e-06, 3.750000000000281e-06, 5.971999999999922e-06, 5.958000000000352e-06, 3.945000000001725e-06, 5.485999999998992e-06, 4.888000000001502e-06, 4.263000000000877e-06, 3.4029999999990457e-06, 4.166999999999366e-06, 2.221999999999641e-06, 2.52800000000164e-06, 5.721999999999672e-06, 2.333000000000196e-06, 4.416000000000142e-06, 2.2089999999995447e-06, 5.416999999997146e-06, 3.6800000000024313e-06]</msg>
<status status="PASS" starttime="20201110 08:38:56.781" endtime="20201110 08:38:56.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.777" endtime="20201110 08:38:56.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.786" endtime="20201110 08:38:56.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.789" endtime="20201110 08:38:56.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.788" endtime="20201110 08:38:56.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.784" endtime="20201110 08:38:56.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.427" endtime="20201110 08:38:56.810"></status>
</kw>
<msg timestamp="20201110 08:38:56.810" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.820" endtime="20201110 08:38:56.831"></status>
</kw>
<msg timestamp="20201110 08:38:56.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.818" endtime="20201110 08:38:56.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.832" endtime="20201110 08:38:56.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.835" endtime="20201110 08:38:56.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.814" endtime="20201110 08:38:56.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.812" endtime="20201110 08:38:56.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.844" endtime="20201110 08:38:57.110"></status>
</kw>
<msg timestamp="20201110 08:38:57.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018981069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.842" endtime="20201110 08:38:57.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018981069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.113" endtime="20201110 08:38:57.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.118" endtime="20201110 08:38:57.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.840" endtime="20201110 08:38:57.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.838" endtime="20201110 08:38:57.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.125" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:38:57.124" endtime="20201110 08:38:57.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.128" level="INFO">VALUE: [{'time': 0.018981069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018991347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018996222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.019000361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019003597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.019009292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.019015236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.01901825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.019020639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.019023569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.019029319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.019032639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.019037986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.019041833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.019045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.019047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.019050264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.019054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.019058083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.019061556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.019067514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.01906975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.235999999999211e-06, 'source_diff': 2.235999999999211e-06}, {'time': 0.019074417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.01907675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.019082403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019084917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.019089944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.019093042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.0190955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.019101222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019103819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.019107861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.019112597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.019115139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.019117708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.019123083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.019125611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.019130125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019135792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.019139083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.019143389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019147389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019150903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.019154486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5829999999979767e-06, 'source_diff': 3.5829999999979767e-06}, {'time': 0.019158486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.019162208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.019167403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019171083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.019174375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}]</msg>
<status status="PASS" starttime="20201110 08:38:57.126" endtime="20201110 08:38:57.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.121" endtime="20201110 08:38:57.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:38:57.143" level="INFO">${debug-compressed} = {'time': [0.018981069, 0.018985722, 0.018991347, 0.018996222, 0.019000361, 0.019003597, 0.019009292, 0.019015236, 0.01901825, 0.019020639, 0.019023569, 0.019029319, 0.019032639, 0.019037986, 0.0190418...</msg>
<status status="PASS" starttime="20201110 08:38:57.130" endtime="20201110 08:38:57.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.147" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:38:57.146" endtime="20201110 08:38:57.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.150" level="INFO">VALUE: {'time': [0.018981069, 0.018985722, 0.018991347, 0.018996222, 0.019000361, 0.019003597, 0.019009292, 0.019015236, 0.01901825, 0.019020639, 0.019023569, 0.019029319, 0.019032639, 0.019037986, 0.019041833, 0.019045, 0.019047958, 0.019050264, 0.019054028, 0.019058083, 0.019061556, 0.019067514, 0.01906975, 0.019074417, 0.01907675, 0.019082403, 0.019084917, 0.019089944, 0.019093042, 0.0190955, 0.019101222, 0.019103819, 0.019107861, 0.019112597, 0.019115139, 0.019117708, 0.019123083, 0.019125611, 0.019130125, 0.019135792, 0.019139083, 0.019143389, 0.019147389, 0.019150903, 0.019154486, 0.019158486, 0.019162208, 0.019167403, 0.019171083, 0.019174375], 'eventdiff': [0, 4.653000000000296e-06, 5.624999999998687e-06, 4.875000000001406e-06, 4.139000000000226e-06, 3.236000000000211e-06, 5.695000000000006e-06, 5.944000000000782e-06, 3.0139999999991007e-06, 2.3889999999984757e-06, 2.9300000000016813e-06, 5.749999999998812e-06, 3.3200000000011e-06, 5.346999999999297e-06, 3.847000000001266e-06, 3.1669999999983656e-06, 2.958000000000821e-06, 2.30600000000053e-06, 3.763999999999851e-06, 4.054999999999337e-06, 3.4730000000003647e-06, 5.958000000000352e-06, 2.235999999999211e-06, 4.666999999999866e-06, 2.333000000000196e-06, 5.653000000001296e-06, 2.5139999999986007e-06, 5.027000000001197e-06, 3.0979999999999897e-06, 2.458000000000321e-06, 5.721999999999672e-06, 2.597000000000016e-06, 4.041999999999241e-06, 4.735999999998242e-06, 2.54200000000121e-06, 2.569000000000876e-06, 5.374999999998437e-06, 2.52800000000164e-06, 4.514000000000601e-06, 5.666999999997396e-06, 3.2910000000024864e-06, 4.305999999999061e-06, 4.000000000000531e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 4.000000000000531e-06, 3.722000000001141e-06, 5.1949999999995056e-06, 3.679999999998962e-06, 3.29200000000196e-06], 'source_diff': [0, 4.653000000000296e-06, 5.624999999998687e-06, 4.875000000001406e-06, 4.139000000000226e-06, 3.236000000000211e-06, 5.695000000000006e-06, 5.944000000000782e-06, 3.0139999999991007e-06, 2.3889999999984757e-06, 2.9300000000016813e-06, 5.749999999998812e-06, 3.3200000000011e-06, 5.346999999999297e-06, 3.847000000001266e-06, 3.1669999999983656e-06, 2.958000000000821e-06, 2.30600000000053e-06, 3.763999999999851e-06, 4.054999999999337e-06, 3.4730000000003647e-06, 5.958000000000352e-06, 2.235999999999211e-06, 4.666999999999866e-06, 2.333000000000196e-06, 5.653000000001296e-06, 2.5139999999986007e-06, 5.027000000001197e-06, 3.0979999999999897e-06, 2.458000000000321e-06, 5.721999999999672e-06, 2.597000000000016e-06, 4.041999999999241e-06, 4.735999999998242e-06, 2.54200000000121e-06, 2.569000000000876e-06, 5.374999999998437e-06, 2.52800000000164e-06, 4.514000000000601e-06, 5.666999999997396e-06, 3.2910000000024864e-06, 4.305999999999061e-06, 4.000000000000531e-06, 3.5139999999996008e-06, 3.5829999999979767e-06, 4.000000000000531e-06, 3.722000000001141e-06, 5.1949999999995056e-06, 3.679999999998962e-06, 3.29200000000196e-06], 'source}</msg>
<status status="PASS" starttime="20201110 08:38:57.148" endtime="20201110 08:38:57.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.144" endtime="20201110 08:38:57.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.155" level="INFO">${RESULT} = [{'time': 0.018985722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018996222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:57.152" endtime="20201110 08:38:57.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:38:57.163" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018985722, 0.018996222, 0.019003597, 0.019015236, 0.019020639, 0.019029319, 0.019037986, 0.019045, 0.019050264, 0.019058083, 0.019067514, 0.019074417, 0.019082403, 0.019089944, 0.0190955, ...</msg>
<status status="PASS" starttime="20201110 08:38:57.156" endtime="20201110 08:38:57.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.168" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:38:57.166" endtime="20201110 08:38:57.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.170" level="INFO">VALUE: [4.653000000000296e-06, 4.875000000001406e-06, 3.236000000000211e-06, 5.944000000000782e-06, 2.3889999999984757e-06, 5.749999999998812e-06, 5.346999999999297e-06, 3.1669999999983656e-06, 2.30600000000053e-06, 4.054999999999337e-06, 5.958000000000352e-06, 4.666999999999866e-06, 5.653000000001296e-06, 5.027000000001197e-06, 2.458000000000321e-06, 2.597000000000016e-06, 4.735999999998242e-06, 2.569000000000876e-06, 2.52800000000164e-06, 5.666999999997396e-06, 4.305999999999061e-06, 3.5139999999996008e-06, 4.000000000000531e-06, 5.1949999999995056e-06, 3.29200000000196e-06]</msg>
<status status="PASS" starttime="20201110 08:38:57.169" endtime="20201110 08:38:57.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.163" endtime="20201110 08:38:57.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.173" endtime="20201110 08:38:57.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.177" endtime="20201110 08:38:57.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.175" endtime="20201110 08:38:57.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.172" endtime="20201110 08:38:57.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.811" endtime="20201110 08:38:57.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.352" endtime="20201110 08:38:57.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.202" endtime="20201110 08:38:57.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.200" endtime="20201110 08:38:57.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.199" endtime="20201110 08:38:57.223"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:46.250" endtime="20201110 08:38:57.223" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.230" endtime="20201110 08:38:57.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.228" endtime="20201110 08:38:57.251"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.263" endtime="20201110 08:39:00.282"></status>
</kw>
<msg timestamp="20201110 08:39:00.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.262" endtime="20201110 08:39:00.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.283" endtime="20201110 08:39:00.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.288" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:00.286" endtime="20201110 08:39:00.289"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:57.259" endtime="20201110 08:39:00.290"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:57.257" endtime="20201110 08:39:00.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.256" endtime="20201110 08:39:00.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:00.295" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:00.294" endtime="20201110 08:39:00.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.291" endtime="20201110 08:39:00.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.255" endtime="20201110 08:39:00.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.254" endtime="20201110 08:39:00.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.296" endtime="20201110 08:39:00.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.253" endtime="20201110 08:39:00.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.251" endtime="20201110 08:39:00.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.227" endtime="20201110 08:39:00.299"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:39:00.301" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.310" endtime="20201110 08:39:00.324"></status>
</kw>
<msg timestamp="20201110 08:39:00.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.307" endtime="20201110 08:39:00.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.327" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.325" endtime="20201110 08:39:00.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.328" endtime="20201110 08:39:00.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.305" endtime="20201110 08:39:00.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.303" endtime="20201110 08:39:00.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.337" endtime="20201110 08:39:00.646"></status>
</kw>
<msg timestamp="20201110 08:39:00.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.069991764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.069992833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.335" endtime="20201110 08:39:00.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.069991764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.069992833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.651" endtime="20201110 08:39:00.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.660" endtime="20201110 08:39:00.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.333" endtime="20201110 08:39:00.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.331" endtime="20201110 08:39:00.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.667" level="INFO">${RESULT} = [{'time': 3.069992833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000757038e-06, 'source_diff': 1.0690000000757038e-06}, {'time': 3.069996236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:00.663" endtime="20201110 08:39:00.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:00.680" level="INFO">${OVERHEAD} = {'time': [3.069992833, 3.069996236, 3.069999931, 3.070004583, 3.070008264, 3.070013417, 3.070016875, 3.070023389, 3.070029167, 3.070035972, 3.070041458, 3.070045944, 3.070052208, 3.070056431, 3.070060...</msg>
<status status="PASS" starttime="20201110 08:39:00.668" endtime="20201110 08:39:00.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.684" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:00.683" endtime="20201110 08:39:00.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.687" level="INFO">VALUE: [1.0690000000757038e-06, 1.0690000000757038e-06, 1.027999999791973e-06, 1.0409999999794195e-06, 1.0830000003458906e-06, 1.0420000000621599e-06, 1.096999999727899e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.054999999805517e-06, 1.0690000000757038e-06, 1.0559999998882574e-06, 1.0829999999018014e-06, 1.0700000001584442e-06, 1.0700000001584442e-06, 1.0839999999845418e-06, 1.054999999805517e-06, 1.0420000000621599e-06, 1.054999999805517e-06, 1.0419999996180707e-06, 1.0410000004235087e-06, 1.0690000000757038e-06, 1.069999999714355e-06, 1.0560000003323466e-06, 1.0420000000621599e-06, 1.0559999998882574e-06, 1.0559999998882574e-06, 1.0690000000757038e-06, 1.0550000002496063e-06, 1.084000000428631e-06, 1.0550000002496063e-06, 1.0700000001584442e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.0690000000757038e-06, 1.0689999996316146e-06, 1.0700000001584442e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.0690000000757038e-06, 1.0560000003323466e-06, 1.0409999999794195e-06, 1.0559999998882574e-06, 1.0550000002496063e-06, 1.054999999805517e-06, 1.0829999999018014e-06, 1.0839999999845418e-06, 1.0830000003458906e-06]</msg>
<status status="PASS" starttime="20201110 08:39:00.686" endtime="20201110 08:39:00.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.681" endtime="20201110 08:39:00.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.690" endtime="20201110 08:39:00.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.693" endtime="20201110 08:39:00.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.692" endtime="20201110 08:39:00.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.688" endtime="20201110 08:39:00.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.302" endtime="20201110 08:39:00.714"></status>
</kw>
<msg timestamp="20201110 08:39:00.714" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.722" endtime="20201110 08:39:00.734"></status>
</kw>
<msg timestamp="20201110 08:39:00.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.721" endtime="20201110 08:39:00.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.736" endtime="20201110 08:39:00.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.738" endtime="20201110 08:39:00.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.718" endtime="20201110 08:39:00.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.717" endtime="20201110 08:39:00.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.748" endtime="20201110 08:39:01.031"></status>
</kw>
<msg timestamp="20201110 08:39:01.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.746" endtime="20201110 08:39:01.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018388069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.035" endtime="20201110 08:39:01.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.043" endtime="20201110 08:39:01.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.743" endtime="20201110 08:39:01.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.741" endtime="20201110 08:39:01.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.050" level="INFO">${RESULT} = [{'time': 0.018389125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018395153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:01.047" endtime="20201110 08:39:01.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:01.063" level="INFO">${OVERHEAD} = {'time': [0.018389125, 0.018395153, 0.018398681, 0.018401917, 0.018407861, 0.018413597, 0.018419625, 0.018425528, 0.018428806, 0.018432042, 0.018438889, 0.018443722, 0.018449222, 0.018454722, 0.018459...</msg>
<status status="PASS" starttime="20201110 08:39:01.051" endtime="20201110 08:39:01.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.068" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:01.067" endtime="20201110 08:39:01.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.070" level="INFO">VALUE: [1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.01400000000057e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.0690000000028455e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201110 08:39:01.069" endtime="20201110 08:39:01.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.064" endtime="20201110 08:39:01.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.073" endtime="20201110 08:39:01.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.077" endtime="20201110 08:39:01.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.075" endtime="20201110 08:39:01.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.071" endtime="20201110 08:39:01.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.715" endtime="20201110 08:39:01.099"></status>
</kw>
<msg timestamp="20201110 08:39:01.099" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.109" endtime="20201110 08:39:01.123"></status>
</kw>
<msg timestamp="20201110 08:39:01.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.107" endtime="20201110 08:39:01.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.127" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.125" endtime="20201110 08:39:01.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.129" endtime="20201110 08:39:01.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.104" endtime="20201110 08:39:01.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.102" endtime="20201110 08:39:01.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.144" endtime="20201110 08:39:01.426"></status>
</kw>
<msg timestamp="20201110 08:39:01.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.141" endtime="20201110 08:39:01.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.431" endtime="20201110 08:39:01.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.439" endtime="20201110 08:39:01.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.137" endtime="20201110 08:39:01.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.135" endtime="20201110 08:39:01.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.446" level="INFO">${RESULT} = [{'time': 0.021905528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.021912333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:01.443" endtime="20201110 08:39:01.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:01.460" level="INFO">${OVERHEAD} = {'time': [0.021905528, 0.021912333, 0.021919069, 0.021923833, 0.021927333, 0.021931069, 0.021936972, 0.021943403, 0.021949347, 0.021952667, 0.021957792, 0.021961611, 0.021966083, 0.021971694, 0.021976...</msg>
<status status="PASS" starttime="20201110 08:39:01.447" endtime="20201110 08:39:01.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.465" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:01.463" endtime="20201110 08:39:01.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.467" level="INFO">VALUE: [1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201110 08:39:01.466" endtime="20201110 08:39:01.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.461" endtime="20201110 08:39:01.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.471" endtime="20201110 08:39:01.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.474" endtime="20201110 08:39:01.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.473" endtime="20201110 08:39:01.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.469" endtime="20201110 08:39:01.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.100" endtime="20201110 08:39:01.495"></status>
</kw>
<msg timestamp="20201110 08:39:01.495" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.503" endtime="20201110 08:39:01.516"></status>
</kw>
<msg timestamp="20201110 08:39:01.516" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.501" endtime="20201110 08:39:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.517" endtime="20201110 08:39:01.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.520" endtime="20201110 08:39:01.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.499" endtime="20201110 08:39:01.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.497" endtime="20201110 08:39:01.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.529" endtime="20201110 08:39:01.815"></status>
</kw>
<msg timestamp="20201110 08:39:01.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018030889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.527" endtime="20201110 08:39:01.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018029847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018030889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.819" endtime="20201110 08:39:01.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.828" endtime="20201110 08:39:01.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.525" endtime="20201110 08:39:01.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.523" endtime="20201110 08:39:01.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.834" level="INFO">${RESULT} = [{'time': 0.018030889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018034111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:01.831" endtime="20201110 08:39:01.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:01.847" level="INFO">${OVERHEAD} = {'time': [0.018030889, 0.018034111, 0.018037319, 0.018042931, 0.018047764, 0.018053444, 0.018057125, 0.018063389, 0.018068347, 0.018074611, 0.018080625, 0.018085653, 0.018091139, 0.018094653, 0.018101...</msg>
<status status="PASS" starttime="20201110 08:39:01.835" endtime="20201110 08:39:01.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.852" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:01.851" endtime="20201110 08:39:01.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.854" level="INFO">VALUE: [1.0419999999997098e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0409999999967667e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.1120000000010288e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201110 08:39:01.853" endtime="20201110 08:39:01.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.848" endtime="20201110 08:39:01.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.858" endtime="20201110 08:39:01.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.861" endtime="20201110 08:39:01.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.860" endtime="20201110 08:39:01.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.856" endtime="20201110 08:39:01.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.496" endtime="20201110 08:39:01.882"></status>
</kw>
<msg timestamp="20201110 08:39:01.882" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.890" endtime="20201110 08:39:01.901"></status>
</kw>
<msg timestamp="20201110 08:39:01.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.888" endtime="20201110 08:39:01.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.904" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.902" endtime="20201110 08:39:01.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.905" endtime="20201110 08:39:01.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.886" endtime="20201110 08:39:01.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.884" endtime="20201110 08:39:01.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.914" endtime="20201110 08:39:02.202"></status>
</kw>
<msg timestamp="20201110 08:39:02.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017994125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.912" endtime="20201110 08:39:02.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017994125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.206" endtime="20201110 08:39:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.214" endtime="20201110 08:39:02.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.910" endtime="20201110 08:39:02.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.908" endtime="20201110 08:39:02.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.221" level="INFO">${RESULT} = [{'time': 0.017994125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.017998583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:02.217" endtime="20201110 08:39:02.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:02.234" level="INFO">${OVERHEAD} = {'time': [0.017994125, 0.017998583, 0.018005333, 0.018011417, 0.01801825, 0.018024889, 0.018029319, 0.018032528, 0.018038847, 0.018045194, 0.018050847, 0.018057764, 0.018063431, 0.018068333, 0.0180722...</msg>
<status status="PASS" starttime="20201110 08:39:02.222" endtime="20201110 08:39:02.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.238" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:02.237" endtime="20201110 08:39:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.241" level="INFO">VALUE: [1.082999999998946e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0139999999971006e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 9.859999999979607e-07, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201110 08:39:02.239" endtime="20201110 08:39:02.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.235" endtime="20201110 08:39:02.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.244" endtime="20201110 08:39:02.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.248" endtime="20201110 08:39:02.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.246" endtime="20201110 08:39:02.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.242" endtime="20201110 08:39:02.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.883" endtime="20201110 08:39:02.268"></status>
</kw>
<msg timestamp="20201110 08:39:02.269" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.276" endtime="20201110 08:39:02.287"></status>
</kw>
<msg timestamp="20201110 08:39:02.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.275" endtime="20201110 08:39:02.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.289" endtime="20201110 08:39:02.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.292" endtime="20201110 08:39:02.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.272" endtime="20201110 08:39:02.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.270" endtime="20201110 08:39:02.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.302" endtime="20201110 08:39:02.593"></status>
</kw>
<msg timestamp="20201110 08:39:02.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017870889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.300" endtime="20201110 08:39:02.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017870889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017871931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.597" endtime="20201110 08:39:02.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.605" endtime="20201110 08:39:02.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.298" endtime="20201110 08:39:02.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.296" endtime="20201110 08:39:02.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.612" level="INFO">${RESULT} = [{'time': 0.017871931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.017878139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:02.609" endtime="20201110 08:39:02.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:02.625" level="INFO">${OVERHEAD} = {'time': [0.017871931, 0.017878139, 0.017884583, 0.017889722, 0.017893597, 0.017898722, 0.017904444, 0.01791125, 0.017916431, 0.017922514, 0.017927833, 0.017933625, 0.017940056, 0.017944847, 0.0179480...</msg>
<status status="PASS" starttime="20201110 08:39:02.613" endtime="20201110 08:39:02.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.629" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:02.628" endtime="20201110 08:39:02.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.632" level="INFO">VALUE: [1.0419999999997098e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.01400000000057e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201110 08:39:02.630" endtime="20201110 08:39:02.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.626" endtime="20201110 08:39:02.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.635" endtime="20201110 08:39:02.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.639" endtime="20201110 08:39:02.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.637" endtime="20201110 08:39:02.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.634" endtime="20201110 08:39:02.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.269" endtime="20201110 08:39:02.660"></status>
</kw>
<msg timestamp="20201110 08:39:02.660" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.668" endtime="20201110 08:39:02.679"></status>
</kw>
<msg timestamp="20201110 08:39:02.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.666" endtime="20201110 08:39:02.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.681" endtime="20201110 08:39:02.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.683" endtime="20201110 08:39:02.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.663" endtime="20201110 08:39:02.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.662" endtime="20201110 08:39:02.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.692" endtime="20201110 08:39:02.977"></status>
</kw>
<msg timestamp="20201110 08:39:02.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018071222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.691" endtime="20201110 08:39:02.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018071222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018072292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.981" endtime="20201110 08:39:02.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.989" endtime="20201110 08:39:02.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.688" endtime="20201110 08:39:02.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.686" endtime="20201110 08:39:02.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.995" level="INFO">${RESULT} = [{'time': 0.018072292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018075556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:02.992" endtime="20201110 08:39:02.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:03.010" level="INFO">${OVERHEAD} = {'time': [0.018072292, 0.018075556, 0.018082417, 0.018087931, 0.018091444, 0.018095917, 0.018102222, 0.018106181, 0.01810975, 0.018116361, 0.018123167, 0.018128472, 0.018133792, 0.018137222, 0.0181404...</msg>
<status status="PASS" starttime="20201110 08:39:02.996" endtime="20201110 08:39:03.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:03.013" endtime="20201110 08:39:03.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.017" level="INFO">VALUE: [1.0699999999988496e-06, 9.729999999978645e-07, 1.0699999999988496e-06, 1.000000000001e-06, 1.0690000000028455e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 9.859999999979607e-07, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.0970000000019853e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.070000000002319e-06]</msg>
<status status="PASS" starttime="20201110 08:39:03.015" endtime="20201110 08:39:03.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.011" endtime="20201110 08:39:03.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.020" endtime="20201110 08:39:03.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.024" endtime="20201110 08:39:03.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.022" endtime="20201110 08:39:03.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.019" endtime="20201110 08:39:03.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.660" endtime="20201110 08:39:03.045"></status>
</kw>
<msg timestamp="20201110 08:39:03.045" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.052" endtime="20201110 08:39:03.065"></status>
</kw>
<msg timestamp="20201110 08:39:03.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.051" endtime="20201110 08:39:03.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.066" endtime="20201110 08:39:03.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.069" endtime="20201110 08:39:03.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.048" endtime="20201110 08:39:03.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.047" endtime="20201110 08:39:03.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.078" endtime="20201110 08:39:03.368"></status>
</kw>
<msg timestamp="20201110 08:39:03.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017745972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.076" endtime="20201110 08:39:03.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017745972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.372" endtime="20201110 08:39:03.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.380" endtime="20201110 08:39:03.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.074" endtime="20201110 08:39:03.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.072" endtime="20201110 08:39:03.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.387" level="INFO">${RESULT} = [{'time': 0.017745972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.017749431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:03.384" endtime="20201110 08:39:03.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:03.400" level="INFO">${OVERHEAD} = {'time': [0.017745972, 0.017749431, 0.017754569, 0.017760472, 0.017767347, 0.017772708, 0.017777889, 0.017781833, 0.017786792, 0.017790667, 0.017794847, 0.017799083, 0.017802736, 0.017808875, 0.017812...</msg>
<status status="PASS" starttime="20201110 08:39:03.388" endtime="20201110 08:39:03.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.404" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:03.403" endtime="20201110 08:39:03.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.407" level="INFO">VALUE: [1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0839999999984196e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0560000000027492e-06, 1.0970000000019853e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201110 08:39:03.406" endtime="20201110 08:39:03.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.401" endtime="20201110 08:39:03.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.410" endtime="20201110 08:39:03.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.414" endtime="20201110 08:39:03.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.412" endtime="20201110 08:39:03.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.409" endtime="20201110 08:39:03.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.045" endtime="20201110 08:39:03.435"></status>
</kw>
<msg timestamp="20201110 08:39:03.435" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.446" endtime="20201110 08:39:03.459"></status>
</kw>
<msg timestamp="20201110 08:39:03.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.444" endtime="20201110 08:39:03.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.462" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.460" endtime="20201110 08:39:03.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.463" endtime="20201110 08:39:03.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.441" endtime="20201110 08:39:03.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.438" endtime="20201110 08:39:03.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.472" endtime="20201110 08:39:03.762"></status>
</kw>
<msg timestamp="20201110 08:39:03.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.470" endtime="20201110 08:39:03.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.766" endtime="20201110 08:39:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.775" endtime="20201110 08:39:03.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.468" endtime="20201110 08:39:03.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.466" endtime="20201110 08:39:03.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.781" level="INFO">${RESULT} = [{'time': 0.022366597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.022370847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:03.778" endtime="20201110 08:39:03.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:03.795" level="INFO">${OVERHEAD} = {'time': [0.022366597, 0.022370847, 0.022375486, 0.022380028, 0.0223845, 0.022388194, 0.022393333, 0.022398417, 0.022403486, 0.022408306, 0.022413792, 0.022419486, 0.02242275, 0.022426514, 0.022431861...</msg>
<status status="PASS" starttime="20201110 08:39:03.782" endtime="20201110 08:39:03.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.799" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:03.798" endtime="20201110 08:39:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.801" level="INFO">VALUE: [1.068999999999376e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.070000000002319e-06]</msg>
<status status="PASS" starttime="20201110 08:39:03.800" endtime="20201110 08:39:03.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.795" endtime="20201110 08:39:03.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.805" endtime="20201110 08:39:03.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.808" endtime="20201110 08:39:03.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.807" endtime="20201110 08:39:03.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.803" endtime="20201110 08:39:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.436" endtime="20201110 08:39:03.829"></status>
</kw>
<msg timestamp="20201110 08:39:03.829" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.837" endtime="20201110 08:39:03.848"></status>
</kw>
<msg timestamp="20201110 08:39:03.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.835" endtime="20201110 08:39:03.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.850" endtime="20201110 08:39:03.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.852" endtime="20201110 08:39:03.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.833" endtime="20201110 08:39:03.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.831" endtime="20201110 08:39:03.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.861" endtime="20201110 08:39:04.151"></status>
</kw>
<msg timestamp="20201110 08:39:04.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.860" endtime="20201110 08:39:04.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.155" endtime="20201110 08:39:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.163" endtime="20201110 08:39:04.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.857" endtime="20201110 08:39:04.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.855" endtime="20201110 08:39:04.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.170" level="INFO">${RESULT} = [{'time': 0.017961444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.017965056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:04.166" endtime="20201110 08:39:04.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:04.183" level="INFO">${OVERHEAD} = {'time': [0.017961444, 0.017965056, 0.017970569, 0.0179755, 0.017979278, 0.017985667, 0.017991708, 0.017995611, 0.017999139, 0.018004514, 0.018010944, 0.0180165, 0.018022472, 0.018028375, 0.018034694,...</msg>
<status status="PASS" starttime="20201110 08:39:04.171" endtime="20201110 08:39:04.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.187" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:04.186" endtime="20201110 08:39:04.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.190" level="INFO">VALUE: [1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0550000000032755e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0139999999971006e-06, 1.0559999999992797e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201110 08:39:04.188" endtime="20201110 08:39:04.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.184" endtime="20201110 08:39:04.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.193" endtime="20201110 08:39:04.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.197" endtime="20201110 08:39:04.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.195" endtime="20201110 08:39:04.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.191" endtime="20201110 08:39:04.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.830" endtime="20201110 08:39:04.217"></status>
</kw>
<msg timestamp="20201110 08:39:04.218" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.225" endtime="20201110 08:39:04.237"></status>
</kw>
<msg timestamp="20201110 08:39:04.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.224" endtime="20201110 08:39:04.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.240" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.239" endtime="20201110 08:39:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.241" endtime="20201110 08:39:04.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.221" endtime="20201110 08:39:04.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.219" endtime="20201110 08:39:04.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.250" endtime="20201110 08:39:04.537"></status>
</kw>
<msg timestamp="20201110 08:39:04.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018066889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018067986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.248" endtime="20201110 08:39:04.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018066889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018067986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.542" endtime="20201110 08:39:04.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.551" endtime="20201110 08:39:04.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.246" endtime="20201110 08:39:04.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.244" endtime="20201110 08:39:04.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.558" level="INFO">${RESULT} = [{'time': 0.018067986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018072431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:04.554" endtime="20201110 08:39:04.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:04.572" level="INFO">${OVERHEAD} = {'time': [0.018067986, 0.018072431, 0.018079014, 0.018085375, 0.0180905, 0.018093722, 0.018098625, 0.01810425, 0.018110028, 0.018116222, 0.018119819, 0.018125792, 0.018131708, 0.018138431, 0.018143431...</msg>
<status status="PASS" starttime="20201110 08:39:04.559" endtime="20201110 08:39:04.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.576" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:04.575" endtime="20201110 08:39:04.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.579" level="INFO">VALUE: [1.0970000000019853e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.000000000001e-06, 9.999999999975306e-07, 1.068999999999376e-06, 1.02800000000014e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201110 08:39:04.578" endtime="20201110 08:39:04.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.573" endtime="20201110 08:39:04.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.582" endtime="20201110 08:39:04.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.586" endtime="20201110 08:39:04.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.584" endtime="20201110 08:39:04.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.581" endtime="20201110 08:39:04.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.218" endtime="20201110 08:39:04.607"></status>
</kw>
<msg timestamp="20201110 08:39:04.607" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.615" endtime="20201110 08:39:04.626"></status>
</kw>
<msg timestamp="20201110 08:39:04.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.613" endtime="20201110 08:39:04.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.628" endtime="20201110 08:39:04.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.630" endtime="20201110 08:39:04.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.611" endtime="20201110 08:39:04.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.609" endtime="20201110 08:39:04.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.640" endtime="20201110 08:39:04.931"></status>
</kw>
<msg timestamp="20201110 08:39:04.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017946681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.638" endtime="20201110 08:39:04.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017946681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.936" endtime="20201110 08:39:04.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.944" endtime="20201110 08:39:04.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.636" endtime="20201110 08:39:04.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.634" endtime="20201110 08:39:04.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.953" level="INFO">${RESULT} = [{'time': 0.017947764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.017953667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:04.948" endtime="20201110 08:39:04.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:04.968" level="INFO">${OVERHEAD} = {'time': [0.017947764, 0.017953667, 0.017959319, 0.017964028, 0.017970181, 0.017973889, 0.017980319, 0.017985167, 0.017991236, 0.017995181, 0.018001625, 0.018005583, 0.018011583, 0.018016125, 0.018021...</msg>
<status status="PASS" starttime="20201110 08:39:04.954" endtime="20201110 08:39:04.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.972" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:04.971" endtime="20201110 08:39:04.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.975" level="INFO">VALUE: [1.0830000000024154e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 1.0559999999992797e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 9.859999999979607e-07, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.0690000000028455e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201110 08:39:04.973" endtime="20201110 08:39:04.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.969" endtime="20201110 08:39:04.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.978" endtime="20201110 08:39:04.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.982" endtime="20201110 08:39:05.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.980" endtime="20201110 08:39:05.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.977" endtime="20201110 08:39:05.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.608" endtime="20201110 08:39:05.003"></status>
</kw>
<msg timestamp="20201110 08:39:05.003" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.010" endtime="20201110 08:39:05.022"></status>
</kw>
<msg timestamp="20201110 08:39:05.023" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.009" endtime="20201110 08:39:05.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.024" endtime="20201110 08:39:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.027" endtime="20201110 08:39:05.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.006" endtime="20201110 08:39:05.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.005" endtime="20201110 08:39:05.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.035" endtime="20201110 08:39:05.326"></status>
</kw>
<msg timestamp="20201110 08:39:05.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.034" endtime="20201110 08:39:05.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.330" endtime="20201110 08:39:05.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.338" endtime="20201110 08:39:05.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.031" endtime="20201110 08:39:05.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.030" endtime="20201110 08:39:05.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.345" level="INFO">${RESULT} = [{'time': 0.017967653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.017971375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:05.341" endtime="20201110 08:39:05.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:05.358" level="INFO">${OVERHEAD} = {'time': [0.017967653, 0.017971375, 0.017976083, 0.017981222, 0.01798475, 0.017988028, 0.017993361, 0.017998611, 0.018005208, 0.018008847, 0.018014347, 0.018019903, 0.018026333, 0.018033264, 0.0180382...</msg>
<status status="PASS" starttime="20201110 08:39:05.346" endtime="20201110 08:39:05.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.363" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:05.361" endtime="20201110 08:39:05.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.365" level="INFO">VALUE: [1.0839999999984196e-06, 1.0560000000027492e-06, 1.0410000000002362e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.0550000000032755e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.125000000001125e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201110 08:39:05.364" endtime="20201110 08:39:05.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.359" endtime="20201110 08:39:05.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.376" endtime="20201110 08:39:05.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.379" endtime="20201110 08:39:05.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.377" endtime="20201110 08:39:05.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.374" endtime="20201110 08:39:05.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.003" endtime="20201110 08:39:05.400"></status>
</kw>
<msg timestamp="20201110 08:39:05.400" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.408" endtime="20201110 08:39:05.420"></status>
</kw>
<msg timestamp="20201110 08:39:05.420" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.406" endtime="20201110 08:39:05.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.423" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.421" endtime="20201110 08:39:05.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.424" endtime="20201110 08:39:05.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.403" endtime="20201110 08:39:05.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.402" endtime="20201110 08:39:05.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.433" endtime="20201110 08:39:05.716"></status>
</kw>
<msg timestamp="20201110 08:39:05.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018377347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.431" endtime="20201110 08:39:05.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018376292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018377347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.720" endtime="20201110 08:39:05.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.728" endtime="20201110 08:39:05.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.429" endtime="20201110 08:39:05.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.427" endtime="20201110 08:39:05.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.735" level="INFO">${RESULT} = [{'time': 0.018377347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018380569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:05.732" endtime="20201110 08:39:05.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:05.748" level="INFO">${OVERHEAD} = {'time': [0.018377347, 0.018380569, 0.018384653, 0.018391014, 0.018397528, 0.018402472, 0.018407375, 0.018410708, 0.018415375, 0.018419194, 0.018422972, 0.018428681, 0.018434819, 0.018440958, 0.018444...</msg>
<status status="PASS" starttime="20201110 08:39:05.736" endtime="20201110 08:39:05.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:05.751" endtime="20201110 08:39:05.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.755" level="INFO">VALUE: [1.054999999999806e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0550000000032755e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0420000000031793e-06]</msg>
<status status="PASS" starttime="20201110 08:39:05.753" endtime="20201110 08:39:05.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.749" endtime="20201110 08:39:05.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.758" endtime="20201110 08:39:05.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.762" endtime="20201110 08:39:05.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.760" endtime="20201110 08:39:05.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.757" endtime="20201110 08:39:05.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.400" endtime="20201110 08:39:05.782"></status>
</kw>
<msg timestamp="20201110 08:39:05.783" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.790" endtime="20201110 08:39:05.802"></status>
</kw>
<msg timestamp="20201110 08:39:05.803" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.789" endtime="20201110 08:39:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.804" endtime="20201110 08:39:05.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.806" endtime="20201110 08:39:05.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.786" endtime="20201110 08:39:05.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.785" endtime="20201110 08:39:05.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.815" endtime="20201110 08:39:06.104"></status>
</kw>
<msg timestamp="20201110 08:39:06.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0179765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:05.813" endtime="20201110 08:39:06.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0179765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017977583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:06.108" endtime="20201110 08:39:06.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.116" endtime="20201110 08:39:06.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.811" endtime="20201110 08:39:06.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.809" endtime="20201110 08:39:06.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.123" level="INFO">${RESULT} = [{'time': 0.017977583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.017983542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.119" endtime="20201110 08:39:06.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:06.137" level="INFO">${OVERHEAD} = {'time': [0.017977583, 0.017983542, 0.017987583, 0.017992736, 0.017999069, 0.018003292, 0.018009181, 0.018013958, 0.01802075, 0.018027139, 0.018032986, 0.018036986, 0.018043014, 0.018049097, 0.0180552...</msg>
<status status="PASS" starttime="20201110 08:39:06.124" endtime="20201110 08:39:06.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.142" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:06.141" endtime="20201110 08:39:06.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.144" level="INFO">VALUE: [1.082999999998946e-06, 1.0560000000027492e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0139999999971006e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0560000000027492e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201110 08:39:06.143" endtime="20201110 08:39:06.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.138" endtime="20201110 08:39:06.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.148" endtime="20201110 08:39:06.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.151" endtime="20201110 08:39:06.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.150" endtime="20201110 08:39:06.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.146" endtime="20201110 08:39:06.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.783" endtime="20201110 08:39:06.172"></status>
</kw>
<msg timestamp="20201110 08:39:06.172" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.180" endtime="20201110 08:39:06.191"></status>
</kw>
<msg timestamp="20201110 08:39:06.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.178" endtime="20201110 08:39:06.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.194" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.193" endtime="20201110 08:39:06.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.196" endtime="20201110 08:39:06.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.176" endtime="20201110 08:39:06.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.174" endtime="20201110 08:39:06.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.204" endtime="20201110 08:39:06.492"></status>
</kw>
<msg timestamp="20201110 08:39:06.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018025222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.203" endtime="20201110 08:39:06.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018025222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.496" endtime="20201110 08:39:06.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.505" endtime="20201110 08:39:06.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.200" endtime="20201110 08:39:06.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.199" endtime="20201110 08:39:06.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.511" level="INFO">${RESULT} = [{'time': 0.018025222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018029944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.508" endtime="20201110 08:39:06.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:06.525" level="INFO">${OVERHEAD} = {'time': [0.018025222, 0.018029944, 0.018035417, 0.018038944, 0.01804225, 0.018047125, 0.018053681, 0.018060014, 0.018065139, 0.018068431, 0.0180725, 0.018076486, 0.018082514, 0.018086514, 0.018090056...</msg>
<status status="PASS" starttime="20201110 08:39:06.512" endtime="20201110 08:39:06.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.529" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:06.528" endtime="20201110 08:39:06.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.531" level="INFO">VALUE: [1.054999999999806e-06, 1.0270000000006663e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0270000000006663e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201110 08:39:06.530" endtime="20201110 08:39:06.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.525" endtime="20201110 08:39:06.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.535" endtime="20201110 08:39:06.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.538" endtime="20201110 08:39:06.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.537" endtime="20201110 08:39:06.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.533" endtime="20201110 08:39:06.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.173" endtime="20201110 08:39:06.559"></status>
</kw>
<msg timestamp="20201110 08:39:06.559" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.567" endtime="20201110 08:39:06.579"></status>
</kw>
<msg timestamp="20201110 08:39:06.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.565" endtime="20201110 08:39:06.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.580" endtime="20201110 08:39:06.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.583" endtime="20201110 08:39:06.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.563" endtime="20201110 08:39:06.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.561" endtime="20201110 08:39:06.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.592" endtime="20201110 08:39:06.876"></status>
</kw>
<msg timestamp="20201110 08:39:06.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01840025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018401347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:06.590" endtime="20201110 08:39:06.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01840025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018401347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:06.880" endtime="20201110 08:39:06.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.888" endtime="20201110 08:39:06.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.588" endtime="20201110 08:39:06.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.586" endtime="20201110 08:39:06.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.895" level="INFO">${RESULT} = [{'time': 0.018401347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018405097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:06.891" endtime="20201110 08:39:06.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:06.908" level="INFO">${OVERHEAD} = {'time': [0.018401347, 0.018405097, 0.018408958, 0.018412486, 0.018418514, 0.018424653, 0.018430208, 0.018435444, 0.018440236, 0.018446903, 0.018452986, 0.018459069, 0.018463611, 0.018469403, 0.018473...</msg>
<status status="PASS" starttime="20201110 08:39:06.896" endtime="20201110 08:39:06.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:06.911" endtime="20201110 08:39:06.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.915" level="INFO">VALUE: [1.0969999999985158e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0690000000028455e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201110 08:39:06.913" endtime="20201110 08:39:06.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.909" endtime="20201110 08:39:06.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.918" endtime="20201110 08:39:06.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.922" endtime="20201110 08:39:06.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.920" endtime="20201110 08:39:06.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.917" endtime="20201110 08:39:06.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.560" endtime="20201110 08:39:06.942"></status>
</kw>
<msg timestamp="20201110 08:39:06.943" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.950" endtime="20201110 08:39:06.962"></status>
</kw>
<msg timestamp="20201110 08:39:06.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.949" endtime="20201110 08:39:06.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.964" endtime="20201110 08:39:06.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.966" endtime="20201110 08:39:06.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.946" endtime="20201110 08:39:06.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.944" endtime="20201110 08:39:06.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.975" endtime="20201110 08:39:07.266"></status>
</kw>
<msg timestamp="20201110 08:39:07.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017924444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:06.974" endtime="20201110 08:39:07.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017924444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:07.270" endtime="20201110 08:39:07.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.278" endtime="20201110 08:39:07.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.971" endtime="20201110 08:39:07.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.969" endtime="20201110 08:39:07.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.285" level="INFO">${RESULT} = [{'time': 0.0179255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.017930139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:07.282" endtime="20201110 08:39:07.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:07.298" level="INFO">${OVERHEAD} = {'time': [0.0179255, 0.017930139, 0.017935611, 0.017942014, 0.017946306, 0.017952972, 0.017958528, 0.017964819, 0.017968486, 0.017975472, 0.017979125, 0.017985139, 0.017989667, 0.017996361, 0.01799987...</msg>
<status status="PASS" starttime="20201110 08:39:07.286" endtime="20201110 08:39:07.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.302" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:07.301" endtime="20201110 08:39:07.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.305" level="INFO">VALUE: [1.0559999999992797e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201110 08:39:07.303" endtime="20201110 08:39:07.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.299" endtime="20201110 08:39:07.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.308" endtime="20201110 08:39:07.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.312" endtime="20201110 08:39:07.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.310" endtime="20201110 08:39:07.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.307" endtime="20201110 08:39:07.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.943" endtime="20201110 08:39:07.333"></status>
</kw>
<msg timestamp="20201110 08:39:07.333" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.340" endtime="20201110 08:39:07.352"></status>
</kw>
<msg timestamp="20201110 08:39:07.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.339" endtime="20201110 08:39:07.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.355" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.354" endtime="20201110 08:39:07.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.356" endtime="20201110 08:39:07.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.336" endtime="20201110 08:39:07.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.335" endtime="20201110 08:39:07.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.365" endtime="20201110 08:39:07.648"></status>
</kw>
<msg timestamp="20201110 08:39:07.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018155417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018156458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.364" endtime="20201110 08:39:07.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018155417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018156458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.652" endtime="20201110 08:39:07.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.660" endtime="20201110 08:39:07.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.361" endtime="20201110 08:39:07.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.360" endtime="20201110 08:39:07.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.667" level="INFO">${RESULT} = [{'time': 0.018156458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018161361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:07.664" endtime="20201110 08:39:07.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:07.681" level="INFO">${OVERHEAD} = {'time': [0.018156458, 0.018161361, 0.018165125, 0.018169958, 0.018175556, 0.018180153, 0.018187069, 0.018193694, 0.018199069, 0.018203486, 0.018207597, 0.018212458, 0.018217389, 0.018223125, 0.018227...</msg>
<status status="PASS" starttime="20201110 08:39:07.668" endtime="20201110 08:39:07.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:07.685" endtime="20201110 08:39:07.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.688" level="INFO">VALUE: [1.0410000000002362e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 9.999999999975306e-07, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 9.859999999979607e-07, 1.0559999999992797e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.1120000000010288e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0420000000031793e-06]</msg>
<status status="PASS" starttime="20201110 08:39:07.687" endtime="20201110 08:39:07.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.682" endtime="20201110 08:39:07.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.692" endtime="20201110 08:39:07.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.695" endtime="20201110 08:39:07.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.694" endtime="20201110 08:39:07.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.690" endtime="20201110 08:39:07.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.333" endtime="20201110 08:39:07.716"></status>
</kw>
<msg timestamp="20201110 08:39:07.716" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.724" endtime="20201110 08:39:07.735"></status>
</kw>
<msg timestamp="20201110 08:39:07.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.722" endtime="20201110 08:39:07.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.737" endtime="20201110 08:39:07.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.739" endtime="20201110 08:39:07.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.720" endtime="20201110 08:39:07.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.718" endtime="20201110 08:39:07.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.748" endtime="20201110 08:39:08.038"></status>
</kw>
<msg timestamp="20201110 08:39:08.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.747" endtime="20201110 08:39:08.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.042" endtime="20201110 08:39:08.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.051" endtime="20201110 08:39:08.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.744" endtime="20201110 08:39:08.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.742" endtime="20201110 08:39:08.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.057" level="INFO">${RESULT} = [{'time': 0.017855458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.017860833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:08.054" endtime="20201110 08:39:08.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:08.070" level="INFO">${OVERHEAD} = {'time': [0.017855458, 0.017860833, 0.017865014, 0.017869069, 0.017875153, 0.017880167, 0.017886736, 0.017890514, 0.01789425, 0.017898736, 0.017902931, 0.017906431, 0.017913347, 0.017919736, 0.0179237...</msg>
<status status="PASS" starttime="20201110 08:39:08.058" endtime="20201110 08:39:08.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.075" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:39:08.074" endtime="20201110 08:39:08.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.077" level="INFO">VALUE: [1.01400000000057e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201110 08:39:08.076" endtime="20201110 08:39:08.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.071" endtime="20201110 08:39:08.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.081" endtime="20201110 08:39:08.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.084" endtime="20201110 08:39:08.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.083" endtime="20201110 08:39:08.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.079" endtime="20201110 08:39:08.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.717" endtime="20201110 08:39:08.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.300" endtime="20201110 08:39:08.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.109" endtime="20201110 08:39:08.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.108" endtime="20201110 08:39:08.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.107" endtime="20201110 08:39:08.130"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:57.225" endtime="20201110 08:39:08.130" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.136" endtime="20201110 08:39:08.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.135" endtime="20201110 08:39:08.157"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.169" endtime="20201110 08:39:11.192"></status>
</kw>
<msg timestamp="20201110 08:39:11.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.168" endtime="20201110 08:39:11.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.195" endtime="20201110 08:39:11.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.204" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:11.200" endtime="20201110 08:39:11.204"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:08.165" endtime="20201110 08:39:11.206"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:08.163" endtime="20201110 08:39:11.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.162" endtime="20201110 08:39:11.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:11.215" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:11.214" endtime="20201110 08:39:11.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.209" endtime="20201110 08:39:11.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.161" endtime="20201110 08:39:11.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.160" endtime="20201110 08:39:11.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.219" endtime="20201110 08:39:11.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.159" endtime="20201110 08:39:11.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.157" endtime="20201110 08:39:11.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.134" endtime="20201110 08:39:11.224"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.242" endtime="20201110 08:39:11.266"></status>
</kw>
<msg timestamp="20201110 08:39:11.267" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.239" endtime="20201110 08:39:11.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.272" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.269" endtime="20201110 08:39:11.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.275" endtime="20201110 08:39:11.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.233" endtime="20201110 08:39:11.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.229" endtime="20201110 08:39:11.280"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.285" endtime="20201110 08:39:11.288"></status>
</kw>
<msg timestamp="20201110 08:39:11.289" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:39:11.282" endtime="20201110 08:39:11.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.297" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:39:11.295" endtime="20201110 08:39:11.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.301" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:39:11.299" endtime="20201110 08:39:11.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.290" endtime="20201110 08:39:11.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.311" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:39:11.309" endtime="20201110 08:39:11.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.316" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:39:11.313" endtime="20201110 08:39:11.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.304" endtime="20201110 08:39:11.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.330" endtime="20201110 08:39:11.627"></status>
</kw>
<msg timestamp="20201110 08:39:11.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097992194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097996375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.328" endtime="20201110 08:39:11.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097992194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097996375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.631" endtime="20201110 08:39:11.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.639" endtime="20201110 08:39:11.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.325" endtime="20201110 08:39:11.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.320" endtime="20201110 08:39:11.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.646" level="INFO">${RESULT} = [{'time': 3.097996375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180999999991997e-06, 'source_diff': 4.180999999991997e-06}, {'time': 3.098007028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:11.642" endtime="20201110 08:39:11.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:11.659" level="INFO">${OVERHEAD} = {'time': [3.097996375, 3.098007028, 3.09801625, 3.098023958, 3.098034208, 3.098045083, 3.098053569, 3.098061417, 3.098072417, 3.098083569, 3.098092056, 3.098102986, 3.098110375, 3.098119472, 3.0981283...</msg>
<status status="PASS" starttime="20201110 08:39:11.647" endtime="20201110 08:39:11.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.663" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:39:11.662" endtime="20201110 08:39:11.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.666" level="INFO">VALUE: [4.180999999991997e-06, 5.0840000000995644e-06, 5.097000000287011e-06, 5.0690000001907265e-06, 5.111000000113108e-06, 5.111000000113108e-06, 5.083000000016824e-06, 5.083999999655475e-06, 5.05600000000328e-06, 5.111000000113108e-06, 5.097999999925662e-06, 5.082999999572735e-06, 5.083000000016824e-06, 5.027999999906996e-06, 5.096999999842922e-06, 5.096999999842922e-06, 5.096999999842922e-06, 5.097999999925662e-06, 5.097000000287011e-06, 5.1389999997653035e-06, 5.041999999733093e-06, 5.097000000287011e-06, 5.068999999746637e-06, 5.15300000003549e-06, 5.166999999861588e-06, 5.097000000287011e-06, 5.111000000113108e-06, 5.15300000003549e-06, 5.096999999842922e-06, 5.013999999636809e-06, 5.096999999842922e-06, 5.083000000016824e-06, 5.15300000003549e-06, 5.097999999925662e-06, 5.097999999925662e-06, 5.097999999925662e-06, 5.097000000287011e-06, 5.1119999997517596e-06, 5.083000000016824e-06, 5.028000000351085e-06, 5.0840000000995644e-06, 5.0840000000995644e-06, 5.097000000287011e-06, 5.0840000000995644e-06, 5.097000000287011e-06, 5.096999999842922e-06, 5.0840000000995644e-06, 5.097999999925662e-06, 5.096999999842922e-06, 5.096999999842922e-06]</msg>
<status status="PASS" starttime="20201110 08:39:11.665" endtime="20201110 08:39:11.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.660" endtime="20201110 08:39:11.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.670" endtime="20201110 08:39:11.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.673" endtime="20201110 08:39:11.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.671" endtime="20201110 08:39:11.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.668" endtime="20201110 08:39:11.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.225" endtime="20201110 08:39:11.694"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:08.131" endtime="20201110 08:39:11.694" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.701" endtime="20201110 08:39:11.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.699" endtime="20201110 08:39:11.721"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.735" endtime="20201110 08:39:14.756"></status>
</kw>
<msg timestamp="20201110 08:39:14.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.733" endtime="20201110 08:39:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.759" endtime="20201110 08:39:14.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:14.764" endtime="20201110 08:39:14.769"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:11.730" endtime="20201110 08:39:14.770"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:11.727" endtime="20201110 08:39:14.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.726" endtime="20201110 08:39:14.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:14.780" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:14.778" endtime="20201110 08:39:14.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.774" endtime="20201110 08:39:14.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.725" endtime="20201110 08:39:14.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.725" endtime="20201110 08:39:14.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.783" endtime="20201110 08:39:14.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.723" endtime="20201110 08:39:14.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.721" endtime="20201110 08:39:14.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.698" endtime="20201110 08:39:14.789"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.807" endtime="20201110 08:39:18.899"></status>
</kw>
<msg timestamp="20201110 08:39:18.900" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201110 08:39:14.804" endtime="20201110 08:39:18.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.908" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201110 08:39:18.902" endtime="20201110 08:39:18.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.914" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201110 08:39:18.910" endtime="20201110 08:39:18.915"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:14.799" endtime="20201110 08:39:18.916"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:14.793" endtime="20201110 08:39:18.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.931" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:18.948" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:20.119" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:18.929" endtime="20201110 08:39:20.120"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.123" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:39:20.121" endtime="20201110 08:39:23.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.925" endtime="20201110 08:39:23.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.922" endtime="20201110 08:39:23.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.131" endtime="20201110 08:39:23.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.128" endtime="20201110 08:39:23.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.919" endtime="20201110 08:39:23.155"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:14.790" endtime="20201110 08:39:23.156"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="FAIL" starttime="20201110 08:39:11.696" endtime="20201110 08:39:23.158" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.175" endtime="20201110 08:39:23.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.169" endtime="20201110 08:39:23.198"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.226" endtime="20201110 08:39:26.248"></status>
</kw>
<msg timestamp="20201110 08:39:26.249" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:23.222" endtime="20201110 08:39:26.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.251" endtime="20201110 08:39:26.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.260" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:26.256" endtime="20201110 08:39:26.261"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:23.217" endtime="20201110 08:39:26.262"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:23.212" endtime="20201110 08:39:26.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.209" endtime="20201110 08:39:26.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:26.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:26.271" endtime="20201110 08:39:26.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.267" endtime="20201110 08:39:26.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.207" endtime="20201110 08:39:26.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.206" endtime="20201110 08:39:26.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.276" endtime="20201110 08:39:26.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.203" endtime="20201110 08:39:26.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.200" endtime="20201110 08:39:26.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.167" endtime="20201110 08:39:26.282"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.299" endtime="20201110 08:39:26.432"></status>
</kw>
<msg timestamp="20201110 08:39:26.433" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.296" endtime="20201110 08:39:26.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.438" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.435" endtime="20201110 08:39:26.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.441" endtime="20201110 08:39:26.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.290" endtime="20201110 08:39:26.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.286" endtime="20201110 08:39:26.448"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.452" endtime="20201110 08:39:26.456"></status>
</kw>
<msg timestamp="20201110 08:39:26.457" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:39:26.450" endtime="20201110 08:39:26.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.465" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:39:26.463" endtime="20201110 08:39:26.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.469" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:39:26.468" endtime="20201110 08:39:26.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.458" endtime="20201110 08:39:26.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.479" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:39:26.477" endtime="20201110 08:39:26.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.483" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:39:26.481" endtime="20201110 08:39:26.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.472" endtime="20201110 08:39:26.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.498" endtime="20201110 08:39:26.808"></status>
</kw>
<msg timestamp="20201110 08:39:26.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116818111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116847917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.495" endtime="20201110 08:39:26.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116818111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116847917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.812" endtime="20201110 08:39:26.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.821" endtime="20201110 08:39:26.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.490" endtime="20201110 08:39:26.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.486" endtime="20201110 08:39:26.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.827" level="INFO">${RESULT} = [{'time': 3.116847917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9805999999688026e-05, 'source_diff': 2.9805999999688026e-05}, {'time': 3.119039028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:26.824" endtime="20201110 08:39:26.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:26.843" level="INFO">${OVERHEAD} = {'time': [3.116847917, 3.119039028, 3.121244097, 3.123449236, 3.125653903, 3.127858208, 3.130065208, 3.132271486, 3.134475097, 3.136682306, 3.138888111, 3.141094194, 3.143301125, 3.145505444, 3.147710...</msg>
<status status="PASS" starttime="20201110 08:39:26.828" endtime="20201110 08:39:26.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.847" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:39:26.846" endtime="20201110 08:39:26.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.850" level="INFO">VALUE: [2.9805999999688026e-05, 3.9721999999908775e-05, 3.970800000008268e-05, 3.9666999999798946e-05, 3.970899999972133e-05, 3.967999999998639e-05, 3.970800000008268e-05, 3.970800000008268e-05, 3.965299999997285e-05, 3.970900000016542e-05, 3.9721999999908775e-05, 3.970800000008268e-05, 3.970799999963859e-05, 3.969399999981249e-05, 3.9777999999657254e-05, 3.975000000000506e-05, 3.970800000008268e-05, 3.979199999992744e-05, 3.975000000000506e-05, 3.970800000008268e-05, 3.9721999999908775e-05, 3.973600000017896e-05, 3.968100000006913e-05, 3.970800000008268e-05, 3.9722000000352864e-05, 3.968100000006913e-05, 3.967999999998639e-05, 3.970800000008268e-05, 3.970800000008268e-05, 3.9666999999798946e-05, 3.9721999999908775e-05, 3.970900000016542e-05, 3.9667000000243036e-05, 3.9721999999908775e-05, 3.975000000000506e-05, 3.9721999999908775e-05, 3.969400000025658e-05, 3.9722999999991515e-05, 3.970800000008268e-05, 3.973599999973487e-05, 3.9721999999908775e-05, 3.9722000000352864e-05, 3.969399999981249e-05, 3.970900000016542e-05, 3.969499999989523e-05, 3.970899999972133e-05, 3.967999999998639e-05, 3.969499999989523e-05, 3.969499999989523e-05, 3.969499999989523e-05]</msg>
<status status="PASS" starttime="20201110 08:39:26.849" endtime="20201110 08:39:26.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.844" endtime="20201110 08:39:26.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.853" endtime="20201110 08:39:26.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.856" endtime="20201110 08:39:26.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.855" endtime="20201110 08:39:26.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.851" endtime="20201110 08:39:26.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.283" endtime="20201110 08:39:26.878"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:23.161" endtime="20201110 08:39:26.878" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.885" endtime="20201110 08:39:26.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.884" endtime="20201110 08:39:26.905"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.918" endtime="20201110 08:39:29.940"></status>
</kw>
<msg timestamp="20201110 08:39:29.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.916" endtime="20201110 08:39:29.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:29.943" endtime="20201110 08:39:29.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.953" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:29.948" endtime="20201110 08:39:29.954"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:26.914" endtime="20201110 08:39:29.955"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:26.911" endtime="20201110 08:39:29.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.910" endtime="20201110 08:39:29.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:29.964" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:29.963" endtime="20201110 08:39:29.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.959" endtime="20201110 08:39:29.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.909" endtime="20201110 08:39:29.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.909" endtime="20201110 08:39:29.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.968" endtime="20201110 08:39:29.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.908" endtime="20201110 08:39:29.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.906" endtime="20201110 08:39:29.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.882" endtime="20201110 08:39:29.973"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.993" endtime="20201110 08:39:34.083"></status>
</kw>
<msg timestamp="20201110 08:39:34.084" level="INFO">${RESULT} = {'cmd': 'overhead_timer remove first', 'msg': ['overhead_timer remove first\r\n', '{"cmd":"timer overhead: remove first timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotpr...</msg>
<status status="PASS" starttime="20201110 08:39:29.988" endtime="20201110 08:39:34.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.091" level="INFO">${RESULT} = {'cmd': 'overhead_timer remove first', 'msg': ['overhead_timer remove first\r\n', '{"cmd":"timer overhead: remove first timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotpr...</msg>
<status status="PASS" starttime="20201110 08:39:34.086" endtime="20201110 08:39:34.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.098" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201110 08:39:34.094" endtime="20201110 08:39:34.098"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:29.982" endtime="20201110 08:39:34.100"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:29.978" endtime="20201110 08:39:34.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.115" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:34.131" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:35.345" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:34.112" endtime="20201110 08:39:35.346"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.349" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:39:35.347" endtime="20201110 08:39:38.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.109" endtime="20201110 08:39:38.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.106" endtime="20201110 08:39:38.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.356" endtime="20201110 08:39:38.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.353" endtime="20201110 08:39:38.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.102" endtime="20201110 08:39:38.381"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:29.975" endtime="20201110 08:39:38.382"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="FAIL" starttime="20201110 08:39:26.880" endtime="20201110 08:39:38.383" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.400" endtime="20201110 08:39:38.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.396" endtime="20201110 08:39:38.423"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.444" endtime="20201110 08:39:41.465"></status>
</kw>
<msg timestamp="20201110 08:39:41.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:38.442" endtime="20201110 08:39:41.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.468" endtime="20201110 08:39:41.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.479" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:41.473" endtime="20201110 08:39:41.480"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:38.439" endtime="20201110 08:39:41.481"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:38.436" endtime="20201110 08:39:41.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.434" endtime="20201110 08:39:41.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:41.491" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:41.489" endtime="20201110 08:39:41.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.485" endtime="20201110 08:39:41.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.432" endtime="20201110 08:39:41.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.431" endtime="20201110 08:39:41.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.494" endtime="20201110 08:39:41.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.428" endtime="20201110 08:39:41.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.425" endtime="20201110 08:39:41.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.393" endtime="20201110 08:39:41.500"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.517" endtime="20201110 08:39:41.569"></status>
</kw>
<msg timestamp="20201110 08:39:41.570" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.514" endtime="20201110 08:39:41.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.572" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.571" endtime="20201110 08:39:41.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.573" endtime="20201110 08:39:41.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.509" endtime="20201110 08:39:41.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.504" endtime="20201110 08:39:41.576"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.578" endtime="20201110 08:39:41.579"></status>
</kw>
<msg timestamp="20201110 08:39:41.580" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:39:41.577" endtime="20201110 08:39:41.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.584" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:39:41.583" endtime="20201110 08:39:41.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.586" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:39:41.585" endtime="20201110 08:39:41.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.581" endtime="20201110 08:39:41.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.591" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:39:41.590" endtime="20201110 08:39:41.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.593" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:39:41.592" endtime="20201110 08:39:41.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.588" endtime="20201110 08:39:41.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.603" endtime="20201110 08:39:41.904"></status>
</kw>
<msg timestamp="20201110 08:39:41.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108807153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108816514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.600" endtime="20201110 08:39:41.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108807153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108816514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.909" endtime="20201110 08:39:41.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.919" endtime="20201110 08:39:41.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.597" endtime="20201110 08:39:41.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.595" endtime="20201110 08:39:41.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.928" level="INFO">${RESULT} = [{'time': 3.108816514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.361000000041031e-06, 'source_diff': 9.361000000041031e-06}, {'time': 3.109450139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:41.924" endtime="20201110 08:39:41.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:39:41.941" level="INFO">${OVERHEAD} = {'time': [3.108816514, 3.109450139, 3.110082389, 3.110714694, 3.111346542, 3.111978014, 3.112612194, 3.113245625, 3.113876375, 3.114510764, 3.115143722, 3.115776986, 3.116411083, 3.117042569, 3.117674...</msg>
<status status="PASS" starttime="20201110 08:39:41.929" endtime="20201110 08:39:41.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.946" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:39:41.945" endtime="20201110 08:39:41.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.948" level="INFO">VALUE: [9.361000000041031e-06, 9.402999999963413e-06, 9.389000000137315e-06, 9.374999999867129e-06, 9.389000000137315e-06, 9.361000000041031e-06, 9.401999999880672e-06, 9.41699999978951e-06, 9.402999999963413e-06, 9.402999999963413e-06, 9.389000000137315e-06, 9.375000000311218e-06, 9.389000000137315e-06, 9.388000000054575e-06, 9.402000000324762e-06, 9.402999999963413e-06, 9.374999999867129e-06, 9.41699999978951e-06, 9.401999999880672e-06, 9.401999999880672e-06, 9.4170000002336e-06, 9.374999999867129e-06, 9.389000000137315e-06, 9.388999999693226e-06, 9.402999999963413e-06, 9.374999999867129e-06, 9.388999999693226e-06, 9.389000000137315e-06, 9.401999999880672e-06, 9.389000000137315e-06, 9.374999999867129e-06, 9.389000000137315e-06, 9.41599999970677e-06, 9.41699999978951e-06, 9.402999999963413e-06, 9.459000000155982e-06, 9.360999999596942e-06, 9.374999999867129e-06, 9.402999999963413e-06, 9.374999999867129e-06, 9.388999999693226e-06, 9.402999999963413e-06, 9.429999999976957e-06, 9.389000000137315e-06, 9.429999999976957e-06, 9.389000000137315e-06, 9.443999999803054e-06, 9.388000000054575e-06, 9.361000000041031e-06, 9.374999999867129e-06]</msg>
<status status="PASS" starttime="20201110 08:39:41.947" endtime="20201110 08:39:41.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.942" endtime="20201110 08:39:41.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.951" endtime="20201110 08:39:41.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.955" endtime="20201110 08:39:41.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.953" endtime="20201110 08:39:41.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.950" endtime="20201110 08:39:41.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.501" endtime="20201110 08:39:41.975"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:38.387" endtime="20201110 08:39:41.976" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.982" endtime="20201110 08:39:42.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.981" endtime="20201110 08:39:42.003"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.016" endtime="20201110 08:39:45.039"></status>
</kw>
<msg timestamp="20201110 08:39:45.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:42.014" endtime="20201110 08:39:45.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:45.042" endtime="20201110 08:39:45.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:45.047" endtime="20201110 08:39:45.052"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:42.012" endtime="20201110 08:39:45.053"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:42.009" endtime="20201110 08:39:45.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.008" endtime="20201110 08:39:45.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:45.062" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:45.061" endtime="20201110 08:39:45.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.057" endtime="20201110 08:39:45.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.007" endtime="20201110 08:39:45.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.007" endtime="20201110 08:39:45.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.066" endtime="20201110 08:39:45.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.005" endtime="20201110 08:39:45.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.003" endtime="20201110 08:39:45.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.980" endtime="20201110 08:39:45.072"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.091" endtime="20201110 08:39:49.165"></status>
</kw>
<msg timestamp="20201110 08:39:49.166" level="INFO">${RESULT} = {'cmd': 'overhead_timer remove last', 'msg': ['overhead_timer remove last\r\n', '{"cmd":"timer overhead: remove last timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproje...</msg>
<status status="PASS" starttime="20201110 08:39:45.087" endtime="20201110 08:39:49.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.174" level="INFO">${RESULT} = {'cmd': 'overhead_timer remove last', 'msg': ['overhead_timer remove last\r\n', '{"cmd":"timer overhead: remove last timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproje...</msg>
<status status="PASS" starttime="20201110 08:39:49.168" endtime="20201110 08:39:49.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.181" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201110 08:39:49.177" endtime="20201110 08:39:49.182"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:45.080" endtime="20201110 08:39:49.183"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:45.076" endtime="20201110 08:39:49.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.199" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:49.215" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:50.392" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:49.196" endtime="20201110 08:39:50.392"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:53.395" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:39:50.393" endtime="20201110 08:39:53.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.193" endtime="20201110 08:39:53.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.189" endtime="20201110 08:39:53.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:53.404" endtime="20201110 08:39:53.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:53.401" endtime="20201110 08:39:53.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.186" endtime="20201110 08:39:53.429"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:45.073" endtime="20201110 08:39:53.429"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="FAIL" starttime="20201110 08:39:41.977" endtime="20201110 08:39:53.431" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201110 08:38:38.659" endtime="20201110 08:39:53.452"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:53.559" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:53.568" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:54.660" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:53.558" endtime="20201110 08:39:54.660"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.663" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:39:54.661" endtime="20201110 08:39:57.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:53.557" endtime="20201110 08:39:57.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:57.670" endtime="20201110 08:39:57.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.667" endtime="20201110 08:39:57.951"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.963" endtime="20201110 08:40:00.984"></status>
</kw>
<msg timestamp="20201110 08:40:00.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:57.962" endtime="20201110 08:40:00.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:00.988" endtime="20201110 08:40:00.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.997" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:40:00.993" endtime="20201110 08:40:00.998"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:57.960" endtime="20201110 08:40:00.999"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:57.957" endtime="20201110 08:40:01.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.956" endtime="20201110 08:40:01.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:40:01.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:40:01.007" endtime="20201110 08:40:01.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.003" endtime="20201110 08:40:01.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.955" endtime="20201110 08:40:01.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.955" endtime="20201110 08:40:01.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:01.012" endtime="20201110 08:40:01.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.953" endtime="20201110 08:40:01.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:01.018" endtime="20201110 08:40:01.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.952" endtime="20201110 08:40:01.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:53.556" endtime="20201110 08:40:01.022"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:01.035" endtime="20201110 08:40:01.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.032" endtime="20201110 08:40:01.058"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:01.081" endtime="20201110 08:40:04.100"></status>
</kw>
<msg timestamp="20201110 08:40:04.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:01.080" endtime="20201110 08:40:04.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.102" endtime="20201110 08:40:04.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:40:04.106" endtime="20201110 08:40:04.110"></status>
</kw>
<status status="FAIL" starttime="20201110 08:40:01.077" endtime="20201110 08:40:04.111"></status>
</kw>
<status status="FAIL" starttime="20201110 08:40:01.073" endtime="20201110 08:40:04.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.068" endtime="20201110 08:40:04.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:40:04.120" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:40:04.119" endtime="20201110 08:40:04.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.114" endtime="20201110 08:40:04.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.066" endtime="20201110 08:40:04.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.065" endtime="20201110 08:40:04.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.122" endtime="20201110 08:40:04.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.062" endtime="20201110 08:40:04.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.059" endtime="20201110 08:40:04.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:01.028" endtime="20201110 08:40:04.125"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.136" endtime="20201110 08:40:04.150"></status>
</kw>
<msg timestamp="20201110 08:40:04.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.134" endtime="20201110 08:40:04.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.152" endtime="20201110 08:40:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.156" endtime="20201110 08:40:04.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.131" endtime="20201110 08:40:04.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.129" endtime="20201110 08:40:04.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.166" endtime="20201110 08:40:04.469"></status>
</kw>
<msg timestamp="20201110 08:40:04.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.091290306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.091305319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:04.164" endtime="20201110 08:40:04.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.091290306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.091305319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:04.475" endtime="20201110 08:40:04.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.484" endtime="20201110 08:40:04.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.161" endtime="20201110 08:40:04.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.159" endtime="20201110 08:40:04.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:04.491" level="INFO">${RESULT} = [{'time': 3.091305319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.501300000006367e-05, 'source_diff': 1.501300000006367e-05}, {'time': 3.091329278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:04.488" endtime="20201110 08:40:04.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:04.506" level="INFO">${ACCURACY} = {'time': [3.091305319, 3.091329278, 3.091351278, 3.091373278, 3.091395278, 3.091417306, 3.091441306, 3.091465306, 3.091486292, 3.091510306, 3.091533306, 3.091556306, 3.091580306, 3.091602306, 3.091624...</msg>
<status status="PASS" starttime="20201110 08:40:04.493" endtime="20201110 08:40:04.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.511" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:40:04.510" endtime="20201110 08:40:04.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.514" level="INFO">VALUE: [1.501300000006367e-05, 1.4902999999844013e-05, 1.4347000000025645e-05, 1.427799999964563e-05, 1.4749999999619234e-05, 1.5125000000004718e-05, 1.4458999999966693e-05, 1.506999999989489e-05, 1.4763999999889421e-05, 1.4194999999883606e-05, 1.4555999999998903e-05, 1.4334000000282288e-05, 1.4487000000062977e-05, 1.5111999999817272e-05, 1.4417000000044311e-05, 1.43200000000121e-05, 1.4750000000063324e-05, 1.4610999999664642e-05, 1.4957999999953842e-05, 1.4375000000121929e-05, 1.5096999999908434e-05, 1.4514000000076521e-05, 1.4805999999811803e-05, 1.4347000000025645e-05, 1.4610999999664642e-05, 1.4402000000135473e-05, 1.4902999999844013e-05, 1.4361000000295832e-05, 1.5110999999734531e-05, 1.5096999999908434e-05, 1.5096999999908434e-05, 1.4332999999755458e-05, 1.456899999974226e-05, 1.476400000033351e-05, 1.456899999974226e-05, 1.5013999999702321e-05, 1.431899999992936e-05, 1.4763999999889421e-05, 1.4624999999934829e-05, 1.4235999999723248e-05, 1.4972000000224028e-05, 1.4388999999948027e-05, 1.4832999999825347e-05, 1.4485999999980237e-05, 1.4334000000282288e-05, 1.4624999999934829e-05, 1.4639000000205016e-05, 1.447200000015414e-05, 1.4264000000263621e-05, 1.5054999999986052e-05]</msg>
<status status="PASS" starttime="20201110 08:40:04.512" endtime="20201110 08:40:04.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.507" endtime="20201110 08:40:04.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.517" endtime="20201110 08:40:04.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:04.520" endtime="20201110 08:40:04.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.519" endtime="20201110 08:40:04.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.515" endtime="20201110 08:40:04.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.127" endtime="20201110 08:40:04.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.126" endtime="20201110 08:40:04.541"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.551" endtime="20201110 08:40:04.567"></status>
</kw>
<msg timestamp="20201110 08:40:04.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.550" endtime="20201110 08:40:04.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.569" endtime="20201110 08:40:04.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.571" endtime="20201110 08:40:04.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.547" endtime="20201110 08:40:04.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.544" endtime="20201110 08:40:04.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.580" endtime="20201110 08:40:04.867"></status>
</kw>
<msg timestamp="20201110 08:40:04.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:04.579" endtime="20201110 08:40:04.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021539972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:04.873" endtime="20201110 08:40:04.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.886" endtime="20201110 08:40:04.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.576" endtime="20201110 08:40:04.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.574" endtime="20201110 08:40:04.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:04.896" level="INFO">${RESULT} = [{'time': 0.021539972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4694000000002594e-05, 'source_diff': 1.4694000000002594e-05}, {'time': 0.021563042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:04.893" endtime="20201110 08:40:04.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:04.910" level="INFO">${ACCURACY} = {'time': [0.021539972, 0.021563042, 0.021586986, 0.021608, 0.021631986, 0.021653986, 0.021674986, 0.021697, 0.021718014, 0.021740014, 0.021764, 0.021785, 0.021808014, 0.021832014, 0.021856056, 0.02188...</msg>
<status status="PASS" starttime="20201110 08:40:04.897" endtime="20201110 08:40:04.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.914" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:40:04.913" endtime="20201110 08:40:04.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.917" level="INFO">VALUE: [1.4694000000002594e-05, 1.4209000000001137e-05, 1.455499999999943e-05, 1.4778000000000013e-05, 1.4916999999999708e-05, 1.5111000000001679e-05, 1.483299999999882e-05, 1.4277999999999513e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.4193999999998624e-05, 1.4207999999998194e-05, 1.4666999999999458e-05, 1.509699999999864e-05, 1.4541999999999333e-05, 1.4903000000000138e-05, 1.4222999999997238e-05, 1.511099999999821e-05, 1.4541999999999333e-05, 1.5041999999999833e-05, 1.4680999999999028e-05, 1.4916999999999708e-05, 1.4569999999998473e-05, 1.4569999999998473e-05, 1.4778000000000013e-05, 1.5166000000000485e-05, 1.5098000000001582e-05, 1.4709000000001637e-05, 1.455499999999943e-05, 1.4151999999999915e-05, 1.4667000000002928e-05, 1.4695000000002068e-05, 1.4737000000000777e-05, 1.4737000000000777e-05, 1.4888000000001095e-05, 1.4888999999997099e-05, 1.4402000000000165e-05, 1.4305000000002649e-05, 1.4263999999999943e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4361000000000929e-05, 1.4639000000000318e-05, 1.4277999999999513e-05, 1.4500000000000624e-05, 1.5028000000000263e-05, 1.4472000000001484e-05, 1.4430999999998778e-05, 1.4429999999999304e-05, 1.4457999999998444e-05]</msg>
<status status="PASS" starttime="20201110 08:40:04.916" endtime="20201110 08:40:04.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.911" endtime="20201110 08:40:04.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.920" endtime="20201110 08:40:04.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:04.923" endtime="20201110 08:40:04.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.922" endtime="20201110 08:40:04.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.918" endtime="20201110 08:40:04.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.542" endtime="20201110 08:40:04.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.542" endtime="20201110 08:40:04.945"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.957" endtime="20201110 08:40:04.973"></status>
</kw>
<msg timestamp="20201110 08:40:04.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.955" endtime="20201110 08:40:04.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:04.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:04.975" endtime="20201110 08:40:04.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.978" endtime="20201110 08:40:04.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.951" endtime="20201110 08:40:04.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.948" endtime="20201110 08:40:04.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:04.987" endtime="20201110 08:40:05.285"></status>
</kw>
<msg timestamp="20201110 08:40:05.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:04.985" endtime="20201110 08:40:05.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024100375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024114792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.295" endtime="20201110 08:40:05.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.315" endtime="20201110 08:40:05.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.982" endtime="20201110 08:40:05.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.981" endtime="20201110 08:40:05.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.330" level="INFO">${RESULT} = [{'time': 0.024114792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.024137792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:05.322" endtime="20201110 08:40:05.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:05.355" level="INFO">${ACCURACY} = {'time': [0.024114792, 0.024137792, 0.024159792, 0.024182806, 0.024205792, 0.024229806, 0.024251819, 0.024275819, 0.024296806, 0.024320806, 0.024341819, 0.024363889, 0.024387819, 0.024409819, 0.024431...</msg>
<status status="PASS" starttime="20201110 08:40:05.332" endtime="20201110 08:40:05.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.360" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:40:05.358" endtime="20201110 08:40:05.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.362" level="INFO">VALUE: [1.4416999999999208e-05, 1.4334000000001262e-05, 1.4291999999999083e-05, 1.5055999999999403e-05, 1.4611000000001179e-05, 1.4916999999999708e-05, 1.4833000000002289e-05, 1.4943999999999374e-05, 1.4930999999999278e-05, 1.4195000000001567e-05, 1.4165999999999485e-05, 1.4305999999998653e-05, 1.4555000000002899e-05, 1.4165999999999485e-05, 1.5000000000001124e-05, 1.4971999999998514e-05, 1.5125000000001249e-05, 1.433299999999832e-05, 1.4443999999998874e-05, 1.4250000000000373e-05, 1.4179999999999054e-05, 1.4445000000001817e-05, 1.4943999999999374e-05, 1.4180999999998528e-05, 1.4665999999999985e-05, 1.434699999999789e-05, 1.4847000000001859e-05, 1.4389000000000068e-05, 1.4500000000000624e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.4389000000000068e-05, 1.4791999999999583e-05, 1.4652999999999888e-05, 1.4764000000000443e-05, 1.4819000000002719e-05, 1.4652999999999888e-05, 1.4166999999998958e-05, 1.5041999999999833e-05, 1.4138999999999818e-05, 1.461099999999771e-05, 1.4556000000002373e-05, 1.4222000000001234e-05, 1.4499999999997154e-05, 1.509699999999864e-05, 1.5125000000001249e-05, 1.4833999999998293e-05, 1.4527999999999763e-05, 1.4250000000000373e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201110 08:40:05.361" endtime="20201110 08:40:05.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.356" endtime="20201110 08:40:05.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.366" endtime="20201110 08:40:05.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:05.369" endtime="20201110 08:40:05.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.368" endtime="20201110 08:40:05.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.364" endtime="20201110 08:40:05.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.946" endtime="20201110 08:40:05.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.945" endtime="20201110 08:40:05.390"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.400" endtime="20201110 08:40:05.415"></status>
</kw>
<msg timestamp="20201110 08:40:05.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:05.398" endtime="20201110 08:40:05.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:05.417" endtime="20201110 08:40:05.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.419" endtime="20201110 08:40:05.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.395" endtime="20201110 08:40:05.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.393" endtime="20201110 08:40:05.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.429" endtime="20201110 08:40:05.714"></status>
</kw>
<msg timestamp="20201110 08:40:05.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.427" endtime="20201110 08:40:05.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020871625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.719" endtime="20201110 08:40:05.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.727" endtime="20201110 08:40:05.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.424" endtime="20201110 08:40:05.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.422" endtime="20201110 08:40:05.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.734" level="INFO">${RESULT} = [{'time': 0.020886653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5028000000000263e-05, 'source_diff': 1.5028000000000263e-05}, {'time': 0.020909653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:05.730" endtime="20201110 08:40:05.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:05.749" level="INFO">${ACCURACY} = {'time': [0.020886653, 0.020909653, 0.020931667, 0.020955667, 0.020977667, 0.021001694, 0.021025667, 0.021048681, 0.021072667, 0.021094681, 0.021117694, 0.021138681, 0.021163681, 0.021186694, 0.021207...</msg>
<status status="PASS" starttime="20201110 08:40:05.735" endtime="20201110 08:40:05.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.754" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:40:05.753" endtime="20201110 08:40:05.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.757" level="INFO">VALUE: [1.5028000000000263e-05, 1.4916999999999708e-05, 1.5055999999999403e-05, 1.4277999999999513e-05, 1.4819999999998723e-05, 1.4847000000001859e-05, 1.4361000000000929e-05, 1.5000000000001124e-05, 1.4194999999998098e-05, 1.5069999999998973e-05, 1.4943999999999374e-05, 1.4473000000000957e-05, 1.5125000000001249e-05, 1.4637999999997375e-05, 1.4402999999999638e-05, 1.4333000000001789e-05, 1.4430999999998778e-05, 1.5000000000001124e-05, 1.4165999999999485e-05, 1.4429999999999304e-05, 1.4165999999999485e-05, 1.4389000000000068e-05, 1.4333000000001789e-05, 1.4500000000000624e-05, 1.509699999999864e-05, 1.5138999999997349e-05, 1.454099999999986e-05, 1.4764000000000443e-05, 1.4277999999999513e-05, 1.4638999999996849e-05, 1.4778000000000013e-05, 1.430499999999918e-05, 1.4402999999999638e-05, 1.4833000000002289e-05, 1.4222000000001234e-05, 1.509699999999864e-05, 1.4735999999997834e-05, 1.4445000000001817e-05, 1.4943999999999374e-05, 1.4430999999998778e-05, 1.4263999999999943e-05, 1.4695000000002068e-05, 1.4861000000001429e-05, 1.4348000000000832e-05, 1.4181000000001998e-05, 1.477700000000054e-05, 1.4292000000002553e-05, 1.4916999999999708e-05, 1.4764000000000443e-05, 1.4694999999998598e-05]</msg>
<status status="PASS" starttime="20201110 08:40:05.755" endtime="20201110 08:40:05.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.750" endtime="20201110 08:40:05.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.760" endtime="20201110 08:40:05.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:05.763" endtime="20201110 08:40:05.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.762" endtime="20201110 08:40:05.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.758" endtime="20201110 08:40:05.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.391" endtime="20201110 08:40:05.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.391" endtime="20201110 08:40:05.785"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.797" endtime="20201110 08:40:05.813"></status>
</kw>
<msg timestamp="20201110 08:40:05.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:05.795" endtime="20201110 08:40:05.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:05.815" endtime="20201110 08:40:05.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.819" endtime="20201110 08:40:05.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.791" endtime="20201110 08:40:05.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.788" endtime="20201110 08:40:05.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.830" endtime="20201110 08:40:06.115"></status>
</kw>
<msg timestamp="20201110 08:40:06.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:05.828" endtime="20201110 08:40:06.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0246615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:06.120" endtime="20201110 08:40:06.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.128" endtime="20201110 08:40:06.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.826" endtime="20201110 08:40:06.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.824" endtime="20201110 08:40:06.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:06.135" level="INFO">${RESULT} = [{'time': 0.024675986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.024697986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:06.132" endtime="20201110 08:40:06.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:06.149" level="INFO">${ACCURACY} = {'time': [0.024675986, 0.024697986, 0.024719986, 0.024742986, 0.024765014, 0.024788986, 0.024812042, 0.024833, 0.024854014, 0.024878042, 0.024899, 0.024923, 0.024946028, 0.024970028, 0.024992014, 0.02...</msg>
<status status="PASS" starttime="20201110 08:40:06.136" endtime="20201110 08:40:06.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.154" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:40:06.153" endtime="20201110 08:40:06.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.156" level="INFO">VALUE: [1.4486000000001054e-05, 1.4944000000002844e-05, 1.4221999999997764e-05, 1.4403000000003108e-05, 1.4207999999998194e-05, 1.4360999999997459e-05, 1.4514000000000193e-05, 1.4111000000000679e-05, 1.4847000000001859e-05, 1.4958999999998418e-05, 1.4527999999999763e-05, 1.4861000000001429e-05, 1.434699999999789e-05, 1.5041999999999833e-05, 1.4486000000001054e-05, 1.4611000000001179e-05, 1.4723000000001207e-05, 1.4611000000001179e-05, 1.4889000000000568e-05, 1.4666999999999458e-05, 1.4180999999998528e-05, 1.430499999999918e-05, 1.4973000000001457e-05, 1.4598000000001082e-05, 1.4820000000002193e-05, 1.4556000000002373e-05, 1.4889000000000568e-05, 1.4972999999997988e-05, 1.4179999999999054e-05, 1.4848000000001332e-05, 1.5056000000002873e-05, 1.4652999999999888e-05, 1.4875000000000999e-05, 1.4888000000001095e-05, 1.451300000000072e-05, 1.459699999999814e-05, 1.4165999999999485e-05, 1.4693999999999124e-05, 1.4597000000001609e-05, 1.459699999999814e-05, 1.4250000000000373e-05, 1.5125000000001249e-05, 1.4263999999999943e-05, 1.4679999999999555e-05, 1.459699999999814e-05, 1.4569000000002469e-05, 1.4458000000001914e-05, 1.454099999999986e-05, 1.4874999999997529e-05, 1.4639000000000318e-05]</msg>
<status status="PASS" starttime="20201110 08:40:06.155" endtime="20201110 08:40:06.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.150" endtime="20201110 08:40:06.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.160" endtime="20201110 08:40:06.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:06.164" endtime="20201110 08:40:06.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.162" endtime="20201110 08:40:06.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.158" endtime="20201110 08:40:06.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.786" endtime="20201110 08:40:06.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.785" endtime="20201110 08:40:06.185"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.194" endtime="20201110 08:40:06.209"></status>
</kw>
<msg timestamp="20201110 08:40:06.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:06.192" endtime="20201110 08:40:06.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:06.210" endtime="20201110 08:40:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.213" endtime="20201110 08:40:06.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.190" endtime="20201110 08:40:06.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.188" endtime="20201110 08:40:06.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.222" endtime="20201110 08:40:06.508"></status>
</kw>
<msg timestamp="20201110 08:40:06.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:06.221" endtime="20201110 08:40:06.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:06.512" endtime="20201110 08:40:06.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.521" endtime="20201110 08:40:06.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.218" endtime="20201110 08:40:06.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.216" endtime="20201110 08:40:06.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:06.528" level="INFO">${RESULT} = [{'time': 0.0201945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.0202155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:06.524" endtime="20201110 08:40:06.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:06.542" level="INFO">${ACCURACY} = {'time': [0.0201945, 0.0202155, 0.0202375, 0.0202605, 0.0202815, 0.020304556, 0.020325514, 0.020346514, 0.020367514, 0.020390514, 0.020413542, 0.020434528, 0.020457514, 0.020480528, 0.020503528, 0.020...</msg>
<status status="PASS" starttime="20201110 08:40:06.529" endtime="20201110 08:40:06.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.547" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:40:06.545" endtime="20201110 08:40:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.549" level="INFO">VALUE: [1.4764000000000443e-05, 1.4375000000000498e-05, 1.4735999999997834e-05, 1.4583000000002039e-05, 1.4472000000001484e-05, 1.4612000000000652e-05, 1.4305999999998653e-05, 1.4652999999999888e-05, 1.4361000000000929e-05, 1.5041999999999833e-05, 1.4430999999998778e-05, 1.4611000000001179e-05, 1.508299999999907e-05, 1.4236000000000804e-05, 1.4209000000001137e-05, 1.4723000000001207e-05, 1.4347000000001359e-05, 1.4971999999998514e-05, 1.4555999999998903e-05, 1.4805999999999153e-05, 1.483299999999882e-05, 1.4666999999999458e-05, 1.4389000000000068e-05, 1.4389000000000068e-05, 1.4138000000000345e-05, 1.4223000000000707e-05, 1.4417000000002678e-05, 1.5112000000001152e-05, 1.5000000000001124e-05, 1.477700000000054e-05, 1.509699999999864e-05, 1.4151999999999915e-05, 1.504100000000036e-05, 1.4250000000000373e-05, 1.4957999999998944e-05, 1.4971999999998514e-05, 1.4361000000000929e-05, 1.4457999999998444e-05, 1.4736000000001304e-05, 1.4764000000000443e-05, 1.458299999999857e-05, 1.4778000000000013e-05, 1.4721999999998264e-05, 1.504100000000036e-05, 1.4693999999999124e-05, 1.4485999999997584e-05, 1.4889000000000568e-05, 1.455499999999943e-05, 1.4555999999998903e-05, 1.4943999999999374e-05]</msg>
<status status="PASS" starttime="20201110 08:40:06.548" endtime="20201110 08:40:06.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.543" endtime="20201110 08:40:06.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.553" endtime="20201110 08:40:06.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:06.557" endtime="20201110 08:40:06.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.555" endtime="20201110 08:40:06.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.551" endtime="20201110 08:40:06.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.186" endtime="20201110 08:40:06.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.185" endtime="20201110 08:40:06.578"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.587" endtime="20201110 08:40:06.602"></status>
</kw>
<msg timestamp="20201110 08:40:06.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:06.585" endtime="20201110 08:40:06.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:06.604" endtime="20201110 08:40:06.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.606" endtime="20201110 08:40:06.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.582" endtime="20201110 08:40:06.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.580" endtime="20201110 08:40:06.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.616" endtime="20201110 08:40:06.902"></status>
</kw>
<msg timestamp="20201110 08:40:06.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:06.614" endtime="20201110 08:40:06.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020608431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:06.907" endtime="20201110 08:40:06.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.916" endtime="20201110 08:40:06.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.611" endtime="20201110 08:40:06.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.610" endtime="20201110 08:40:06.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:06.923" level="INFO">${RESULT} = [{'time': 0.020622764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.020647764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:06.919" endtime="20201110 08:40:06.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:06.937" level="INFO">${ACCURACY} = {'time': [0.020622764, 0.020647764, 0.020669764, 0.020691778, 0.020714778, 0.020735792, 0.020758792, 0.020781778, 0.020804778, 0.020827792, 0.020849806, 0.020870819, 0.020892792, 0.020914806, 0.020937...</msg>
<status status="PASS" starttime="20201110 08:40:06.924" endtime="20201110 08:40:06.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.942" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:40:06.940" endtime="20201110 08:40:06.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.947" level="INFO">VALUE: [1.433299999999832e-05, 1.509699999999864e-05, 1.4277999999999513e-05, 1.4778000000000013e-05, 1.4222000000001234e-05, 1.4778000000000013e-05, 1.4167000000002428e-05, 1.4695000000002068e-05, 1.4209000000001137e-05, 1.4750000000000874e-05, 1.4736999999997308e-05, 1.480499999999968e-05, 1.5125000000001249e-05, 1.4541999999999333e-05, 1.4973000000001457e-05, 1.479100000000011e-05, 1.4486999999997058e-05, 1.509699999999864e-05, 1.4973000000001457e-05, 1.4987000000001027e-05, 1.4179999999999054e-05, 1.4485999999997584e-05, 1.4639000000000318e-05, 1.4736000000001304e-05, 1.4665999999999985e-05, 1.4458000000001914e-05, 1.4402999999999638e-05, 1.505499999999993e-05, 1.480499999999968e-05, 1.4305000000002649e-05, 1.5014000000000693e-05, 1.4889000000000568e-05, 1.4971999999998514e-05, 1.4721999999998264e-05, 1.4943999999999374e-05, 1.480499999999968e-05, 1.4471999999998014e-05, 1.4361000000000929e-05, 1.4347000000001359e-05, 1.4207999999998194e-05, 1.5041999999999833e-05, 1.4263999999999943e-05, 1.5055999999999403e-05, 1.4986000000001554e-05, 1.4764000000000443e-05, 1.4735999999997834e-05, 1.4903000000000138e-05, 1.4375000000000498e-05, 1.4833999999998293e-05, 1.4930999999999278e-05]</msg>
<status status="PASS" starttime="20201110 08:40:06.944" endtime="20201110 08:40:06.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.938" endtime="20201110 08:40:06.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.953" endtime="20201110 08:40:06.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:06.959" endtime="20201110 08:40:06.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.956" endtime="20201110 08:40:06.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.950" endtime="20201110 08:40:06.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.579" endtime="20201110 08:40:06.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.578" endtime="20201110 08:40:06.980"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.990" endtime="20201110 08:40:07.005"></status>
</kw>
<msg timestamp="20201110 08:40:07.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:06.988" endtime="20201110 08:40:07.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:07.006" endtime="20201110 08:40:07.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.009" endtime="20201110 08:40:07.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.985" endtime="20201110 08:40:07.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.983" endtime="20201110 08:40:07.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.018" endtime="20201110 08:40:07.305"></status>
</kw>
<msg timestamp="20201110 08:40:07.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.017" endtime="20201110 08:40:07.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020696542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.310" endtime="20201110 08:40:07.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.318" endtime="20201110 08:40:07.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.014" endtime="20201110 08:40:07.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.012" endtime="20201110 08:40:07.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:07.325" level="INFO">${RESULT} = [{'time': 0.020711333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.479100000000011e-05, 'source_diff': 1.479100000000011e-05}, {'time': 0.020733319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:07.321" endtime="20201110 08:40:07.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:07.340" level="INFO">${ACCURACY} = {'time': [0.020711333, 0.020733319, 0.020756333, 0.020781347, 0.020803333, 0.020825347, 0.020846333, 0.020869417, 0.020893361, 0.020916347, 0.020939347, 0.020963361, 0.020985361, 0.021010347, 0.021031...</msg>
<status status="PASS" starttime="20201110 08:40:07.326" endtime="20201110 08:40:07.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.345" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:40:07.344" endtime="20201110 08:40:07.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.347" level="INFO">VALUE: [1.479100000000011e-05, 1.4375000000000498e-05, 1.505499999999993e-05, 1.5152999999996919e-05, 1.452700000000029e-05, 1.4402999999999638e-05, 1.4694000000002594e-05, 1.4652999999999888e-05, 1.4221999999997764e-05, 1.4263999999999943e-05, 1.5111000000001679e-05, 1.5125000000001249e-05, 1.4666999999999458e-05, 1.5124999999997779e-05, 1.4166999999998958e-05, 1.4500000000000624e-05, 1.4473000000000957e-05, 1.4263999999999943e-05, 1.4944999999998848e-05, 1.4667000000002928e-05, 1.4291999999999083e-05, 1.4458000000001914e-05, 1.4638999999996849e-05, 1.4347000000001359e-05, 1.4541999999999333e-05, 1.4277999999999513e-05, 1.508299999999907e-05, 1.4653000000003358e-05, 1.4639000000000318e-05, 1.4305999999998653e-05, 1.4416999999999208e-05, 1.4652999999999888e-05, 1.4889000000000568e-05, 1.4236000000000804e-05, 1.4306000000002123e-05, 1.4584000000001512e-05, 1.4486000000001054e-05, 1.4471999999998014e-05, 1.5014000000000693e-05, 1.4444999999998348e-05, 1.4736999999997308e-05, 1.4625000000000749e-05, 1.4223000000000707e-05, 1.5028000000000263e-05, 1.4972999999997988e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.4486000000001054e-05, 1.458299999999857e-05, 1.431899999999875e-05]</msg>
<status status="PASS" starttime="20201110 08:40:07.346" endtime="20201110 08:40:07.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.341" endtime="20201110 08:40:07.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.351" endtime="20201110 08:40:07.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:07.355" endtime="20201110 08:40:07.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.353" endtime="20201110 08:40:07.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.349" endtime="20201110 08:40:07.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.981" endtime="20201110 08:40:07.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.981" endtime="20201110 08:40:07.376"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.385" endtime="20201110 08:40:07.401"></status>
</kw>
<msg timestamp="20201110 08:40:07.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:07.383" endtime="20201110 08:40:07.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:07.403" endtime="20201110 08:40:07.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.405" endtime="20201110 08:40:07.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.381" endtime="20201110 08:40:07.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.378" endtime="20201110 08:40:07.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.415" endtime="20201110 08:40:07.703"></status>
</kw>
<msg timestamp="20201110 08:40:07.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020741139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.413" endtime="20201110 08:40:07.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020741139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.708" endtime="20201110 08:40:07.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.716" endtime="20201110 08:40:07.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.411" endtime="20201110 08:40:07.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.409" endtime="20201110 08:40:07.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:07.723" level="INFO">${RESULT} = [{'time': 0.020741139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.020762139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:07.720" endtime="20201110 08:40:07.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:07.737" level="INFO">${ACCURACY} = {'time': [0.020741139, 0.020762139, 0.020787153, 0.020809167, 0.020833167, 0.020856167, 0.020878167, 0.020902153, 0.020926153, 0.020950194, 0.020971181, 0.020993167, 0.021016194, 0.021037181, 0.021061...</msg>
<status status="PASS" starttime="20201110 08:40:07.724" endtime="20201110 08:40:07.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.742" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:40:07.740" endtime="20201110 08:40:07.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.744" level="INFO">VALUE: [1.4416999999999208e-05, 1.4930999999999278e-05, 1.5153000000000388e-05, 1.4958999999998418e-05, 1.5083999999998543e-05, 1.4708999999998168e-05, 1.4236000000000804e-05, 1.459699999999814e-05, 1.4319999999998223e-05, 1.4693999999999124e-05, 1.4389000000000068e-05, 1.5098000000001582e-05, 1.4971999999998514e-05, 1.4237000000000277e-05, 1.5014000000000693e-05, 1.4708999999998168e-05, 1.505499999999993e-05, 1.4985999999998084e-05, 1.4833999999998293e-05, 1.4431000000002248e-05, 1.4222000000001234e-05, 1.4431000000002248e-05, 1.4402000000000165e-05, 1.4361000000000929e-05, 1.451299999999725e-05, 1.4402999999999638e-05, 1.4957999999998944e-05, 1.4861000000001429e-05, 1.4875000000000999e-05, 1.452700000000029e-05, 1.4402999999999638e-05, 1.4693999999999124e-05, 1.508299999999907e-05, 1.4679999999999555e-05, 1.4263999999999943e-05, 1.4402999999999638e-05, 1.4541999999999333e-05, 1.4653000000003358e-05, 1.4556000000002373e-05, 1.4499999999997154e-05, 1.511099999999821e-05, 1.5056000000002873e-05, 1.4583000000002039e-05, 1.4527999999999763e-05, 1.4402999999999638e-05, 1.5014000000000693e-05, 1.4707999999998694e-05, 1.4458000000001914e-05, 1.4874999999997529e-05, 1.4735999999997834e-05]</msg>
<status status="PASS" starttime="20201110 08:40:07.743" endtime="20201110 08:40:07.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.738" endtime="20201110 08:40:07.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.748" endtime="20201110 08:40:07.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:07.752" endtime="20201110 08:40:07.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.750" endtime="20201110 08:40:07.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.746" endtime="20201110 08:40:07.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.377" endtime="20201110 08:40:07.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.376" endtime="20201110 08:40:07.773"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.782" endtime="20201110 08:40:07.796"></status>
</kw>
<msg timestamp="20201110 08:40:07.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:07.780" endtime="20201110 08:40:07.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:07.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:07.798" endtime="20201110 08:40:07.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.800" endtime="20201110 08:40:07.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.777" endtime="20201110 08:40:07.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.775" endtime="20201110 08:40:07.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:07.810" endtime="20201110 08:40:08.097"></status>
</kw>
<msg timestamp="20201110 08:40:08.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:07.808" endtime="20201110 08:40:08.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020730208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.101" endtime="20201110 08:40:08.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.110" endtime="20201110 08:40:08.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.806" endtime="20201110 08:40:08.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.804" endtime="20201110 08:40:08.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.117" level="INFO">${RESULT} = [{'time': 0.020744292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4084000000001012e-05, 'source_diff': 1.4084000000001012e-05}, {'time': 0.020765278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:08.113" endtime="20201110 08:40:08.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:08.131" level="INFO">${ACCURACY} = {'time': [0.020744292, 0.020765278, 0.020787292, 0.020809306, 0.020831319, 0.020852333, 0.020875306, 0.020897306, 0.020920306, 0.020943319, 0.020968333, 0.020989319, 0.021012319, 0.021033333, 0.021056...</msg>
<status status="PASS" starttime="20201110 08:40:08.118" endtime="20201110 08:40:08.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.136" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:40:08.134" endtime="20201110 08:40:08.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.138" level="INFO">VALUE: [1.4084000000001012e-05, 1.4263999999999943e-05, 1.4333999999997793e-05, 1.4555999999998903e-05, 1.4180000000002524e-05, 1.4444000000002344e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.4930999999999278e-05, 1.483299999999882e-05, 1.511099999999821e-05, 1.4471999999998014e-05, 1.4708000000002164e-05, 1.4486000000001054e-05, 1.4916000000000235e-05, 1.4929999999999805e-05, 1.47629999999975e-05, 1.50689999999995e-05, 1.4415999999999735e-05, 1.504100000000036e-05, 1.508299999999907e-05, 1.4485999999997584e-05, 1.4735999999997834e-05, 1.4736000000001304e-05, 1.4541999999999333e-05, 1.4903000000000138e-05, 1.4375000000000498e-05, 1.5000000000001124e-05, 1.4250000000000373e-05, 1.4652999999999888e-05, 1.4291999999999083e-05, 1.4389000000000068e-05, 1.481899999999925e-05, 1.508299999999907e-05, 1.4263999999999943e-05, 1.4971999999998514e-05, 1.4819999999998723e-05, 1.4542000000002803e-05, 1.4693999999999124e-05, 1.4277999999999513e-05, 1.4806000000002623e-05, 1.4277999999999513e-05, 1.4875000000000999e-05, 1.4889000000000568e-05, 1.4263999999999943e-05, 1.4639000000000318e-05, 1.4764000000000443e-05, 1.4459000000001387e-05, 1.5070000000002443e-05, 1.4805999999999153e-05]</msg>
<status status="PASS" starttime="20201110 08:40:08.137" endtime="20201110 08:40:08.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.132" endtime="20201110 08:40:08.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.142" endtime="20201110 08:40:08.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:08.146" endtime="20201110 08:40:08.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.144" endtime="20201110 08:40:08.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.140" endtime="20201110 08:40:08.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.773" endtime="20201110 08:40:08.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:07.773" endtime="20201110 08:40:08.167"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.176" endtime="20201110 08:40:08.192"></status>
</kw>
<msg timestamp="20201110 08:40:08.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.174" endtime="20201110 08:40:08.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.193" endtime="20201110 08:40:08.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.196" endtime="20201110 08:40:08.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.171" endtime="20201110 08:40:08.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.169" endtime="20201110 08:40:08.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.205" endtime="20201110 08:40:08.493"></status>
</kw>
<msg timestamp="20201110 08:40:08.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020826361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.204" endtime="20201110 08:40:08.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020826361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.497" endtime="20201110 08:40:08.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.505" endtime="20201110 08:40:08.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.201" endtime="20201110 08:40:08.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.199" endtime="20201110 08:40:08.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.512" level="INFO">${RESULT} = [{'time': 0.020826361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.534700000000236e-05, 'source_diff': 1.534700000000236e-05}, {'time': 0.020851389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:08.509" endtime="20201110 08:40:08.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:08.526" level="INFO">${ACCURACY} = {'time': [0.020826361, 0.020851389, 0.020875361, 0.020898417, 0.020920361, 0.020943361, 0.020966361, 0.020991361, 0.021016375, 0.021038361, 0.021061361, 0.021085389, 0.021108389, 0.021131375, 0.021153...</msg>
<status status="PASS" starttime="20201110 08:40:08.513" endtime="20201110 08:40:08.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.531" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:40:08.530" endtime="20201110 08:40:08.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.533" level="INFO">VALUE: [1.534700000000236e-05, 1.566700000000046e-05, 1.5527999999997294e-05, 1.612499999999878e-05, 1.5249999999997904e-05, 1.5486000000002054e-05, 1.565300000000089e-05, 1.561099999999871e-05, 1.5569e-05, 1.541700000000021e-05, 1.5694000000000125e-05, 1.583299999999982e-05, 1.5181000000002998e-05, 1.562500000000175e-05, 1.5694000000000125e-05, 1.536099999999846e-05, 1.5750000000001874e-05, 1.609699999999964e-05, 1.5819999999999723e-05, 1.5792000000000583e-05, 1.5181000000002998e-05, 1.5721999999999264e-05, 1.5250000000001374e-05, 1.563899999999785e-05, 1.5583999999999043e-05, 1.5459000000002387e-05, 1.561100000000218e-05, 1.5485999999998584e-05, 1.613900000000182e-05, 1.562499999999828e-05, 1.5528000000000763e-05, 1.5458000000002914e-05, 1.5916000000001235e-05, 1.5833999999999293e-05, 1.5694999999999598e-05, 1.5458000000002914e-05, 1.5861999999998433e-05, 1.586099999999896e-05, 1.526300000000147e-05, 1.5416000000000735e-05, 1.601299999999875e-05, 1.5763999999997974e-05, 1.5471999999999014e-05, 1.5666000000000985e-05, 1.5471999999999014e-05, 1.534699999999889e-05, 1.533299999999932e-05, 1.5193999999999624e-05, 1.5485999999998584e-05, 1.5180000000000055e-05]</msg>
<status status="PASS" starttime="20201110 08:40:08.532" endtime="20201110 08:40:08.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.527" endtime="20201110 08:40:08.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.537" endtime="20201110 08:40:08.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:08.541" endtime="20201110 08:40:08.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.539" endtime="20201110 08:40:08.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.536" endtime="20201110 08:40:08.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.168" endtime="20201110 08:40:08.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.167" endtime="20201110 08:40:08.562"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.571" endtime="20201110 08:40:08.586"></status>
</kw>
<msg timestamp="20201110 08:40:08.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.570" endtime="20201110 08:40:08.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.587" endtime="20201110 08:40:08.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.590" endtime="20201110 08:40:08.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.567" endtime="20201110 08:40:08.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.565" endtime="20201110 08:40:08.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.599" endtime="20201110 08:40:08.887"></status>
</kw>
<msg timestamp="20201110 08:40:08.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.598" endtime="20201110 08:40:08.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.891" endtime="20201110 08:40:08.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.900" endtime="20201110 08:40:08.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.595" endtime="20201110 08:40:08.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.593" endtime="20201110 08:40:08.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.907" level="INFO">${RESULT} = [{'time': 0.020273986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6792000000001583e-05, 'source_diff': 1.6792000000001583e-05}, {'time': 0.020298972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:08.903" endtime="20201110 08:40:08.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:08.922" level="INFO">${ACCURACY} = {'time': [0.020273986, 0.020298972, 0.020323972, 0.020349972, 0.020375, 0.020398986, 0.020426028, 0.020450986, 0.020475042, 0.020501, 0.020526, 0.020551083, 0.020575014, 0.020601014, 0.020627014, 0.02...</msg>
<status status="PASS" starttime="20201110 08:40:08.908" endtime="20201110 08:40:08.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.927" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:40:08.926" endtime="20201110 08:40:08.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.929" level="INFO">VALUE: [1.6792000000001583e-05, 1.640299999999817e-05, 1.6277999999998044e-05, 1.709700000000064e-05, 1.616700000000096e-05, 1.6694000000001125e-05, 1.716699999999849e-05, 1.711100000000021e-05, 1.6819999999997254e-05, 1.7027999999998794e-05, 1.6999999999999654e-05, 1.688900000000257e-05, 1.683300000000082e-05, 1.6221999999999764e-05, 1.637499999999903e-05, 1.6735999999999834e-05, 1.6708000000000695e-05, 1.6235999999999334e-05, 1.6458999999999918e-05, 1.6445000000000348e-05, 1.640300000000164e-05, 1.63889999999986e-05, 1.6249999999998904e-05, 1.638900000000207e-05, 1.6722999999999738e-05, 1.690299999999867e-05, 1.663900000000232e-05, 1.644499999999688e-05, 1.7000000000003124e-05, 1.6194000000000625e-05, 1.7056000000001403e-05, 1.6513999999998724e-05, 1.684700000000039e-05, 1.641700000000121e-05, 1.686099999999996e-05, 1.6235999999999334e-05, 1.6250000000002374e-05, 1.6875000000003e-05, 1.652700000000229e-05, 1.6443999999997405e-05, 1.711100000000021e-05, 1.6401999999998695e-05, 1.7013999999999224e-05, 1.68889999999991e-05, 1.715299999999892e-05, 1.6249999999998904e-05, 1.662499999999928e-05, 1.633300000000032e-05, 1.683300000000082e-05, 1.636100000000293e-05]</msg>
<status status="PASS" starttime="20201110 08:40:08.928" endtime="20201110 08:40:08.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.923" endtime="20201110 08:40:08.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.933" endtime="20201110 08:40:08.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:08.937" endtime="20201110 08:40:08.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.935" endtime="20201110 08:40:08.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.931" endtime="20201110 08:40:08.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.563" endtime="20201110 08:40:08.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.562" endtime="20201110 08:40:08.958"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.967" endtime="20201110 08:40:08.983"></status>
</kw>
<msg timestamp="20201110 08:40:08.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.965" endtime="20201110 08:40:08.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:08.984" endtime="20201110 08:40:08.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.987" endtime="20201110 08:40:08.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.962" endtime="20201110 08:40:08.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.960" endtime="20201110 08:40:08.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.996" endtime="20201110 08:40:09.282"></status>
</kw>
<msg timestamp="20201110 08:40:09.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020932222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.995" endtime="20201110 08:40:09.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020932222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020950278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:09.287" endtime="20201110 08:40:09.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.295" endtime="20201110 08:40:09.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.992" endtime="20201110 08:40:09.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.990" endtime="20201110 08:40:09.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:09.302" level="INFO">${RESULT} = [{'time': 0.020950278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8055999999998934e-05, 'source_diff': 1.8055999999998934e-05}, {'time': 0.020974278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:09.299" endtime="20201110 08:40:09.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:09.316" level="INFO">${ACCURACY} = {'time': [0.020950278, 0.020974278, 0.021000292, 0.021024306, 0.021050292, 0.021077292, 0.021102319, 0.021126319, 0.021150347, 0.021175306, 0.021201306, 0.021228319, 0.021254319, 0.021278347, 0.021304...</msg>
<status status="PASS" starttime="20201110 08:40:09.303" endtime="20201110 08:40:09.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.321" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:40:09.320" endtime="20201110 08:40:09.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.323" level="INFO">VALUE: [1.8055999999998934e-05, 1.7471999999997545e-05, 1.787500000000053e-05, 1.737500000000003e-05, 1.793100000000228e-05, 1.737500000000003e-05, 1.752699999999982e-05, 1.7458000000001445e-05, 1.73889999999996e-05, 1.740300000000264e-05, 1.7750000000000404e-05, 1.7165999999999015e-05, 1.777700000000007e-05, 1.7500000000000154e-05, 1.730500000000218e-05, 1.802700000000032e-05, 1.80829999999986e-05, 1.7500000000000154e-05, 1.7194000000001625e-05, 1.762499999999681e-05, 1.781899999999878e-05, 1.8000000000000654e-05, 1.765299999999942e-05, 1.7750000000000404e-05, 1.813900000000035e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7193999999998155e-05, 1.7194000000001625e-05, 1.7235999999996865e-05, 1.718100000000153e-05, 1.7472000000001014e-05, 1.716700000000196e-05, 1.78890000000001e-05, 1.7306000000001653e-05, 1.787500000000053e-05, 1.809700000000164e-05, 1.7459000000000918e-05, 1.779099999999964e-05, 1.8027999999999794e-05, 1.73889999999996e-05, 1.7486000000000584e-05, 1.7459000000000918e-05, 1.736100000000046e-05, 1.7264000000002944e-05, 1.7986000000001084e-05, 1.741699999999874e-05, 1.7223000000000238e-05, 1.7486000000000584e-05, 1.7459000000000918e-05]</msg>
<status status="PASS" starttime="20201110 08:40:09.322" endtime="20201110 08:40:09.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.317" endtime="20201110 08:40:09.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.327" endtime="20201110 08:40:09.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:09.331" endtime="20201110 08:40:09.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.329" endtime="20201110 08:40:09.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.326" endtime="20201110 08:40:09.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.959" endtime="20201110 08:40:09.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.958" endtime="20201110 08:40:09.352"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.361" endtime="20201110 08:40:09.376"></status>
</kw>
<msg timestamp="20201110 08:40:09.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:09.360" endtime="20201110 08:40:09.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:09.378" endtime="20201110 08:40:09.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.380" endtime="20201110 08:40:09.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.357" endtime="20201110 08:40:09.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.355" endtime="20201110 08:40:09.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.390" endtime="20201110 08:40:09.678"></status>
</kw>
<msg timestamp="20201110 08:40:09.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:09.388" endtime="20201110 08:40:09.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020579556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:09.683" endtime="20201110 08:40:09.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.691" endtime="20201110 08:40:09.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.386" endtime="20201110 08:40:09.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.384" endtime="20201110 08:40:09.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:09.698" level="INFO">${RESULT} = [{'time': 0.020579556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8499999999997685e-05, 'source_diff': 1.8499999999997685e-05}, {'time': 0.020607569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:09.695" endtime="20201110 08:40:09.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:09.712" level="INFO">${ACCURACY} = {'time': [0.020579556, 0.020607569, 0.020633556, 0.020660556, 0.020686569, 0.020714569, 0.020741583, 0.020769569, 0.020794569, 0.020820583, 0.020848583, 0.020874583, 0.020899583, 0.020927583, 0.020953...</msg>
<status status="PASS" starttime="20201110 08:40:09.699" endtime="20201110 08:40:09.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.717" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:40:09.716" endtime="20201110 08:40:09.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.719" level="INFO">VALUE: [1.8499999999997685e-05, 1.902699999999785e-05, 1.8362000000000933e-05, 1.869499999999913e-05, 1.8929999999996866e-05, 1.8193999999999155e-05, 1.8416000000000265e-05, 1.909700000000264e-05, 1.8249999999997435e-05, 1.884699999999892e-05, 1.8986000000002085e-05, 1.887499999999806e-05, 1.8707999999999225e-05, 1.836099999999799e-05, 1.9083999999999074e-05, 1.92089999999992e-05, 1.915300000000092e-05, 1.8291999999999614e-05, 1.8250000000000904e-05, 1.913900000000135e-05, 1.862500000000128e-05, 1.8528000000000294e-05, 1.8250000000000904e-05, 1.883299999999935e-05, 1.891700000000024e-05, 1.841699999999974e-05, 1.883299999999935e-05, 1.8514000000000724e-05, 1.861099999999824e-05, 1.83890000000006e-05, 1.844499999999888e-05, 1.893099999999981e-05, 1.8764000000000974e-05, 1.863900000000085e-05, 1.8583999999998574e-05, 1.8555999999999434e-05, 1.9098000000002113e-05, 1.8555999999999434e-05, 1.891700000000024e-05, 1.8347999999997894e-05, 1.854100000000039e-05, 1.8737000000001308e-05, 1.912499999999831e-05, 1.83890000000006e-05, 1.8485999999998115e-05, 1.8152000000000446e-05, 1.879100000000064e-05, 1.8985999999998615e-05, 1.906900000000003e-05, 1.855499999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:40:09.718" endtime="20201110 08:40:09.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.713" endtime="20201110 08:40:09.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.728" endtime="20201110 08:40:09.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:09.731" endtime="20201110 08:40:09.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.730" endtime="20201110 08:40:09.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.726" endtime="20201110 08:40:09.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.353" endtime="20201110 08:40:09.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.352" endtime="20201110 08:40:09.753"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.762" endtime="20201110 08:40:09.778"></status>
</kw>
<msg timestamp="20201110 08:40:09.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:09.760" endtime="20201110 08:40:09.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:09.779" endtime="20201110 08:40:09.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.782" endtime="20201110 08:40:09.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.758" endtime="20201110 08:40:09.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.755" endtime="20201110 08:40:09.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.791" endtime="20201110 08:40:10.084"></status>
</kw>
<msg timestamp="20201110 08:40:10.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:09.790" endtime="20201110 08:40:10.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:10.089" endtime="20201110 08:40:10.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.098" endtime="20201110 08:40:10.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.787" endtime="20201110 08:40:10.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.785" endtime="20201110 08:40:10.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:10.107" level="INFO">${RESULT} = [{'time': 0.020436958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9514000000001724e-05, 'source_diff': 1.9514000000001724e-05}, {'time': 0.020463944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:10.103" endtime="20201110 08:40:10.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:10.122" level="INFO">${ACCURACY} = {'time': [0.020436958, 0.020463944, 0.020491958, 0.020518958, 0.020545, 0.020570972, 0.020597972, 0.020625958, 0.020654958, 0.020680972, 0.020709972, 0.020737972, 0.020765972, 0.020793986, 0.020821986...</msg>
<status status="PASS" starttime="20201110 08:40:10.108" endtime="20201110 08:40:10.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.128" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:40:10.126" endtime="20201110 08:40:10.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.132" level="INFO">VALUE: [1.9514000000001724e-05, 1.9888000000002626e-05, 1.9514000000001724e-05, 1.934699999999942e-05, 1.9528000000001294e-05, 1.931900000000028e-05, 1.9513999999998255e-05, 1.984699999999992e-05, 1.913900000000135e-05, 1.9180000000000585e-05, 1.9221999999999295e-05, 1.959699999999967e-05, 1.9680000000001086e-05, 1.987499999999906e-05, 1.956900000000053e-05, 1.9278000000001044e-05, 1.991700000000124e-05, 1.962500000000228e-05, 1.9236000000002335e-05, 1.965300000000142e-05, 1.947300000000249e-05, 1.9278000000001044e-05, 1.9485999999999115e-05, 2.009700000000017e-05, 1.9485999999999115e-05, 1.961100000000271e-05, 2.0056000000000934e-05, 1.9542000000000864e-05, 1.936100000000246e-05, 1.9805999999997215e-05, 1.9528000000001294e-05, 1.9334000000002793e-05, 1.9570000000000004e-05, 1.9319999999999754e-05, 1.952700000000182e-05, 1.9763999999998505e-05, 1.963899999999838e-05, 1.95830000000001e-05, 1.9527999999997825e-05, 1.9679999999997616e-05, 1.986099999999949e-05, 1.9500000000002154e-05, 1.93890000000016e-05, 1.9930000000001336e-05, 1.9999999999999185e-05, 1.962500000000228e-05, 1.9556000000000434e-05, 1.9694000000000655e-05, 1.9999999999999185e-05, 2.0070000000000504e-05]</msg>
<status status="PASS" starttime="20201110 08:40:10.130" endtime="20201110 08:40:10.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.123" endtime="20201110 08:40:10.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.136" endtime="20201110 08:40:10.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:10.140" endtime="20201110 08:40:10.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.138" endtime="20201110 08:40:10.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.134" endtime="20201110 08:40:10.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.753" endtime="20201110 08:40:10.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.753" endtime="20201110 08:40:10.162"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.173" endtime="20201110 08:40:10.188"></status>
</kw>
<msg timestamp="20201110 08:40:10.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.171" endtime="20201110 08:40:10.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.190" endtime="20201110 08:40:10.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.193" endtime="20201110 08:40:10.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.168" endtime="20201110 08:40:10.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.165" endtime="20201110 08:40:10.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.205" endtime="20201110 08:40:10.494"></status>
</kw>
<msg timestamp="20201110 08:40:10.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:10.203" endtime="20201110 08:40:10.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:10.499" endtime="20201110 08:40:10.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.507" endtime="20201110 08:40:10.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.200" endtime="20201110 08:40:10.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.198" endtime="20201110 08:40:10.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:10.514" level="INFO">${RESULT} = [{'time': 0.022950611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.041699999999827e-05, 'source_diff': 2.041699999999827e-05}, {'time': 0.022977625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:10.511" endtime="20201110 08:40:10.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:10.529" level="INFO">${ACCURACY} = {'time': [0.022950611, 0.022977625, 0.023006639, 0.023036653, 0.023066625, 0.023094625, 0.023123639, 0.023152639, 0.023181639, 0.023211639, 0.023239653, 0.023268681, 0.023295667, 0.023323667, 0.023352...</msg>
<status status="PASS" starttime="20201110 08:40:10.515" endtime="20201110 08:40:10.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.534" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:40:10.533" endtime="20201110 08:40:10.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.537" level="INFO">VALUE: [2.041699999999827e-05, 2.065300000000242e-05, 2.087500000000006e-05, 2.0834000000000824e-05, 2.088899999999963e-05, 2.0292000000001614e-05, 2.033300000000085e-05, 2.088899999999963e-05, 2.0458000000000975e-05, 2.0263999999999005e-05, 2.086100000000049e-05, 2.0834000000000824e-05, 2.0334000000000324e-05, 2.095900000000095e-05, 2.1027999999999325e-05, 2.033300000000085e-05, 2.0777999999999075e-05, 2.0971999999997576e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.0472000000000545e-05, 2.0194000000001155e-05, 2.0834000000000824e-05, 2.0221999999996826e-05, 2.0930000000002336e-05, 2.084699999999745e-05, 2.03890000000026e-05, 2.0443999999997936e-05, 2.0944000000001906e-05, 2.027700000000257e-05, 2.0763999999999505e-05, 2.054099999999892e-05, 2.034700000000042e-05, 2.0693999999998186e-05, 2.0555999999997965e-05, 2.0736000000000365e-05, 2.1000000000000185e-05, 2.037499999999956e-05, 2.0222000000000295e-05, 2.033299999999738e-05, 2.0527999999998825e-05, 2.0541999999998395e-05, 2.0235999999999865e-05, 2.10969999999977e-05, 2.033300000000085e-05, 2.04029999999987e-05, 2.062499999999981e-05, 2.034700000000042e-05, 2.062500000000328e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201110 08:40:10.535" endtime="20201110 08:40:10.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.530" endtime="20201110 08:40:10.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.541" endtime="20201110 08:40:10.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:10.544" endtime="20201110 08:40:10.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.543" endtime="20201110 08:40:10.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.539" endtime="20201110 08:40:10.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.163" endtime="20201110 08:40:10.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.162" endtime="20201110 08:40:10.565"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.574" endtime="20201110 08:40:10.589"></status>
</kw>
<msg timestamp="20201110 08:40:10.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.573" endtime="20201110 08:40:10.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.590" endtime="20201110 08:40:10.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.593" endtime="20201110 08:40:10.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.570" endtime="20201110 08:40:10.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.568" endtime="20201110 08:40:10.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.602" endtime="20201110 08:40:10.890"></status>
</kw>
<msg timestamp="20201110 08:40:10.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:40:10.601" endtime="20201110 08:40:10.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:40:10.895" endtime="20201110 08:40:10.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.903" endtime="20201110 08:40:10.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.598" endtime="20201110 08:40:10.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.596" endtime="20201110 08:40:10.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:10.910" level="INFO">${RESULT} = [{'time': 0.020216, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.020245028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:40:10.906" endtime="20201110 08:40:10.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:10.924" level="INFO">${ACCURACY} = {'time': [0.020216, 0.020245028, 0.020276028, 0.020306, 0.020335014, 0.020366028, 0.020394042, 0.020424028, 0.020453028, 0.020481028, 0.020510042, 0.020541042, 0.020571083, 0.020600056, 0.020629083, 0...</msg>
<status status="PASS" starttime="20201110 08:40:10.911" endtime="20201110 08:40:10.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.929" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:40:10.927" endtime="20201110 08:40:10.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.931" level="INFO">VALUE: [2.1722000000001795e-05, 2.118100000000206e-05, 2.12090000000012e-05, 2.2014000000000755e-05, 2.118099999999859e-05, 2.2000000000001185e-05, 2.1264000000000005e-05, 2.1291999999999145e-05, 2.1514000000000255e-05, 2.1471999999998076e-05, 2.1250000000000435e-05, 2.166699999999952e-05, 2.1500000000000685e-05, 2.1305999999998715e-05, 2.1500000000000685e-05, 2.1334000000001324e-05, 2.1458000000001975e-05, 2.116699999999902e-05, 2.1264000000000005e-05, 2.183299999999888e-05, 2.134699999999795e-05, 2.163900000000038e-05, 2.134699999999795e-05, 2.1652000000000476e-05, 2.1458000000001975e-05, 2.188900000000063e-05, 2.1652000000000476e-05, 2.1458000000001975e-05, 2.137500000000056e-05, 2.2000000000001185e-05, 2.165299999999995e-05, 2.1722000000001795e-05, 2.115299999999945e-05, 2.1666000000000046e-05, 2.1693999999999186e-05, 2.131899999999881e-05, 2.215300000000045e-05, 2.1429999999999366e-05, 2.1750000000000935e-05, 2.14029999999997e-05, 2.1250000000000435e-05, 2.168100000000256e-05, 2.193099999999934e-05, 2.169499999999866e-05, 2.195900000000195e-05, 2.162499999999734e-05, 2.136100000000099e-05, 2.1334000000001324e-05, 2.116699999999902e-05, 2.1236000000000865e-05]</msg>
<status status="PASS" starttime="20201110 08:40:10.930" endtime="20201110 08:40:10.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.925" endtime="20201110 08:40:10.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.935" endtime="20201110 08:40:10.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:10.938" endtime="20201110 08:40:10.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.937" endtime="20201110 08:40:10.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.933" endtime="20201110 08:40:10.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.566" endtime="20201110 08:40:10.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.566" endtime="20201110 08:40:10.960"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.969" endtime="20201110 08:40:10.983"></status>
</kw>
<msg timestamp="20201110 08:40:10.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.967" endtime="20201110 08:40:10.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:10.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:10.985" endtime="20201110 08:40:10.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.987" endtime="20201110 08:40:10.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.964" endtime="20201110 08:40:10.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.962" endtime="20201110 08:40:10.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:10.997" endtime="20201110 08:40:11.284"></status>
</kw>
<msg timestamp="20201110 08:40:11.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:10.995" endtime="20201110 08:40:11.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:11.289" endtime="20201110 08:40:11.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.297" endtime="20201110 08:40:11.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.992" endtime="20201110 08:40:11.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.991" endtime="20201110 08:40:11.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.304" level="INFO">${RESULT} = [{'time': 0.020731514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3013999999998286e-05, 'source_diff': 2.3013999999998286e-05}, {'time': 0.020761528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:11.301" endtime="20201110 08:40:11.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:11.318" level="INFO">${ACCURACY} = {'time': [0.020731514, 0.020761528, 0.020792528, 0.0208245, 0.020854583, 0.020886597, 0.020917514, 0.020948542, 0.020977542, 0.021007597, 0.021038542, 0.021068542, 0.021099542, 0.021130542, 0.02116054...</msg>
<status status="PASS" starttime="20201110 08:40:11.305" endtime="20201110 08:40:11.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.323" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:40:11.322" endtime="20201110 08:40:11.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.326" level="INFO">VALUE: [2.3013999999998286e-05, 2.2542000000000395e-05, 2.2834000000002824e-05, 2.266700000000052e-05, 2.2249999999997966e-05, 2.2457999999999506e-05, 2.3000000000002185e-05, 2.3014000000001755e-05, 2.2263999999997536e-05, 2.2221999999998826e-05, 2.245899999999898e-05, 2.2985999999999146e-05, 2.3056000000000465e-05, 2.293100000000034e-05, 2.2986000000002615e-05, 2.2707999999999756e-05, 2.2721999999999326e-05, 2.305500000000099e-05, 2.273699999999837e-05, 2.2944000000000436e-05, 2.2276999999997632e-05, 2.3054999999997522e-05, 2.2707999999999756e-05, 2.312499999999884e-05, 2.2958000000000006e-05, 2.2528000000000825e-05, 2.2999999999998716e-05, 2.2250000000001435e-05, 2.2485999999998646e-05, 2.2250000000001435e-05, 2.288900000000163e-05, 2.22090000000022e-05, 2.29169999999973e-05, 2.287500000000206e-05, 2.311099999999927e-05, 2.2985999999999146e-05, 2.2721999999999326e-05, 2.236099999999852e-05, 2.313900000000188e-05, 2.3014000000001755e-05, 2.261100000000224e-05, 2.29169999999973e-05, 2.236099999999852e-05, 2.2221999999998826e-05, 2.2819999999999785e-05, 2.2778000000001075e-05, 2.269499999999966e-05, 2.2763999999998036e-05, 2.2305999999999715e-05, 2.298700000000209e-05]</msg>
<status status="PASS" starttime="20201110 08:40:11.324" endtime="20201110 08:40:11.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.319" endtime="20201110 08:40:11.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.329" endtime="20201110 08:40:11.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:11.333" endtime="20201110 08:40:11.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.331" endtime="20201110 08:40:11.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.328" endtime="20201110 08:40:11.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.961" endtime="20201110 08:40:11.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:10.960" endtime="20201110 08:40:11.354"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.363" endtime="20201110 08:40:11.379"></status>
</kw>
<msg timestamp="20201110 08:40:11.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:11.362" endtime="20201110 08:40:11.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:11.381" endtime="20201110 08:40:11.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.383" endtime="20201110 08:40:11.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.359" endtime="20201110 08:40:11.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.357" endtime="20201110 08:40:11.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.393" endtime="20201110 08:40:11.679"></status>
</kw>
<msg timestamp="20201110 08:40:11.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021078806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.391" endtime="20201110 08:40:11.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021078806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.683" endtime="20201110 08:40:11.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.692" endtime="20201110 08:40:11.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.388" endtime="20201110 08:40:11.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.387" endtime="20201110 08:40:11.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.699" level="INFO">${RESULT} = [{'time': 0.021078806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4111999999999745e-05, 'source_diff': 2.4111999999999745e-05}, {'time': 0.021111819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:11.695" endtime="20201110 08:40:11.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:11.713" level="INFO">${ACCURACY} = {'time': [0.021078806, 0.021111819, 0.021143833, 0.021177833, 0.021209847, 0.021241833, 0.021274847, 0.021306833, 0.021337847, 0.021367847, 0.021399861, 0.021431875, 0.021461861, 0.021493861, 0.021526...</msg>
<status status="PASS" starttime="20201110 08:40:11.700" endtime="20201110 08:40:11.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.718" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:40:11.716" endtime="20201110 08:40:11.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.720" level="INFO">VALUE: [2.4111999999999745e-05, 2.3221999999999826e-05, 2.329100000000167e-05, 2.413899999999941e-05, 2.388899999999916e-05, 2.402700000000285e-05, 2.3165999999998077e-05, 2.3722000000000326e-05, 2.3958000000001006e-05, 2.3693999999997717e-05, 2.412499999999984e-05, 2.3972000000000576e-05, 2.3179999999997647e-05, 2.340299999999823e-05, 2.3750000000002935e-05, 2.3541999999997926e-05, 2.3444000000000936e-05, 2.334699999999995e-05, 2.3568999999997592e-05, 2.3194000000000686e-05, 2.411100000000027e-05, 2.3276999999998632e-05, 2.3819999999997316e-05, 2.315299999999798e-05, 2.316699999999755e-05, 2.362499999999934e-05, 2.393099999999787e-05, 2.3305999999997246e-05, 2.368100000000109e-05, 2.388900000000263e-05, 2.3528000000001825e-05, 2.369500000000066e-05, 2.3333999999999855e-05, 2.4068999999998092e-05, 2.393099999999787e-05, 2.393100000000134e-05, 2.3776999999999132e-05, 2.3665999999998577e-05, 2.3166000000001546e-05, 2.336099999999952e-05, 2.3472000000000076e-05, 2.3764000000002505e-05, 2.3735999999999896e-05, 2.3694000000001186e-05, 2.3804999999998272e-05, 2.3944000000001436e-05, 2.3499999999999216e-05, 2.3735999999999896e-05, 2.4014000000002755e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201110 08:40:11.719" endtime="20201110 08:40:11.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.714" endtime="20201110 08:40:11.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.724" endtime="20201110 08:40:11.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:11.727" endtime="20201110 08:40:11.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.726" endtime="20201110 08:40:11.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.722" endtime="20201110 08:40:11.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.355" endtime="20201110 08:40:11.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.354" endtime="20201110 08:40:11.749"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.764" endtime="20201110 08:40:11.780"></status>
</kw>
<msg timestamp="20201110 08:40:11.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:11.762" endtime="20201110 08:40:11.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:11.781" endtime="20201110 08:40:11.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.784" endtime="20201110 08:40:11.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.758" endtime="20201110 08:40:11.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.754" endtime="20201110 08:40:11.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.793" endtime="20201110 08:40:12.080"></status>
</kw>
<msg timestamp="20201110 08:40:12.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027176111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027200722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.792" endtime="20201110 08:40:12.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027176111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027200722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:12.084" endtime="20201110 08:40:12.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.092" endtime="20201110 08:40:12.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.789" endtime="20201110 08:40:12.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.787" endtime="20201110 08:40:12.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:12.099" level="INFO">${RESULT} = [{'time': 0.027200722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.461100000000077e-05, 'source_diff': 2.461100000000077e-05}, {'time': 0.027233736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:12.096" endtime="20201110 08:40:12.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:12.115" level="INFO">${ACCURACY} = {'time': [0.027200722, 0.027233736, 0.027267764, 0.02730075, 0.02733375, 0.027365764, 0.027399819, 0.02743375, 0.02746575, 0.027496778, 0.027527764, 0.027561764, 0.027593778, 0.027627792, 0.027659792,...</msg>
<status status="PASS" starttime="20201110 08:40:12.100" endtime="20201110 08:40:12.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.119" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:40:12.118" endtime="20201110 08:40:12.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.122" level="INFO">VALUE: [2.461100000000077e-05, 2.4472000000001076e-05, 2.4541999999998926e-05, 2.4221999999997357e-05, 2.5055999999998996e-05, 2.494500000000191e-05, 2.4443999999998467e-05, 2.416699999999855e-05, 2.511100000000127e-05, 2.4791999999999176e-05, 2.4236000000000396e-05, 2.437500000000009e-05, 2.4764000000000036e-05, 2.487500000000059e-05, 2.4291999999998676e-05, 2.5000000000000716e-05, 2.4222000000000826e-05, 2.4791999999999176e-05, 2.440299999999923e-05, 2.5110999999997802e-05, 2.466699999999905e-05, 2.512499999999737e-05, 2.493099999999887e-05, 2.4526999999999882e-05, 2.4763000000000562e-05, 2.4568999999998592e-05, 2.468100000000209e-05, 2.5040999999999952e-05, 2.5014000000000286e-05, 2.4721999999997857e-05, 2.4500000000000216e-05, 2.4500000000000216e-05, 2.5054999999999522e-05, 2.4472000000001076e-05, 2.4527999999999356e-05, 2.4540999999999452e-05, 2.4805999999998746e-05, 2.4582999999998162e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.490299999999973e-05, 2.4764000000000036e-05, 2.50970000000017e-05, 2.45970000000012e-05, 2.4486000000000646e-05, 2.508300000000213e-05, 2.441700000000227e-05, 2.4972000000001576e-05, 2.445900000000098e-05, 2.4820000000001785e-05]</msg>
<status status="PASS" starttime="20201110 08:40:12.121" endtime="20201110 08:40:12.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.116" endtime="20201110 08:40:12.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.126" endtime="20201110 08:40:12.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:12.129" endtime="20201110 08:40:12.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.128" endtime="20201110 08:40:12.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.124" endtime="20201110 08:40:12.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.751" endtime="20201110 08:40:12.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.750" endtime="20201110 08:40:12.150"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.160" endtime="20201110 08:40:12.175"></status>
</kw>
<msg timestamp="20201110 08:40:12.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.158" endtime="20201110 08:40:12.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.177" endtime="20201110 08:40:12.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.179" endtime="20201110 08:40:12.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.155" endtime="20201110 08:40:12.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.153" endtime="20201110 08:40:12.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.189" endtime="20201110 08:40:12.476"></status>
</kw>
<msg timestamp="20201110 08:40:12.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:40:12.187" endtime="20201110 08:40:12.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:40:12.480" endtime="20201110 08:40:12.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.489" endtime="20201110 08:40:12.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.184" endtime="20201110 08:40:12.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.183" endtime="20201110 08:40:12.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:12.496" level="INFO">${RESULT} = [{'time': 0.020284, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5500000000001216e-05, 'source_diff': 2.5500000000001216e-05}, {'time': 0.020316028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:40:12.492" endtime="20201110 08:40:12.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:12.510" level="INFO">${ACCURACY} = {'time': [0.020284, 0.020316028, 0.020348014, 0.020381, 0.020413014, 0.020447028, 0.020479042, 0.020514014, 0.020548028, 0.020583042, 0.020617056, 0.020650056, 0.020685042, 0.020718042, 0.020751042, 0...</msg>
<status status="PASS" starttime="20201110 08:40:12.497" endtime="20201110 08:40:12.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.515" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:40:12.513" endtime="20201110 08:40:12.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.517" level="INFO">VALUE: [2.5500000000001216e-05, 2.568099999999962e-05, 2.5291999999999676e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.588899999999769e-05, 2.5610999999998302e-05, 2.538900000000066e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.563900000000091e-05, 2.545899999999851e-05, 2.5736000000001896e-05, 2.570899999999876e-05, 2.5819999999999316e-05, 2.5778000000000606e-05, 2.569499999999919e-05, 2.5818999999999842e-05, 2.6069000000000092e-05, 2.5236000000001396e-05, 2.6055999999999996e-05, 2.588900000000116e-05, 2.6000000000001716e-05, 2.5916000000000827e-05, 2.5985999999998677e-05, 2.5722000000002326e-05, 2.543099999999937e-05, 2.6055000000000522e-05, 2.6042000000000426e-05, 2.533300000000238e-05, 2.5291999999999676e-05, 2.569499999999919e-05, 2.5528000000000356e-05, 2.5541999999999926e-05, 2.588899999999769e-05, 2.5750000000001466e-05, 2.518099999999912e-05, 2.536100000000152e-05, 2.5332999999998912e-05, 2.561100000000177e-05, 2.5249999999997497e-05, 2.6097999999998706e-05, 2.5792000000000176e-05, 2.516699999999955e-05, 2.5833999999998886e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.6124999999998372e-05, 2.5666000000000577e-05, 2.540300000000023e-05]</msg>
<status status="PASS" starttime="20201110 08:40:12.516" endtime="20201110 08:40:12.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.511" endtime="20201110 08:40:12.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.521" endtime="20201110 08:40:12.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:12.524" endtime="20201110 08:40:12.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.523" endtime="20201110 08:40:12.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.519" endtime="20201110 08:40:12.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.151" endtime="20201110 08:40:12.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.151" endtime="20201110 08:40:12.546"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.555" endtime="20201110 08:40:12.570"></status>
</kw>
<msg timestamp="20201110 08:40:12.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.553" endtime="20201110 08:40:12.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.572" endtime="20201110 08:40:12.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.574" endtime="20201110 08:40:12.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.550" endtime="20201110 08:40:12.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.548" endtime="20201110 08:40:12.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.584" endtime="20201110 08:40:12.871"></status>
</kw>
<msg timestamp="20201110 08:40:12.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:12.582" endtime="20201110 08:40:12.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:12.876" endtime="20201110 08:40:12.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.884" endtime="20201110 08:40:12.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.579" endtime="20201110 08:40:12.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.578" endtime="20201110 08:40:12.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:12.891" level="INFO">${RESULT} = [{'time': 0.020321944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6750000000002466e-05, 'source_diff': 2.6750000000002466e-05}, {'time': 0.020357944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:12.888" endtime="20201110 08:40:12.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:12.905" level="INFO">${ACCURACY} = {'time': [0.020321944, 0.020357944, 0.020390958, 0.020423958, 0.020459972, 0.020494972, 0.020530958, 0.020566986, 0.020599986, 0.020632986, 0.020669, 0.020703014, 0.020738028, 0.020773028, 0.020807014...</msg>
<status status="PASS" starttime="20201110 08:40:12.892" endtime="20201110 08:40:12.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.910" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:40:12.909" endtime="20201110 08:40:12.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.912" level="INFO">VALUE: [2.6750000000002466e-05, 2.7040999999998483e-05, 2.6485999999999177e-05, 2.6846999999999982e-05, 2.7110999999999802e-05, 2.6278000000001106e-05, 2.7013999999998817e-05, 2.7124999999999372e-05, 2.6735999999999427e-05, 2.6777999999998137e-05, 2.6221999999999357e-05, 2.6263999999998067e-05, 2.6527999999997887e-05, 2.6610999999999302e-05, 2.6555999999997026e-05, 2.6207999999999787e-05, 2.6583000000000162e-05, 2.661100000000277e-05, 2.691699999999783e-05, 2.616699999999708e-05, 2.6860999999999552e-05, 2.6333999999999386e-05, 2.640299999999776e-05, 2.6250000000001966e-05, 2.645900000000298e-05, 2.7027999999998387e-05, 2.7056000000000996e-05, 2.640299999999776e-05, 2.693100000000087e-05, 2.6527000000001882e-05, 2.6221999999999357e-05, 2.6722000000003326e-05, 2.6513999999998317e-05, 2.6402000000001757e-05, 2.6916000000001827e-05, 2.7124999999999372e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6346999999999482e-05, 2.619499999999969e-05, 2.6583000000000162e-05, 2.6332999999999912e-05, 2.6222000000002826e-05, 2.686100000000302e-05, 2.6235999999998927e-05, 2.6860999999999552e-05, 2.6833000000000412e-05, 2.643100000000037e-05, 2.6471999999999607e-05, 2.690300000000173e-05]</msg>
<status status="PASS" starttime="20201110 08:40:12.911" endtime="20201110 08:40:12.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.906" endtime="20201110 08:40:12.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.916" endtime="20201110 08:40:12.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:12.920" endtime="20201110 08:40:12.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.918" endtime="20201110 08:40:12.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.914" endtime="20201110 08:40:12.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.547" endtime="20201110 08:40:12.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.546" endtime="20201110 08:40:12.941"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.950" endtime="20201110 08:40:12.966"></status>
</kw>
<msg timestamp="20201110 08:40:12.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.948" endtime="20201110 08:40:12.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:12.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:12.967" endtime="20201110 08:40:12.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.970" endtime="20201110 08:40:12.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.946" endtime="20201110 08:40:12.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.943" endtime="20201110 08:40:12.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.979" endtime="20201110 08:40:13.266"></status>
</kw>
<msg timestamp="20201110 08:40:13.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:12.978" endtime="20201110 08:40:13.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:13.271" endtime="20201110 08:40:13.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.279" endtime="20201110 08:40:13.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.975" endtime="20201110 08:40:13.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.973" endtime="20201110 08:40:13.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:13.286" level="INFO">${RESULT} = [{'time': 0.020298236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.020335278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:13.283" endtime="20201110 08:40:13.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:13.300" level="INFO">${ACCURACY} = {'time': [0.020298236, 0.020335278, 0.02037225, 0.02040725, 0.02044125, 0.020475278, 0.020512264, 0.020549264, 0.020585319, 0.020619278, 0.020655292, 0.020689278, 0.020724292, 0.020760306, 0.020796292...</msg>
<status status="PASS" starttime="20201110 08:40:13.287" endtime="20201110 08:40:13.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.305" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:40:13.304" endtime="20201110 08:40:13.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.307" level="INFO">VALUE: [2.7347000000000482e-05, 2.7235999999999927e-05, 2.7319000000001342e-05, 2.7235999999999927e-05, 2.7528000000002356e-05, 2.7235999999999927e-05, 2.8110999999997333e-05, 2.7542000000001926e-05, 2.7208000000000787e-05, 2.763900000000291e-05, 2.794499999999797e-05, 2.7235999999999927e-05, 2.7527999999998887e-05, 2.7388999999999192e-05, 2.8056000000001996e-05, 2.7361999999999526e-05, 2.7875000000000122e-05, 2.7693999999998248e-05, 2.8125000000000372e-05, 2.7222000000000357e-05, 2.7901999999999788e-05, 2.7222000000000357e-05, 2.7290999999998733e-05, 2.7693999999998248e-05, 2.7263999999999067e-05, 2.7110999999999802e-05, 2.7694000000001717e-05, 2.7805000000002272e-05, 2.7597000000000732e-05, 2.7679999999998678e-05, 2.7972000000001107e-05, 2.7471999999997138e-05, 2.7708000000001287e-05, 2.716700000000155e-05, 2.8137999999997e-05, 2.7333000000000912e-05, 2.766700000000205e-05, 2.7847000000000982e-05, 2.745900000000051e-05, 2.7306000000001246e-05, 2.7749999999999997e-05, 2.743100000000137e-05, 2.7249999999999497e-05, 2.8056000000001996e-05, 2.791699999999883e-05, 2.8098000000000706e-05, 2.7847000000000982e-05, 2.7943999999998498e-05, 2.7347000000000482e-05, 2.8124999999996902e-05]</msg>
<status status="PASS" starttime="20201110 08:40:13.306" endtime="20201110 08:40:13.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.301" endtime="20201110 08:40:13.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.311" endtime="20201110 08:40:13.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:13.315" endtime="20201110 08:40:13.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.313" endtime="20201110 08:40:13.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.309" endtime="20201110 08:40:13.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.942" endtime="20201110 08:40:13.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.941" endtime="20201110 08:40:13.336"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.345" endtime="20201110 08:40:13.361"></status>
</kw>
<msg timestamp="20201110 08:40:13.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:13.343" endtime="20201110 08:40:13.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:13.362" endtime="20201110 08:40:13.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.365" endtime="20201110 08:40:13.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.341" endtime="20201110 08:40:13.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.338" endtime="20201110 08:40:13.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.374" endtime="20201110 08:40:13.661"></status>
</kw>
<msg timestamp="20201110 08:40:13.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:13.373" endtime="20201110 08:40:13.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:13.666" endtime="20201110 08:40:13.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.674" endtime="20201110 08:40:13.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.370" endtime="20201110 08:40:13.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.368" endtime="20201110 08:40:13.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:13.681" level="INFO">${RESULT} = [{'time': 0.020430375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8832999999998943e-05, 'source_diff': 2.8832999999998943e-05}, {'time': 0.020465319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:13.678" endtime="20201110 08:40:13.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:13.696" level="INFO">${ACCURACY} = {'time': [0.020430375, 0.020465319, 0.020500333, 0.020537319, 0.020573333, 0.020610333, 0.020645347, 0.020683333, 0.020720347, 0.020758375, 0.020796361, 0.020833375, 0.020870361, 0.020905361, 0.020943...</msg>
<status status="PASS" starttime="20201110 08:40:13.682" endtime="20201110 08:40:13.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.701" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:40:13.700" endtime="20201110 08:40:13.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.704" level="INFO">VALUE: [2.8832999999998943e-05, 2.8832999999998943e-05, 2.8846999999998513e-05, 2.8443999999998998e-05, 2.8179999999999178e-05, 2.8333000000001912e-05, 2.8430000000002897e-05, 2.8736000000001427e-05, 2.9055000000000053e-05, 2.8832999999998943e-05, 2.8957999999999068e-05, 2.9014000000000817e-05, 2.8541999999999457e-05, 2.8527999999999887e-05, 2.8277999999999637e-05, 2.9055999999999527e-05, 2.8319999999998346e-05, 2.8222000000001357e-05, 2.9028000000000387e-05, 2.8957999999999068e-05, 2.8916999999999832e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.8222000000001357e-05, 2.89309999999994e-05, 2.8638999999996972e-05, 2.8305999999998777e-05, 2.8361000000001052e-05, 2.8639000000000442e-05, 2.8362000000000526e-05, 2.8179999999999178e-05, 2.8721999999998388e-05, 2.8957999999999068e-05, 2.8221999999997888e-05, 2.8583000000002162e-05, 2.8208000000001787e-05, 2.8208000000001787e-05, 2.8346999999998013e-05, 2.8889000000000692e-05, 2.8472000000001607e-05, 2.8611000000001302e-05, 2.8332999999998443e-05, 2.8722000000001857e-05, 2.8554999999999553e-05, 2.818100000000212e-05, 2.894499999999897e-05, 2.8250000000000497e-05, 2.8957999999999068e-05, 2.8778000000000137e-05, 2.8625000000000872e-05]</msg>
<status status="PASS" starttime="20201110 08:40:13.702" endtime="20201110 08:40:13.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.697" endtime="20201110 08:40:13.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.708" endtime="20201110 08:40:13.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:13.711" endtime="20201110 08:40:13.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.710" endtime="20201110 08:40:13.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.706" endtime="20201110 08:40:13.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.337" endtime="20201110 08:40:13.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.336" endtime="20201110 08:40:13.732"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.741" endtime="20201110 08:40:13.757"></status>
</kw>
<msg timestamp="20201110 08:40:13.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:13.740" endtime="20201110 08:40:13.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:13.758" endtime="20201110 08:40:13.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.761" endtime="20201110 08:40:13.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.737" endtime="20201110 08:40:13.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.735" endtime="20201110 08:40:13.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.770" endtime="20201110 08:40:14.057"></status>
</kw>
<msg timestamp="20201110 08:40:14.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:13.769" endtime="20201110 08:40:14.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:14.061" endtime="20201110 08:40:14.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.070" endtime="20201110 08:40:14.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.766" endtime="20201110 08:40:14.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.764" endtime="20201110 08:40:14.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.078" level="INFO">${RESULT} = [{'time': 0.020327083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.020364069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:14.074" endtime="20201110 08:40:14.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:14.092" level="INFO">${ACCURACY} = {'time': [0.020327083, 0.020364069, 0.020403069, 0.020442111, 0.020481069, 0.020520069, 0.020557083, 0.020593097, 0.020632097, 0.020671167, 0.020709153, 0.020749097, 0.020787111, 0.020825139, 0.020862...</msg>
<status status="PASS" starttime="20201110 08:40:14.079" endtime="20201110 08:40:14.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.097" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:40:14.095" endtime="20201110 08:40:14.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.099" level="INFO">VALUE: [2.9332999999999443e-05, 2.9526999999997944e-05, 2.9262999999998124e-05, 3.0041999999997487e-05, 2.9193999999999748e-05, 2.9360999999998583e-05, 2.9596999999999263e-05, 2.9764000000001567e-05, 2.9735999999998958e-05, 2.9750000000001997e-05, 2.9403000000000762e-05, 3.0139000000001942e-05, 2.9403000000000762e-05, 3.0152999999998042e-05, 3.0110999999999333e-05, 2.9875000000002122e-05, 2.9749999999998528e-05, 3.0014000000001817e-05, 2.9235999999998458e-05, 2.9846999999999513e-05, 2.9278000000000637e-05, 2.9528000000000887e-05, 2.994499999999997e-05, 2.9347000000002482e-05, 2.9334000000002386e-05, 2.9348000000001956e-05, 2.9347999999998486e-05, 2.9833999999999417e-05, 2.9763999999998098e-05, 2.9527000000001413e-05, 3.0112000000002276e-05, 2.9528000000000887e-05, 2.9735999999998958e-05, 3.0137999999999e-05, 2.9541000000000983e-05, 3.0124999999998903e-05, 2.9680000000000678e-05, 2.9318999999999873e-05, 2.9207999999999318e-05, 2.9346999999999013e-05, 2.9680000000000678e-05, 2.9292000000000207e-05, 2.9819000000000373e-05, 2.9596999999999263e-05, 2.9236000000001927e-05, 2.9750000000001997e-05, 2.9417000000000332e-05, 2.9527999999997417e-05, 2.9749999999998528e-05, 2.9528000000000887e-05]</msg>
<status status="PASS" starttime="20201110 08:40:14.098" endtime="20201110 08:40:14.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.093" endtime="20201110 08:40:14.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.103" endtime="20201110 08:40:14.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:14.107" endtime="20201110 08:40:14.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.105" endtime="20201110 08:40:14.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.101" endtime="20201110 08:40:14.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.733" endtime="20201110 08:40:14.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.733" endtime="20201110 08:40:14.128"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.137" endtime="20201110 08:40:14.153"></status>
</kw>
<msg timestamp="20201110 08:40:14.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.135" endtime="20201110 08:40:14.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.154" endtime="20201110 08:40:14.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.157" endtime="20201110 08:40:14.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.132" endtime="20201110 08:40:14.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.130" endtime="20201110 08:40:14.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.166" endtime="20201110 08:40:14.453"></status>
</kw>
<msg timestamp="20201110 08:40:14.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02019475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:14.165" endtime="20201110 08:40:14.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02019475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:14.458" endtime="20201110 08:40:14.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.466" endtime="20201110 08:40:14.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.162" endtime="20201110 08:40:14.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.160" endtime="20201110 08:40:14.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.473" level="INFO">${RESULT} = [{'time': 0.02019475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.09310000000014e-05, 'source_diff': 3.09310000000014e-05}, {'time': 0.020234792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:40:14.470" endtime="20201110 08:40:14.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:14.487" level="INFO">${ACCURACY} = {'time': [0.02019475, 0.020234792, 0.020274764, 0.020313764, 0.020350792, 0.020389778, 0.020428778, 0.020468792, 0.020507819, 0.020547792, 0.020586861, 0.020625819, 0.020665806, 0.020703903, 0.0207408...</msg>
<status status="PASS" starttime="20201110 08:40:14.474" endtime="20201110 08:40:14.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.492" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:40:14.491" endtime="20201110 08:40:14.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.496" level="INFO">VALUE: [3.09310000000014e-05, 3.083400000000042e-05, 3.052800000000189e-05, 3.090300000000226e-05, 3.019500000000022e-05, 3.088899999999922e-05, 3.0278000000001637e-05, 3.0235999999999458e-05, 3.090199999999932e-05, 3.090299999999879e-05, 3.081900000000137e-05, 3.0221999999999888e-05, 3.052799999999842e-05, 3.0360999999999583e-05, 3.084700000000051e-05, 3.0458000000000568e-05, 3.0304999999997834e-05, 3.058300000000069e-05, 3.088900000000269e-05, 3.105500000000205e-05, 3.074999999999953e-05, 3.0818999999997904e-05, 3.052800000000189e-05, 3.074999999999953e-05, 3.0513999999998848e-05, 3.054200000000146e-05, 3.091699999999836e-05, 3.098699999999968e-05, 3.087499999999965e-05, 3.10700000000011e-05, 3.052800000000189e-05, 3.06249999999994e-05, 3.065299999999854e-05, 3.090299999999879e-05, 3.0319999999996877e-05, 3.0402999999998293e-05, 3.094500000000097e-05, 3.07639999999991e-05, 3.11249999999999e-05, 3.063899999999897e-05, 3.081900000000137e-05, 3.108300000000119e-05, 3.1068999999998154e-05, 3.040199999999882e-05, 3.0235999999999458e-05, 3.1054999999998584e-05, 3.074999999999953e-05, 3.077800000000214e-05, 3.099999999999978e-05, 3.113899999999947e-05]</msg>
<status status="PASS" starttime="20201110 08:40:14.494" endtime="20201110 08:40:14.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.488" endtime="20201110 08:40:14.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.501" endtime="20201110 08:40:14.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:14.504" endtime="20201110 08:40:14.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.503" endtime="20201110 08:40:14.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.499" endtime="20201110 08:40:14.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.129" endtime="20201110 08:40:14.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.128" endtime="20201110 08:40:14.525"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.534" endtime="20201110 08:40:14.550"></status>
</kw>
<msg timestamp="20201110 08:40:14.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.533" endtime="20201110 08:40:14.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.552" endtime="20201110 08:40:14.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.554" endtime="20201110 08:40:14.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.530" endtime="20201110 08:40:14.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.528" endtime="20201110 08:40:14.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.563" endtime="20201110 08:40:14.850"></status>
</kw>
<msg timestamp="20201110 08:40:14.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:14.562" endtime="20201110 08:40:14.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:14.855" endtime="20201110 08:40:14.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.863" endtime="20201110 08:40:14.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.559" endtime="20201110 08:40:14.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.557" endtime="20201110 08:40:14.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.869" level="INFO">${RESULT} = [{'time': 0.020320847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.190299999999979e-05, 'source_diff': 3.190299999999979e-05}, {'time': 0.020358861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:14.866" endtime="20201110 08:40:14.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:14.883" level="INFO">${ACCURACY} = {'time': [0.020320847, 0.020358861, 0.020400847, 0.020440861, 0.020478931, 0.020517875, 0.020558875, 0.020597875, 0.020635875, 0.020676889, 0.020717903, 0.020757903, 0.020797917, 0.020835917, 0.020873...</msg>
<status status="PASS" starttime="20201110 08:40:14.870" endtime="20201110 08:40:14.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.887" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:40:14.886" endtime="20201110 08:40:14.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.890" level="INFO">VALUE: [3.190299999999979e-05, 3.173599999999749e-05, 3.21250000000009e-05, 3.156900000000212e-05, 3.1612000000000307e-05, 3.161100000000083e-05, 3.16250000000004e-05, 3.21250000000009e-05, 3.145800000000157e-05, 3.14310000000019e-05, 3.120900000000079e-05, 3.17640000000001e-05, 3.172299999999739e-05, 3.166699999999911e-05, 3.177799999999967e-05, 3.197300000000111e-05, 3.198600000000121e-05, 3.116700000000208e-05, 3.169399999999878e-05, 3.150000000000028e-05, 3.1554999999999084e-05, 3.118099999999818e-05, 3.167999999999921e-05, 3.198600000000121e-05, 3.136100000000058e-05, 3.21250000000009e-05, 3.1610999999997363e-05, 3.168000000000268e-05, 3.1832999999998474e-05, 3.198599999999774e-05, 3.198600000000121e-05, 3.192999999999946e-05, 3.138899999999972e-05, 3.191699999999936e-05, 3.186100000000108e-05, 3.175000000000053e-05, 3.144500000000147e-05, 3.16250000000004e-05, 3.147200000000114e-05, 3.136100000000058e-05, 3.198599999999774e-05, 3.179199999999924e-05, 3.184700000000151e-05, 3.182000000000185e-05, 3.129199999999874e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.1818999999998904e-05, 3.1304999999998834e-05, 3.1276999999999694e-05]</msg>
<status status="PASS" starttime="20201110 08:40:14.888" endtime="20201110 08:40:14.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.884" endtime="20201110 08:40:14.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.897" endtime="20201110 08:40:14.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:14.901" endtime="20201110 08:40:14.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.899" endtime="20201110 08:40:14.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.896" endtime="20201110 08:40:14.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.526" endtime="20201110 08:40:14.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.526" endtime="20201110 08:40:14.922"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.930" endtime="20201110 08:40:14.947"></status>
</kw>
<msg timestamp="20201110 08:40:14.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.929" endtime="20201110 08:40:14.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:14.948" endtime="20201110 08:40:14.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.951" endtime="20201110 08:40:14.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.926" endtime="20201110 08:40:14.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.924" endtime="20201110 08:40:14.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.959" endtime="20201110 08:40:15.250"></status>
</kw>
<msg timestamp="20201110 08:40:15.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:14.958" endtime="20201110 08:40:15.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020355583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.259" endtime="20201110 08:40:15.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.277" endtime="20201110 08:40:15.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.955" endtime="20201110 08:40:15.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.954" endtime="20201110 08:40:15.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:15.291" level="INFO">${RESULT} = [{'time': 0.020355583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.291600000000089e-05, 'source_diff': 3.291600000000089e-05}, {'time': 0.020394611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:15.284" endtime="20201110 08:40:15.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:15.324" level="INFO">${ACCURACY} = {'time': [0.020355583, 0.020394611, 0.020435611, 0.020477611, 0.020520639, 0.020561611, 0.020602625, 0.020642639, 0.020683625, 0.020723625, 0.020763625, 0.020803639, 0.020842681, 0.020884653, 0.020923...</msg>
<status status="PASS" starttime="20201110 08:40:15.293" endtime="20201110 08:40:15.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.333" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:40:15.331" endtime="20201110 08:40:15.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.338" level="INFO">VALUE: [3.291600000000089e-05, 3.26250000000014e-05, 3.2832999999999474e-05, 3.3096999999999294e-05, 3.316700000000061e-05, 3.269399999999978e-05, 3.288899999999775e-05, 3.302800000000092e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.287500000000165e-05, 3.276399999999763e-05, 3.2444999999999e-05, 3.291700000000036e-05, 3.272299999999839e-05, 3.245900000000204e-05, 3.301400000000135e-05, 3.299999999999831e-05, 3.2777000000001194e-05, 3.247300000000161e-05, 3.244399999999953e-05, 3.255599999999956e-05, 3.3069000000000154e-05, 3.3110999999998864e-05, 3.305600000000006e-05, 3.2444999999999e-05, 3.233300000000244e-05, 3.266600000000064e-05, 3.279200000000024e-05, 3.265300000000054e-05, 3.2568999999999654e-05, 3.22640000000006e-05, 3.291700000000036e-05, 3.288899999999775e-05, 3.244399999999953e-05, 3.243099999999943e-05, 3.247200000000214e-05, 3.275000000000153e-05, 3.299999999999831e-05, 3.304200000000049e-05, 3.266700000000011e-05, 3.220899999999832e-05, 3.295899999999907e-05, 3.247300000000161e-05, 3.304200000000049e-05, 3.238900000000072e-05, 3.252799999999695e-05, 3.2512999999997905e-05, 3.219500000000222e-05, 3.2318999999999404e-05]</msg>
<status status="PASS" starttime="20201110 08:40:15.335" endtime="20201110 08:40:15.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.326" endtime="20201110 08:40:15.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.344" endtime="20201110 08:40:15.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:15.347" endtime="20201110 08:40:15.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.346" endtime="20201110 08:40:15.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.342" endtime="20201110 08:40:15.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.922" endtime="20201110 08:40:15.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.922" endtime="20201110 08:40:15.368"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.377" endtime="20201110 08:40:15.392"></status>
</kw>
<msg timestamp="20201110 08:40:15.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:15.375" endtime="20201110 08:40:15.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:15.394" endtime="20201110 08:40:15.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.396" endtime="20201110 08:40:15.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.373" endtime="20201110 08:40:15.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.370" endtime="20201110 08:40:15.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.405" endtime="20201110 08:40:15.692"></status>
</kw>
<msg timestamp="20201110 08:40:15.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.404" endtime="20201110 08:40:15.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.696" endtime="20201110 08:40:15.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.705" endtime="20201110 08:40:15.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.401" endtime="20201110 08:40:15.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.399" endtime="20201110 08:40:15.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:15.711" level="INFO">${RESULT} = [{'time': 0.019735792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.365299999999807e-05, 'source_diff': 3.365299999999807e-05}, {'time': 0.019776792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:15.708" endtime="20201110 08:40:15.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:15.724" level="INFO">${ACCURACY} = {'time': [0.019735792, 0.019776792, 0.019817819, 0.019858792, 0.019899847, 0.019939806, 0.019981819, 0.020023833, 0.020065833, 0.020106847, 0.020148833, 0.020190847, 0.020230861, 0.020270861, 0.020312...</msg>
<status status="PASS" starttime="20201110 08:40:15.712" endtime="20201110 08:40:15.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.729" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:40:15.728" endtime="20201110 08:40:15.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.731" level="INFO">VALUE: [3.365299999999807e-05, 3.383399999999995e-05, 3.3360999999999114e-05, 3.345899999999957e-05, 3.3582999999996754e-05, 3.329200000000074e-05, 3.386100000000308e-05, 3.390200000000232e-05, 3.398600000000321e-05, 3.325000000000203e-05, 3.348600000000271e-05, 3.340300000000129e-05, 3.370800000000035e-05, 3.325000000000203e-05, 3.372199999999992e-05, 3.329199999999727e-05, 3.398599999999974e-05, 3.318100000000018e-05, 3.369400000000078e-05, 3.323599999999899e-05, 3.3388999999998253e-05, 3.325000000000203e-05, 3.406999999999716e-05, 3.4097000000000294e-05, 3.315300000000104e-05, 3.3360999999999114e-05, 3.369500000000025e-05, 3.4124999999999434e-05, 3.365299999999807e-05, 3.345899999999957e-05, 3.3888999999998753e-05, 3.327800000000117e-05, 3.336199999999859e-05, 3.341600000000139e-05, 3.3624999999998934e-05, 3.3555000000001084e-05, 3.3805000000001334e-05, 3.419500000000075e-05, 3.322199999999942e-05, 3.369399999999731e-05, 3.343000000000096e-05, 3.3833000000000474e-05, 3.3568999999997184e-05, 3.376399999999863e-05, 3.3596999999999794e-05, 3.322199999999942e-05, 3.388900000000222e-05, 3.3596999999999794e-05, 3.3847000000000044e-05, 3.404200000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:40:15.730" endtime="20201110 08:40:15.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.725" endtime="20201110 08:40:15.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.735" endtime="20201110 08:40:15.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:15.738" endtime="20201110 08:40:15.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.737" endtime="20201110 08:40:15.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.733" endtime="20201110 08:40:15.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.369" endtime="20201110 08:40:15.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.368" endtime="20201110 08:40:15.759"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.768" endtime="20201110 08:40:15.783"></status>
</kw>
<msg timestamp="20201110 08:40:15.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:15.766" endtime="20201110 08:40:15.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:15.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:15.784" endtime="20201110 08:40:15.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.787" endtime="20201110 08:40:15.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.764" endtime="20201110 08:40:15.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.762" endtime="20201110 08:40:15.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:15.796" endtime="20201110 08:40:16.082"></status>
</kw>
<msg timestamp="20201110 08:40:16.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:15.794" endtime="20201110 08:40:16.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.087" endtime="20201110 08:40:16.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.095" endtime="20201110 08:40:16.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.792" endtime="20201110 08:40:16.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.790" endtime="20201110 08:40:16.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:16.102" level="INFO">${RESULT} = [{'time': 0.019545389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4402999999998823e-05, 'source_diff': 3.4402999999998823e-05}, {'time': 0.019586403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:16.099" endtime="20201110 08:40:16.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:16.116" level="INFO">${ACCURACY} = {'time': [0.019545389, 0.019586403, 0.019629389, 0.019672389, 0.019713417, 0.019757403, 0.019801431, 0.019843417, 0.019884431, 0.019927431, 0.019971431, 0.020014444, 0.020058458, 0.020102458, 0.020146...</msg>
<status status="PASS" starttime="20201110 08:40:16.103" endtime="20201110 08:40:16.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.120" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:40:16.119" endtime="20201110 08:40:16.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.123" level="INFO">VALUE: [3.4402999999998823e-05, 3.4388999999999253e-05, 3.449999999999981e-05, 3.5096999999997824e-05, 3.423599999999999e-05, 3.4611000000000364e-05, 3.505600000000206e-05, 3.508399999999773e-05, 3.454200000000199e-05, 3.4638999999999504e-05, 3.4624999999999934e-05, 3.4526999999999475e-05, 3.5040999999999545e-05, 3.5097000000001294e-05, 3.467999999999874e-05, 3.4597000000000794e-05, 3.4374999999999684e-05, 3.500000000000031e-05, 3.424999999999956e-05, 3.5166999999999143e-05, 3.5040999999999545e-05, 3.4319000000001404e-05, 3.449999999999981e-05, 3.4875000000000184e-05, 3.5152999999999573e-05, 3.4652999999999073e-05, 3.416699999999814e-05, 3.4902999999999323e-05, 3.448600000000024e-05, 3.4347000000000544e-05, 3.419500000000075e-05, 3.426399999999913e-05, 3.472300000000039e-05, 3.486200000000009e-05, 3.445900000000057e-05, 3.44580000000011e-05, 3.490300000000279e-05, 3.483400000000095e-05, 3.490300000000279e-05, 3.469400000000178e-05, 3.5040999999999545e-05, 3.4541000000002514e-05, 3.5139000000000004e-05, 3.5040999999999545e-05, 3.452799999999895e-05, 3.5040999999999545e-05, 3.502799999999945e-05, 3.468099999999821e-05, 3.4847000000001044e-05, 3.445799999999763e-05]</msg>
<status status="PASS" starttime="20201110 08:40:16.121" endtime="20201110 08:40:16.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.117" endtime="20201110 08:40:16.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.126" endtime="20201110 08:40:16.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:16.130" endtime="20201110 08:40:16.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.128" endtime="20201110 08:40:16.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.125" endtime="20201110 08:40:16.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.760" endtime="20201110 08:40:16.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:15.760" endtime="20201110 08:40:16.151"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.159" endtime="20201110 08:40:16.176"></status>
</kw>
<msg timestamp="20201110 08:40:16.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.158" endtime="20201110 08:40:16.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.177" endtime="20201110 08:40:16.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.180" endtime="20201110 08:40:16.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.155" endtime="20201110 08:40:16.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.153" endtime="20201110 08:40:16.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.189" endtime="20201110 08:40:16.476"></status>
</kw>
<msg timestamp="20201110 08:40:16.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.187" endtime="20201110 08:40:16.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.480" endtime="20201110 08:40:16.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.488" endtime="20201110 08:40:16.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.185" endtime="20201110 08:40:16.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.183" endtime="20201110 08:40:16.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:16.495" level="INFO">${RESULT} = [{'time': 0.020406792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.523600000000099e-05, 'source_diff': 3.523600000000099e-05}, {'time': 0.020449806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:16.491" endtime="20201110 08:40:16.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:16.508" level="INFO">${ACCURACY} = {'time': [0.020406792, 0.020449806, 0.020494819, 0.020539806, 0.020583819, 0.020625833, 0.020668847, 0.020712833, 0.020756833, 0.020801833, 0.020843833, 0.020888833, 0.020933847, 0.020978847, 0.021022...</msg>
<status status="PASS" starttime="20201110 08:40:16.496" endtime="20201110 08:40:16.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.512" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:40:16.511" endtime="20201110 08:40:16.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.515" level="INFO">VALUE: [3.523600000000099e-05, 3.552799999999995e-05, 3.547200000000167e-05, 3.557000000000213e-05, 3.590200000000085e-05, 3.5804999999999865e-05, 3.526400000000013e-05, 3.5332999999998504e-05, 3.522199999999795e-05, 3.5791000000000295e-05, 3.545799999999863e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.526399999999666e-05, 3.6055000000000115e-05, 3.545799999999863e-05, 3.545799999999863e-05, 3.594400000000303e-05, 3.570799999999888e-05, 3.604200000000002e-05, 3.548599999999777e-05, 3.525000000000056e-05, 3.5847000000002044e-05, 3.552799999999995e-05, 3.605599999999959e-05, 3.5347000000001544e-05, 3.605599999999959e-05, 3.605599999999959e-05, 3.523700000000046e-05, 3.556999999999866e-05, 3.531999999999841e-05, 3.61520000000011e-05, 3.517999999999924e-05, 3.5860999999998144e-05, 3.5416999999999393e-05, 3.545799999999863e-05, 3.5290999999999795e-05, 3.5332999999998504e-05, 3.5361000000001114e-05, 3.6097000000002294e-05, 3.5861000000001614e-05, 3.554199999999952e-05, 3.5611000000001364e-05, 3.519499999999828e-05, 3.554199999999952e-05, 3.5625000000000934e-05, 3.5416999999999393e-05, 3.595900000000207e-05, 3.532000000000188e-05, 3.597200000000217e-05]</msg>
<status status="PASS" starttime="20201110 08:40:16.513" endtime="20201110 08:40:16.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.509" endtime="20201110 08:40:16.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.518" endtime="20201110 08:40:16.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:16.522" endtime="20201110 08:40:16.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.520" endtime="20201110 08:40:16.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.517" endtime="20201110 08:40:16.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.152" endtime="20201110 08:40:16.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.151" endtime="20201110 08:40:16.543"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.551" endtime="20201110 08:40:16.567"></status>
</kw>
<msg timestamp="20201110 08:40:16.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.550" endtime="20201110 08:40:16.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.568" endtime="20201110 08:40:16.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.570" endtime="20201110 08:40:16.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.547" endtime="20201110 08:40:16.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.545" endtime="20201110 08:40:16.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.580" endtime="20201110 08:40:16.867"></status>
</kw>
<msg timestamp="20201110 08:40:16.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.578" endtime="20201110 08:40:16.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.871" endtime="20201110 08:40:16.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.879" endtime="20201110 08:40:16.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.575" endtime="20201110 08:40:16.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.574" endtime="20201110 08:40:16.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:16.886" level="INFO">${RESULT} = [{'time': 0.019609944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6332999999999505e-05, 'source_diff': 3.6332999999999505e-05}, {'time': 0.019654958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:16.882" endtime="20201110 08:40:16.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:16.900" level="INFO">${ACCURACY} = {'time': [0.019609944, 0.019654958, 0.019699972, 0.019744056, 0.019789972, 0.019832972, 0.019878972, 0.019922986, 0.019969, 0.020012986, 0.020059, 0.020102, 0.020148, 0.020192014, 0.020237014, 0.02028...</msg>
<status status="PASS" starttime="20201110 08:40:16.887" endtime="20201110 08:40:16.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.905" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:40:16.904" endtime="20201110 08:40:16.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.907" level="INFO">VALUE: [3.6332999999999505e-05, 3.616600000000067e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.6860999999999144e-05, 3.6346999999999074e-05, 3.6625000000001934e-05, 3.623599999999852e-05, 3.6931000000000463e-05, 3.7124999999998964e-05, 3.6610999999998894e-05, 3.6166999999996674e-05, 3.6888999999998284e-05, 3.652800000000095e-05, 3.6430999999999963e-05, 3.694500000000003e-05, 3.691600000000142e-05, 3.6917000000000894e-05, 3.629200000000027e-05, 3.6667000000000644e-05, 3.704200000000102e-05, 3.629200000000027e-05, 3.705600000000059e-05, 3.697299999999917e-05, 3.619399999999981e-05, 3.6805000000000865e-05, 3.6569000000000185e-05, 3.6305000000000365e-05, 3.700000000000231e-05, 3.668000000000074e-05, 3.624999999999809e-05, 3.7054999999997645e-05, 3.654199999999705e-05, 3.655600000000009e-05, 3.6610999999998894e-05, 3.62780000000007e-05, 3.622200000000242e-05, 3.6860999999999144e-05, 3.645799999999963e-05, 3.623599999999852e-05, 3.641600000000092e-05, 3.644499999999953e-05, 3.6624999999998464e-05, 3.6931000000000463e-05, 3.636199999999812e-05, 3.647300000000214e-05, 3.623599999999852e-05, 3.647300000000214e-05, 3.698599999999927e-05, 3.674999999999859e-05]</msg>
<status status="PASS" starttime="20201110 08:40:16.906" endtime="20201110 08:40:16.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.901" endtime="20201110 08:40:16.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.911" endtime="20201110 08:40:16.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:16.914" endtime="20201110 08:40:16.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.913" endtime="20201110 08:40:16.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.909" endtime="20201110 08:40:16.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.544" endtime="20201110 08:40:16.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.543" endtime="20201110 08:40:16.935"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.944" endtime="20201110 08:40:16.960"></status>
</kw>
<msg timestamp="20201110 08:40:16.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.942" endtime="20201110 08:40:16.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:16.961" endtime="20201110 08:40:16.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.964" endtime="20201110 08:40:16.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.940" endtime="20201110 08:40:16.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.938" endtime="20201110 08:40:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.973" endtime="20201110 08:40:17.260"></status>
</kw>
<msg timestamp="20201110 08:40:17.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.971" endtime="20201110 08:40:17.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:17.264" endtime="20201110 08:40:17.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.272" endtime="20201110 08:40:17.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.969" endtime="20201110 08:40:17.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.967" endtime="20201110 08:40:17.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:17.279" level="INFO">${RESULT} = [{'time': 0.019746319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79859999999968e-05, 'source_diff': 3.79859999999968e-05}, {'time': 0.019790347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:17.276" endtime="20201110 08:40:17.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:17.296" level="INFO">${ACCURACY} = {'time': [0.019746319, 0.019790347, 0.019835319, 0.019881319, 0.019925333, 0.019969347, 0.020015361, 0.020061347, 0.020108389, 0.020152361, 0.020198361, 0.020244375, 0.020291389, 0.020338375, 0.020384...</msg>
<status status="PASS" starttime="20201110 08:40:17.280" endtime="20201110 08:40:17.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.303" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:40:17.302" endtime="20201110 08:40:17.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.308" level="INFO">VALUE: [3.79859999999968e-05, 3.7305000000001365e-05, 3.7277000000002225e-05, 3.793000000000199e-05, 3.7540999999998576e-05, 3.773600000000002e-05, 3.770799999999741e-05, 3.773600000000002e-05, 3.745800000000063e-05, 3.7347000000000075e-05, 3.7583000000000755e-05, 3.751399999999891e-05, 3.757000000000066e-05, 3.720800000000038e-05, 3.79720000000007e-05, 3.772200000000045e-05, 3.7680999999997744e-05, 3.754200000000152e-05, 3.755600000000109e-05, 3.77919999999983e-05, 3.7360999999999644e-05, 3.7902999999998854e-05, 3.730600000000084e-05, 3.7790999999998826e-05, 3.749999999999934e-05, 3.7389000000002254e-05, 3.722199999999995e-05, 3.773600000000002e-05, 3.719400000000081e-05, 3.72780000000017e-05, 3.7610999999999895e-05, 3.8111000000000395e-05, 3.8054999999998645e-05, 3.7333000000000505e-05, 3.7360999999999644e-05, 3.7347000000000075e-05, 3.776399999999916e-05, 3.745800000000063e-05, 3.774999999999959e-05, 3.729200000000127e-05, 3.774999999999959e-05, 3.804199999999855e-05, 3.7360999999999644e-05, 3.752800000000195e-05, 3.777799999999873e-05, 3.7652999999998604e-05, 3.732000000000041e-05, 3.7833000000001005e-05, 3.795800000000113e-05, 3.7319000000000935e-05]</msg>
<status status="PASS" starttime="20201110 08:40:17.305" endtime="20201110 08:40:17.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.297" endtime="20201110 08:40:17.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.314" endtime="20201110 08:40:17.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:17.319" endtime="20201110 08:40:17.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.317" endtime="20201110 08:40:17.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.311" endtime="20201110 08:40:17.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.936" endtime="20201110 08:40:17.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.936" endtime="20201110 08:40:17.340"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.350" endtime="20201110 08:40:17.364"></status>
</kw>
<msg timestamp="20201110 08:40:17.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:17.348" endtime="20201110 08:40:17.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:17.366" endtime="20201110 08:40:17.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.368" endtime="20201110 08:40:17.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.346" endtime="20201110 08:40:17.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.343" endtime="20201110 08:40:17.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.377" endtime="20201110 08:40:17.679"></status>
</kw>
<msg timestamp="20201110 08:40:17.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:17.376" endtime="20201110 08:40:17.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020840125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:17.683" endtime="20201110 08:40:17.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.691" endtime="20201110 08:40:17.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.373" endtime="20201110 08:40:17.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.372" endtime="20201110 08:40:17.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:17.698" level="INFO">${RESULT} = [{'time': 0.020840125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8625000000000465e-05, 'source_diff': 3.8625000000000465e-05}, {'time': 0.020885125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:17.695" endtime="20201110 08:40:17.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:17.712" level="INFO">${ACCURACY} = {'time': [0.020840125, 0.020885125, 0.020931153, 0.020979153, 0.021027153, 0.021074153, 0.021121153, 0.021166167, 0.021212167, 0.021257181, 0.021302222, 0.021349194, 0.021397208, 0.021445194, 0.021490...</msg>
<status status="PASS" starttime="20201110 08:40:17.699" endtime="20201110 08:40:17.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.716" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:40:17.715" endtime="20201110 08:40:17.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.719" level="INFO">VALUE: [3.8625000000000465e-05, 3.8833000000002005e-05, 3.901400000000041e-05, 3.8666999999999174e-05, 3.852799999999948e-05, 3.898600000000127e-05, 3.9097000000001825e-05, 3.8666999999999174e-05, 3.8388999999999784e-05, 3.825000000000009e-05, 3.827799999999923e-05, 3.825000000000009e-05, 3.892999999999952e-05, 3.890200000000038e-05, 3.869400000000231e-05, 3.852800000000295e-05, 3.9068999999999215e-05, 3.8875000000000715e-05, 3.84720000000012e-05, 3.8152999999999104e-05, 3.8846999999998105e-05, 3.8180999999998244e-05, 3.9110999999997925e-05, 3.8194999999997814e-05, 3.825000000000009e-05, 3.905599999999912e-05, 3.8388999999999784e-05, 3.8445000000001534e-05, 3.848600000000077e-05, 3.827799999999923e-05, 3.8402999999999354e-05, 3.90980000000013e-05, 3.856999999999819e-05, 3.8916999999999424e-05, 3.877799999999973e-05, 3.8583000000001755e-05, 3.8555000000002615e-05, 3.851399999999991e-05, 3.8416999999998924e-05, 3.892999999999952e-05, 3.8152999999999104e-05, 3.826399999999966e-05, 3.818000000000224e-05, 3.8804999999999396e-05, 3.8596999999997855e-05, 3.82919999999988e-05, 3.883400000000148e-05, 3.901400000000041e-05, 3.880599999999887e-05, 3.86659999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:40:17.717" endtime="20201110 08:40:17.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.712" endtime="20201110 08:40:17.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.722" endtime="20201110 08:40:17.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:17.726" endtime="20201110 08:40:17.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.724" endtime="20201110 08:40:17.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.721" endtime="20201110 08:40:17.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.342" endtime="20201110 08:40:17.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.341" endtime="20201110 08:40:17.747"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.755" endtime="20201110 08:40:17.770"></status>
</kw>
<msg timestamp="20201110 08:40:17.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:17.754" endtime="20201110 08:40:17.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:17.772" endtime="20201110 08:40:17.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.774" endtime="20201110 08:40:17.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.751" endtime="20201110 08:40:17.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.749" endtime="20201110 08:40:17.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.783" endtime="20201110 08:40:18.070"></status>
</kw>
<msg timestamp="20201110 08:40:18.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:17.782" endtime="20201110 08:40:18.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.074" endtime="20201110 08:40:18.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.082" endtime="20201110 08:40:18.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.779" endtime="20201110 08:40:18.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.778" endtime="20201110 08:40:18.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:18.089" level="INFO">${RESULT} = [{'time': 0.019785486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9625000000001465e-05, 'source_diff': 3.9625000000001465e-05}, {'time': 0.019834486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:18.086" endtime="20201110 08:40:18.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:18.102" level="INFO">${ACCURACY} = {'time': [0.019785486, 0.019834486, 0.019881528, 0.0199295, 0.019978514, 0.020025528, 0.020073528, 0.020120528, 0.020169528, 0.020218542, 0.020267556, 0.020314542, 0.020363556, 0.020412583, 0.02046155...</msg>
<status status="PASS" starttime="20201110 08:40:18.090" endtime="20201110 08:40:18.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.107" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:40:18.106" endtime="20201110 08:40:18.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.109" level="INFO">VALUE: [3.9625000000001465e-05, 4.0068999999996746e-05, 3.997199999999923e-05, 3.9860999999998675e-05, 3.9694999999999314e-05, 3.9694999999999314e-05, 3.9166999999999674e-05, 3.922199999999848e-05, 3.926400000000066e-05, 3.973599999999855e-05, 4.01119999999984e-05, 3.9945000000003034e-05, 3.9973000000002173e-05, 3.995800000000313e-05, 3.983399999999901e-05, 3.96660000000007e-05, 3.9526999999997536e-05, 4.0139000000001535e-05, 3.974999999999812e-05, 4.0125000000001965e-05, 3.977800000000073e-05, 4.0125000000001965e-05, 3.972200000000245e-05, 3.945800000000263e-05, 3.927799999999676e-05, 3.9430999999999494e-05, 3.997199999999923e-05, 3.951400000000091e-05, 3.926400000000066e-05, 3.981999999999944e-05, 3.9611000000001895e-05, 3.951400000000091e-05, 4.0166999999997205e-05, 3.949999999999787e-05, 3.9972999999998704e-05, 3.943000000000002e-05, 3.9917000000000424e-05, 3.969399999999984e-05, 3.992999999999705e-05, 3.945799999999916e-05, 3.9846999999999105e-05, 3.991600000000095e-05, 3.9791000000000826e-05, 3.952800000000048e-05, 3.9555000000000146e-05, 3.951400000000091e-05, 3.9610999999998425e-05, 3.9319000000002935e-05, 3.97920000000003e-05, 3.973599999999855e-05]</msg>
<status status="PASS" starttime="20201110 08:40:18.108" endtime="20201110 08:40:18.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.103" endtime="20201110 08:40:18.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.113" endtime="20201110 08:40:18.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:18.116" endtime="20201110 08:40:18.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.115" endtime="20201110 08:40:18.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.111" endtime="20201110 08:40:18.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.748" endtime="20201110 08:40:18.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.747" endtime="20201110 08:40:18.138"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.147" endtime="20201110 08:40:18.163"></status>
</kw>
<msg timestamp="20201110 08:40:18.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.146" endtime="20201110 08:40:18.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.165" endtime="20201110 08:40:18.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.167" endtime="20201110 08:40:18.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.143" endtime="20201110 08:40:18.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.140" endtime="20201110 08:40:18.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.176" endtime="20201110 08:40:18.464"></status>
</kw>
<msg timestamp="20201110 08:40:18.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.175" endtime="20201110 08:40:18.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021213931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.468" endtime="20201110 08:40:18.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.476" endtime="20201110 08:40:18.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.172" endtime="20201110 08:40:18.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.170" endtime="20201110 08:40:18.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:18.483" level="INFO">${RESULT} = [{'time': 0.021213931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0152999999997635e-05, 'source_diff': 4.0152999999997635e-05}, {'time': 0.021261944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:18.480" endtime="20201110 08:40:18.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:18.498" level="INFO">${ACCURACY} = {'time': [0.021213931, 0.021261944, 0.021310972, 0.021357944, 0.021404986, 0.021453958, 0.021503972, 0.021554042, 0.021602986, 0.021649986, 0.021697986, 0.021746, 0.021796, 0.021844014, 0.021891014, 0...</msg>
<status status="PASS" starttime="20201110 08:40:18.484" endtime="20201110 08:40:18.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.502" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:40:18.501" endtime="20201110 08:40:18.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.505" level="INFO">VALUE: [4.0152999999997635e-05, 4.0319000000000466e-05, 4.0596999999999855e-05, 4.0512999999998967e-05, 4.076400000000216e-05, 4.1097000000000355e-05, 4.0403000000001354e-05, 4.073599999999955e-05, 4.0875000000002715e-05, 4.070800000000041e-05, 4.099999999999937e-05, 4.1069000000001216e-05, 4.102799999999851e-05, 4.102799999999851e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.1110999999999925e-05, 4.025000000000209e-05, 4.0624999999998995e-05, 4.0847000000000105e-05, 4.075000000000259e-05, 4.068000000000127e-05, 4.105600000000112e-05, 4.1040999999998606e-05, 4.0790999999998356e-05, 4.020799999999991e-05, 4.0596999999999855e-05, 4.049999999999887e-05, 4.101399999999894e-05, 4.026399999999819e-05, 4.04720000000032e-05, 4.0903000000001855e-05, 4.1110999999999925e-05, 4.074999999999912e-05, 4.1125000000002965e-05, 4.052800000000148e-05, 4.052800000000148e-05, 4.107000000000069e-05, 4.1124999999999495e-05, 4.026400000000166e-05, 4.0639000000002035e-05, 4.0458999999999634e-05, 4.0639000000002035e-05, 4.0181000000000244e-05, 4.11119999999994e-05, 4.033399999999951e-05, 4.0583000000000286e-05, 4.0291000000001326e-05, 4.1097000000000355e-05, 4.068000000000127e-05]</msg>
<status status="PASS" starttime="20201110 08:40:18.503" endtime="20201110 08:40:18.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.499" endtime="20201110 08:40:18.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.508" endtime="20201110 08:40:18.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:18.512" endtime="20201110 08:40:18.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.510" endtime="20201110 08:40:18.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.507" endtime="20201110 08:40:18.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.139" endtime="20201110 08:40:18.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.138" endtime="20201110 08:40:18.533"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.542" endtime="20201110 08:40:18.560"></status>
</kw>
<msg timestamp="20201110 08:40:18.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.540" endtime="20201110 08:40:18.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.561" endtime="20201110 08:40:18.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.564" endtime="20201110 08:40:18.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.537" endtime="20201110 08:40:18.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.535" endtime="20201110 08:40:18.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.573" endtime="20201110 08:40:18.859"></status>
</kw>
<msg timestamp="20201110 08:40:18.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.571" endtime="20201110 08:40:18.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021592375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.863" endtime="20201110 08:40:18.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.871" endtime="20201110 08:40:18.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.569" endtime="20201110 08:40:18.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.567" endtime="20201110 08:40:18.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:18.878" level="INFO">${RESULT} = [{'time': 0.021592375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2152999999999635e-05, 'source_diff': 4.2152999999999635e-05}, {'time': 0.021640375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:18.875" endtime="20201110 08:40:18.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:18.891" level="INFO">${ACCURACY} = {'time': [0.021592375, 0.021640375, 0.021689375, 0.021737417, 0.021788375, 0.021839417, 0.021889417, 0.021939403, 0.021988417, 0.022039403, 0.022090444, 0.022141417, 0.022190431, 0.022240431, 0.022289...</msg>
<status status="PASS" starttime="20201110 08:40:18.879" endtime="20201110 08:40:18.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.896" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:40:18.895" endtime="20201110 08:40:18.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.898" level="INFO">VALUE: [4.2152999999999635e-05, 4.1319000000001466e-05, 4.2111000000000925e-05, 4.152799999999901e-05, 4.202799999999951e-05, 4.1902999999999385e-05, 4.1473000000000204e-05, 4.175000000000012e-05, 4.123600000000005e-05, 4.13059999999979e-05, 4.194400000000209e-05, 4.1973000000000704e-05, 4.1486999999999774e-05, 4.1209000000000384e-05, 4.2027000000000037e-05, 4.191599999999948e-05, 4.140200000000288e-05, 4.202799999999951e-05, 4.2054999999999176e-05, 4.1540999999999106e-05, 4.169400000000184e-05, 4.19860000000008e-05, 4.1319000000001466e-05, 4.1708999999997415e-05, 4.154199999999858e-05, 4.179199999999883e-05, 4.206999999999822e-05, 4.205600000000212e-05, 4.2139000000000065e-05, 4.1666999999998705e-05, 4.151399999999944e-05, 4.176399999999969e-05, 4.1152999999998635e-05, 4.159800000000033e-05, 4.1388999999999315e-05, 4.172200000000098e-05, 4.11799999999983e-05, 4.1888999999999815e-05, 4.1277000000002756e-05, 4.1305000000001896e-05, 4.126399999999919e-05, 4.122199999999701e-05, 4.118000000000177e-05, 4.1374999999999745e-05, 4.119399999999787e-05, 4.168000000000227e-05, 4.120799999999744e-05, 4.197200000000123e-05, 4.123600000000005e-05, 4.2097000000001356e-05]</msg>
<status status="PASS" starttime="20201110 08:40:18.897" endtime="20201110 08:40:18.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.892" endtime="20201110 08:40:18.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.902" endtime="20201110 08:40:18.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:18.906" endtime="20201110 08:40:18.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.904" endtime="20201110 08:40:18.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.900" endtime="20201110 08:40:18.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.534" endtime="20201110 08:40:18.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.533" endtime="20201110 08:40:18.927"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.935" endtime="20201110 08:40:18.953"></status>
</kw>
<msg timestamp="20201110 08:40:18.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.934" endtime="20201110 08:40:18.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:18.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:18.955" endtime="20201110 08:40:18.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.957" endtime="20201110 08:40:18.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.931" endtime="20201110 08:40:18.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.929" endtime="20201110 08:40:18.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:18.966" endtime="20201110 08:40:19.252"></status>
</kw>
<msg timestamp="20201110 08:40:19.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020869264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020911972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:18.965" endtime="20201110 08:40:19.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020869264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020911972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:19.256" endtime="20201110 08:40:19.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.265" endtime="20201110 08:40:19.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.962" endtime="20201110 08:40:19.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.960" endtime="20201110 08:40:19.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:19.271" level="INFO">${RESULT} = [{'time': 0.020911972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.270800000000241e-05, 'source_diff': 4.270800000000241e-05}, {'time': 0.020961986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:19.268" endtime="20201110 08:40:19.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:19.285" level="INFO">${ACCURACY} = {'time': [0.020911972, 0.020961986, 0.021013, 0.021065, 0.021114986, 0.021167, 0.021218, 0.021270014, 0.021319028, 0.021372028, 0.021421042, 0.021473056, 0.021523056, 0.021575069, 0.021624056, 0.02167...</msg>
<status status="PASS" starttime="20201110 08:40:19.272" endtime="20201110 08:40:19.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.289" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:40:19.288" endtime="20201110 08:40:19.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.292" level="INFO">VALUE: [4.270800000000241e-05, 4.2402999999999885e-05, 4.2597000000001856e-05, 4.2680999999999275e-05, 4.270799999999894e-05, 4.2374999999997276e-05, 4.244399999999912e-05, 4.275000000000112e-05, 4.232000000000194e-05, 4.308400000000226e-05, 4.2361000000001175e-05, 4.305599999999965e-05, 4.24999999999974e-05, 4.241599999999998e-05, 4.2472999999997735e-05, 4.301400000000094e-05, 4.3138999999997596e-05, 4.242999999999955e-05, 4.252800000000001e-05, 4.2846999999998636e-05, 4.2611000000001426e-05, 4.2653000000000135e-05, 4.252800000000001e-05, 4.2832999999999066e-05, 4.2430999999999025e-05, 4.3096999999998886e-05, 4.226400000000019e-05, 4.2860999999998206e-05, 4.29860000000018e-05, 4.2930999999999525e-05, 4.231999999999847e-05, 4.252800000000001e-05, 4.232000000000194e-05, 4.2987000000001274e-05, 4.297199999999876e-05, 4.259799999999786e-05, 4.2958999999998665e-05, 4.273600000000155e-05, 4.231999999999847e-05, 4.313800000000159e-05, 4.2804999999999926e-05, 4.2653000000000135e-05, 4.2832999999999066e-05, 4.2389000000000315e-05, 4.2818999999999496e-05, 4.2639000000000565e-05, 4.2874999999997776e-05, 4.2903000000000385e-05, 4.2832999999999066e-05, 4.3139000000001065e-05]</msg>
<status status="PASS" starttime="20201110 08:40:19.290" endtime="20201110 08:40:19.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.286" endtime="20201110 08:40:19.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.295" endtime="20201110 08:40:19.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:19.299" endtime="20201110 08:40:19.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.297" endtime="20201110 08:40:19.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.294" endtime="20201110 08:40:19.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.927" endtime="20201110 08:40:19.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:18.927" endtime="20201110 08:40:19.320"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.329" endtime="20201110 08:40:19.345"></status>
</kw>
<msg timestamp="20201110 08:40:19.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:19.327" endtime="20201110 08:40:19.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:19.347" endtime="20201110 08:40:19.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.349" endtime="20201110 08:40:19.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.324" endtime="20201110 08:40:19.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.322" endtime="20201110 08:40:19.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.358" endtime="20201110 08:40:19.645"></status>
</kw>
<msg timestamp="20201110 08:40:19.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:19.356" endtime="20201110 08:40:19.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:19.649" endtime="20201110 08:40:19.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.657" endtime="20201110 08:40:19.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.354" endtime="20201110 08:40:19.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.352" endtime="20201110 08:40:19.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:19.664" level="INFO">${RESULT} = [{'time': 0.019968722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.326400000000119e-05, 'source_diff': 4.326400000000119e-05}, {'time': 0.02001975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:40:19.661" endtime="20201110 08:40:19.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:19.677" level="INFO">${ACCURACY} = {'time': [0.019968722, 0.02001975, 0.020069778, 0.02012075, 0.020172764, 0.020223778, 0.020277778, 0.020330778, 0.020382778, 0.020433833, 0.020484833, 0.020535806, 0.020587833, 0.020639806, 0.02069080...</msg>
<status status="PASS" starttime="20201110 08:40:19.665" endtime="20201110 08:40:19.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.682" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:40:19.681" endtime="20201110 08:40:19.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.685" level="INFO">VALUE: [4.326400000000119e-05, 4.3167000000000205e-05, 4.327800000000076e-05, 4.3167000000000205e-05, 4.3417000000000455e-05, 4.3444999999999595e-05, 4.4152999999998166e-05, 4.3458999999999165e-05, 4.3611000000002426e-05, 4.365199999999819e-05, 4.397199999999976e-05, 4.309800000000183e-05, 4.4069000000000746e-05, 4.329200000000033e-05, 4.4124999999999026e-05, 4.375000000000212e-05, 4.3889000000001815e-05, 4.3569000000000246e-05, 4.4096999999999886e-05, 4.3667000000000705e-05, 4.3332999999999566e-05, 4.351400000000144e-05, 4.3167000000000205e-05, 4.344400000000012e-05, 4.320799999999944e-05, 4.3931000000000525e-05, 4.3318999999999996e-05, 4.4096999999999886e-05, 4.3860999999999206e-05, 4.3681000000000275e-05, 4.3360999999998706e-05, 4.359800000000233e-05, 4.376400000000169e-05, 4.376399999999822e-05, 4.3708999999999415e-05, 4.384800000000258e-05, 4.3860999999999206e-05, 4.3346999999999136e-05, 4.394400000000062e-05, 4.345799999999969e-05, 4.351400000000144e-05, 4.376400000000169e-05, 4.3332999999999566e-05, 4.36800000000008e-05, 4.4083000000000316e-05, 4.373599999999908e-05, 4.397199999999976e-05, 4.377800000000126e-05, 4.370799999999994e-05, 4.3958999999999665e-05]</msg>
<status status="PASS" starttime="20201110 08:40:19.683" endtime="20201110 08:40:19.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.678" endtime="20201110 08:40:19.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.688" endtime="20201110 08:40:19.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:19.692" endtime="20201110 08:40:19.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.690" endtime="20201110 08:40:19.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.687" endtime="20201110 08:40:19.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.321" endtime="20201110 08:40:19.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.320" endtime="20201110 08:40:19.712"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.721" endtime="20201110 08:40:19.736"></status>
</kw>
<msg timestamp="20201110 08:40:19.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:19.720" endtime="20201110 08:40:19.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:19.738" endtime="20201110 08:40:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.740" endtime="20201110 08:40:19.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.717" endtime="20201110 08:40:19.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.715" endtime="20201110 08:40:19.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.750" endtime="20201110 08:40:20.037"></status>
</kw>
<msg timestamp="20201110 08:40:20.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:19.749" endtime="20201110 08:40:20.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:20.042" endtime="20201110 08:40:20.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.050" endtime="20201110 08:40:20.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.746" endtime="20201110 08:40:20.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.744" endtime="20201110 08:40:20.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:20.057" level="INFO">${RESULT} = [{'time': 0.019755597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.442999999999808e-05, 'source_diff': 4.442999999999808e-05}, {'time': 0.019808569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:20.054" endtime="20201110 08:40:20.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:20.072" level="INFO">${ACCURACY} = {'time': [0.019755597, 0.019808569, 0.019860528, 0.019912542, 0.019966542, 0.020019542, 0.020073611, 0.020124569, 0.020175639, 0.020227583, 0.020279639, 0.020330583, 0.020384625, 0.020438597, 0.020490...</msg>
<status status="PASS" starttime="20201110 08:40:20.058" endtime="20201110 08:40:20.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.077" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:40:20.076" endtime="20201110 08:40:20.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.080" level="INFO">VALUE: [4.442999999999808e-05, 4.469400000000137e-05, 4.4888999999999346e-05, 4.4958999999997196e-05, 4.4917000000001955e-05, 4.504200000000208e-05, 4.4555000000001677e-05, 4.430499999999796e-05, 4.430599999999743e-05, 4.451399999999897e-05, 4.4874999999999776e-05, 4.447200000000026e-05, 4.424999999999915e-05, 4.4624999999999526e-05, 4.501399999999947e-05, 4.445799999999722e-05, 4.4917000000001955e-05, 4.4416999999997986e-05, 4.4903000000002385e-05, 4.420800000000044e-05, 4.4181000000000775e-05, 4.498600000000033e-05, 4.451399999999897e-05, 4.4166999999997736e-05, 4.486199999999968e-05, 4.427799999999829e-05, 4.429200000000133e-05, 4.452700000000254e-05, 4.4417000000001455e-05, 4.488799999999987e-05, 4.440199999999894e-05, 4.476399999999922e-05, 4.5125000000000026e-05, 4.504099999999914e-05, 4.427800000000176e-05, 4.4319000000000996e-05, 4.4167000000001205e-05, 4.456999999999725e-05, 4.4431000000001025e-05, 4.4833000000001066e-05, 4.4694999999997376e-05, 4.504199999999861e-05, 4.4195000000000345e-05, 4.505599999999818e-05, 4.5097000000000886e-05, 4.452800000000201e-05, 4.461199999999943e-05, 4.467999999999833e-05, 4.4888999999999346e-05, 4.4874999999999776e-05]</msg>
<status status="PASS" starttime="20201110 08:40:20.078" endtime="20201110 08:40:20.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.073" endtime="20201110 08:40:20.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.088" endtime="20201110 08:40:20.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:20.091" endtime="20201110 08:40:20.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.090" endtime="20201110 08:40:20.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.086" endtime="20201110 08:40:20.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.713" endtime="20201110 08:40:20.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.713" endtime="20201110 08:40:20.112"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.121" endtime="20201110 08:40:20.138"></status>
</kw>
<msg timestamp="20201110 08:40:20.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.120" endtime="20201110 08:40:20.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.139" endtime="20201110 08:40:20.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.142" endtime="20201110 08:40:20.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.117" endtime="20201110 08:40:20.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.115" endtime="20201110 08:40:20.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.151" endtime="20201110 08:40:20.458"></status>
</kw>
<msg timestamp="20201110 08:40:20.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:20.150" endtime="20201110 08:40:20.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020122167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:20.468" endtime="20201110 08:40:20.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.487" endtime="20201110 08:40:20.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.147" endtime="20201110 08:40:20.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.145" endtime="20201110 08:40:20.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:20.494" level="INFO">${RESULT} = [{'time': 0.020167875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.570799999999847e-05, 'source_diff': 4.570799999999847e-05}, {'time': 0.020222875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:20.490" endtime="20201110 08:40:20.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:20.507" level="INFO">${ACCURACY} = {'time': [0.020167875, 0.020222875, 0.020276889, 0.020328889, 0.020383903, 0.020438944, 0.020491903, 0.020543917, 0.020598917, 0.020653958, 0.020706944, 0.020761944, 0.020813944, 0.020866972, 0.020919...</msg>
<status status="PASS" starttime="20201110 08:40:20.495" endtime="20201110 08:40:20.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.515" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:40:20.514" endtime="20201110 08:40:20.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.518" level="INFO">VALUE: [4.570799999999847e-05, 4.5681000000002275e-05, 4.602800000000004e-05, 4.554199999999911e-05, 4.604199999999961e-05, 4.544400000000212e-05, 4.577799999999979e-05, 4.548599999999736e-05, 4.53060000000019e-05, 4.51939999999984e-05, 4.576300000000075e-05, 4.5347000000001136e-05, 4.592999999999958e-05, 4.525000000000015e-05, 4.540199999999994e-05, 4.5639000000000096e-05, 4.525000000000015e-05, 4.5375000000000276e-05, 4.609699999999842e-05, 4.5902999999999916e-05, 4.5666999999999236e-05, 4.5388999999999846e-05, 4.5889000000000346e-05, 4.520800000000144e-05, 4.5639000000000096e-05, 4.604200000000308e-05, 4.552800000000301e-05, 4.5458999999997696e-05, 4.526400000000319e-05, 4.575000000000065e-05, 4.5889000000000346e-05, 4.565200000000019e-05, 4.541600000000298e-05, 4.554100000000311e-05, 4.527799999999929e-05, 4.5889000000000346e-05, 4.570799999999847e-05, 4.530499999999896e-05, 4.522200000000101e-05, 4.58329999999986e-05, 4.526400000000319e-05, 4.5181000000001775e-05, 4.579199999999936e-05, 4.5611000000000956e-05, 4.5694999999998376e-05, 4.556999999999825e-05, 4.5611000000000956e-05, 4.561200000000043e-05, 4.5195000000001345e-05, 4.576300000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:40:20.516" endtime="20201110 08:40:20.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.509" endtime="20201110 08:40:20.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.521" endtime="20201110 08:40:20.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:20.525" endtime="20201110 08:40:20.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.523" endtime="20201110 08:40:20.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.520" endtime="20201110 08:40:20.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.113" endtime="20201110 08:40:20.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.113" endtime="20201110 08:40:20.546"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.555" endtime="20201110 08:40:20.572"></status>
</kw>
<msg timestamp="20201110 08:40:20.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.553" endtime="20201110 08:40:20.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.574" endtime="20201110 08:40:20.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.576" endtime="20201110 08:40:20.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.551" endtime="20201110 08:40:20.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.549" endtime="20201110 08:40:20.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.586" endtime="20201110 08:40:20.873"></status>
</kw>
<msg timestamp="20201110 08:40:20.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02027075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:20.584" endtime="20201110 08:40:20.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02027075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:20.877" endtime="20201110 08:40:20.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.886" endtime="20201110 08:40:20.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.581" endtime="20201110 08:40:20.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.580" endtime="20201110 08:40:20.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:20.892" level="INFO">${RESULT} = [{'time': 0.020317292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.654200000000011e-05, 'source_diff': 4.654200000000011e-05}, {'time': 0.020373278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:20.889" endtime="20201110 08:40:20.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:20.906" level="INFO">${ACCURACY} = {'time': [0.020317292, 0.020373278, 0.020427278, 0.020480292, 0.020535361, 0.020591319, 0.020644347, 0.020700319, 0.020756319, 0.020811333, 0.020866361, 0.020920333, 0.020975389, 0.021031347, 0.021085...</msg>
<status status="PASS" starttime="20201110 08:40:20.893" endtime="20201110 08:40:20.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.910" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:40:20.909" endtime="20201110 08:40:20.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.912" level="INFO">VALUE: [4.654200000000011e-05, 4.6667000000000236e-05, 4.676400000000122e-05, 4.677800000000079e-05, 4.705499999999724e-05, 4.676300000000175e-05, 4.634699999999867e-05, 4.686099999999874e-05, 4.620799999999897e-05, 4.705500000000071e-05, 4.648599999999836e-05, 4.634699999999867e-05, 4.655599999999968e-05, 4.7013999999998e-05, 4.661099999999849e-05, 4.61939999999994e-05, 4.6416999999999986e-05, 4.654200000000011e-05, 4.680599999999993e-05, 4.709699999999942e-05, 4.683400000000254e-05, 4.676400000000122e-05, 4.6223000000001485e-05, 4.683399999999907e-05, 4.687499999999831e-05, 4.697199999999929e-05, 4.661200000000143e-05, 4.708299999999985e-05, 4.66939999999999e-05, 4.695799999999972e-05, 4.656899999999978e-05, 4.617999999999983e-05, 4.616600000000026e-05, 4.622199999999854e-05, 4.634800000000161e-05, 4.681900000000003e-05, 4.6917000000000486e-05, 4.648600000000183e-05, 4.712499999999856e-05, 4.68329999999996e-05, 4.6416999999999986e-05, 4.6458999999998696e-05, 4.662499999999806e-05, 4.6180999999999306e-05, 4.706900000000028e-05, 4.677699999999785e-05, 4.684699999999917e-05, 4.706900000000028e-05, 4.645799999999922e-05, 4.675000000000165e-05]</msg>
<status status="PASS" starttime="20201110 08:40:20.911" endtime="20201110 08:40:20.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.906" endtime="20201110 08:40:20.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.916" endtime="20201110 08:40:20.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:20.919" endtime="20201110 08:40:20.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.918" endtime="20201110 08:40:20.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.914" endtime="20201110 08:40:20.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.547" endtime="20201110 08:40:20.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.546" endtime="20201110 08:40:20.940"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.949" endtime="20201110 08:40:20.966"></status>
</kw>
<msg timestamp="20201110 08:40:20.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.947" endtime="20201110 08:40:20.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:20.967" endtime="20201110 08:40:20.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.969" endtime="20201110 08:40:20.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.945" endtime="20201110 08:40:20.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.943" endtime="20201110 08:40:20.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.978" endtime="20201110 08:40:21.284"></status>
</kw>
<msg timestamp="20201110 08:40:21.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:20.977" endtime="20201110 08:40:21.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:21.293" endtime="20201110 08:40:21.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.303" endtime="20201110 08:40:21.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.974" endtime="20201110 08:40:21.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.972" endtime="20201110 08:40:21.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:21.310" level="INFO">${RESULT} = [{'time': 0.019647014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.761099999999949e-05, 'source_diff': 4.761099999999949e-05}, {'time': 0.019701014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:21.306" endtime="20201110 08:40:21.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:21.323" level="INFO">${ACCURACY} = {'time': [0.019647014, 0.019701014, 0.019756, 0.019811028, 0.019867014, 0.019922028, 0.019978042, 0.020035042, 0.020089042, 0.020146069, 0.020201056, 0.020256097, 0.020311125, 0.020365097, 0.020419125...</msg>
<status status="PASS" starttime="20201110 08:40:21.311" endtime="20201110 08:40:21.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.327" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:40:21.326" endtime="20201110 08:40:21.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.330" level="INFO">VALUE: [4.761099999999949e-05, 4.748599999999936e-05, 4.788899999999888e-05, 4.802800000000204e-05, 4.755599999999721e-05, 4.729200000000086e-05, 4.7625000000002526e-05, 4.726399999999825e-05, 4.748600000000283e-05, 4.769399999999743e-05, 4.808399999999685e-05, 4.762499999999906e-05, 4.774999999999918e-05, 4.731899999999706e-05, 4.763899999999863e-05, 4.747199999999979e-05, 4.801400000000247e-05, 4.809700000000042e-05, 4.745800000000022e-05, 4.761099999999949e-05, 4.73330000000001e-05, 4.754200000000111e-05, 4.797200000000029e-05, 4.726400000000172e-05, 4.733400000000304e-05, 4.759800000000286e-05, 4.734799999999914e-05, 4.726400000000172e-05, 4.7403000000001416e-05, 4.726400000000172e-05, 4.71940000000004e-05, 4.806900000000128e-05, 4.765199999999872e-05, 4.716599999999779e-05, 4.741600000000151e-05, 4.75269999999986e-05, 4.773599999999961e-05, 4.731900000000053e-05, 4.776399999999875e-05, 4.802799999999857e-05, 4.797200000000029e-05, 4.763899999999863e-05, 4.732e-05, 4.748599999999936e-05, 4.799999999999943e-05, 4.804200000000161e-05, 4.76529999999982e-05, 4.788899999999888e-05, 4.7695000000000376e-05, 4.812499999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:40:21.328" endtime="20201110 08:40:21.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.324" endtime="20201110 08:40:21.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.333" endtime="20201110 08:40:21.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:21.337" endtime="20201110 08:40:21.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.335" endtime="20201110 08:40:21.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.332" endtime="20201110 08:40:21.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.941" endtime="20201110 08:40:21.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.941" endtime="20201110 08:40:21.358"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.366" endtime="20201110 08:40:21.382"></status>
</kw>
<msg timestamp="20201110 08:40:21.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:21.365" endtime="20201110 08:40:21.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:21.384" endtime="20201110 08:40:21.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.386" endtime="20201110 08:40:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.362" endtime="20201110 08:40:21.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.360" endtime="20201110 08:40:21.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.395" endtime="20201110 08:40:21.682"></status>
</kw>
<msg timestamp="20201110 08:40:21.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:21.394" endtime="20201110 08:40:21.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:21.687" endtime="20201110 08:40:21.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.695" endtime="20201110 08:40:21.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.391" endtime="20201110 08:40:21.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.389" endtime="20201110 08:40:21.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:21.701" level="INFO">${RESULT} = [{'time': 0.019709708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.880499999999899e-05, 'source_diff': 4.880499999999899e-05}, {'time': 0.019765708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:21.698" endtime="20201110 08:40:21.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:21.716" level="INFO">${ACCURACY} = {'time': [0.019709708, 0.019765708, 0.019822708, 0.019877736, 0.019934722, 0.019990736, 0.020048736, 0.02010575, 0.02016175, 0.02021875, 0.020275778, 0.020333764, 0.020388792, 0.020446792, 0.020502806...</msg>
<status status="PASS" starttime="20201110 08:40:21.702" endtime="20201110 08:40:21.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.721" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:40:21.720" endtime="20201110 08:40:21.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.723" level="INFO">VALUE: [4.880499999999899e-05, 4.895799999999825e-05, 4.90270000000001e-05, 4.838899999999938e-05, 4.856899999999831e-05, 4.817999999999836e-05, 4.898600000000086e-05, 4.899999999999696e-05, 4.841699999999852e-05, 4.837499999999981e-05, 4.8903000000002916e-05, 4.830600000000143e-05, 4.877799999999932e-05, 4.8444999999997657e-05, 4.912499999999709e-05, 4.8959000000001196e-05, 4.834799999999667e-05, 4.849999999999993e-05, 4.893099999999859e-05, 4.829099999999892e-05, 4.836100000000024e-05, 4.840200000000294e-05, 4.847200000000079e-05, 4.906899999999881e-05, 4.841699999999852e-05, 4.827799999999882e-05, 4.863899999999963e-05, 4.913900000000013e-05, 4.827799999999882e-05, 4.826399999999925e-05, 4.898600000000086e-05, 4.822200000000054e-05, 4.836100000000024e-05, 4.898600000000086e-05, 4.869399999999843e-05, 4.833400000000057e-05, 4.847199999999732e-05, 4.909699999999795e-05, 4.894399999999868e-05, 4.894400000000215e-05, 4.81940000000014e-05, 4.898600000000086e-05, 4.870800000000147e-05, 4.877800000000279e-05, 4.847199999999732e-05, 4.824999999999968e-05, 4.905600000000218e-05, 4.876399999999975e-05, 4.847199999999732e-05, 4.8459000000000696e-05]</msg>
<status status="PASS" starttime="20201110 08:40:21.722" endtime="20201110 08:40:21.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.717" endtime="20201110 08:40:21.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.727" endtime="20201110 08:40:21.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:21.730" endtime="20201110 08:40:21.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.728" endtime="20201110 08:40:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.725" endtime="20201110 08:40:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.359" endtime="20201110 08:40:21.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.358" endtime="20201110 08:40:21.751"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.759" endtime="20201110 08:40:21.776"></status>
</kw>
<msg timestamp="20201110 08:40:21.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:21.758" endtime="20201110 08:40:21.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:21.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:21.777" endtime="20201110 08:40:21.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.779" endtime="20201110 08:40:21.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.755" endtime="20201110 08:40:21.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.753" endtime="20201110 08:40:21.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:21.788" endtime="20201110 08:40:22.075"></status>
</kw>
<msg timestamp="20201110 08:40:22.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:21.787" endtime="20201110 08:40:22.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019540931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.079" endtime="20201110 08:40:22.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.087" endtime="20201110 08:40:22.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.784" endtime="20201110 08:40:22.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.783" endtime="20201110 08:40:22.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.094" level="INFO">${RESULT} = [{'time': 0.019590097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916599999999979e-05, 'source_diff': 4.916599999999979e-05}, {'time': 0.019646125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:22.091" endtime="20201110 08:40:22.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:22.107" level="INFO">${ACCURACY} = {'time': [0.019590097, 0.019646125, 0.019706111, 0.019762125, 0.019819125, 0.019878167, 0.019934139, 0.019992153, 0.020049153, 0.020108153, 0.020164181, 0.020224181, 0.020282181, 0.020341181, 0.020401...</msg>
<status status="PASS" starttime="20201110 08:40:22.095" endtime="20201110 08:40:22.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.112" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:40:22.111" endtime="20201110 08:40:22.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.114" level="INFO">VALUE: [4.916599999999979e-05, 4.926400000000025e-05, 5.012499999999809e-05, 4.948599999999789e-05, 4.934700000000167e-05, 4.988899999999741e-05, 4.912500000000056e-05, 4.948599999999789e-05, 4.941699999999952e-05, 4.918099999999884e-05, 4.930599999999896e-05, 5.006999999999928e-05, 4.918099999999884e-05, 5.004200000000014e-05, 5.009700000000242e-05, 4.947200000000179e-05, 4.967999999999986e-05, 5.008299999999938e-05, 4.959700000000192e-05, 4.927799999999982e-05, 5.009699999999895e-05, 4.96530000000002e-05, 4.940299999999995e-05, 5.005599999999971e-05, 4.955600000000268e-05, 5.006999999999928e-05, 5.012500000000156e-05, 4.933400000000157e-05, 4.952800000000007e-05, 5.0014000000001e-05, 4.979199999999989e-05, 4.986200000000121e-05, 4.961200000000096e-05, 4.942999999999961e-05, 4.922199999999807e-05, 4.941600000000004e-05, 4.990300000000045e-05, 4.962500000000106e-05, 4.993000000000011e-05, 4.93469999999982e-05, 4.9707999999999e-05, 4.95140000000005e-05, 4.976400000000075e-05, 4.958400000000182e-05, 5.000000000000143e-05, 4.98339999999986e-05, 4.994399999999968e-05, 4.936200000000071e-05, 4.9320000000002e-05, 4.9209000000001446e-05]</msg>
<status status="PASS" starttime="20201110 08:40:22.113" endtime="20201110 08:40:22.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.108" endtime="20201110 08:40:22.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.118" endtime="20201110 08:40:22.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:22.121" endtime="20201110 08:40:22.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.120" endtime="20201110 08:40:22.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.116" endtime="20201110 08:40:22.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.752" endtime="20201110 08:40:22.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:21.751" endtime="20201110 08:40:22.142"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.151" endtime="20201110 08:40:22.168"></status>
</kw>
<msg timestamp="20201110 08:40:22.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.149" endtime="20201110 08:40:22.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.169" endtime="20201110 08:40:22.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.172" endtime="20201110 08:40:22.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.147" endtime="20201110 08:40:22.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.144" endtime="20201110 08:40:22.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.181" endtime="20201110 08:40:22.468"></status>
</kw>
<msg timestamp="20201110 08:40:22.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:22.179" endtime="20201110 08:40:22.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01959025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:22.472" endtime="20201110 08:40:22.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.480" endtime="20201110 08:40:22.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.177" endtime="20201110 08:40:22.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.175" endtime="20201110 08:40:22.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.487" level="INFO">${RESULT} = [{'time': 0.019640792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.054200000000064e-05, 'source_diff': 5.054200000000064e-05}, {'time': 0.019698792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:22.483" endtime="20201110 08:40:22.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:22.500" level="INFO">${ACCURACY} = {'time': [0.019640792, 0.019698792, 0.019757819, 0.019815847, 0.019874819, 0.019931861, 0.019991833, 0.020049833, 0.020107861, 0.020166847, 0.020225861, 0.020283903, 0.020340861, 0.020400875, 0.020460...</msg>
<status status="PASS" starttime="20201110 08:40:22.488" endtime="20201110 08:40:22.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.504" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:40:22.503" endtime="20201110 08:40:22.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.507" level="INFO">VALUE: [5.054200000000064e-05, 5.074999999999871e-05, 5.106900000000081e-05, 5.025000000000168e-05, 5.108299999999691e-05, 5.040299999999748e-05, 5.075000000000218e-05, 5.027699999999788e-05, 5.108300000000038e-05, 5.044400000000018e-05, 5.087500000000231e-05, 5.109699999999995e-05, 5.05279999999976e-05, 5.058299999999988e-05, 5.027800000000082e-05, 5.095899999999973e-05, 5.05279999999976e-05, 5.08339999999996e-05, 5.036099999999877e-05, 5.074999999999871e-05, 5.0472999999998797e-05, 5.107000000000028e-05, 5.058399999999935e-05, 5.029200000000039e-05, 5.0415999999997574e-05, 5.041600000000104e-05, 5.105499999999777e-05, 5.033299999999963e-05, 5.08469999999997e-05, 5.075000000000218e-05, 5.112500000000256e-05, 5.052800000000107e-05, 5.049999999999846e-05, 5.045899999999923e-05, 5.048599999999889e-05, 5.047199999999932e-05, 5.061099999999902e-05, 5.027800000000082e-05, 5.036200000000171e-05, 5.068100000000034e-05, 5.029200000000039e-05, 5.045799999999975e-05, 5.047199999999932e-05, 5.0708e-05, 5.066700000000077e-05, 5.023599999999864e-05, 5.0929999999997644e-05, 5.02079999999995e-05, 5.077800000000132e-05, 5.051399999999803e-05]</msg>
<status status="PASS" starttime="20201110 08:40:22.505" endtime="20201110 08:40:22.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.501" endtime="20201110 08:40:22.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.510" endtime="20201110 08:40:22.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:22.514" endtime="20201110 08:40:22.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.512" endtime="20201110 08:40:22.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.509" endtime="20201110 08:40:22.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.143" endtime="20201110 08:40:22.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.142" endtime="20201110 08:40:22.535"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.543" endtime="20201110 08:40:22.561"></status>
</kw>
<msg timestamp="20201110 08:40:22.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.542" endtime="20201110 08:40:22.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.563" endtime="20201110 08:40:22.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.565" endtime="20201110 08:40:22.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.539" endtime="20201110 08:40:22.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.537" endtime="20201110 08:40:22.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.574" endtime="20201110 08:40:22.860"></status>
</kw>
<msg timestamp="20201110 08:40:22.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.573" endtime="20201110 08:40:22.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.864" endtime="20201110 08:40:22.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.872" endtime="20201110 08:40:22.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.570" endtime="20201110 08:40:22.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.568" endtime="20201110 08:40:22.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.879" level="INFO">${RESULT} = [{'time': 0.019690014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.179199999999842e-05, 'source_diff': 5.179199999999842e-05}, {'time': 0.019750028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:22.876" endtime="20201110 08:40:22.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:22.892" level="INFO">${ACCURACY} = {'time': [0.019690014, 0.019750028, 0.019808028, 0.019867028, 0.019926042, 0.019987056, 0.020045042, 0.020106083, 0.020164083, 0.020224083, 0.020285069, 0.020344083, 0.020402097, 0.020462097, 0.020522...</msg>
<status status="PASS" starttime="20201110 08:40:22.880" endtime="20201110 08:40:22.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.897" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:40:22.896" endtime="20201110 08:40:22.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.899" level="INFO">VALUE: [5.179199999999842e-05, 5.194499999999769e-05, 5.193099999999812e-05, 5.188899999999941e-05, 5.195900000000073e-05, 5.173699999999962e-05, 5.15279999999986e-05, 5.123599999999964e-05, 5.131899999999759e-05, 5.145800000000075e-05, 5.1665999999998824e-05, 5.212500000000009e-05, 5.1666000000002293e-05, 5.1971999999997354e-05, 5.181899999999809e-05, 5.181900000000156e-05, 5.163899999999916e-05, 5.184699999999723e-05, 5.172200000000057e-05, 5.1708000000001e-05, 5.194499999999769e-05, 5.116700000000127e-05, 5.191699999999855e-05, 5.193100000000159e-05, 5.195899999999726e-05, 5.180600000000146e-05, 5.18470000000007e-05, 5.122200000000007e-05, 5.174999999999971e-05, 5.181900000000156e-05, 5.1679999999998394e-05, 5.12080000000005e-05, 5.133299999999716e-05, 5.156900000000131e-05, 5.148599999999989e-05, 5.1971999999997354e-05, 5.125000000000268e-05, 5.147200000000032e-05, 5.188899999999941e-05, 5.122200000000007e-05, 5.137499999999934e-05, 5.212500000000009e-05, 5.198600000000039e-05, 5.1638000000003154e-05, 5.12080000000005e-05, 5.1887999999999934e-05, 5.199999999999996e-05, 5.176300000000328e-05, 5.12080000000005e-05, 5.198600000000039e-05]</msg>
<status status="PASS" starttime="20201110 08:40:22.898" endtime="20201110 08:40:22.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.893" endtime="20201110 08:40:22.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.903" endtime="20201110 08:40:22.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:22.906" endtime="20201110 08:40:22.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.905" endtime="20201110 08:40:22.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.901" endtime="20201110 08:40:22.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.536" endtime="20201110 08:40:22.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.535" endtime="20201110 08:40:22.927"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.936" endtime="20201110 08:40:22.951"></status>
</kw>
<msg timestamp="20201110 08:40:22.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.934" endtime="20201110 08:40:22.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:22.953" endtime="20201110 08:40:22.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.955" endtime="20201110 08:40:22.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.932" endtime="20201110 08:40:22.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.930" endtime="20201110 08:40:22.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.964" endtime="20201110 08:40:23.252"></status>
</kw>
<msg timestamp="20201110 08:40:23.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.963" endtime="20201110 08:40:23.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:23.256" endtime="20201110 08:40:23.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.264" endtime="20201110 08:40:23.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.960" endtime="20201110 08:40:23.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.958" endtime="20201110 08:40:23.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:23.270" level="INFO">${RESULT} = [{'time': 0.019628889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.230599999999849e-05, 'source_diff': 5.230599999999849e-05}, {'time': 0.019690944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:23.267" endtime="20201110 08:40:23.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:23.285" level="INFO">${ACCURACY} = {'time': [0.019628889, 0.019690944, 0.019752917, 0.019813917, 0.019873917, 0.019935931, 0.019997931, 0.020056958, 0.020116958, 0.020176972, 0.020239, 0.020300986, 0.020362972, 0.020421986, 0.020482986...</msg>
<status status="PASS" starttime="20201110 08:40:23.271" endtime="20201110 08:40:23.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.290" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:40:23.289" endtime="20201110 08:40:23.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.292" level="INFO">VALUE: [5.230599999999849e-05, 5.28609999999978e-05, 5.280599999999899e-05, 5.286100000000127e-05, 5.282000000000203e-05, 5.282000000000203e-05, 5.309800000000142e-05, 5.230499999999902e-05, 5.2165999999999324e-05, 5.287500000000084e-05, 5.311100000000152e-05, 5.2693999999998964e-05, 5.286100000000127e-05, 5.248600000000089e-05, 5.275000000000071e-05, 5.302799999999663e-05, 5.311200000000099e-05, 5.222200000000107e-05, 5.21669999999988e-05, 5.255599999999874e-05, 5.2943999999999214e-05, 5.222300000000055e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.262499999999712e-05, 5.252700000000013e-05, 5.233300000000163e-05, 5.2457999999998284e-05, 5.2193999999998464e-05, 5.2679999999999394e-05, 5.308299999999891e-05, 5.216700000000227e-05, 5.279199999999942e-05, 5.300000000000096e-05, 5.283299999999866e-05, 5.300000000000096e-05, 5.308399999999838e-05, 5.2749999999997244e-05, 5.2721999999998104e-05, 5.28340000000016e-05, 5.24730000000008e-05, 5.251400000000003e-05, 5.298600000000139e-05, 5.2430000000002613e-05, 5.262500000000059e-05, 5.236100000000077e-05, 5.280500000000299e-05, 5.2443999999998714e-05, 5.30410000000002e-05, 5.2693999999998964e-05]</msg>
<status status="PASS" starttime="20201110 08:40:23.291" endtime="20201110 08:40:23.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.286" endtime="20201110 08:40:23.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.296" endtime="20201110 08:40:23.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:23.299" endtime="20201110 08:40:23.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.298" endtime="20201110 08:40:23.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.294" endtime="20201110 08:40:23.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.928" endtime="20201110 08:40:23.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.927" endtime="20201110 08:40:23.320"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.328" endtime="20201110 08:40:23.344"></status>
</kw>
<msg timestamp="20201110 08:40:23.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:23.327" endtime="20201110 08:40:23.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:23.346" endtime="20201110 08:40:23.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.348" endtime="20201110 08:40:23.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.324" endtime="20201110 08:40:23.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.322" endtime="20201110 08:40:23.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.357" endtime="20201110 08:40:23.644"></status>
</kw>
<msg timestamp="20201110 08:40:23.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:23.356" endtime="20201110 08:40:23.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:23.648" endtime="20201110 08:40:23.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.657" endtime="20201110 08:40:23.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.353" endtime="20201110 08:40:23.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.351" endtime="20201110 08:40:23.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:23.663" level="INFO">${RESULT} = [{'time': 0.019559694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.327699999999741e-05, 'source_diff': 5.327699999999741e-05}, {'time': 0.019621653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:23.660" endtime="20201110 08:40:23.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:23.676" level="INFO">${ACCURACY} = {'time': [0.019559694, 0.019621653, 0.019681653, 0.019743667, 0.019805667, 0.019867667, 0.01992975, 0.019991722, 0.020052694, 0.020114708, 0.020174708, 0.020235736, 0.020298736, 0.020360778, 0.0204217...</msg>
<status status="PASS" starttime="20201110 08:40:23.664" endtime="20201110 08:40:23.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.681" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:40:23.680" endtime="20201110 08:40:23.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.683" level="INFO">VALUE: [5.327699999999741e-05, 5.351400000000103e-05, 5.365300000000073e-05, 5.412499999999862e-05, 5.33479999999982e-05, 5.3985999999998924e-05, 5.376400000000128e-05, 5.415300000000123e-05, 5.408299999999991e-05, 5.3749999999998244e-05, 5.355500000000027e-05, 5.40280000000011e-05, 5.322200000000207e-05, 5.406999999999981e-05, 5.354200000000017e-05, 5.404200000000067e-05, 5.354200000000017e-05, 5.329199999999992e-05, 5.393100000000012e-05, 5.376400000000128e-05, 5.409799999999895e-05, 5.411199999999852e-05, 5.334800000000167e-05, 5.3443999999999714e-05, 5.3443999999999714e-05, 5.3165999999996855e-05, 5.33470000000022e-05, 5.373600000000214e-05, 5.380500000000052e-05, 5.356899999999984e-05, 5.330500000000002e-05, 5.40419999999972e-05, 5.3957999999999784e-05, 5.384699999999923e-05, 5.341700000000005e-05, 5.405500000000077e-05, 5.413899999999819e-05, 5.343099999999962e-05, 5.3999999999998494e-05, 5.343099999999962e-05, 5.31669999999998e-05, 5.3985999999998924e-05, 5.372300000000205e-05, 5.333300000000263e-05, 5.3638000000001684e-05, 5.3457999999999284e-05, 5.350000000000146e-05, 5.359699999999898e-05, 5.3221999999998604e-05, 5.333300000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:40:23.682" endtime="20201110 08:40:23.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.677" endtime="20201110 08:40:23.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.687" endtime="20201110 08:40:23.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:23.690" endtime="20201110 08:40:23.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.689" endtime="20201110 08:40:23.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.685" endtime="20201110 08:40:23.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.321" endtime="20201110 08:40:23.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.320" endtime="20201110 08:40:23.711"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.720" endtime="20201110 08:40:23.737"></status>
</kw>
<msg timestamp="20201110 08:40:23.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:23.718" endtime="20201110 08:40:23.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:23.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:23.739" endtime="20201110 08:40:23.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.741" endtime="20201110 08:40:23.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.716" endtime="20201110 08:40:23.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.714" endtime="20201110 08:40:23.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.750" endtime="20201110 08:40:24.037"></status>
</kw>
<msg timestamp="20201110 08:40:24.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:23.748" endtime="20201110 08:40:24.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.041" endtime="20201110 08:40:24.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.049" endtime="20201110 08:40:24.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.746" endtime="20201110 08:40:24.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.744" endtime="20201110 08:40:24.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:24.056" level="INFO">${RESULT} = [{'time': 0.020162264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4208000000000034e-05, 'source_diff': 5.4208000000000034e-05}, {'time': 0.020226264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:24.052" endtime="20201110 08:40:24.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:24.069" level="INFO">${ACCURACY} = {'time': [0.020162264, 0.020226264, 0.020289292, 0.020350292, 0.020412292, 0.020474319, 0.020536319, 0.020597403, 0.020661333, 0.020722347, 0.020784347, 0.020848389, 0.020911347, 0.020975375, 0.021038...</msg>
<status status="PASS" starttime="20201110 08:40:24.057" endtime="20201110 08:40:24.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.073" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:40:24.072" endtime="20201110 08:40:24.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.076" level="INFO">VALUE: [5.4208000000000034e-05, 5.450000000000246e-05, 5.483400000000013e-05, 5.437499999999887e-05, 5.416699999999733e-05, 5.425000000000221e-05, 5.4458000000000284e-05, 5.437499999999887e-05, 5.5013999999999064e-05, 5.4513999999998564e-05, 5.513900000000266e-05, 5.443099999999715e-05, 5.431900000000059e-05, 5.4694000000000964e-05, 5.487499999999937e-05, 5.505599999999777e-05, 5.438899999999844e-05, 5.469500000000044e-05, 5.484700000000023e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.484800000000317e-05, 5.458399999999988e-05, 5.505599999999777e-05, 5.4249999999998744e-05, 5.4999999999999494e-05, 5.511100000000005e-05, 5.4194000000000464e-05, 5.462499999999912e-05, 5.472300000000305e-05, 5.48609999999998e-05, 5.4179999999997425e-05, 5.4208000000000034e-05, 5.4471999999999854e-05, 5.4735999999999674e-05, 5.479200000000142e-05, 5.480600000000099e-05, 5.504200000000167e-05, 5.454200000000117e-05, 5.480600000000099e-05, 5.491699999999808e-05, 5.4666000000001824e-05, 5.4735999999999674e-05, 5.4749999999999244e-05, 5.487499999999937e-05, 5.4457999999996815e-05, 5.431900000000059e-05, 5.4221999999999604e-05, 5.458399999999988e-05, 5.46809999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:40:24.075" endtime="20201110 08:40:24.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.070" endtime="20201110 08:40:24.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.079" endtime="20201110 08:40:24.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:24.083" endtime="20201110 08:40:24.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.081" endtime="20201110 08:40:24.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.078" endtime="20201110 08:40:24.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.712" endtime="20201110 08:40:24.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.711" endtime="20201110 08:40:24.104"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.112" endtime="20201110 08:40:24.130"></status>
</kw>
<msg timestamp="20201110 08:40:24.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.111" endtime="20201110 08:40:24.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.131" endtime="20201110 08:40:24.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.134" endtime="20201110 08:40:24.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.108" endtime="20201110 08:40:24.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.106" endtime="20201110 08:40:24.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.143" endtime="20201110 08:40:24.430"></status>
</kw>
<msg timestamp="20201110 08:40:24.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.141" endtime="20201110 08:40:24.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.434" endtime="20201110 08:40:24.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.442" endtime="20201110 08:40:24.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.139" endtime="20201110 08:40:24.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.137" endtime="20201110 08:40:24.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:24.449" level="INFO">${RESULT} = [{'time': 0.019601931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.590299999999951e-05, 'source_diff': 5.590299999999951e-05}, {'time': 0.019666958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:24.446" endtime="20201110 08:40:24.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:24.462" level="INFO">${ACCURACY} = {'time': [0.019601931, 0.019666958, 0.019730972, 0.019794972, 0.019859958, 0.019922972, 0.019988042, 0.020050986, 0.020116, 0.020180014, 0.020244014, 0.020306028, 0.020369014, 0.020431097, 0.020496056...</msg>
<status status="PASS" starttime="20201110 08:40:24.450" endtime="20201110 08:40:24.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.467" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:40:24.466" endtime="20201110 08:40:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.469" level="INFO">VALUE: [5.590299999999951e-05, 5.5401999999999535e-05, 5.5665999999999355e-05, 5.55280000000026e-05, 5.561100000000055e-05, 5.5527999999999134e-05, 5.545900000000076e-05, 5.5708000000001534e-05, 5.586099999999733e-05, 5.588899999999994e-05, 5.580600000000199e-05, 5.53610000000003e-05, 5.55280000000026e-05, 5.537499999999987e-05, 5.5277999999998884e-05, 5.561200000000002e-05, 5.611100000000105e-05, 5.5236000000000174e-05, 5.5193999999997995e-05, 5.584700000000123e-05, 5.5707999999998065e-05, 5.588899999999994e-05, 5.5415999999999105e-05, 5.53610000000003e-05, 5.588899999999994e-05, 5.5958000000001784e-05, 5.5207999999997565e-05, 5.534700000000073e-05, 5.540299999999901e-05, 5.562500000000012e-05, 5.5777999999999384e-05, 5.51670000000018e-05, 5.5263999999999314e-05, 5.609800000000095e-05, 5.5958000000001784e-05, 5.563899999999969e-05, 5.5207999999997565e-05, 5.5236000000000174e-05, 5.6151999999996816e-05, 5.613900000000019e-05, 5.577800000000285e-05, 5.5777999999999384e-05, 5.533300000000116e-05, 5.58749999999969e-05, 5.5249999999999744e-05, 5.5985999999997454e-05, 5.6055999999998773e-05, 5.6000000000000494e-05, 5.583400000000113e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:40:24.468" endtime="20201110 08:40:24.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.463" endtime="20201110 08:40:24.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.473" endtime="20201110 08:40:24.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:24.476" endtime="20201110 08:40:24.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.475" endtime="20201110 08:40:24.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.471" endtime="20201110 08:40:24.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.105" endtime="20201110 08:40:24.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.104" endtime="20201110 08:40:24.497"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.506" endtime="20201110 08:40:24.524"></status>
</kw>
<msg timestamp="20201110 08:40:24.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.504" endtime="20201110 08:40:24.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.525" endtime="20201110 08:40:24.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.527" endtime="20201110 08:40:24.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.502" endtime="20201110 08:40:24.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.499" endtime="20201110 08:40:24.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.536" endtime="20201110 08:40:24.828"></status>
</kw>
<msg timestamp="20201110 08:40:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.535" endtime="20201110 08:40:24.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.834" endtime="20201110 08:40:24.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.844" endtime="20201110 08:40:24.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.532" endtime="20201110 08:40:24.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.531" endtime="20201110 08:40:24.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:24.853" level="INFO">${RESULT} = [{'time': 0.019703875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6499999999997524e-05, 'source_diff': 5.6499999999997524e-05}, {'time': 0.019769875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:24.849" endtime="20201110 08:40:24.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:24.870" level="INFO">${ACCURACY} = {'time': [0.019703875, 0.019769875, 0.019833889, 0.019899917, 0.019962917, 0.020027903, 0.020091931, 0.020155931, 0.020221931, 0.020288944, 0.020353944, 0.020418972, 0.020483014, 0.020549972, 0.020613...</msg>
<status status="PASS" starttime="20201110 08:40:24.854" endtime="20201110 08:40:24.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.875" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:40:24.874" endtime="20201110 08:40:24.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.877" level="INFO">VALUE: [5.6499999999997524e-05, 5.6264000000000314e-05, 5.61809999999989e-05, 5.647300000000133e-05, 5.6486000000001424e-05, 5.615299999999976e-05, 5.620900000000151e-05, 5.6749999999997774e-05, 5.658399999999841e-05, 5.709699999999901e-05, 5.6985999999998455e-05, 5.640300000000001e-05, 5.7069999999999343e-05, 5.706899999999987e-05, 5.663900000000069e-05, 5.6707999999999065e-05, 5.684700000000223e-05, 5.706899999999987e-05, 5.6513999999997094e-05, 5.619500000000194e-05, 5.6222000000001604e-05, 5.7042000000000204e-05, 5.6722000000002104e-05, 5.648699999999743e-05, 5.6999999999998024e-05, 5.7165999999997386e-05, 5.640300000000001e-05, 5.652700000000066e-05, 5.68749999999979e-05, 5.6735999999998205e-05, 5.6999999999998024e-05, 5.6457999999998815e-05, 5.6707999999999065e-05, 5.6971999999998885e-05, 5.6528000000000134e-05, 5.6721999999998635e-05, 5.708400000000238e-05, 5.6277999999999884e-05, 5.6819999999999093e-05, 5.6791999999999954e-05, 5.6485999999997955e-05, 5.688900000000094e-05, 5.654100000000023e-05, 5.6930000000000175e-05, 5.627699999999694e-05, 5.6165999999999855e-05, 5.677699999999744e-05, 5.708299999999944e-05, 5.688899999999747e-05, 5.63749999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:40:24.876" endtime="20201110 08:40:24.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.871" endtime="20201110 08:40:24.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.881" endtime="20201110 08:40:24.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:24.884" endtime="20201110 08:40:24.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.882" endtime="20201110 08:40:24.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.879" endtime="20201110 08:40:24.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.498" endtime="20201110 08:40:24.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.497" endtime="20201110 08:40:24.905"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.914" endtime="20201110 08:40:24.931"></status>
</kw>
<msg timestamp="20201110 08:40:24.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.912" endtime="20201110 08:40:24.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:24.932" endtime="20201110 08:40:24.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.935" endtime="20201110 08:40:24.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.910" endtime="20201110 08:40:24.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.907" endtime="20201110 08:40:24.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.944" endtime="20201110 08:40:25.231"></status>
</kw>
<msg timestamp="20201110 08:40:25.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:24.942" endtime="20201110 08:40:25.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019991764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.236" endtime="20201110 08:40:25.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.244" endtime="20201110 08:40:25.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.940" endtime="20201110 08:40:25.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.938" endtime="20201110 08:40:25.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:25.251" level="INFO">${RESULT} = [{'time': 0.020049389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762500000000212e-05, 'source_diff': 5.762500000000212e-05}, {'time': 0.020113347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:25.247" endtime="20201110 08:40:25.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:25.264" level="INFO">${ACCURACY} = {'time': [0.020049389, 0.020113347, 0.020179333, 0.020245361, 0.020312361, 0.020378375, 0.020443361, 0.020509375, 0.020573389, 0.020638389, 0.020704403, 0.020769472, 0.020835417, 0.020902417, 0.020966...</msg>
<status status="PASS" starttime="20201110 08:40:25.252" endtime="20201110 08:40:25.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.268" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:40:25.267" endtime="20201110 08:40:25.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.271" level="INFO">VALUE: [5.762500000000212e-05, 5.7430000000000675e-05, 5.733299999999969e-05, 5.7542000000000704e-05, 5.7680000000000925e-05, 5.71809999999999e-05, 5.763900000000169e-05, 5.7457999999999815e-05, 5.787500000000237e-05, 5.769499999999997e-05, 5.7583999999999413e-05, 5.7999999999999025e-05, 5.745899999999929e-05, 5.759799999999898e-05, 5.737500000000187e-05, 5.7805999999997054e-05, 5.75550000000008e-05, 5.7208000000003034e-05, 5.7764000000001814e-05, 5.765300000000126e-05, 5.812499999999915e-05, 5.791700000000108e-05, 5.786099999999933e-05, 5.7971999999999885e-05, 5.7278000000000884e-05, 5.78749999999989e-05, 5.762499999999865e-05, 5.759799999999898e-05, 5.7527999999997664e-05, 5.741700000000058e-05, 5.7985999999999455e-05, 5.7763999999998344e-05, 5.7250000000001744e-05, 5.7430000000000675e-05, 5.7930000000001175e-05, 5.762500000000212e-05, 5.716700000000033e-05, 5.812499999999915e-05, 5.7278000000000884e-05, 5.720899999999904e-05, 5.73749999999984e-05, 5.758299999999994e-05, 5.7306000000000024e-05, 5.7791999999997484e-05, 5.770899999999954e-05, 5.7806000000000524e-05, 5.7556000000000274e-05, 5.747299999999886e-05, 5.770900000000301e-05, 5.730500000000055e-05]</msg>
<status status="PASS" starttime="20201110 08:40:25.269" endtime="20201110 08:40:25.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.265" endtime="20201110 08:40:25.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.275" endtime="20201110 08:40:25.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:25.278" endtime="20201110 08:40:25.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.277" endtime="20201110 08:40:25.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.273" endtime="20201110 08:40:25.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.906" endtime="20201110 08:40:25.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.905" endtime="20201110 08:40:25.299"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.308" endtime="20201110 08:40:25.325"></status>
</kw>
<msg timestamp="20201110 08:40:25.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:25.306" endtime="20201110 08:40:25.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:25.326" endtime="20201110 08:40:25.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.329" endtime="20201110 08:40:25.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.304" endtime="20201110 08:40:25.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.302" endtime="20201110 08:40:25.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.338" endtime="20201110 08:40:25.624"></status>
</kw>
<msg timestamp="20201110 08:40:25.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.336" endtime="20201110 08:40:25.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.628" endtime="20201110 08:40:25.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.637" endtime="20201110 08:40:25.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.334" endtime="20201110 08:40:25.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.332" endtime="20201110 08:40:25.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:25.643" level="INFO">${RESULT} = [{'time': 0.019635847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.865300000000226e-05, 'source_diff': 5.865300000000226e-05}, {'time': 0.019702792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:25.640" endtime="20201110 08:40:25.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:25.656" level="INFO">${ACCURACY} = {'time': [0.019635847, 0.019702792, 0.019771792, 0.019839806, 0.019904806, 0.019971806, 0.020039819, 0.020105819, 0.020170903, 0.020237847, 0.020305861, 0.020373875, 0.020438861, 0.020505875, 0.020570...</msg>
<status status="PASS" starttime="20201110 08:40:25.644" endtime="20201110 08:40:25.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.661" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:40:25.660" endtime="20201110 08:40:25.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.663" level="INFO">VALUE: [5.865300000000226e-05, 5.8513999999999095e-05, 5.913899999999972e-05, 5.84870000000029e-05, 5.869500000000097e-05, 5.893100000000165e-05, 5.8387999999999496e-05, 5.826299999999937e-05, 5.836099999999983e-05, 5.83749999999994e-05, 5.863900000000269e-05, 5.8708000000001065e-05, 5.8249999999999275e-05, 5.883300000000119e-05, 5.836099999999983e-05, 5.8792000000001954e-05, 5.838899999999897e-05, 5.890299999999904e-05, 5.863899999999922e-05, 5.891699999999861e-05, 5.861100000000008e-05, 5.866699999999836e-05, 5.905499999999883e-05, 5.862499999999965e-05, 5.913899999999972e-05, 5.880499999999858e-05, 5.8763999999999345e-05, 5.909700000000101e-05, 5.913899999999972e-05, 5.840299999999854e-05, 5.8528000000002134e-05, 5.8791999999998484e-05, 5.909700000000101e-05, 5.83749999999994e-05, 5.8820000000001094e-05, 5.897300000000036e-05, 5.8320000000000594e-05, 5.841700000000158e-05, 5.8416000000002105e-05, 5.9138000000000246e-05, 5.8416000000002105e-05, 5.863900000000269e-05, 5.8277999999998414e-05, 5.8556000000001274e-05, 5.8680000000001925e-05, 5.833300000000069e-05, 5.872300000000011e-05, 5.8542000000001704e-05, 5.861100000000008e-05, 5.9027999999999164e-05]</msg>
<status status="PASS" starttime="20201110 08:40:25.662" endtime="20201110 08:40:25.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.657" endtime="20201110 08:40:25.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.667" endtime="20201110 08:40:25.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:25.670" endtime="20201110 08:40:25.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.669" endtime="20201110 08:40:25.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.665" endtime="20201110 08:40:25.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.300" endtime="20201110 08:40:25.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.300" endtime="20201110 08:40:25.691"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.700" endtime="20201110 08:40:25.716"></status>
</kw>
<msg timestamp="20201110 08:40:25.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:25.698" endtime="20201110 08:40:25.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:25.717" endtime="20201110 08:40:25.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.720" endtime="20201110 08:40:25.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.696" endtime="20201110 08:40:25.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.694" endtime="20201110 08:40:25.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.729" endtime="20201110 08:40:26.015"></status>
</kw>
<msg timestamp="20201110 08:40:26.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.727" endtime="20201110 08:40:26.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.019" endtime="20201110 08:40:26.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.028" endtime="20201110 08:40:26.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.725" endtime="20201110 08:40:26.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.723" endtime="20201110 08:40:26.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:26.034" level="INFO">${RESULT} = [{'time': 0.019641931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9542000000002704e-05, 'source_diff': 5.9542000000002704e-05}, {'time': 0.019709889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:26.031" endtime="20201110 08:40:26.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:26.047" level="INFO">${ACCURACY} = {'time': [0.019641931, 0.019709889, 0.019776889, 0.019843889, 0.019909903, 0.019978958, 0.020045917, 0.020113931, 0.020182944, 0.020250986, 0.020319958, 0.020385958, 0.020452972, 0.020518972, 0.020584...</msg>
<status status="PASS" starttime="20201110 08:40:26.035" endtime="20201110 08:40:26.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.052" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:40:26.051" endtime="20201110 08:40:26.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.054" level="INFO">VALUE: [5.9542000000002704e-05, 5.9222000000001135e-05, 5.9457999999998346e-05, 5.993099999999918e-05, 5.9305999999998554e-05, 5.930500000000255e-05, 5.9486000000000955e-05, 5.9848000000001234e-05, 5.979100000000001e-05, 6.0041999999999734e-05, 6.009699999999854e-05, 5.93750000000004e-05, 5.9250000000000275e-05, 5.98750000000009e-05, 5.936100000000083e-05, 5.981900000000262e-05, 5.933300000000169e-05, 5.934699999999779e-05, 5.95689999999989e-05, 5.9486000000000955e-05, 6.011099999999811e-05, 5.993100000000265e-05, 5.9971999999998415e-05, 5.9750000000000775e-05, 5.93750000000004e-05, 6.011100000000158e-05, 5.9527999999999665e-05, 5.97629999999974e-05, 5.931900000000212e-05, 6.013899999999725e-05, 5.940299999999954e-05, 5.916699999999886e-05, 5.915300000000276e-05, 5.9722000000001635e-05, 5.9306000000002024e-05, 5.959700000000151e-05, 5.9541999999999234e-05, 5.941699999999911e-05, 5.9541999999999234e-05, 5.9263999999999845e-05, 5.952700000000019e-05, 5.9165999999999386e-05, 5.9707999999998596e-05, 5.9415999999999636e-05, 5.941699999999911e-05, 5.9693999999999026e-05, 5.95550000000028e-05, 5.962500000000065e-05, 5.9929999999999706e-05, 5.9986000000001455e-05]</msg>
<status status="PASS" starttime="20201110 08:40:26.053" endtime="20201110 08:40:26.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.048" endtime="20201110 08:40:26.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.058" endtime="20201110 08:40:26.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:26.061" endtime="20201110 08:40:26.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.060" endtime="20201110 08:40:26.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.056" endtime="20201110 08:40:26.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.692" endtime="20201110 08:40:26.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.692" endtime="20201110 08:40:26.082"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.091" endtime="20201110 08:40:26.108"></status>
</kw>
<msg timestamp="20201110 08:40:26.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.089" endtime="20201110 08:40:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.110" endtime="20201110 08:40:26.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.112" endtime="20201110 08:40:26.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.087" endtime="20201110 08:40:26.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.085" endtime="20201110 08:40:26.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.121" endtime="20201110 08:40:26.409"></status>
</kw>
<msg timestamp="20201110 08:40:26.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.120" endtime="20201110 08:40:26.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.413" endtime="20201110 08:40:26.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.421" endtime="20201110 08:40:26.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.117" endtime="20201110 08:40:26.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.116" endtime="20201110 08:40:26.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:26.428" level="INFO">${RESULT} = [{'time': 0.019793528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0555999999999804e-05, 'source_diff': 6.0555999999999804e-05}, {'time': 0.019862556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:26.425" endtime="20201110 08:40:26.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:26.443" level="INFO">${ACCURACY} = {'time': [0.019793528, 0.019862556, 0.019931542, 0.020001556, 0.020068569, 0.020136556, 0.020205556, 0.020273625, 0.020342569, 0.020411583, 0.020481611, 0.020549611, 0.020619625, 0.020689611, 0.020756...</msg>
<status status="PASS" starttime="20201110 08:40:26.429" endtime="20201110 08:40:26.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.447" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:40:26.446" endtime="20201110 08:40:26.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.450" level="INFO">VALUE: [6.0555999999999804e-05, 6.0792000000000485e-05, 6.0250000000001275e-05, 6.111199999999858e-05, 6.061100000000208e-05, 6.040300000000054e-05, 6.0861999999998334e-05, 6.104200000000073e-05, 6.0972000000002885e-05, 6.084699999999929e-05, 6.063900000000122e-05, 6.111099999999911e-05, 6.0944000000000276e-05, 6.062500000000165e-05, 6.083299999999972e-05, 6.111100000000258e-05, 6.0222000000002135e-05, 6.0528000000000665e-05, 6.113900000000172e-05, 6.072299999999864e-05, 6.0569999999999374e-05, 6.063900000000122e-05, 6.0179999999999956e-05, 6.0443999999999776e-05, 6.031899999999965e-05, 6.0680000000000456e-05, 6.1000000000002025e-05, 6.055500000000033e-05, 6.084699999999929e-05, 6.0348000000001734e-05, 6.033299999999922e-05, 6.0806000000000054e-05, 6.108299999999997e-05, 6.0651999999997847e-05, 6.0763999999997875e-05, 6.020899999999857e-05, 6.104200000000073e-05, 6.083299999999972e-05, 6.062500000000165e-05, 6.0930000000000706e-05, 6.0179999999999956e-05, 6.0749999999998305e-05, 6.084700000000276e-05, 6.0722000000002635e-05, 6.083299999999972e-05, 6.068099999999993e-05, 6.084700000000276e-05, 6.0194999999999e-05, 6.015299999999682e-05, 6.040300000000054e-05]</msg>
<status status="PASS" starttime="20201110 08:40:26.448" endtime="20201110 08:40:26.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.444" endtime="20201110 08:40:26.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.453" endtime="20201110 08:40:26.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:26.457" endtime="20201110 08:40:26.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.455" endtime="20201110 08:40:26.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.452" endtime="20201110 08:40:26.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.083" endtime="20201110 08:40:26.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.083" endtime="20201110 08:40:26.477"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.486" endtime="20201110 08:40:26.503"></status>
</kw>
<msg timestamp="20201110 08:40:26.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.484" endtime="20201110 08:40:26.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.505" endtime="20201110 08:40:26.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.507" endtime="20201110 08:40:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.482" endtime="20201110 08:40:26.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.480" endtime="20201110 08:40:26.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.516" endtime="20201110 08:40:26.804"></status>
</kw>
<msg timestamp="20201110 08:40:26.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.515" endtime="20201110 08:40:26.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.808" endtime="20201110 08:40:26.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.816" endtime="20201110 08:40:26.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.512" endtime="20201110 08:40:26.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.510" endtime="20201110 08:40:26.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:26.822" level="INFO">${RESULT} = [{'time': 0.020542972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.133300000000022e-05, 'source_diff': 6.133300000000022e-05}, {'time': 0.020614, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:40:26.819" endtime="20201110 08:40:26.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:26.836" level="INFO">${ACCURACY} = {'time': [0.020542972, 0.020614, 0.020682986, 0.020751986, 0.020823, 0.020893, 0.020962014, 0.021034028, 0.021105028, 0.021173028, 0.021242056, 0.021313056, 0.021382056, 0.021451069, 0.021521069, 0.02...</msg>
<status status="PASS" starttime="20201110 08:40:26.823" endtime="20201110 08:40:26.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.840" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:40:26.839" endtime="20201110 08:40:26.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.843" level="INFO">VALUE: [6.133300000000022e-05, 6.119400000000053e-05, 6.17499999999993e-05, 6.195800000000085e-05, 6.18750000000029e-05, 6.122199999999967e-05, 6.207000000000087e-05, 6.215299999999882e-05, 6.120900000000304e-05, 6.159700000000004e-05, 6.201399999999913e-05, 6.15140000000021e-05, 6.115300000000129e-05, 6.181900000000115e-05, 6.163799999999928e-05, 6.137499999999893e-05, 6.169400000000103e-05, 6.158300000000047e-05, 6.198599999999999e-05, 6.172200000000017e-05, 6.215299999999882e-05, 6.130600000000055e-05, 6.154200000000123e-05, 6.162499999999918e-05, 6.193100000000118e-05, 6.127700000000194e-05, 6.145899999999982e-05, 6.16950000000005e-05, 6.187499999999943e-05, 6.191599999999867e-05, 6.122199999999967e-05, 6.154100000000176e-05, 6.118000000000096e-05, 6.211100000000011e-05, 6.165300000000179e-05, 6.207000000000087e-05, 6.145799999999688e-05, 6.1888999999999e-05, 6.179200000000148e-05, 6.147299999999939e-05, 6.130600000000055e-05, 6.162500000000265e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.1888999999999e-05, 6.133300000000022e-05, 6.172200000000017e-05, 6.180600000000105e-05, 6.131900000000065e-05, 6.122200000000314e-05]</msg>
<status status="PASS" starttime="20201110 08:40:26.841" endtime="20201110 08:40:26.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.837" endtime="20201110 08:40:26.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.846" endtime="20201110 08:40:26.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:26.850" endtime="20201110 08:40:26.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.848" endtime="20201110 08:40:26.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.845" endtime="20201110 08:40:26.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.478" endtime="20201110 08:40:26.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.478" endtime="20201110 08:40:26.870"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.879" endtime="20201110 08:40:26.896"></status>
</kw>
<msg timestamp="20201110 08:40:26.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.878" endtime="20201110 08:40:26.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:26.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:26.898" endtime="20201110 08:40:26.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.900" endtime="20201110 08:40:26.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.875" endtime="20201110 08:40:26.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.873" endtime="20201110 08:40:26.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:26.909" endtime="20201110 08:40:27.196"></status>
</kw>
<msg timestamp="20201110 08:40:27.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:26.908" endtime="20201110 08:40:27.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.201" endtime="20201110 08:40:27.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.209" endtime="20201110 08:40:27.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.905" endtime="20201110 08:40:27.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.903" endtime="20201110 08:40:27.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:27.215" level="INFO">${RESULT} = [{'time': 0.019572569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.259700000000104e-05, 'source_diff': 6.259700000000104e-05}, {'time': 0.019644556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:27.212" endtime="20201110 08:40:27.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:27.228" level="INFO">${ACCURACY} = {'time': [0.019572569, 0.019644556, 0.019713556, 0.019784583, 0.019855583, 0.019926583, 0.019997597, 0.020066597, 0.020135625, 0.020207611, 0.020277639, 0.020346653, 0.020418639, 0.020491653, 0.020562...</msg>
<status status="PASS" starttime="20201110 08:40:27.216" endtime="20201110 08:40:27.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.233" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:40:27.232" endtime="20201110 08:40:27.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.236" level="INFO">VALUE: [6.259700000000104e-05, 6.297300000000089e-05, 6.25279999999992e-05, 6.276399999999988e-05, 6.312500000000068e-05, 6.263899999999975e-05, 6.233299999999775e-05, 6.283299999999825e-05, 6.25560000000018e-05, 6.244400000000178e-05, 6.243100000000168e-05, 6.231999999999766e-05, 6.297199999999795e-05, 6.311099999999764e-05, 6.287500000000043e-05, 6.287500000000043e-05, 6.290299999999957e-05, 6.273600000000074e-05, 6.297200000000142e-05, 6.245800000000135e-05, 6.22499999999998e-05, 6.291599999999967e-05, 6.25690000000019e-05, 6.233300000000122e-05, 6.281900000000215e-05, 6.284700000000129e-05, 6.252800000000266e-05, 6.273600000000074e-05, 6.266700000000236e-05, 6.313900000000025e-05, 6.259800000000051e-05, 6.22499999999998e-05, 6.219400000000153e-05, 6.287500000000043e-05, 6.29300000000027e-05, 6.262500000000018e-05, 6.276399999999988e-05, 6.2889e-05, 6.311100000000111e-05, 6.259700000000104e-05, 6.308300000000197e-05, 6.297199999999795e-05, 6.222200000000067e-05, 6.258399999999747e-05, 6.301400000000013e-05, 6.312500000000068e-05, 6.257000000000137e-05, 6.281999999999816e-05, 6.220799999999763e-05, 6.29439999999988e-05]</msg>
<status status="PASS" starttime="20201110 08:40:27.234" endtime="20201110 08:40:27.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.229" endtime="20201110 08:40:27.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.239" endtime="20201110 08:40:27.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:27.243" endtime="20201110 08:40:27.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.241" endtime="20201110 08:40:27.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.237" endtime="20201110 08:40:27.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.871" endtime="20201110 08:40:27.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:26.871" endtime="20201110 08:40:27.264"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.272" endtime="20201110 08:40:27.289"></status>
</kw>
<msg timestamp="20201110 08:40:27.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:27.271" endtime="20201110 08:40:27.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:27.290" endtime="20201110 08:40:27.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.293" endtime="20201110 08:40:27.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.268" endtime="20201110 08:40:27.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.266" endtime="20201110 08:40:27.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.302" endtime="20201110 08:40:27.588"></status>
</kw>
<msg timestamp="20201110 08:40:27.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.300" endtime="20201110 08:40:27.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.593" endtime="20201110 08:40:27.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.601" endtime="20201110 08:40:27.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.298" endtime="20201110 08:40:27.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.296" endtime="20201110 08:40:27.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:27.607" level="INFO">${RESULT} = [{'time': 0.020205083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.399999999999809e-05, 'source_diff': 6.399999999999809e-05}, {'time': 0.020276069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:27.604" endtime="20201110 08:40:27.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:27.621" level="INFO">${ACCURACY} = {'time': [0.020205083, 0.020276069, 0.020349097, 0.020421111, 0.020494097, 0.020566125, 0.020636181, 0.020706139, 0.020778167, 0.020848181, 0.020921153, 0.020991181, 0.021062167, 0.021135167, 0.021207...</msg>
<status status="PASS" starttime="20201110 08:40:27.608" endtime="20201110 08:40:27.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.625" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:40:27.624" endtime="20201110 08:40:27.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.628" level="INFO">VALUE: [6.399999999999809e-05, 6.370799999999913e-05, 6.387500000000143e-05, 6.354199999999977e-05, 6.361099999999814e-05, 6.3889000000001e-05, 6.394499999999928e-05, 6.359699999999857e-05, 6.395899999999885e-05, 6.35699999999989e-05, 6.345900000000182e-05, 6.370900000000207e-05, 6.327799999999995e-05, 6.320900000000157e-05, 6.412499999999821e-05, 6.34439999999993e-05, 6.39439999999998e-05, 6.373599999999827e-05, 6.388899999999753e-05, 6.39439999999998e-05, 6.383300000000272e-05, 6.408400000000244e-05, 6.363900000000075e-05, 6.372200000000217e-05, 6.334700000000179e-05, 6.380500000000011e-05, 6.320799999999863e-05, 6.38479999999983e-05, 6.362499999999771e-05, 6.3582999999999e-05, 6.386199999999786e-05, 6.383299999999925e-05, 6.330499999999961e-05, 6.381899999999968e-05, 6.40280000000007e-05, 6.388899999999753e-05, 6.363900000000075e-05, 6.395799999999938e-05, 6.356899999999943e-05, 6.372200000000217e-05, 6.390300000000057e-05, 6.379200000000002e-05, 6.404200000000027e-05, 6.330599999999909e-05, 6.406899999999993e-05, 6.329100000000004e-05, 6.397199999999895e-05, 6.383299999999925e-05, 6.333300000000222e-05, 6.359699999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:40:27.626" endtime="20201110 08:40:27.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.622" endtime="20201110 08:40:27.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.631" endtime="20201110 08:40:27.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:27.635" endtime="20201110 08:40:27.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.633" endtime="20201110 08:40:27.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.630" endtime="20201110 08:40:27.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.265" endtime="20201110 08:40:27.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.264" endtime="20201110 08:40:27.656"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.664" endtime="20201110 08:40:27.682"></status>
</kw>
<msg timestamp="20201110 08:40:27.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:27.663" endtime="20201110 08:40:27.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:27.683" endtime="20201110 08:40:27.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.686" endtime="20201110 08:40:27.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.660" endtime="20201110 08:40:27.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.658" endtime="20201110 08:40:27.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.695" endtime="20201110 08:40:27.981"></status>
</kw>
<msg timestamp="20201110 08:40:27.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.693" endtime="20201110 08:40:27.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.985" endtime="20201110 08:40:27.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.993" endtime="20201110 08:40:27.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.691" endtime="20201110 08:40:27.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.689" endtime="20201110 08:40:27.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:28.000" level="INFO">${RESULT} = [{'time': 0.020259167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.430600000000009e-05, 'source_diff': 6.430600000000009e-05}, {'time': 0.020331167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:27.996" endtime="20201110 08:40:28.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:28.014" level="INFO">${ACCURACY} = {'time': [0.020259167, 0.020331167, 0.020405194, 0.020477194, 0.020551194, 0.020622208, 0.020696208, 0.02077025, 0.020841236, 0.020912236, 0.02098625, 0.02105725, 0.021129264, 0.021201264, 0.021274292...</msg>
<status status="PASS" starttime="20201110 08:40:28.001" endtime="20201110 08:40:28.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.019" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:40:28.018" endtime="20201110 08:40:28.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.021" level="INFO">VALUE: [6.430600000000009e-05, 6.499999999999909e-05, 6.44020000000016e-05, 6.495800000000038e-05, 6.465199999999838e-05, 6.419400000000006e-05, 6.456900000000043e-05, 6.495800000000038e-05, 6.491699999999767e-05, 6.448599999999902e-05, 6.495800000000038e-05, 6.493100000000071e-05, 6.511099999999964e-05, 6.437500000000193e-05, 6.483399999999973e-05, 6.504099999999832e-05, 6.490300000000157e-05, 6.465299999999785e-05, 6.422299999999867e-05, 6.42500000000018e-05, 6.442999999999727e-05, 6.44159999999977e-05, 6.454200000000077e-05, 6.445799999999988e-05, 6.473600000000274e-05, 6.43890000000015e-05, 6.423599999999877e-05, 6.452799999999773e-05, 6.482000000000016e-05, 6.495899999999985e-05, 6.430600000000009e-05, 6.466700000000089e-05, 6.418099999999996e-05, 6.416600000000092e-05, 6.47769999999985e-05, 6.441600000000117e-05, 6.47500000000023e-05, 6.484699999999982e-05, 6.511100000000311e-05, 6.431999999999966e-05, 6.512499999999921e-05, 6.498599999999952e-05, 6.431999999999966e-05, 6.420900000000257e-05, 6.4889000000002e-05, 6.429200000000052e-05, 6.450000000000206e-05, 6.43890000000015e-05, 6.456900000000043e-05, 6.447199999999945e-05]</msg>
<status status="PASS" starttime="20201110 08:40:28.020" endtime="20201110 08:40:28.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.015" endtime="20201110 08:40:28.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.025" endtime="20201110 08:40:28.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:28.028" endtime="20201110 08:40:28.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.027" endtime="20201110 08:40:28.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.023" endtime="20201110 08:40:28.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.657" endtime="20201110 08:40:28.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.656" endtime="20201110 08:40:28.049"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.058" endtime="20201110 08:40:28.076"></status>
</kw>
<msg timestamp="20201110 08:40:28.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.056" endtime="20201110 08:40:28.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.077" endtime="20201110 08:40:28.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.079" endtime="20201110 08:40:28.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.054" endtime="20201110 08:40:28.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.052" endtime="20201110 08:40:28.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.088" endtime="20201110 08:40:28.375"></status>
</kw>
<msg timestamp="20201110 08:40:28.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:28.087" endtime="20201110 08:40:28.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0203375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:28.379" endtime="20201110 08:40:28.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.388" endtime="20201110 08:40:28.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.084" endtime="20201110 08:40:28.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.083" endtime="20201110 08:40:28.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:28.394" level="INFO">${RESULT} = [{'time': 0.020403528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.602799999999923e-05, 'source_diff': 6.602799999999923e-05}, {'time': 0.020475528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:28.391" endtime="20201110 08:40:28.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:28.407" level="INFO">${ACCURACY} = {'time': [0.020403528, 0.020475528, 0.020548569, 0.020622556, 0.020697569, 0.020769569, 0.020842625, 0.020915583, 0.020991597, 0.021064611, 0.021139611, 0.021214611, 0.021287625, 0.021362625, 0.021438...</msg>
<status status="PASS" starttime="20201110 08:40:28.395" endtime="20201110 08:40:28.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.412" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:40:28.411" endtime="20201110 08:40:28.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.414" level="INFO">VALUE: [6.602799999999923e-05, 6.541699999999817e-05, 6.531899999999771e-05, 6.594500000000128e-05, 6.545799999999741e-05, 6.554100000000229e-05, 6.527799999999848e-05, 6.533300000000075e-05, 6.611100000000064e-05, 6.60830000000015e-05, 6.592999999999877e-05, 6.574999999999984e-05, 6.518100000000096e-05, 6.552799999999873e-05, 6.612500000000021e-05, 6.524999999999934e-05, 6.545900000000035e-05, 6.615299999999935e-05, 6.518099999999749e-05, 6.570800000000113e-05, 6.536099999999989e-05, 6.530499999999814e-05, 6.615199999999988e-05, 6.563899999999928e-05, 6.608400000000098e-05, 6.52090000000001e-05, 6.611100000000064e-05, 6.543099999999774e-05, 6.561100000000014e-05, 6.60969999999976e-05, 6.600000000000009e-05, 6.552799999999873e-05, 6.530600000000109e-05, 6.555599999999787e-05, 6.590199999999963e-05, 6.57769999999995e-05, 6.561100000000014e-05, 6.545799999999741e-05, 6.555500000000186e-05, 6.577800000000245e-05, 6.52220000000002e-05, 6.541699999999817e-05, 6.568100000000146e-05, 6.583400000000073e-05, 6.538899999999903e-05, 6.518100000000096e-05, 6.572300000000017e-05, 6.58480000000003e-05, 6.581999999999769e-05, 6.518100000000096e-05]</msg>
<status status="PASS" starttime="20201110 08:40:28.413" endtime="20201110 08:40:28.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.408" endtime="20201110 08:40:28.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.418" endtime="20201110 08:40:28.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:28.421" endtime="20201110 08:40:28.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.420" endtime="20201110 08:40:28.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.416" endtime="20201110 08:40:28.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.050" endtime="20201110 08:40:28.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.050" endtime="20201110 08:40:28.442"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.451" endtime="20201110 08:40:28.469"></status>
</kw>
<msg timestamp="20201110 08:40:28.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.449" endtime="20201110 08:40:28.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.471" endtime="20201110 08:40:28.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.473" endtime="20201110 08:40:28.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.447" endtime="20201110 08:40:28.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.445" endtime="20201110 08:40:28.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.482" endtime="20201110 08:40:28.769"></status>
</kw>
<msg timestamp="20201110 08:40:28.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.480" endtime="20201110 08:40:28.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.773" endtime="20201110 08:40:28.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.781" endtime="20201110 08:40:28.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.478" endtime="20201110 08:40:28.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.476" endtime="20201110 08:40:28.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:28.787" level="INFO">${RESULT} = [{'time': 0.020707097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.62220000000012e-05, 'source_diff': 6.62220000000012e-05}, {'time': 0.020780125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:28.784" endtime="20201110 08:40:28.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:28.801" level="INFO">${ACCURACY} = {'time': [0.020707097, 0.020780125, 0.020855139, 0.020931125, 0.021006167, 0.021081153, 0.021157167, 0.021231153, 0.021306222, 0.021380194, 0.021454181, 0.021527194, 0.021603222, 0.02167925, 0.0217532...</msg>
<status status="PASS" starttime="20201110 08:40:28.788" endtime="20201110 08:40:28.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.805" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:40:28.804" endtime="20201110 08:40:28.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.808" level="INFO">VALUE: [6.62220000000012e-05, 6.638900000000003e-05, 6.612500000000021e-05, 6.666699999999942e-05, 6.637500000000046e-05, 6.618099999999849e-05, 6.62639999999999e-05, 6.630599999999862e-05, 6.620799999999816e-05, 6.698600000000152e-05, 6.67640000000004e-05, 6.694399999999934e-05, 6.676399999999694e-05, 6.648600000000102e-05, 6.647199999999798e-05, 6.634699999999785e-05, 6.633300000000175e-05, 6.652799999999973e-05, 6.62639999999999e-05, 6.681999999999869e-05, 6.668099999999899e-05, 6.661099999999767e-05, 6.631899999999871e-05, 6.701400000000066e-05, 6.711099999999817e-05, 6.625000000000034e-05, 6.650000000000059e-05, 6.701400000000066e-05, 6.67640000000004e-05, 6.637500000000046e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.643099999999874e-05, 6.694499999999881e-05, 6.711100000000164e-05, 6.690200000000063e-05, 6.659800000000105e-05, 6.633400000000123e-05, 6.711200000000112e-05, 6.705499999999989e-05, 6.701299999999771e-05, 6.617999999999902e-05, 6.698600000000152e-05, 6.616699999999892e-05, 6.652799999999973e-05, 6.69030000000001e-05, 6.686099999999792e-05, 6.679199999999955e-05, 6.661100000000114e-05]</msg>
<status status="PASS" starttime="20201110 08:40:28.806" endtime="20201110 08:40:28.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.802" endtime="20201110 08:40:28.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.811" endtime="20201110 08:40:28.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:28.815" endtime="20201110 08:40:28.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.813" endtime="20201110 08:40:28.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.810" endtime="20201110 08:40:28.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.443" endtime="20201110 08:40:28.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.442" endtime="20201110 08:40:28.836"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.844" endtime="20201110 08:40:28.862"></status>
</kw>
<msg timestamp="20201110 08:40:28.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.843" endtime="20201110 08:40:28.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:28.864" endtime="20201110 08:40:28.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.866" endtime="20201110 08:40:28.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.840" endtime="20201110 08:40:28.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.838" endtime="20201110 08:40:28.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.875" endtime="20201110 08:40:29.161"></status>
</kw>
<msg timestamp="20201110 08:40:29.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.874" endtime="20201110 08:40:29.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:29.165" endtime="20201110 08:40:29.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.173" endtime="20201110 08:40:29.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.871" endtime="20201110 08:40:29.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.869" endtime="20201110 08:40:29.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:29.180" level="INFO">${RESULT} = [{'time': 0.019898806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.716699999999992e-05, 'source_diff': 6.716699999999992e-05}, {'time': 0.019972819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:29.176" endtime="20201110 08:40:29.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:29.193" level="INFO">${ACCURACY} = {'time': [0.019898806, 0.019972819, 0.020047806, 0.020124847, 0.020198833, 0.020274847, 0.020350861, 0.020427875, 0.020502875, 0.020578903, 0.020654931, 0.020731889, 0.020806917, 0.020880917, 0.020957...</msg>
<status status="PASS" starttime="20201110 08:40:29.181" endtime="20201110 08:40:29.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.197" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:40:29.196" endtime="20201110 08:40:29.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.200" level="INFO">VALUE: [6.716699999999992e-05, 6.761099999999867e-05, 6.798700000000199e-05, 6.720800000000263e-05, 6.75969999999991e-05, 6.799999999999862e-05, 6.747200000000245e-05, 6.806900000000046e-05, 6.748599999999855e-05, 6.72359999999983e-05, 6.733400000000223e-05, 6.72359999999983e-05, 6.802800000000123e-05, 6.77229999999987e-05, 6.798599999999905e-05, 6.719400000000306e-05, 6.759700000000257e-05, 6.755500000000039e-05, 6.77640000000014e-05, 6.774999999999837e-05, 6.745799999999941e-05, 6.744400000000331e-05, 6.784699999999935e-05, 6.749999999999812e-05, 6.777799999999751e-05, 6.727800000000048e-05, 6.723600000000177e-05, 6.775000000000184e-05, 6.729200000000005e-05, 6.743099999999974e-05, 6.811199999999865e-05, 6.770799999999966e-05, 6.734699999999885e-05, 6.751400000000116e-05, 6.811100000000264e-05, 6.77640000000014e-05, 6.747199999999898e-05, 6.77640000000014e-05, 6.769499999999956e-05, 6.752799999999726e-05, 6.723700000000124e-05, 6.747200000000245e-05, 6.713900000000078e-05, 6.752799999999726e-05, 6.763899999999781e-05, 6.75969999999991e-05, 6.762500000000171e-05, 6.77770000000015e-05, 6.79030000000011e-05, 6.808300000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:40:29.198" endtime="20201110 08:40:29.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.194" endtime="20201110 08:40:29.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.203" endtime="20201110 08:40:29.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:29.207" endtime="20201110 08:40:29.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.205" endtime="20201110 08:40:29.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.202" endtime="20201110 08:40:29.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.836" endtime="20201110 08:40:29.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.836" endtime="20201110 08:40:29.228"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.236" endtime="20201110 08:40:29.254"></status>
</kw>
<msg timestamp="20201110 08:40:29.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:29.235" endtime="20201110 08:40:29.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:29.255" endtime="20201110 08:40:29.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.258" endtime="20201110 08:40:29.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.232" endtime="20201110 08:40:29.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.230" endtime="20201110 08:40:29.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.267" endtime="20201110 08:40:29.554"></status>
</kw>
<msg timestamp="20201110 08:40:29.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:29.265" endtime="20201110 08:40:29.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:29.558" endtime="20201110 08:40:29.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.566" endtime="20201110 08:40:29.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.263" endtime="20201110 08:40:29.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.261" endtime="20201110 08:40:29.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:29.573" level="INFO">${RESULT} = [{'time': 0.019596292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.845899999999988e-05, 'source_diff': 6.845899999999988e-05}, {'time': 0.019671292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:29.570" endtime="20201110 08:40:29.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:29.588" level="INFO">${ACCURACY} = {'time': [0.019596292, 0.019671292, 0.019748306, 0.019826319, 0.019902319, 0.019978347, 0.020053347, 0.020129361, 0.020206375, 0.020283361, 0.020358375, 0.020436389, 0.020512403, 0.020590403, 0.020666...</msg>
<status status="PASS" starttime="20201110 08:40:29.574" endtime="20201110 08:40:29.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.592" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:40:29.591" endtime="20201110 08:40:29.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.595" level="INFO">VALUE: [6.845899999999988e-05, 6.812499999999874e-05, 6.829200000000105e-05, 6.874999999999937e-05, 6.815200000000188e-05, 6.902799999999876e-05, 6.87359999999998e-05, 6.908299999999756e-05, 6.854199999999783e-05, 6.890299999999863e-05, 6.818100000000049e-05, 6.815299999999788e-05, 6.852799999999826e-05, 6.865300000000185e-05, 6.861199999999915e-05, 6.891700000000167e-05, 6.833399999999976e-05, 6.861099999999967e-05, 6.880499999999817e-05, 6.851399999999869e-05, 6.863899999999881e-05, 6.862499999999924e-05, 6.884700000000035e-05, 6.891700000000167e-05, 6.897199999999701e-05, 6.818100000000049e-05, 6.827799999999801e-05, 6.826399999999844e-05, 6.824999999999887e-05, 6.911199999999965e-05, 6.908399999999704e-05, 6.876299999999946e-05, 6.84299999999978e-05, 6.897200000000048e-05, 6.816600000000145e-05, 6.865300000000185e-05, 6.905500000000189e-05, 6.833300000000028e-05, 6.848599999999955e-05, 6.827799999999801e-05, 6.861099999999967e-05, 6.890299999999863e-05, 6.85970000000001e-05, 6.905600000000137e-05, 6.881900000000121e-05, 6.831900000000071e-05, 6.909699999999713e-05, 6.838799999999909e-05, 6.844400000000084e-05, 6.89160000000022e-05]</msg>
<status status="PASS" starttime="20201110 08:40:29.593" endtime="20201110 08:40:29.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.589" endtime="20201110 08:40:29.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.598" endtime="20201110 08:40:29.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:29.602" endtime="20201110 08:40:29.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.600" endtime="20201110 08:40:29.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.597" endtime="20201110 08:40:29.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.229" endtime="20201110 08:40:29.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.228" endtime="20201110 08:40:29.622"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.631" endtime="20201110 08:40:29.648"></status>
</kw>
<msg timestamp="20201110 08:40:29.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:29.630" endtime="20201110 08:40:29.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:29.650" endtime="20201110 08:40:29.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.652" endtime="20201110 08:40:29.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.627" endtime="20201110 08:40:29.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.625" endtime="20201110 08:40:29.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.661" endtime="20201110 08:40:29.948"></status>
</kw>
<msg timestamp="20201110 08:40:29.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:29.660" endtime="20201110 08:40:29.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:29.952" endtime="20201110 08:40:29.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.960" endtime="20201110 08:40:29.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.657" endtime="20201110 08:40:29.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.656" endtime="20201110 08:40:29.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:29.967" level="INFO">${RESULT} = [{'time': 0.020238556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.997300000000095e-05, 'source_diff': 6.997300000000095e-05}, {'time': 0.020316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:29.963" endtime="20201110 08:40:29.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:29.980" level="INFO">${ACCURACY} = {'time': [0.020238556, 0.020316625, 0.020392569, 0.020469583, 0.020547625, 0.020624597, 0.020702625, 0.020781639, 0.020858653, 0.020934653, 0.021011639, 0.021087667, 0.021164681, 0.021241681, 0.021319...</msg>
<status status="PASS" starttime="20201110 08:40:29.968" endtime="20201110 08:40:29.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.984" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:40:29.983" endtime="20201110 08:40:29.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:29.987" level="INFO">VALUE: [6.997300000000095e-05, 6.987500000000049e-05, 6.948600000000055e-05, 6.941599999999923e-05, 6.919400000000159e-05, 6.963899999999981e-05, 6.970799999999819e-05, 6.947200000000098e-05, 6.969500000000156e-05, 6.950000000000012e-05, 6.999999999999715e-05, 6.930600000000162e-05, 6.965300000000285e-05, 6.948700000000002e-05, 7.001400000000019e-05, 6.938899999999956e-05, 6.952699999999978e-05, 7.016599999999998e-05, 6.980499999999917e-05, 6.972200000000123e-05, 6.975000000000037e-05, 6.92360000000003e-05, 6.933299999999781e-05, 6.983400000000126e-05, 6.966700000000242e-05, 6.952799999999926e-05, 6.988900000000006e-05, 6.968099999999852e-05, 6.945800000000141e-05, 6.916600000000245e-05, 6.986100000000092e-05, 6.922200000000073e-05, 6.950000000000012e-05, 6.930600000000162e-05, 6.937499999999999e-05, 6.970799999999819e-05, 7.015299999999988e-05, 6.972199999999776e-05, 6.993100000000224e-05, 7.001400000000019e-05, 6.981999999999822e-05, 7.002799999999976e-05, 6.987500000000049e-05, 6.955600000000187e-05, 6.924999999999987e-05, 7.00970000000016e-05, 6.968100000000199e-05, 6.988900000000006e-05, 7.013900000000031e-05, 6.962500000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:40:29.985" endtime="20201110 08:40:29.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.981" endtime="20201110 08:40:29.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:29.990" endtime="20201110 08:40:29.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:29.994" endtime="20201110 08:40:30.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.992" endtime="20201110 08:40:30.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.989" endtime="20201110 08:40:30.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.623" endtime="20201110 08:40:30.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:29.623" endtime="20201110 08:40:30.015"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.023" endtime="20201110 08:40:30.041"></status>
</kw>
<msg timestamp="20201110 08:40:30.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.022" endtime="20201110 08:40:30.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.043" endtime="20201110 08:40:30.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.045" endtime="20201110 08:40:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.019" endtime="20201110 08:40:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.017" endtime="20201110 08:40:30.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.054" endtime="20201110 08:40:30.342"></status>
</kw>
<msg timestamp="20201110 08:40:30.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.053" endtime="20201110 08:40:30.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019674958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.346" endtime="20201110 08:40:30.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.354" endtime="20201110 08:40:30.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.050" endtime="20201110 08:40:30.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.048" endtime="20201110 08:40:30.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:30.361" level="INFO">${RESULT} = [{'time': 0.019745556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.059800000000158e-05, 'source_diff': 7.059800000000158e-05}, {'time': 0.019822528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:30.357" endtime="20201110 08:40:30.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:30.374" level="INFO">${ACCURACY} = {'time': [0.019745556, 0.019822528, 0.019902528, 0.019980556, 0.020058569, 0.020137556, 0.020217569, 0.020295583, 0.020373583, 0.020451597, 0.020530611, 0.020608639, 0.020687625, 0.020766639, 0.020844...</msg>
<status status="PASS" starttime="20201110 08:40:30.362" endtime="20201110 08:40:30.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.378" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:40:30.377" endtime="20201110 08:40:30.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.381" level="INFO">VALUE: [7.059800000000158e-05, 7.019499999999859e-05, 7.020899999999816e-05, 7.047300000000145e-05, 7.109699999999913e-05, 7.032000000000219e-05, 7.019400000000259e-05, 7.065199999999744e-05, 7.033300000000228e-05, 7.041599999999676e-05, 7.105500000000042e-05, 7.10970000000026e-05, 7.058300000000253e-05, 7.094499999999934e-05, 7.059699999999863e-05, 7.048600000000155e-05, 7.070900000000213e-05, 7.03620000000009e-05, 7.037500000000099e-05, 7.018099999999902e-05, 7.031899999999924e-05, 7.098599999999858e-05, 7.062500000000124e-05, 7.095799999999944e-05, 7.079200000000008e-05, 7.063899999999734e-05, 7.094500000000281e-05, 7.088900000000106e-05, 7.048600000000155e-05, 7.034699999999838e-05, 7.062500000000124e-05, 7.049999999999765e-05, 7.084700000000235e-05, 7.062500000000124e-05, 7.111100000000217e-05, 7.076400000000094e-05, 7.020799999999869e-05, 7.091600000000073e-05, 7.029200000000305e-05, 7.076400000000094e-05, 7.072199999999876e-05, 7.104200000000033e-05, 7.025000000000087e-05, 7.052799999999679e-05, 7.052800000000026e-05, 7.016700000000292e-05, 7.059800000000158e-05, 7.033300000000228e-05, 7.031899999999924e-05, 7.112500000000174e-05]</msg>
<status status="PASS" starttime="20201110 08:40:30.379" endtime="20201110 08:40:30.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.375" endtime="20201110 08:40:30.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.388" endtime="20201110 08:40:30.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:30.392" endtime="20201110 08:40:30.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.390" endtime="20201110 08:40:30.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.387" endtime="20201110 08:40:30.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.016" endtime="20201110 08:40:30.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.015" endtime="20201110 08:40:30.412"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.421" endtime="20201110 08:40:30.439"></status>
</kw>
<msg timestamp="20201110 08:40:30.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.419" endtime="20201110 08:40:30.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.441" endtime="20201110 08:40:30.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.443" endtime="20201110 08:40:30.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.417" endtime="20201110 08:40:30.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.415" endtime="20201110 08:40:30.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.452" endtime="20201110 08:40:30.738"></status>
</kw>
<msg timestamp="20201110 08:40:30.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.451" endtime="20201110 08:40:30.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.743" endtime="20201110 08:40:30.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.751" endtime="20201110 08:40:30.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.448" endtime="20201110 08:40:30.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.446" endtime="20201110 08:40:30.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:30.761" level="INFO">${RESULT} = [{'time': 0.020482181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.201399999999872e-05, 'source_diff': 7.201399999999872e-05}, {'time': 0.020563222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:30.756" endtime="20201110 08:40:30.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:30.777" level="INFO">${ACCURACY} = {'time': [0.020482181, 0.020563222, 0.020643194, 0.02072325, 0.020804236, 0.020884222, 0.02096525, 0.02104325, 0.021123278, 0.021204264, 0.021282278, 0.021361306, 0.021440292, 0.021520333, 0.021601333...</msg>
<status status="PASS" starttime="20201110 08:40:30.762" endtime="20201110 08:40:30.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.782" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:40:30.781" endtime="20201110 08:40:30.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.785" level="INFO">VALUE: [7.201399999999872e-05, 7.136099999999895e-05, 7.21109999999997e-05, 7.155599999999693e-05, 7.209700000000013e-05, 7.155500000000092e-05, 7.188900000000206e-05, 7.123599999999883e-05, 7.154199999999736e-05, 7.197200000000001e-05, 7.180600000000065e-05, 7.193100000000077e-05, 7.182000000000022e-05, 7.173599999999933e-05, 7.177700000000203e-05, 7.131900000000024e-05, 7.188899999999859e-05, 7.166600000000148e-05, 7.123599999999883e-05, 7.176399999999847e-05, 7.133299999999981e-05, 7.147199999999951e-05, 7.197200000000001e-05, 7.118100000000002e-05, 7.149999999999865e-05, 7.15560000000004e-05, 7.138900000000156e-05, 7.183300000000031e-05, 7.188799999999912e-05, 7.195800000000044e-05, 7.122200000000273e-05, 7.15690000000005e-05, 7.175000000000237e-05, 7.130600000000015e-05, 7.130600000000015e-05, 7.144499999999984e-05, 7.126399999999797e-05, 7.166600000000148e-05, 7.17499999999989e-05, 7.163900000000181e-05, 7.130600000000015e-05, 7.198699999999905e-05, 7.19300000000013e-05, 7.163900000000181e-05, 7.12499999999984e-05, 7.120799999999969e-05, 7.172199999999976e-05, 7.204200000000133e-05, 7.112499999999827e-05, 7.20560000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:40:30.783" endtime="20201110 08:40:30.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.778" endtime="20201110 08:40:30.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.788" endtime="20201110 08:40:30.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:30.792" endtime="20201110 08:40:30.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.790" endtime="20201110 08:40:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.787" endtime="20201110 08:40:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.413" endtime="20201110 08:40:30.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.413" endtime="20201110 08:40:30.813"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.821" endtime="20201110 08:40:30.839"></status>
</kw>
<msg timestamp="20201110 08:40:30.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.820" endtime="20201110 08:40:30.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:30.841" endtime="20201110 08:40:30.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.843" endtime="20201110 08:40:30.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.817" endtime="20201110 08:40:30.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.815" endtime="20201110 08:40:30.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.852" endtime="20201110 08:40:31.139"></status>
</kw>
<msg timestamp="20201110 08:40:31.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.851" endtime="20201110 08:40:31.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019725556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.143" endtime="20201110 08:40:31.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.151" endtime="20201110 08:40:31.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.848" endtime="20201110 08:40:31.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.846" endtime="20201110 08:40:31.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:31.158" level="INFO">${RESULT} = [{'time': 0.019798764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.320799999999822e-05, 'source_diff': 7.320799999999822e-05}, {'time': 0.019880681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:31.155" endtime="20201110 08:40:31.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:31.172" level="INFO">${ACCURACY} = {'time': [0.019798764, 0.019880681, 0.019959708, 0.020039722, 0.020118736, 0.020199736, 0.020279736, 0.020359736, 0.02043875, 0.020518847, 0.020597778, 0.020676792, 0.020756792, 0.020838806, 0.0209208...</msg>
<status status="PASS" starttime="20201110 08:40:31.159" endtime="20201110 08:40:31.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.177" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:40:31.176" endtime="20201110 08:40:31.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.179" level="INFO">VALUE: [7.320799999999822e-05, 7.262499999999977e-05, 7.266599999999901e-05, 7.301399999999972e-05, 7.229200000000158e-05, 7.276399999999947e-05, 7.212499999999927e-05, 7.276399999999947e-05, 7.284699999999741e-05, 7.244400000000137e-05, 7.247200000000051e-05, 7.230599999999768e-05, 7.229199999999811e-05, 7.298700000000005e-05, 7.281900000000174e-05, 7.256899999999802e-05, 7.247200000000051e-05, 7.277800000000251e-05, 7.240299999999866e-05, 7.22499999999994e-05, 7.306899999999852e-05, 7.227800000000201e-05, 7.295800000000144e-05, 7.272200000000076e-05, 7.307000000000147e-05, 7.244500000000084e-05, 7.294500000000134e-05, 7.265200000000291e-05, 7.26110000000002e-05, 7.255499999999845e-05, 7.312500000000027e-05, 7.231900000000124e-05, 7.218000000000155e-05, 7.281900000000174e-05, 7.305499999999895e-05, 7.248600000000008e-05, 7.229200000000158e-05, 7.233300000000081e-05, 7.258400000000054e-05, 7.215299999999841e-05, 7.232000000000072e-05, 7.276399999999947e-05, 7.295900000000091e-05, 7.226399999999897e-05, 7.251400000000269e-05, 7.223599999999983e-05, 7.316700000000245e-05, 7.269500000000109e-05, 7.313899999999984e-05, 7.25690000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:40:31.178" endtime="20201110 08:40:31.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.173" endtime="20201110 08:40:31.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.183" endtime="20201110 08:40:31.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:31.187" endtime="20201110 08:40:31.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.185" endtime="20201110 08:40:31.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.181" endtime="20201110 08:40:31.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.814" endtime="20201110 08:40:31.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.813" endtime="20201110 08:40:31.207"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.216" endtime="20201110 08:40:31.234"></status>
</kw>
<msg timestamp="20201110 08:40:31.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:31.214" endtime="20201110 08:40:31.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:31.235" endtime="20201110 08:40:31.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.238" endtime="20201110 08:40:31.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.212" endtime="20201110 08:40:31.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.210" endtime="20201110 08:40:31.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.247" endtime="20201110 08:40:31.534"></status>
</kw>
<msg timestamp="20201110 08:40:31.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.245" endtime="20201110 08:40:31.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.538" endtime="20201110 08:40:31.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.546" endtime="20201110 08:40:31.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.243" endtime="20201110 08:40:31.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.241" endtime="20201110 08:40:31.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:31.553" level="INFO">${RESULT} = [{'time': 0.020321931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.398700000000105e-05, 'source_diff': 7.398700000000105e-05}, {'time': 0.020403931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:31.549" endtime="20201110 08:40:31.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:31.566" level="INFO">${ACCURACY} = {'time': [0.020321931, 0.020403931, 0.020485944, 0.020566958, 0.020649014, 0.020731986, 0.020812986, 0.020894014, 0.020977014, 0.021058069, 0.021139014, 0.021222042, 0.021305097, 0.021386069, 0.021466...</msg>
<status status="PASS" starttime="20201110 08:40:31.553" endtime="20201110 08:40:31.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.570" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:40:31.569" endtime="20201110 08:40:31.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.573" level="INFO">VALUE: [7.398700000000105e-05, 7.329199999999911e-05, 7.405499999999995e-05, 7.370799999999872e-05, 7.372200000000176e-05, 7.338900000000009e-05, 7.347199999999804e-05, 7.351400000000022e-05, 7.329199999999911e-05, 7.401299999999778e-05, 7.391699999999973e-05, 7.344499999999837e-05, 7.359699999999816e-05, 7.32630000000005e-05, 7.337500000000052e-05, 7.319400000000212e-05, 7.3763999999997e-05, 7.372199999999829e-05, 7.334700000000138e-05, 7.41249999999978e-05, 7.354199999999936e-05, 7.366699999999948e-05, 7.404199999999986e-05, 7.379199999999961e-05, 7.320900000000116e-05, 7.32500000000004e-05, 7.337500000000052e-05, 7.347199999999804e-05, 7.357000000000197e-05, 7.383299999999884e-05, 7.363900000000034e-05, 7.345800000000194e-05, 7.342999999999933e-05, 7.322300000000073e-05, 7.388900000000059e-05, 7.415300000000041e-05, 7.370800000000219e-05, 7.35699999999985e-05, 7.388900000000059e-05, 7.354199999999936e-05, 7.398599999999811e-05, 7.32500000000004e-05, 7.347200000000151e-05, 7.362500000000077e-05, 7.390300000000016e-05, 7.33049999999992e-05, 7.341599999999976e-05, 7.333300000000181e-05, 7.340299999999966e-05, 7.345799999999847e-05]</msg>
<status status="PASS" starttime="20201110 08:40:31.571" endtime="20201110 08:40:31.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.567" endtime="20201110 08:40:31.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.576" endtime="20201110 08:40:31.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:31.580" endtime="20201110 08:40:31.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.578" endtime="20201110 08:40:31.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.575" endtime="20201110 08:40:31.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.208" endtime="20201110 08:40:31.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.208" endtime="20201110 08:40:31.601"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.609" endtime="20201110 08:40:31.627"></status>
</kw>
<msg timestamp="20201110 08:40:31.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:31.608" endtime="20201110 08:40:31.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:31.629" endtime="20201110 08:40:31.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.631" endtime="20201110 08:40:31.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.605" endtime="20201110 08:40:31.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.603" endtime="20201110 08:40:31.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.640" endtime="20201110 08:40:31.927"></status>
</kw>
<msg timestamp="20201110 08:40:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.639" endtime="20201110 08:40:31.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.931" endtime="20201110 08:40:31.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.939" endtime="20201110 08:40:31.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.636" endtime="20201110 08:40:31.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.635" endtime="20201110 08:40:31.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:31.946" level="INFO">${RESULT} = [{'time': 0.020815542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.438900000000109e-05, 'source_diff': 7.438900000000109e-05}, {'time': 0.020898458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:31.942" endtime="20201110 08:40:31.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:31.959" level="INFO">${ACCURACY} = {'time': [0.020815542, 0.020898458, 0.020981486, 0.021063472, 0.021146486, 0.021227569, 0.0213095, 0.021392514, 0.021474528, 0.021557542, 0.021638556, 0.021720569, 0.021801569, 0.021885569, 0.02196858...</msg>
<status status="PASS" starttime="20201110 08:40:31.947" endtime="20201110 08:40:31.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.963" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:40:31.962" endtime="20201110 08:40:31.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.966" level="INFO">VALUE: [7.438900000000109e-05, 7.498600000000258e-05, 7.429200000000011e-05, 7.504100000000138e-05, 7.491700000000073e-05, 7.484700000000288e-05, 7.481900000000027e-05, 7.497200000000301e-05, 7.51249999999988e-05, 7.420899999999869e-05, 7.454200000000036e-05, 7.515199999999847e-05, 7.436099999999848e-05, 7.420799999999922e-05, 7.477700000000156e-05, 7.456900000000002e-05, 7.447200000000251e-05, 7.483299999999984e-05, 7.504199999999739e-05, 7.488899999999812e-05, 7.509699999999966e-05, 7.426400000000097e-05, 7.452799999999732e-05, 7.486099999999898e-05, 7.441600000000076e-05, 7.483399999999932e-05, 7.440199999999772e-05, 7.4763999999998e-05, 7.469400000000015e-05, 7.483299999999984e-05, 7.476400000000147e-05, 7.512500000000227e-05, 7.487499999999855e-05, 7.42639999999975e-05, 7.430599999999968e-05, 7.459699999999916e-05, 7.431999999999925e-05, 7.486199999999846e-05, 7.511200000000218e-05, 7.458300000000306e-05, 7.440200000000119e-05, 7.49440000000004e-05, 7.434699999999891e-05, 7.465299999999744e-05, 7.454200000000036e-05, 7.477800000000104e-05, 7.512500000000227e-05, 7.472199999999929e-05, 7.497300000000248e-05, 7.420899999999869e-05]</msg>
<status status="PASS" starttime="20201110 08:40:31.964" endtime="20201110 08:40:31.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.960" endtime="20201110 08:40:31.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.969" endtime="20201110 08:40:31.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:31.973" endtime="20201110 08:40:31.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.971" endtime="20201110 08:40:31.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.968" endtime="20201110 08:40:31.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.601" endtime="20201110 08:40:31.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.601" endtime="20201110 08:40:31.994"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.002" endtime="20201110 08:40:32.020"></status>
</kw>
<msg timestamp="20201110 08:40:32.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.001" endtime="20201110 08:40:32.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.022" endtime="20201110 08:40:32.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.024" endtime="20201110 08:40:32.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.998" endtime="20201110 08:40:32.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.996" endtime="20201110 08:40:32.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.033" endtime="20201110 08:40:32.320"></status>
</kw>
<msg timestamp="20201110 08:40:32.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:32.032" endtime="20201110 08:40:32.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:32.324" endtime="20201110 08:40:32.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.333" endtime="20201110 08:40:32.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.029" endtime="20201110 08:40:32.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.027" endtime="20201110 08:40:32.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:32.339" level="INFO">${RESULT} = [{'time': 0.019745847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.587499999999955e-05, 'source_diff': 7.587499999999955e-05}, {'time': 0.019828833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:32.336" endtime="20201110 08:40:32.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:32.353" level="INFO">${ACCURACY} = {'time': [0.019745847, 0.019828833, 0.019913861, 0.019998861, 0.020080875, 0.020162875, 0.020244903, 0.020329903, 0.020412958, 0.020497931, 0.020579931, 0.020663931, 0.020747958, 0.020832972, 0.020917...</msg>
<status status="PASS" starttime="20201110 08:40:32.340" endtime="20201110 08:40:32.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.357" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:40:32.356" endtime="20201110 08:40:32.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.360" level="INFO">VALUE: [7.587499999999955e-05, 7.561099999999973e-05, 7.569400000000115e-05, 7.59440000000014e-05, 7.559700000000016e-05, 7.570800000000072e-05, 7.544500000000037e-05, 7.59310000000013e-05, 7.617999999999861e-05, 7.599999999999968e-05, 7.554199999999789e-05, 7.515300000000141e-05, 7.518000000000108e-05, 7.569400000000115e-05, 7.60830000000011e-05, 7.59579999999975e-05, 7.563899999999887e-05, 7.518100000000055e-05, 7.565200000000244e-05, 7.583299999999737e-05, 7.609700000000066e-05, 7.568100000000105e-05, 7.545900000000341e-05, 7.569500000000062e-05, 7.561199999999921e-05, 7.60830000000011e-05, 7.543000000000133e-05, 7.516599999999804e-05, 7.59579999999975e-05, 7.586099999999998e-05, 7.586099999999998e-05, 7.526400000000197e-05, 7.59310000000013e-05, 7.518099999999708e-05, 7.520899999999969e-05, 7.598600000000011e-05, 7.536099999999948e-05, 7.584700000000041e-05, 7.534699999999991e-05, 7.573599999999986e-05, 7.559700000000016e-05, 7.61249999999998e-05, 7.570800000000072e-05, 7.583299999999737e-05, 7.54440000000009e-05, 7.601399999999925e-05, 7.547200000000004e-05, 7.547200000000004e-05, 7.54449999999969e-05, 7.588899999999912e-05]</msg>
<status status="PASS" starttime="20201110 08:40:32.358" endtime="20201110 08:40:32.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.354" endtime="20201110 08:40:32.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.363" endtime="20201110 08:40:32.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:32.367" endtime="20201110 08:40:32.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.365" endtime="20201110 08:40:32.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.362" endtime="20201110 08:40:32.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.995" endtime="20201110 08:40:32.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.994" endtime="20201110 08:40:32.387"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.396" endtime="20201110 08:40:32.413"></status>
</kw>
<msg timestamp="20201110 08:40:32.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.395" endtime="20201110 08:40:32.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.415" endtime="20201110 08:40:32.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.417" endtime="20201110 08:40:32.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.392" endtime="20201110 08:40:32.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.390" endtime="20201110 08:40:32.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.426" endtime="20201110 08:40:32.712"></status>
</kw>
<msg timestamp="20201110 08:40:32.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:32.425" endtime="20201110 08:40:32.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019952972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:32.716" endtime="20201110 08:40:32.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.724" endtime="20201110 08:40:32.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.422" endtime="20201110 08:40:32.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.420" endtime="20201110 08:40:32.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:32.731" level="INFO">${RESULT} = [{'time': 0.019952972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.68189999999988e-05, 'source_diff': 7.68189999999988e-05}, {'time': 0.020039, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201110 08:40:32.728" endtime="20201110 08:40:32.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:32.745" level="INFO">${ACCURACY} = {'time': [0.019952972, 0.020039, 0.020123986, 0.020210028, 0.020295042, 0.020380042, 0.020465028, 0.020550056, 0.020634056, 0.020717056, 0.020801097, 0.020885139, 0.020970097, 0.021055167, 0.021139125...</msg>
<status status="PASS" starttime="20201110 08:40:32.732" endtime="20201110 08:40:32.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.750" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:40:32.749" endtime="20201110 08:40:32.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.752" level="INFO">VALUE: [7.68189999999988e-05, 7.680600000000218e-05, 7.66250000000003e-05, 7.702799999999982e-05, 7.684800000000089e-05, 7.658400000000107e-05, 7.66250000000003e-05, 7.616700000000198e-05, 7.688900000000012e-05, 7.641700000000223e-05, 7.673600000000086e-05, 7.718099999999908e-05, 7.6764e-05, 7.630599999999821e-05, 7.695800000000197e-05, 7.68189999999988e-05, 7.650000000000018e-05, 7.620900000000069e-05, 7.64029999999992e-05, 7.683400000000132e-05, 7.655499999999898e-05, 7.708299999999862e-05, 7.647200000000104e-05, 7.640199999999972e-05, 7.706899999999905e-05, 7.661099999999726e-05, 7.697199999999807e-05, 7.667999999999911e-05, 7.666700000000248e-05, 7.636100000000048e-05, 7.669499999999815e-05, 7.673700000000033e-05, 7.692999999999936e-05, 7.624999999999993e-05, 7.647200000000104e-05, 7.715299999999994e-05, 7.62769999999996e-05, 7.622200000000079e-05, 7.670800000000172e-05, 7.637500000000005e-05, 7.636100000000048e-05, 7.667999999999911e-05, 7.650000000000018e-05, 7.618099999999808e-05, 7.65969999999977e-05, 7.69449999999984e-05, 7.698600000000111e-05, 7.698699999999711e-05, 7.651300000000028e-05, 7.70830000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:40:32.751" endtime="20201110 08:40:32.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.746" endtime="20201110 08:40:32.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.756" endtime="20201110 08:40:32.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:32.759" endtime="20201110 08:40:32.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.758" endtime="20201110 08:40:32.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.754" endtime="20201110 08:40:32.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.388" endtime="20201110 08:40:32.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.388" endtime="20201110 08:40:32.780"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.789" endtime="20201110 08:40:32.807"></status>
</kw>
<msg timestamp="20201110 08:40:32.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.787" endtime="20201110 08:40:32.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:32.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:32.808" endtime="20201110 08:40:32.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.810" endtime="20201110 08:40:32.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.785" endtime="20201110 08:40:32.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.783" endtime="20201110 08:40:32.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:32.819" endtime="20201110 08:40:33.106"></status>
</kw>
<msg timestamp="20201110 08:40:33.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:32.818" endtime="20201110 08:40:33.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.110" endtime="20201110 08:40:33.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.118" endtime="20201110 08:40:33.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.815" endtime="20201110 08:40:33.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.814" endtime="20201110 08:40:33.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.125" level="INFO">${RESULT} = [{'time': 0.020243111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.755499999999999e-05, 'source_diff': 7.755499999999999e-05}, {'time': 0.020328139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:33.121" endtime="20201110 08:40:33.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:33.138" level="INFO">${ACCURACY} = {'time': [0.020243111, 0.020328139, 0.020413153, 0.020497153, 0.020583167, 0.020670167, 0.020755194, 0.020841194, 0.020928208, 0.021014208, 0.021099208, 0.021185222, 0.021271236, 0.02135725, 0.0214432...</msg>
<status status="PASS" starttime="20201110 08:40:33.126" endtime="20201110 08:40:33.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.142" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:40:33.141" endtime="20201110 08:40:33.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.145" level="INFO">VALUE: [7.755499999999999e-05, 7.772199999999882e-05, 7.7764000000001e-05, 7.719500000000212e-05, 7.747299999999804e-05, 7.74030000000002e-05, 7.730499999999974e-05, 7.786100000000198e-05, 7.763900000000087e-05, 7.806900000000006e-05, 7.813900000000137e-05, 7.723600000000136e-05, 7.776399999999753e-05, 7.804200000000039e-05, 7.722200000000179e-05, 7.779200000000014e-05, 7.754200000000336e-05, 7.740200000000072e-05, 7.765300000000044e-05, 7.779200000000014e-05, 7.804200000000039e-05, 7.772199999999882e-05, 7.806900000000006e-05, 7.794399999999993e-05, 7.741600000000029e-05, 7.723600000000136e-05, 7.720899999999822e-05, 7.723599999999789e-05, 7.741699999999976e-05, 7.80969999999992e-05, 7.784799999999842e-05, 7.793099999999983e-05, 7.749999999999771e-05, 7.729100000000017e-05, 7.769399999999968e-05, 7.768000000000011e-05, 7.791599999999732e-05, 7.74440000000029e-05, 7.720799999999875e-05, 7.7457999999999e-05, 7.79579999999995e-05, 7.813900000000137e-05, 7.780599999999971e-05, 7.794399999999993e-05, 7.781999999999928e-05, 7.756999999999903e-05, 7.761099999999826e-05, 7.738900000000062e-05, 7.770800000000272e-05, 7.780500000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:40:33.143" endtime="20201110 08:40:33.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.139" endtime="20201110 08:40:33.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.148" endtime="20201110 08:40:33.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:33.152" endtime="20201110 08:40:33.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.150" endtime="20201110 08:40:33.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.147" endtime="20201110 08:40:33.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.781" endtime="20201110 08:40:33.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:32.781" endtime="20201110 08:40:33.173"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.181" endtime="20201110 08:40:33.199"></status>
</kw>
<msg timestamp="20201110 08:40:33.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.180" endtime="20201110 08:40:33.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.201" endtime="20201110 08:40:33.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.203" endtime="20201110 08:40:33.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.177" endtime="20201110 08:40:33.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.175" endtime="20201110 08:40:33.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.212" endtime="20201110 08:40:33.499"></status>
</kw>
<msg timestamp="20201110 08:40:33.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.211" endtime="20201110 08:40:33.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.503" endtime="20201110 08:40:33.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.511" endtime="20201110 08:40:33.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.208" endtime="20201110 08:40:33.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.206" endtime="20201110 08:40:33.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.518" level="INFO">${RESULT} = [{'time': 0.019617083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.888900000000212e-05, 'source_diff': 7.888900000000212e-05}, {'time': 0.019705042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:33.514" endtime="20201110 08:40:33.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:33.531" level="INFO">${ACCURACY} = {'time': [0.019617083, 0.019705042, 0.019790125, 0.019878083, 0.019964083, 0.020049097, 0.020137097, 0.020224125, 0.020312125, 0.020397139, 0.020485153, 0.020572167, 0.020658153, 0.020743208, 0.020828...</msg>
<status status="PASS" starttime="20201110 08:40:33.519" endtime="20201110 08:40:33.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.535" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:40:33.534" endtime="20201110 08:40:33.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.538" level="INFO">VALUE: [7.888900000000212e-05, 7.819499999999965e-05, 7.834699999999944e-05, 7.911099999999976e-05, 7.899999999999921e-05, 7.87909999999982e-05, 7.826399999999803e-05, 7.865299999999797e-05, 7.856900000000056e-05, 7.89450000000004e-05, 7.86389999999984e-05, 7.854199999999742e-05, 7.819499999999965e-05, 7.852699999999838e-05, 7.859800000000264e-05, 7.866700000000101e-05, 7.886099999999951e-05, 7.893000000000136e-05, 7.854099999999795e-05, 7.913900000000237e-05, 7.836099999999901e-05, 7.888899999999865e-05, 7.819499999999965e-05, 7.901399999999878e-05, 7.822200000000279e-05, 7.869500000000015e-05, 7.838899999999815e-05, 7.847300000000251e-05, 7.869400000000068e-05, 7.825000000000193e-05, 7.847199999999957e-05, 7.854099999999795e-05, 7.823599999999889e-05, 7.858300000000012e-05, 7.84030000000012e-05, 7.888899999999865e-05, 7.888899999999865e-05, 7.876399999999853e-05, 7.912499999999933e-05, 7.82229999999988e-05, 7.905600000000096e-05, 7.81380000000019e-05, 7.847200000000304e-05, 7.847199999999957e-05, 7.897200000000007e-05, 7.869399999999721e-05, 7.862499999999883e-05, 7.893099999999736e-05, 7.911199999999924e-05, 7.837499999999858e-05]</msg>
<status status="PASS" starttime="20201110 08:40:33.536" endtime="20201110 08:40:33.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.532" endtime="20201110 08:40:33.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.541" endtime="20201110 08:40:33.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:33.545" endtime="20201110 08:40:33.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.543" endtime="20201110 08:40:33.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.540" endtime="20201110 08:40:33.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.174" endtime="20201110 08:40:33.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.173" endtime="20201110 08:40:33.566"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.574" endtime="20201110 08:40:33.593"></status>
</kw>
<msg timestamp="20201110 08:40:33.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.573" endtime="20201110 08:40:33.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.594" endtime="20201110 08:40:33.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.597" endtime="20201110 08:40:33.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.570" endtime="20201110 08:40:33.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.568" endtime="20201110 08:40:33.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.606" endtime="20201110 08:40:33.892"></status>
</kw>
<msg timestamp="20201110 08:40:33.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.604" endtime="20201110 08:40:33.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.896" endtime="20201110 08:40:33.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.904" endtime="20201110 08:40:33.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.602" endtime="20201110 08:40:33.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.600" endtime="20201110 08:40:33.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.911" level="INFO">${RESULT} = [{'time': 0.019613611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.002799999999935e-05, 'source_diff': 8.002799999999935e-05}, {'time': 0.019700625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:33.907" endtime="20201110 08:40:33.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:33.924" level="INFO">${ACCURACY} = {'time': [0.019613611, 0.019700625, 0.019788653, 0.019875653, 0.019962667, 0.020048667, 0.020137694, 0.02022375, 0.020312694, 0.020400722, 0.020487708, 0.020575722, 0.020661736, 0.02074875, 0.02083675...</msg>
<status status="PASS" starttime="20201110 08:40:33.912" endtime="20201110 08:40:33.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.928" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:40:33.927" endtime="20201110 08:40:33.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.931" level="INFO">VALUE: [8.002799999999935e-05, 7.98329999999979e-05, 7.997200000000107e-05, 7.987500000000008e-05, 7.929200000000164e-05, 7.959800000000017e-05, 7.963799999999993e-05, 7.979199999999867e-05, 7.992999999999889e-05, 7.972200000000082e-05, 7.916600000000204e-05, 7.9458000000001e-05, 7.924999999999946e-05, 7.95970000000007e-05, 7.930600000000121e-05, 7.943100000000133e-05, 8.016699999999904e-05, 7.954200000000189e-05, 7.973600000000039e-05, 8.011200000000024e-05, 7.926299999999956e-05, 7.933300000000088e-05, 7.976399999999953e-05, 7.929200000000164e-05, 7.977800000000257e-05, 7.919400000000118e-05, 7.980599999999824e-05, 7.926399999999903e-05, 7.955599999999799e-05, 7.970900000000072e-05, 7.934799999999992e-05, 7.937499999999958e-05, 7.988899999999965e-05, 7.93190000000013e-05, 8.001399999999978e-05, 7.992999999999889e-05, 7.95970000000007e-05, 7.987500000000008e-05, 7.97779999999991e-05, 7.938899999999915e-05, 7.9458000000001e-05, 7.95840000000006e-05, 7.993100000000183e-05, 7.951399999999928e-05, 7.951399999999928e-05, 7.994399999999846e-05, 7.918000000000161e-05, 7.918000000000161e-05, 7.948599999999667e-05, 8.00970000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:40:33.929" endtime="20201110 08:40:33.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.925" endtime="20201110 08:40:33.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.934" endtime="20201110 08:40:33.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:33.938" endtime="20201110 08:40:33.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.936" endtime="20201110 08:40:33.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.933" endtime="20201110 08:40:33.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.567" endtime="20201110 08:40:33.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.566" endtime="20201110 08:40:33.959"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.967" endtime="20201110 08:40:33.986"></status>
</kw>
<msg timestamp="20201110 08:40:33.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.966" endtime="20201110 08:40:33.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:33.987" endtime="20201110 08:40:33.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.990" endtime="20201110 08:40:33.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.963" endtime="20201110 08:40:33.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.961" endtime="20201110 08:40:33.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.999" endtime="20201110 08:40:34.285"></status>
</kw>
<msg timestamp="20201110 08:40:34.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.997" endtime="20201110 08:40:34.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:34.289" endtime="20201110 08:40:34.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.297" endtime="20201110 08:40:34.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.995" endtime="20201110 08:40:34.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.993" endtime="20201110 08:40:34.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:34.304" level="INFO">${RESULT} = [{'time': 0.019675375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.116700000000004e-05, 'source_diff': 8.116700000000004e-05}, {'time': 0.019763375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:34.300" endtime="20201110 08:40:34.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:34.318" level="INFO">${ACCURACY} = {'time': [0.019675375, 0.019763375, 0.019852389, 0.019942389, 0.020032403, 0.020120417, 0.020207417, 0.020295458, 0.020385486, 0.020475444, 0.0205635, 0.020651528, 0.0207405, 0.020828486, 0.020917528,...</msg>
<status status="PASS" starttime="20201110 08:40:34.305" endtime="20201110 08:40:34.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.323" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:40:34.322" endtime="20201110 08:40:34.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.325" level="INFO">VALUE: [8.116700000000004e-05, 8.095799999999903e-05, 8.065299999999997e-05, 8.057000000000203e-05, 8.062500000000083e-05, 8.036100000000101e-05, 8.016699999999904e-05, 8.042999999999939e-05, 8.066699999999954e-05, 8.038799999999721e-05, 8.09719999999986e-05, 8.11109999999983e-05, 8.074999999999749e-05, 8.04169999999993e-05, 8.019500000000165e-05, 8.037499999999712e-05, 8.055599999999899e-05, 8.093099999999936e-05, 8.026400000000003e-05, 8.038900000000015e-05, 8.068000000000311e-05, 8.100000000000121e-05, 8.099999999999774e-05, 8.026400000000003e-05, 8.0458000000002e-05, 8.07780000000001e-05, 8.029199999999917e-05, 8.045799999999853e-05, 8.076400000000053e-05, 8.038900000000015e-05, 8.120799999999928e-05, 8.073700000000086e-05, 8.025000000000046e-05, 8.048600000000114e-05, 8.09580000000025e-05, 8.061100000000126e-05, 8.056899999999909e-05, 8.069499999999868e-05, 8.02779999999996e-05, 8.065299999999997e-05, 8.022200000000132e-05, 8.104199999999992e-05, 8.088900000000065e-05, 8.040200000000025e-05, 8.104100000000045e-05, 8.05970000000017e-05, 8.026300000000056e-05, 8.067999999999964e-05, 8.038900000000015e-05, 8.050000000000071e-05]</msg>
<status status="PASS" starttime="20201110 08:40:34.324" endtime="20201110 08:40:34.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.319" endtime="20201110 08:40:34.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.329" endtime="20201110 08:40:34.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:34.332" endtime="20201110 08:40:34.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.331" endtime="20201110 08:40:34.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.327" endtime="20201110 08:40:34.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.960" endtime="20201110 08:40:34.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.959" endtime="20201110 08:40:34.353"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.363" endtime="20201110 08:40:34.381"></status>
</kw>
<msg timestamp="20201110 08:40:34.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:34.361" endtime="20201110 08:40:34.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:34.382" endtime="20201110 08:40:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.385" endtime="20201110 08:40:34.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.358" endtime="20201110 08:40:34.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.356" endtime="20201110 08:40:34.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.394" endtime="20201110 08:40:34.679"></status>
</kw>
<msg timestamp="20201110 08:40:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021025472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:34.392" endtime="20201110 08:40:34.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021025472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021106764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:34.683" endtime="20201110 08:40:34.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.692" endtime="20201110 08:40:34.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.390" endtime="20201110 08:40:34.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.388" endtime="20201110 08:40:34.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:34.698" level="INFO">${RESULT} = [{'time': 0.021106764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.129200000000017e-05, 'source_diff': 8.129200000000017e-05}, {'time': 0.021196764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:34.695" endtime="20201110 08:40:34.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:34.711" level="INFO">${ACCURACY} = {'time': [0.021106764, 0.021196764, 0.021285764, 0.021374792, 0.021462819, 0.021552792, 0.021643806, 0.021733819, 0.021824875, 0.021915847, 0.022006875, 0.022096861, 0.022187875, 0.022276889, 0.022367...</msg>
<status status="PASS" starttime="20201110 08:40:34.699" endtime="20201110 08:40:34.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.716" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:40:34.715" endtime="20201110 08:40:34.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.718" level="INFO">VALUE: [8.129200000000017e-05, 8.209699999999973e-05, 8.188899999999819e-05, 8.190300000000122e-05, 8.138800000000168e-05, 8.118099999999961e-05, 8.19170000000008e-05, 8.163800000000193e-05, 8.155599999999999e-05, 8.138899999999769e-05, 8.18329999999999e-05, 8.156900000000009e-05, 8.204200000000092e-05, 8.145799999999953e-05, 8.126399999999756e-05, 8.126400000000103e-05, 8.134800000000192e-05, 8.170899999999925e-05, 8.174999999999849e-05, 8.212500000000234e-05, 8.123600000000189e-05, 8.173599999999892e-05, 8.169400000000021e-05, 8.18329999999999e-05, 8.130500000000027e-05, 8.175000000000196e-05, 8.181999999999981e-05, 8.186100000000252e-05, 8.168100000000011e-05, 8.17780000000011e-05, 8.159699999999923e-05, 8.181900000000034e-05, 8.200000000000221e-05, 8.176400000000153e-05, 8.19719999999996e-05, 8.154200000000042e-05, 8.130600000000321e-05, 8.213899999999844e-05, 8.120899999999875e-05, 8.188899999999819e-05, 8.170900000000272e-05, 8.201399999999831e-05, 8.183399999999938e-05, 8.165300000000097e-05, 8.118000000000014e-05, 8.127699999999766e-05, 8.165300000000097e-05, 8.209699999999973e-05, 8.199999999999874e-05, 8.154199999999695e-05]</msg>
<status status="PASS" starttime="20201110 08:40:34.717" endtime="20201110 08:40:34.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.712" endtime="20201110 08:40:34.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.722" endtime="20201110 08:40:34.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:34.725" endtime="20201110 08:40:34.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.724" endtime="20201110 08:40:34.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.720" endtime="20201110 08:40:34.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.354" endtime="20201110 08:40:34.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.354" endtime="20201110 08:40:34.746"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.755" endtime="20201110 08:40:34.773"></status>
</kw>
<msg timestamp="20201110 08:40:34.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:34.753" endtime="20201110 08:40:34.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:34.774" endtime="20201110 08:40:34.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.777" endtime="20201110 08:40:34.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.751" endtime="20201110 08:40:34.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.749" endtime="20201110 08:40:34.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.786" endtime="20201110 08:40:35.073"></status>
</kw>
<msg timestamp="20201110 08:40:35.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:34.784" endtime="20201110 08:40:35.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.078" endtime="20201110 08:40:35.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.086" endtime="20201110 08:40:35.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.782" endtime="20201110 08:40:35.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.780" endtime="20201110 08:40:35.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:35.092" level="INFO">${RESULT} = [{'time': 0.020252014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.291699999999833e-05, 'source_diff': 8.291699999999833e-05}, {'time': 0.020343, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:40:35.089" endtime="20201110 08:40:35.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:35.105" level="INFO">${ACCURACY} = {'time': [0.020252014, 0.020343, 0.020432014, 0.020524056, 0.020615042, 0.020707056, 0.020799111, 0.020892069, 0.020983097, 0.021075097, 0.021166111, 0.021258111, 0.021349139, 0.021440139, 0.021531139...</msg>
<status status="PASS" starttime="20201110 08:40:35.093" endtime="20201110 08:40:35.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.110" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:40:35.109" endtime="20201110 08:40:35.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.112" level="INFO">VALUE: [8.291699999999833e-05, 8.23330000000004e-05, 8.218099999999715e-05, 8.24309999999974e-05, 8.283400000000038e-05, 8.265300000000197e-05, 8.309699999999726e-05, 8.309700000000073e-05, 8.23049999999978e-05, 8.304100000000245e-05, 8.272200000000035e-05, 8.256900000000109e-05, 8.28330000000009e-05, 8.28330000000009e-05, 8.298600000000017e-05, 8.294500000000093e-05, 8.316700000000204e-05, 8.281999999999734e-05, 8.305599999999802e-05, 8.238799999999921e-05, 8.237499999999912e-05, 8.223599999999942e-05, 8.256900000000109e-05, 8.269500000000068e-05, 8.273599999999992e-05, 8.226400000000203e-05, 8.229200000000117e-05, 8.216700000000104e-05, 8.22780000000016e-05, 8.288899999999919e-05, 8.31659999999991e-05, 8.274999999999949e-05, 8.29859999999967e-05, 8.217999999999767e-05, 8.281900000000134e-05, 8.26529999999985e-05, 8.234699999999998e-05, 8.274999999999949e-05, 8.305600000000149e-05, 8.316699999999858e-05, 8.283400000000038e-05, 8.244500000000043e-05, 8.238899999999869e-05, 8.270800000000078e-05, 8.220800000000028e-05, 8.26109999999998e-05, 8.281899999999787e-05, 8.294399999999799e-05, 8.311099999999683e-05, 8.268100000000111e-05]</msg>
<status status="PASS" starttime="20201110 08:40:35.111" endtime="20201110 08:40:35.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.106" endtime="20201110 08:40:35.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.116" endtime="20201110 08:40:35.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:35.119" endtime="20201110 08:40:35.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.118" endtime="20201110 08:40:35.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.114" endtime="20201110 08:40:35.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.747" endtime="20201110 08:40:35.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.747" endtime="20201110 08:40:35.140"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.149" endtime="20201110 08:40:35.169"></status>
</kw>
<msg timestamp="20201110 08:40:35.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.147" endtime="20201110 08:40:35.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.170" endtime="20201110 08:40:35.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.173" endtime="20201110 08:40:35.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.145" endtime="20201110 08:40:35.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.142" endtime="20201110 08:40:35.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.181" endtime="20201110 08:40:35.468"></status>
</kw>
<msg timestamp="20201110 08:40:35.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.180" endtime="20201110 08:40:35.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.473" endtime="20201110 08:40:35.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.481" endtime="20201110 08:40:35.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.177" endtime="20201110 08:40:35.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.176" endtime="20201110 08:40:35.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:35.487" level="INFO">${RESULT} = [{'time': 0.020531264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.39309999999989e-05, 'source_diff': 8.39309999999989e-05}, {'time': 0.020622236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:35.484" endtime="20201110 08:40:35.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:35.500" level="INFO">${ACCURACY} = {'time': [0.020531264, 0.020622236, 0.02071325, 0.020805278, 0.020898278, 0.020988292, 0.021078306, 0.021169306, 0.021261319, 0.021352347, 0.021444333, 0.021535361, 0.021626347, 0.021717389, 0.0218083...</msg>
<status status="PASS" starttime="20201110 08:40:35.488" endtime="20201110 08:40:35.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.505" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:40:35.504" endtime="20201110 08:40:35.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.507" level="INFO">VALUE: [8.39309999999989e-05, 8.374999999999702e-05, 8.363899999999994e-05, 8.377799999999963e-05, 8.340299999999926e-05, 8.344499999999797e-05, 8.337500000000012e-05, 8.32919999999987e-05, 8.34720000000011e-05, 8.413900000000044e-05, 8.405499999999955e-05, 8.401400000000031e-05, 8.381900000000234e-05, 8.404199999999945e-05, 8.363899999999994e-05, 8.413900000000044e-05, 8.340300000000272e-05, 8.341699999999883e-05, 8.354199999999895e-05, 8.391599999999985e-05, 8.363899999999994e-05, 8.347199999999763e-05, 8.369399999999874e-05, 8.324999999999999e-05, 8.412500000000087e-05, 8.334700000000098e-05, 8.390200000000028e-05, 8.401400000000031e-05, 8.383299999999844e-05, 8.393100000000236e-05, 8.324999999999999e-05, 8.388799999999724e-05, 8.323599999999695e-05, 8.347199999999763e-05, 8.34859999999972e-05, 8.326400000000303e-05, 8.358299999999819e-05, 8.333400000000088e-05, 8.327799999999913e-05, 8.324999999999999e-05, 8.366699999999908e-05, 8.355600000000199e-05, 8.41110000000013e-05, 8.333400000000088e-05, 8.326300000000009e-05, 8.404099999999998e-05, 8.373600000000092e-05, 8.379099999999973e-05, 8.413900000000044e-05, 8.334700000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:40:35.506" endtime="20201110 08:40:35.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.501" endtime="20201110 08:40:35.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.516" endtime="20201110 08:40:35.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:35.520" endtime="20201110 08:40:35.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.518" endtime="20201110 08:40:35.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.514" endtime="20201110 08:40:35.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.141" endtime="20201110 08:40:35.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.140" endtime="20201110 08:40:35.541"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.550" endtime="20201110 08:40:35.568"></status>
</kw>
<msg timestamp="20201110 08:40:35.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.548" endtime="20201110 08:40:35.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.569" endtime="20201110 08:40:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.572" endtime="20201110 08:40:35.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.546" endtime="20201110 08:40:35.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.543" endtime="20201110 08:40:35.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.581" endtime="20201110 08:40:35.867"></status>
</kw>
<msg timestamp="20201110 08:40:35.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021025333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.579" endtime="20201110 08:40:35.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021025333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.871" endtime="20201110 08:40:35.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.879" endtime="20201110 08:40:35.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.577" endtime="20201110 08:40:35.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.575" endtime="20201110 08:40:35.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:35.886" level="INFO">${RESULT} = [{'time': 0.021025333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.490200000000128e-05, 'source_diff': 8.490200000000128e-05}, {'time': 0.021118347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:35.883" endtime="20201110 08:40:35.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:35.901" level="INFO">${ACCURACY} = {'time': [0.021025333, 0.021118347, 0.021209347, 0.021301361, 0.021392361, 0.021486403, 0.021578403, 0.021671403, 0.021762403, 0.021854417, 0.021947431, 0.022039458, 0.022132458, 0.022225458, 0.022318...</msg>
<status status="PASS" starttime="20201110 08:40:35.887" endtime="20201110 08:40:35.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.905" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:40:35.904" endtime="20201110 08:40:35.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.908" level="INFO">VALUE: [8.490200000000128e-05, 8.429100000000023e-05, 8.419399999999924e-05, 8.506900000000012e-05, 8.442999999999992e-05, 8.483400000000238e-05, 8.488900000000119e-05, 8.456999999999909e-05, 8.477800000000063e-05, 8.501400000000131e-05, 8.51119999999983e-05, 8.509700000000273e-05, 8.429100000000023e-05, 8.427700000000066e-05, 8.429100000000023e-05, 8.469399999999974e-05, 8.427800000000013e-05, 8.440300000000026e-05, 8.418100000000261e-05, 8.416699999999958e-05, 8.50980000000022e-05, 8.454199999999995e-05, 8.488900000000119e-05, 8.497199999999913e-05, 8.513899999999797e-05, 8.440300000000026e-05, 8.442999999999992e-05, 8.44859999999982e-05, 8.468099999999965e-05, 8.418099999999915e-05, 8.501400000000131e-05, 8.472300000000182e-05, 8.463899999999747e-05, 8.491699999999686e-05, 8.454199999999995e-05, 8.504199999999698e-05, 8.429100000000023e-05, 8.468000000000017e-05, 8.419400000000271e-05, 8.46530000000005e-05, 8.49859999999987e-05, 8.420799999999881e-05, 8.430599999999927e-05, 8.438899999999722e-05, 8.449999999999777e-05, 8.465199999999756e-05, 8.458399999999866e-05, 8.458300000000266e-05, 8.479099999999726e-05, 8.462500000000137e-05]</msg>
<status status="PASS" starttime="20201110 08:40:35.906" endtime="20201110 08:40:35.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.902" endtime="20201110 08:40:35.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.911" endtime="20201110 08:40:35.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:35.915" endtime="20201110 08:40:35.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.913" endtime="20201110 08:40:35.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.910" endtime="20201110 08:40:35.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.542" endtime="20201110 08:40:35.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.541" endtime="20201110 08:40:35.936"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.944" endtime="20201110 08:40:35.963"></status>
</kw>
<msg timestamp="20201110 08:40:35.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.943" endtime="20201110 08:40:35.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:35.965" endtime="20201110 08:40:35.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.967" endtime="20201110 08:40:35.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.940" endtime="20201110 08:40:35.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.938" endtime="20201110 08:40:35.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.976" endtime="20201110 08:40:36.264"></status>
</kw>
<msg timestamp="20201110 08:40:36.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.975" endtime="20201110 08:40:36.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.268" endtime="20201110 08:40:36.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.276" endtime="20201110 08:40:36.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.972" endtime="20201110 08:40:36.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.970" endtime="20201110 08:40:36.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:36.283" level="INFO">${RESULT} = [{'time': 0.019615583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.563899999999847e-05, 'source_diff': 8.563899999999847e-05}, {'time': 0.019709625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:36.280" endtime="20201110 08:40:36.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:36.296" level="INFO">${ACCURACY} = {'time': [0.019615583, 0.019709625, 0.019801597, 0.019895611, 0.019987625, 0.020079639, 0.020172639, 0.020267653, 0.020361681, 0.020454681, 0.020549708, 0.020642694, 0.020735736, 0.020831722, 0.020926...</msg>
<status status="PASS" starttime="20201110 08:40:36.284" endtime="20201110 08:40:36.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.300" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:40:36.299" endtime="20201110 08:40:36.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.303" level="INFO">VALUE: [8.563899999999847e-05, 8.6153000000002e-05, 8.525000000000199e-05, 8.518000000000067e-05, 8.569399999999727e-05, 8.51249999999984e-05, 8.565299999999804e-05, 8.59859999999997e-05, 8.54729999999991e-05, 8.541699999999736e-05, 8.563899999999847e-05, 8.53469999999995e-05, 8.595800000000056e-05, 8.61249999999994e-05, 8.591700000000133e-05, 8.581900000000087e-05, 8.540300000000126e-05, 8.518100000000015e-05, 8.555600000000052e-05, 8.601399999999884e-05, 8.557000000000009e-05, 8.563899999999847e-05, 8.61249999999994e-05, 8.608300000000069e-05, 8.56799999999977e-05, 8.583300000000044e-05, 8.586099999999958e-05, 8.527800000000113e-05, 8.573599999999945e-05, 8.59310000000009e-05, 8.516700000000058e-05, 8.557000000000009e-05, 8.604200000000145e-05, 8.554100000000148e-05, 8.599999999999927e-05, 8.515299999999754e-05, 8.556900000000062e-05, 8.581900000000087e-05, 8.561099999999933e-05, 8.563900000000194e-05, 8.551400000000181e-05, 8.590299999999829e-05, 8.530600000000027e-05, 8.519500000000318e-05, 8.551400000000181e-05, 8.566700000000108e-05, 8.551299999999887e-05, 8.586099999999958e-05, 8.581900000000087e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201110 08:40:36.302" endtime="20201110 08:40:36.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.297" endtime="20201110 08:40:36.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.307" endtime="20201110 08:40:36.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:36.310" endtime="20201110 08:40:36.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.308" endtime="20201110 08:40:36.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.305" endtime="20201110 08:40:36.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.937" endtime="20201110 08:40:36.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.936" endtime="20201110 08:40:36.331"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.339" endtime="20201110 08:40:36.358"></status>
</kw>
<msg timestamp="20201110 08:40:36.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:36.338" endtime="20201110 08:40:36.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:36.359" endtime="20201110 08:40:36.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.362" endtime="20201110 08:40:36.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.335" endtime="20201110 08:40:36.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.333" endtime="20201110 08:40:36.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.371" endtime="20201110 08:40:36.658"></status>
</kw>
<msg timestamp="20201110 08:40:36.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.369" endtime="20201110 08:40:36.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.663" endtime="20201110 08:40:36.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.671" endtime="20201110 08:40:36.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.367" endtime="20201110 08:40:36.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.365" endtime="20201110 08:40:36.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:36.677" level="INFO">${RESULT} = [{'time': 0.019614375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694399999999852e-05, 'source_diff': 8.694399999999852e-05}, {'time': 0.019710361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:36.674" endtime="20201110 08:40:36.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:36.691" level="INFO">${ACCURACY} = {'time': [0.019614375, 0.019710361, 0.019804375, 0.019897444, 0.019991403, 0.020084417, 0.020180444, 0.020276431, 0.020371458, 0.020466472, 0.020561458, 0.020656472, 0.020752542, 0.0208485, 0.02094151...</msg>
<status status="PASS" starttime="20201110 08:40:36.678" endtime="20201110 08:40:36.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.695" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:40:36.694" endtime="20201110 08:40:36.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.698" level="INFO">VALUE: [8.694399999999852e-05, 8.702799999999941e-05, 8.61669999999981e-05, 8.679099999999926e-05, 8.640300000000226e-05, 8.634799999999998e-05, 8.711099999999736e-05, 8.619500000000072e-05, 8.652699999999944e-05, 8.683299999999797e-05, 8.681900000000187e-05, 8.622199999999691e-05, 8.656999999999762e-05, 8.620799999999734e-05, 8.661100000000033e-05, 8.654200000000195e-05, 8.64310000000014e-05, 8.69860000000007e-05, 8.673699999999993e-05, 8.624999999999952e-05, 8.647200000000063e-05, 8.666700000000208e-05, 8.624999999999952e-05, 8.706900000000212e-05, 8.62920000000017e-05, 8.645799999999759e-05, 8.676399999999959e-05, 8.640300000000226e-05, 8.633400000000041e-05, 8.658400000000066e-05, 8.64449999999975e-05, 8.688800000000024e-05, 8.63470000000005e-05, 8.716599999999963e-05, 8.645800000000106e-05, 8.67920000000022e-05, 8.71250000000004e-05, 8.715299999999954e-05, 8.619500000000072e-05, 8.622199999999691e-05, 8.680600000000177e-05, 8.645900000000054e-05, 8.680499999999883e-05, 8.669400000000174e-05, 8.633300000000094e-05, 8.629099999999876e-05, 8.66530000000025e-05, 8.640300000000226e-05, 8.658300000000119e-05, 8.676399999999959e-05]</msg>
<status status="PASS" starttime="20201110 08:40:36.696" endtime="20201110 08:40:36.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.692" endtime="20201110 08:40:36.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.701" endtime="20201110 08:40:36.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:36.705" endtime="20201110 08:40:36.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.703" endtime="20201110 08:40:36.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.700" endtime="20201110 08:40:36.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.332" endtime="20201110 08:40:36.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.331" endtime="20201110 08:40:36.726"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.734" endtime="20201110 08:40:36.752"></status>
</kw>
<msg timestamp="20201110 08:40:36.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:36.733" endtime="20201110 08:40:36.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:36.754" endtime="20201110 08:40:36.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.756" endtime="20201110 08:40:36.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.730" endtime="20201110 08:40:36.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.728" endtime="20201110 08:40:36.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.765" endtime="20201110 08:40:37.053"></status>
</kw>
<msg timestamp="20201110 08:40:37.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.764" endtime="20201110 08:40:37.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.057" endtime="20201110 08:40:37.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.066" endtime="20201110 08:40:37.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.761" endtime="20201110 08:40:37.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.759" endtime="20201110 08:40:37.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:37.072" level="INFO">${RESULT} = [{'time': 0.019779194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.73470000000015e-05, 'source_diff': 8.73470000000015e-05}, {'time': 0.01987525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:40:37.069" endtime="20201110 08:40:37.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:37.085" level="INFO">${ACCURACY} = {'time': [0.019779194, 0.01987525, 0.019970208, 0.020066236, 0.020163278, 0.020261264, 0.020358292, 0.020453264, 0.020547278, 0.020641292, 0.020736319, 0.020831319, 0.020926319, 0.021020333, 0.0211163...</msg>
<status status="PASS" starttime="20201110 08:40:37.073" endtime="20201110 08:40:37.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.090" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:40:37.089" endtime="20201110 08:40:37.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.092" level="INFO">VALUE: [8.73470000000015e-05, 8.793099999999943e-05, 8.738900000000022e-05, 8.777800000000016e-05, 8.74860000000012e-05, 8.815300000000054e-05, 8.74730000000011e-05, 8.768099999999918e-05, 8.783399999999844e-05, 8.724999999999705e-05, 8.761099999999786e-05, 8.738800000000074e-05, 8.723599999999748e-05, 8.777699999999722e-05, 8.740299999999979e-05, 8.745900000000154e-05, 8.773599999999798e-05, 8.741699999999936e-05, 8.741699999999936e-05, 8.750000000000077e-05, 8.815300000000054e-05, 8.791699999999986e-05, 8.808299999999922e-05, 8.813800000000149e-05, 8.736099999999761e-05, 8.769399999999927e-05, 8.726400000000009e-05, 8.788899999999725e-05, 8.718099999999868e-05, 8.794500000000247e-05, 8.78059999999993e-05, 8.784800000000148e-05, 8.770900000000179e-05, 8.819399999999977e-05, 8.781900000000287e-05, 8.756899999999915e-05, 8.786099999999811e-05, 8.804100000000051e-05, 8.78059999999993e-05, 8.81250000000014e-05, 8.772199999999841e-05, 8.761100000000133e-05, 8.809799999999826e-05, 8.76250000000009e-05, 8.727799999999966e-05, 8.79869999999977e-05, 8.79999999999978e-05, 8.733299999999847e-05, 8.725000000000052e-05, 8.800000000000127e-05]</msg>
<status status="PASS" starttime="20201110 08:40:37.091" endtime="20201110 08:40:37.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.086" endtime="20201110 08:40:37.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.096" endtime="20201110 08:40:37.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:37.099" endtime="20201110 08:40:37.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.098" endtime="20201110 08:40:37.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.094" endtime="20201110 08:40:37.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.726" endtime="20201110 08:40:37.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.726" endtime="20201110 08:40:37.120"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.129" endtime="20201110 08:40:37.148"></status>
</kw>
<msg timestamp="20201110 08:40:37.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.127" endtime="20201110 08:40:37.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.149" endtime="20201110 08:40:37.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.152" endtime="20201110 08:40:37.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.125" endtime="20201110 08:40:37.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.122" endtime="20201110 08:40:37.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.161" endtime="20201110 08:40:37.447"></status>
</kw>
<msg timestamp="20201110 08:40:37.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.159" endtime="20201110 08:40:37.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.451" endtime="20201110 08:40:37.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.459" endtime="20201110 08:40:37.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.157" endtime="20201110 08:40:37.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.155" endtime="20201110 08:40:37.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:37.466" level="INFO">${RESULT} = [{'time': 0.019636333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.86519999999981e-05, 'source_diff': 8.86519999999981e-05}, {'time': 0.019734333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:37.463" endtime="20201110 08:40:37.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:37.481" level="INFO">${ACCURACY} = {'time': [0.019636333, 0.019734333, 0.019832347, 0.019929361, 0.020026375, 0.020124375, 0.020220389, 0.020318403, 0.020414417, 0.020512444, 0.020608444, 0.020706444, 0.020802458, 0.020899472, 0.020996...</msg>
<status status="PASS" starttime="20201110 08:40:37.467" endtime="20201110 08:40:37.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.485" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:40:37.484" endtime="20201110 08:40:37.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.488" level="INFO">VALUE: [8.86519999999981e-05, 8.84999999999983e-05, 8.826400000000109e-05, 8.905500000000108e-05, 8.88190000000004e-05, 8.873599999999898e-05, 8.912499999999893e-05, 8.833399999999894e-05, 8.913900000000197e-05, 8.900000000000227e-05, 8.866600000000113e-05, 8.898599999999923e-05, 8.834699999999904e-05, 8.88190000000004e-05, 8.855600000000005e-05, 8.81670000000001e-05, 8.847200000000263e-05, 8.829200000000023e-05, 8.874999999999855e-05, 8.827800000000066e-05, 8.91389999999985e-05, 8.854200000000048e-05, 8.854200000000048e-05, 8.865200000000156e-05, 8.904100000000151e-05, 8.852800000000091e-05, 8.833299999999947e-05, 8.855600000000005e-05, 8.902800000000141e-05, 8.907000000000012e-05, 8.869499999999975e-05, 8.906900000000065e-05, 8.906900000000065e-05, 8.847200000000263e-05, 8.851400000000134e-05, 8.879100000000126e-05, 8.843099999999993e-05, 8.877799999999769e-05, 8.868100000000018e-05, 8.836099999999861e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.904199999999751e-05, 8.859799999999876e-05, 8.869499999999975e-05, 8.826300000000162e-05, 8.822200000000238e-05, 8.856900000000015e-05, 8.870799999999984e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201110 08:40:37.486" endtime="20201110 08:40:37.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.482" endtime="20201110 08:40:37.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.491" endtime="20201110 08:40:37.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:37.495" endtime="20201110 08:40:37.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.493" endtime="20201110 08:40:37.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.490" endtime="20201110 08:40:37.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.121" endtime="20201110 08:40:37.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.120" endtime="20201110 08:40:37.516"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.524" endtime="20201110 08:40:37.543"></status>
</kw>
<msg timestamp="20201110 08:40:37.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.523" endtime="20201110 08:40:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.544" endtime="20201110 08:40:37.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.547" endtime="20201110 08:40:37.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.520" endtime="20201110 08:40:37.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.518" endtime="20201110 08:40:37.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.556" endtime="20201110 08:40:37.842"></status>
</kw>
<msg timestamp="20201110 08:40:37.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.554" endtime="20201110 08:40:37.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.846" endtime="20201110 08:40:37.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.854" endtime="20201110 08:40:37.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.552" endtime="20201110 08:40:37.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.550" endtime="20201110 08:40:37.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:37.860" level="INFO">${RESULT} = [{'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.011100000000036e-05, 'source_diff': 9.011100000000036e-05}, {'time': 0.019993083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:37.857" endtime="20201110 08:40:37.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:37.874" level="INFO">${ACCURACY} = {'time': [0.019894069, 0.019993083, 0.020091083, 0.020188097, 0.020285111, 0.020383125, 0.020481125, 0.020579153, 0.020678167, 0.020777153, 0.020873181, 0.020971181, 0.021068208, 0.021167236, 0.021265...</msg>
<status status="PASS" starttime="20201110 08:40:37.861" endtime="20201110 08:40:37.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.878" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:40:37.877" endtime="20201110 08:40:37.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.881" level="INFO">VALUE: [9.011100000000036e-05, 8.9638999999999e-05, 8.940199999999884e-05, 9.006899999999818e-05, 8.936100000000308e-05, 8.981899999999793e-05, 8.974999999999955e-05, 8.93060000000008e-05, 8.952800000000191e-05, 8.991699999999839e-05, 8.968100000000118e-05, 8.966699999999814e-05, 8.927700000000219e-05, 8.940299999999832e-05, 8.927700000000219e-05, 8.941700000000136e-05, 8.962499999999943e-05, 8.929200000000123e-05, 8.937499999999918e-05, 8.951400000000234e-05, 8.933399999999994e-05, 8.993100000000143e-05, 8.961099999999986e-05, 9.004100000000251e-05, 8.96939999999978e-05, 8.966600000000213e-05, 8.947200000000016e-05, 8.927799999999819e-05, 8.983300000000097e-05, 9.004200000000198e-05, 8.956999999999715e-05, 9.015299999999907e-05, 8.947299999999964e-05, 8.968099999999771e-05, 8.955500000000158e-05, 8.958300000000072e-05, 9.01389999999995e-05, 8.954199999999801e-05, 8.956900000000115e-05, 8.958299999999725e-05, 8.948599999999973e-05, 8.970800000000084e-05, 8.951400000000234e-05, 8.933399999999994e-05, 8.995800000000109e-05, 8.955600000000105e-05, 8.98190000000014e-05, 8.923599999999948e-05, 8.974999999999955e-05, 8.974999999999955e-05]</msg>
<status status="PASS" starttime="20201110 08:40:37.879" endtime="20201110 08:40:37.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.875" endtime="20201110 08:40:37.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.884" endtime="20201110 08:40:37.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:37.888" endtime="20201110 08:40:37.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.886" endtime="20201110 08:40:37.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.883" endtime="20201110 08:40:37.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.517" endtime="20201110 08:40:37.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.516" endtime="20201110 08:40:37.908"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.917" endtime="20201110 08:40:37.935"></status>
</kw>
<msg timestamp="20201110 08:40:37.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.916" endtime="20201110 08:40:37.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:37.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:37.936" endtime="20201110 08:40:37.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.939" endtime="20201110 08:40:37.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.913" endtime="20201110 08:40:37.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.911" endtime="20201110 08:40:37.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:37.948" endtime="20201110 08:40:38.234"></status>
</kw>
<msg timestamp="20201110 08:40:38.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:37.946" endtime="20201110 08:40:38.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.238" endtime="20201110 08:40:38.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.246" endtime="20201110 08:40:38.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.944" endtime="20201110 08:40:38.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.942" endtime="20201110 08:40:38.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:38.253" level="INFO">${RESULT} = [{'time': 0.020126653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.112500000000093e-05, 'source_diff': 9.112500000000093e-05}, {'time': 0.020225681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:38.250" endtime="20201110 08:40:38.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:38.266" level="INFO">${ACCURACY} = {'time': [0.020126653, 0.020225681, 0.020323694, 0.020420736, 0.020519708, 0.020616708, 0.020714722, 0.020812736, 0.020909764, 0.021009778, 0.021109764, 0.021209806, 0.021308861, 0.021408819, 0.021505...</msg>
<status status="PASS" starttime="20201110 08:40:38.254" endtime="20201110 08:40:38.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.271" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:40:38.270" endtime="20201110 08:40:38.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.273" level="INFO">VALUE: [9.112500000000093e-05, 9.065299999999957e-05, 9.066599999999966e-05, 9.025000000000005e-05, 9.045800000000159e-05, 9.043000000000245e-05, 9.036100000000061e-05, 9.087499999999721e-05, 9.090299999999982e-05, 9.052799999999944e-05, 9.051399999999987e-05, 9.083400000000144e-05, 9.056899999999868e-05, 9.10000000000008e-05, 9.036200000000008e-05, 9.063800000000052e-05, 9.092999999999948e-05, 9.055600000000205e-05, 9.037500000000018e-05, 9.094399999999905e-05, 9.018100000000168e-05, 9.068100000000218e-05, 9.06670000000026e-05, 9.070799999999837e-05, 9.061200000000033e-05, 9.088900000000025e-05, 9.037500000000018e-05, 9.11390000000005e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.088900000000025e-05, 9.112500000000093e-05, 9.104199999999951e-05, 9.015299999999907e-05, 9.038899999999975e-05, 9.033399999999747e-05, 9.05000000000003e-05, 9.031899999999843e-05, 9.023600000000048e-05, 9.109699999999832e-05, 9.045800000000159e-05, 9.105599999999908e-05, 9.076400000000012e-05, 9.047199999999769e-05, 9.076400000000012e-05, 9.073600000000098e-05, 9.077700000000022e-05, 9.020900000000082e-05, 9.027800000000266e-05, 9.090299999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:40:38.272" endtime="20201110 08:40:38.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.267" endtime="20201110 08:40:38.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.277" endtime="20201110 08:40:38.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:38.280" endtime="20201110 08:40:38.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.279" endtime="20201110 08:40:38.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.275" endtime="20201110 08:40:38.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.909" endtime="20201110 08:40:38.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:37.909" endtime="20201110 08:40:38.301"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.309" endtime="20201110 08:40:38.328"></status>
</kw>
<msg timestamp="20201110 08:40:38.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:38.308" endtime="20201110 08:40:38.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:38.329" endtime="20201110 08:40:38.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.332" endtime="20201110 08:40:38.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.305" endtime="20201110 08:40:38.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.303" endtime="20201110 08:40:38.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.341" endtime="20201110 08:40:38.628"></status>
</kw>
<msg timestamp="20201110 08:40:38.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.339" endtime="20201110 08:40:38.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.632" endtime="20201110 08:40:38.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.640" endtime="20201110 08:40:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.337" endtime="20201110 08:40:38.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.335" endtime="20201110 08:40:38.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:38.647" level="INFO">${RESULT} = [{'time': 0.019575625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.134699999999857e-05, 'source_diff': 9.134699999999857e-05}, {'time': 0.019674653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:38.644" endtime="20201110 08:40:38.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:38.660" level="INFO">${ACCURACY} = {'time': [0.019575625, 0.019674653, 0.019773653, 0.019874653, 0.019975667, 0.020076667, 0.020175681, 0.020274694, 0.020374722, 0.020473722, 0.020573722, 0.020673736, 0.020773778, 0.020871764, 0.020969...</msg>
<status status="PASS" starttime="20201110 08:40:38.648" endtime="20201110 08:40:38.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.665" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:40:38.664" endtime="20201110 08:40:38.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.667" level="INFO">VALUE: [9.134699999999857e-05, 9.205600000000008e-05, 9.16529999999971e-05, 9.205600000000008e-05, 9.13199999999989e-05, 9.14589999999986e-05, 9.118099999999921e-05, 9.127700000000072e-05, 9.183300000000297e-05, 9.198599999999876e-05, 9.163899999999753e-05, 9.145800000000259e-05, 9.190300000000082e-05, 9.147200000000216e-05, 9.125000000000105e-05, 9.158399999999872e-05, 9.184799999999854e-05, 9.201400000000137e-05, 9.197200000000266e-05, 9.125000000000105e-05, 9.154200000000001e-05, 9.16939999999998e-05, 9.169499999999928e-05, 9.204200000000051e-05, 9.138900000000075e-05, 9.177800000000069e-05, 9.122199999999844e-05, 9.118099999999921e-05, 9.166600000000066e-05, 9.134699999999857e-05, 9.209699999999932e-05, 9.168000000000023e-05, 9.201400000000137e-05, 9.154200000000001e-05, 9.123600000000148e-05, 9.15000000000013e-05, 9.199999999999833e-05, 9.162499999999796e-05, 9.173599999999851e-05, 9.14870000000012e-05, 9.176300000000165e-05, 9.184699999999907e-05, 9.116699999999964e-05, 9.184699999999907e-05, 9.117999999999973e-05, 9.154200000000001e-05, 9.1639000000001e-05, 9.133400000000194e-05, 9.184699999999907e-05, 9.198599999999876e-05]</msg>
<status status="PASS" starttime="20201110 08:40:38.666" endtime="20201110 08:40:38.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.661" endtime="20201110 08:40:38.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.671" endtime="20201110 08:40:38.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:38.674" endtime="20201110 08:40:38.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.673" endtime="20201110 08:40:38.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.669" endtime="20201110 08:40:38.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.302" endtime="20201110 08:40:38.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.301" endtime="20201110 08:40:38.695"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.704" endtime="20201110 08:40:38.724"></status>
</kw>
<msg timestamp="20201110 08:40:38.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:38.702" endtime="20201110 08:40:38.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:38.726" endtime="20201110 08:40:38.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.728" endtime="20201110 08:40:38.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.700" endtime="20201110 08:40:38.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.697" endtime="20201110 08:40:38.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.737" endtime="20201110 08:40:39.023"></status>
</kw>
<msg timestamp="20201110 08:40:39.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.736" endtime="20201110 08:40:39.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.028" endtime="20201110 08:40:39.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.036" endtime="20201110 08:40:39.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.733" endtime="20201110 08:40:39.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.731" endtime="20201110 08:40:39.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.042" level="INFO">${RESULT} = [{'time': 0.020634111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.28330000000005e-05, 'source_diff': 9.28330000000005e-05}, {'time': 0.020733153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:39.039" endtime="20201110 08:40:39.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:39.057" level="INFO">${ACCURACY} = {'time': [0.020634111, 0.020733153, 0.020833125, 0.020934153, 0.021035167, 0.021137167, 0.021238181, 0.021340208, 0.02143925, 0.021538208, 0.021637222, 0.02173925, 0.021841264, 0.021943264, 0.02204229...</msg>
<status status="PASS" starttime="20201110 08:40:39.043" endtime="20201110 08:40:39.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.062" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:40:39.061" endtime="20201110 08:40:39.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.064" level="INFO">VALUE: [9.28330000000005e-05, 9.259699999999982e-05, 9.275000000000255e-05, 9.30139999999989e-05, 9.223599999999901e-05, 9.287499999999921e-05, 9.288899999999878e-05, 9.270800000000037e-05, 9.266700000000114e-05, 9.255500000000111e-05, 9.248600000000273e-05, 9.252800000000144e-05, 9.280600000000083e-05, 9.273599999999951e-05, 9.268100000000071e-05, 9.23199999999999e-05, 9.270899999999985e-05, 9.236100000000261e-05, 9.223599999999901e-05, 9.291600000000191e-05, 9.234699999999957e-05, 9.25139999999984e-05, 9.272199999999994e-05, 9.234700000000304e-05, 9.219499999999978e-05, 9.258300000000025e-05, 9.277799999999822e-05, 9.281900000000093e-05, 9.229200000000076e-05, 9.287499999999921e-05, 9.276400000000212e-05, 9.287499999999921e-05, 9.265300000000157e-05, 9.255600000000058e-05, 9.227800000000119e-05, 9.308300000000075e-05, 9.265300000000157e-05, 9.225000000000205e-05, 9.304199999999804e-05, 9.295800000000062e-05, 9.229100000000129e-05, 9.312499999999946e-05, 9.255499999999764e-05, 9.304100000000204e-05, 9.305600000000108e-05, 9.238899999999828e-05, 9.272199999999994e-05, 9.280600000000083e-05, 9.277799999999822e-05, 9.294400000000105e-05]</msg>
<status status="PASS" starttime="20201110 08:40:39.063" endtime="20201110 08:40:39.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.058" endtime="20201110 08:40:39.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.068" endtime="20201110 08:40:39.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:39.071" endtime="20201110 08:40:39.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.069" endtime="20201110 08:40:39.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.066" endtime="20201110 08:40:39.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.696" endtime="20201110 08:40:39.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.695" endtime="20201110 08:40:39.092"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.100" endtime="20201110 08:40:39.119"></status>
</kw>
<msg timestamp="20201110 08:40:39.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.099" endtime="20201110 08:40:39.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.121" endtime="20201110 08:40:39.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.123" endtime="20201110 08:40:39.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.096" endtime="20201110 08:40:39.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.094" endtime="20201110 08:40:39.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.132" endtime="20201110 08:40:39.419"></status>
</kw>
<msg timestamp="20201110 08:40:39.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.130" endtime="20201110 08:40:39.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.423" endtime="20201110 08:40:39.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.432" endtime="20201110 08:40:39.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.128" endtime="20201110 08:40:39.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.126" endtime="20201110 08:40:39.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.439" level="INFO">${RESULT} = [{'time': 0.019607486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.381900000000193e-05, 'source_diff': 9.381900000000193e-05}, {'time': 0.019708514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:39.435" endtime="20201110 08:40:39.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:39.452" level="INFO">${ACCURACY} = {'time': [0.019607486, 0.019708514, 0.019810528, 0.019910528, 0.020013542, 0.020113556, 0.020215569, 0.020315583, 0.020416583, 0.020517611, 0.020619597, 0.020721625, 0.020821625, 0.020923653, 0.021026...</msg>
<status status="PASS" starttime="20201110 08:40:39.439" endtime="20201110 08:40:39.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.456" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:40:39.455" endtime="20201110 08:40:39.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.459" level="INFO">VALUE: [9.381900000000193e-05, 9.34720000000007e-05, 9.319500000000078e-05, 9.366699999999867e-05, 9.334800000000004e-05, 9.354200000000201e-05, 9.323600000000001e-05, 9.3639000000003e-05, 9.363899999999953e-05, 9.39720000000012e-05, 9.409700000000132e-05, 9.376399999999965e-05, 9.361100000000039e-05, 9.39720000000012e-05, 9.35139999999994e-05, 9.4027e-05, 9.369499999999781e-05, 9.390299999999935e-05, 9.333299999999753e-05, 9.388899999999978e-05, 9.341599999999894e-05, 9.397199999999772e-05, 9.393100000000196e-05, 9.381999999999793e-05, 9.369500000000128e-05, 9.369499999999781e-05, 9.3333000000001e-05, 9.3333999999997e-05, 9.404099999999957e-05, 9.383299999999803e-05, 9.336100000000014e-05, 9.388899999999978e-05, 9.345800000000112e-05, 9.409699999999785e-05, 9.351400000000287e-05, 9.326399999999915e-05, 9.413900000000003e-05, 9.398600000000076e-05, 9.394500000000153e-05, 9.38330000000015e-05, 9.368000000000223e-05, 9.361100000000039e-05, 9.359700000000082e-05, 9.355599999999811e-05, 9.406999999999818e-05, 9.373600000000051e-05, 9.31529999999986e-05, 9.359800000000029e-05, 9.352799999999897e-05, 9.379099999999932e-05]</msg>
<status status="PASS" starttime="20201110 08:40:39.457" endtime="20201110 08:40:39.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.453" endtime="20201110 08:40:39.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.462" endtime="20201110 08:40:39.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:39.466" endtime="20201110 08:40:39.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.464" endtime="20201110 08:40:39.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.461" endtime="20201110 08:40:39.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.093" endtime="20201110 08:40:39.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.092" endtime="20201110 08:40:39.487"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.495" endtime="20201110 08:40:39.514"></status>
</kw>
<msg timestamp="20201110 08:40:39.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.493" endtime="20201110 08:40:39.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.516" endtime="20201110 08:40:39.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.518" endtime="20201110 08:40:39.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.491" endtime="20201110 08:40:39.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.489" endtime="20201110 08:40:39.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.527" endtime="20201110 08:40:39.814"></status>
</kw>
<msg timestamp="20201110 08:40:39.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.526" endtime="20201110 08:40:39.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.818" endtime="20201110 08:40:39.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.826" endtime="20201110 08:40:39.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.523" endtime="20201110 08:40:39.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.521" endtime="20201110 08:40:39.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.832" level="INFO">${RESULT} = [{'time': 0.019792653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.475000000000108e-05, 'source_diff': 9.475000000000108e-05}, {'time': 0.019895681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:39.829" endtime="20201110 08:40:39.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:39.846" level="INFO">${ACCURACY} = {'time': [0.019792653, 0.019895681, 0.019996681, 0.020098681, 0.020202708, 0.020303708, 0.020405722, 0.020506722, 0.02060975, 0.02071175, 0.020815764, 0.020919778, 0.021022792, 0.021127806, 0.02122880...</msg>
<status status="PASS" starttime="20201110 08:40:39.833" endtime="20201110 08:40:39.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.850" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:40:39.849" endtime="20201110 08:40:39.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.853" level="INFO">VALUE: [9.475000000000108e-05, 9.506999999999918e-05, 9.438900000000028e-05, 9.469499999999881e-05, 9.440200000000037e-05, 9.45270000000005e-05, 9.450000000000083e-05, 9.436100000000114e-05, 9.476400000000065e-05, 9.41940000000023e-05, 9.504200000000004e-05, 9.456999999999868e-05, 9.458399999999825e-05, 9.51530000000006e-05, 9.448700000000074e-05, 9.458299999999878e-05, 9.46530000000001e-05, 9.437500000000071e-05, 9.463900000000053e-05, 9.481899999999946e-05, 9.504200000000004e-05, 9.459700000000182e-05, 9.462500000000096e-05, 9.472200000000194e-05, 9.438900000000028e-05, 9.426400000000015e-05, 9.470800000000237e-05, 9.4333000000002e-05, 9.440299999999985e-05, 9.497199999999872e-05, 9.466699999999967e-05, 9.4333000000002e-05, 9.47079999999989e-05, 9.418099999999874e-05, 9.469499999999881e-05, 9.481899999999946e-05, 9.487499999999774e-05, 9.506899999999971e-05, 9.465200000000062e-05, 9.467999999999976e-05, 9.456899999999921e-05, 9.447199999999822e-05, 9.461099999999792e-05, 9.429199999999929e-05, 9.422300000000092e-05, 9.427700000000025e-05, 9.445899999999813e-05, 9.487500000000121e-05, 9.491699999999992e-05, 9.480499999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:40:39.851" endtime="20201110 08:40:39.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.847" endtime="20201110 08:40:39.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.856" endtime="20201110 08:40:39.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:39.860" endtime="20201110 08:40:39.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.858" endtime="20201110 08:40:39.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.855" endtime="20201110 08:40:39.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.487" endtime="20201110 08:40:39.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.487" endtime="20201110 08:40:39.880"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.889" endtime="20201110 08:40:39.908"></status>
</kw>
<msg timestamp="20201110 08:40:39.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.888" endtime="20201110 08:40:39.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:39.909" endtime="20201110 08:40:39.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.912" endtime="20201110 08:40:39.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.885" endtime="20201110 08:40:39.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.883" endtime="20201110 08:40:39.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.921" endtime="20201110 08:40:40.209"></status>
</kw>
<msg timestamp="20201110 08:40:40.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.919" endtime="20201110 08:40:40.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:40.213" endtime="20201110 08:40:40.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.221" endtime="20201110 08:40:40.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.917" endtime="20201110 08:40:40.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.915" endtime="20201110 08:40:40.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:40.228" level="INFO">${RESULT} = [{'time': 0.019683806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.519500000000278e-05, 'source_diff': 9.519500000000278e-05}, {'time': 0.019786806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:40.224" endtime="20201110 08:40:40.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:40.241" level="INFO">${ACCURACY} = {'time': [0.019683806, 0.019786806, 0.019888806, 0.019991819, 0.020094833, 0.020198875, 0.020301861, 0.020406889, 0.020510875, 0.020615889, 0.020719931, 0.020822917, 0.020924931, 0.021029944, 0.021133...</msg>
<status status="PASS" starttime="20201110 08:40:40.229" endtime="20201110 08:40:40.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.245" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:40:40.244" endtime="20201110 08:40:40.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.248" level="INFO">VALUE: [9.519500000000278e-05, 9.536200000000161e-05, 9.577799999999775e-05, 9.601300000000243e-05, 9.583300000000003e-05, 9.591700000000092e-05, 9.518000000000026e-05, 9.552800000000097e-05, 9.563900000000153e-05, 9.574999999999861e-05, 9.518099999999974e-05, 9.562499999999849e-05, 9.577800000000122e-05, 9.537499999999824e-05, 9.60140000000019e-05, 9.538900000000128e-05, 9.556900000000021e-05, 9.547199999999922e-05, 9.581900000000046e-05, 9.559700000000282e-05, 9.593100000000049e-05, 9.550000000000183e-05, 9.558399999999925e-05, 9.544400000000008e-05, 9.6027000000002e-05, 9.541600000000094e-05, 9.55140000000014e-05, 9.555600000000011e-05, 9.509700000000232e-05, 9.558299999999978e-05, 9.611099999999942e-05, 9.561099999999892e-05, 9.587499999999874e-05, 9.563900000000153e-05, 9.518000000000026e-05, 9.59859999999993e-05, 9.577700000000175e-05, 9.612499999999899e-05, 9.547199999999922e-05, 9.609699999999985e-05, 9.537500000000171e-05, 9.556999999999968e-05, 9.5333999999999e-05, 9.600000000000233e-05, 9.519499999999931e-05, 9.527700000000125e-05, 9.584700000000307e-05, 9.529200000000029e-05, 9.581900000000046e-05, 9.527800000000072e-05]</msg>
<status status="PASS" starttime="20201110 08:40:40.246" endtime="20201110 08:40:40.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.242" endtime="20201110 08:40:40.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.251" endtime="20201110 08:40:40.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:40.255" endtime="20201110 08:40:40.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.253" endtime="20201110 08:40:40.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.250" endtime="20201110 08:40:40.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.881" endtime="20201110 08:40:40.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.881" endtime="20201110 08:40:40.276"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.284" endtime="20201110 08:40:40.303"></status>
</kw>
<msg timestamp="20201110 08:40:40.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:40.283" endtime="20201110 08:40:40.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:40.304" endtime="20201110 08:40:40.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.307" endtime="20201110 08:40:40.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.280" endtime="20201110 08:40:40.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.278" endtime="20201110 08:40:40.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.316" endtime="20201110 08:40:40.603"></status>
</kw>
<msg timestamp="20201110 08:40:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:40.314" endtime="20201110 08:40:40.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:40.607" endtime="20201110 08:40:40.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.615" endtime="20201110 08:40:40.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.312" endtime="20201110 08:40:40.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.310" endtime="20201110 08:40:40.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:40.622" level="INFO">${RESULT} = [{'time': 0.020373611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.701399999999943e-05, 'source_diff': 9.701399999999943e-05}, {'time': 0.020478639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:40.619" endtime="20201110 08:40:40.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:40.637" level="INFO">${ACCURACY} = {'time': [0.020373611, 0.020478639, 0.020584653, 0.020689681, 0.020795667, 0.020900667, 0.021006694, 0.021109694, 0.021213708, 0.021317722, 0.021421764, 0.021527764, 0.02163175, 0.021737764, 0.0218427...</msg>
<status status="PASS" starttime="20201110 08:40:40.623" endtime="20201110 08:40:40.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.641" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:40:40.640" endtime="20201110 08:40:40.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.644" level="INFO">VALUE: [9.701399999999943e-05, 9.665299999999863e-05, 9.712499999999999e-05, 9.691700000000192e-05, 9.662499999999949e-05, 9.616700000000117e-05, 9.699999999999986e-05, 9.692999999999855e-05, 9.629100000000182e-05, 9.674999999999961e-05, 9.704199999999857e-05, 9.663900000000253e-05, 9.65140000000024e-05, 9.686100000000017e-05, 9.704199999999857e-05, 9.670900000000038e-05, 9.705600000000161e-05, 9.681899999999799e-05, 9.676400000000265e-05, 9.651399999999893e-05, 9.688899999999931e-05, 9.652800000000197e-05, 9.695900000000063e-05, 9.624999999999911e-05, 9.638899999999881e-05, 9.71669999999987e-05, 9.648600000000326e-05, 9.674999999999961e-05, 9.624999999999911e-05, 9.662499999999949e-05, 9.662499999999949e-05, 9.669500000000081e-05, 9.712499999999999e-05, 9.687499999999974e-05, 9.698599999999682e-05, 9.649999999999936e-05, 9.707000000000118e-05, 9.694500000000106e-05, 9.623600000000301e-05, 9.68470000000006e-05, 9.631899999999749e-05, 9.626400000000215e-05, 9.637500000000271e-05, 9.709699999999738e-05, 9.636099999999967e-05, 9.619500000000031e-05, 9.61669999999977e-05, 9.655599999999764e-05, 9.647200000000022e-05, 9.705499999999867e-05]</msg>
<status status="PASS" starttime="20201110 08:40:40.642" endtime="20201110 08:40:40.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.638" endtime="20201110 08:40:40.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.651" endtime="20201110 08:40:40.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:40.654" endtime="20201110 08:40:40.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.653" endtime="20201110 08:40:40.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.649" endtime="20201110 08:40:40.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.277" endtime="20201110 08:40:40.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.276" endtime="20201110 08:40:40.675"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.684" endtime="20201110 08:40:40.704"></status>
</kw>
<msg timestamp="20201110 08:40:40.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:40.682" endtime="20201110 08:40:40.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:40.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:40.705" endtime="20201110 08:40:40.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.708" endtime="20201110 08:40:40.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.680" endtime="20201110 08:40:40.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.678" endtime="20201110 08:40:40.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:40.716" endtime="20201110 08:40:41.003"></status>
</kw>
<msg timestamp="20201110 08:40:41.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01955375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:40.715" endtime="20201110 08:40:41.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01955375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:41.008" endtime="20201110 08:40:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.016" endtime="20201110 08:40:41.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.712" endtime="20201110 08:40:41.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.711" endtime="20201110 08:40:41.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.022" level="INFO">${RESULT} = [{'time': 0.019651542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.779199999999932e-05, 'source_diff': 9.779199999999932e-05}, {'time': 0.019758597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:41.019" endtime="20201110 08:40:41.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:41.035" level="INFO">${ACCURACY} = {'time': [0.019651542, 0.019758597, 0.019863569, 0.019968597, 0.020072597, 0.020176611, 0.020283625, 0.020387653, 0.020493639, 0.020599653, 0.020703667, 0.020810708, 0.020914694, 0.021021722, 0.021127...</msg>
<status status="PASS" starttime="20201110 08:40:41.023" endtime="20201110 08:40:41.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.040" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:40:41.039" endtime="20201110 08:40:41.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.042" level="INFO">VALUE: [9.779199999999932e-05, 9.7721999999998e-05, 9.718000000000226e-05, 9.755500000000264e-05, 9.730500000000239e-05, 9.741699999999895e-05, 9.805599999999914e-05, 9.744499999999809e-05, 9.762500000000049e-05, 9.769499999999834e-05, 9.741699999999895e-05, 9.783300000000203e-05, 9.74019999999999e-05, 9.763900000000006e-05, 9.74860000000008e-05, 9.79999999999974e-05, 9.809700000000185e-05, 9.747200000000122e-05, 9.761099999999745e-05, 9.729199999999882e-05, 9.750000000000036e-05, 9.723700000000002e-05, 9.740299999999938e-05, 9.776300000000071e-05, 9.777700000000028e-05, 9.733299999999806e-05, 9.74860000000008e-05, 9.748599999999732e-05, 9.740299999999938e-05, 9.736100000000067e-05, 9.790299999999988e-05, 9.754200000000254e-05, 9.747199999999775e-05, 9.811100000000142e-05, 9.738899999999981e-05, 9.730500000000239e-05, 9.738899999999981e-05, 9.719399999999837e-05, 9.730600000000186e-05, 9.762500000000049e-05, 9.71669999999987e-05, 9.791700000000292e-05, 9.806899999999924e-05, 9.755500000000264e-05, 9.759699999999788e-05, 9.779099999999985e-05, 9.740299999999938e-05, 9.776400000000018e-05, 9.761100000000092e-05, 9.781999999999846e-05]</msg>
<status status="PASS" starttime="20201110 08:40:41.041" endtime="20201110 08:40:41.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.036" endtime="20201110 08:40:41.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.046" endtime="20201110 08:40:41.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:41.049" endtime="20201110 08:40:41.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.048" endtime="20201110 08:40:41.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.044" endtime="20201110 08:40:41.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.676" endtime="20201110 08:40:41.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:40.676" endtime="20201110 08:40:41.070"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.079" endtime="20201110 08:40:41.097"></status>
</kw>
<msg timestamp="20201110 08:40:41.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.077" endtime="20201110 08:40:41.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.098" endtime="20201110 08:40:41.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.101" endtime="20201110 08:40:41.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.075" endtime="20201110 08:40:41.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.073" endtime="20201110 08:40:41.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.110" endtime="20201110 08:40:41.397"></status>
</kw>
<msg timestamp="20201110 08:40:41.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.108" endtime="20201110 08:40:41.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.401" endtime="20201110 08:40:41.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.409" endtime="20201110 08:40:41.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.106" endtime="20201110 08:40:41.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.104" endtime="20201110 08:40:41.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.415" level="INFO">${RESULT} = [{'time': 0.019596625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.906900000000024e-05, 'source_diff': 9.906900000000024e-05}, {'time': 0.019702625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:41.412" endtime="20201110 08:40:41.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:41.429" level="INFO">${ACCURACY} = {'time': [0.019596625, 0.019702625, 0.019810639, 0.019916639, 0.020023667, 0.020131667, 0.020236681, 0.020341694, 0.020449708, 0.02055775, 0.020663722, 0.020771736, 0.020878764, 0.020983792, 0.0210887...</msg>
<status status="PASS" starttime="20201110 08:40:41.416" endtime="20201110 08:40:41.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.433" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:40:41.432" endtime="20201110 08:40:41.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.436" level="INFO">VALUE: [9.906900000000024e-05, 9.840300000000038e-05, 9.822200000000197e-05, 9.815300000000013e-05, 9.845899999999866e-05, 9.829199999999982e-05, 9.879200000000032e-05, 9.85410000000006e-05, 9.876400000000118e-05, 9.888900000000131e-05, 9.869399999999987e-05, 9.859699999999888e-05, 9.833300000000253e-05, 9.851400000000093e-05, 9.819499999999884e-05, 9.89999999999984e-05, 9.841699999999995e-05, 9.876299999999824e-05, 9.83609999999982e-05, 9.83470000000021e-05, 9.920899999999941e-05, 9.83470000000021e-05, 9.865300000000063e-05, 9.818100000000274e-05, 9.838800000000134e-05, 9.91670000000007e-05, 9.890300000000088e-05, 9.859800000000182e-05, 9.851399999999746e-05, 9.879100000000085e-05, 9.865300000000063e-05, 9.843000000000005e-05, 9.877800000000075e-05, 9.915299999999766e-05, 9.906999999999971e-05, 9.837500000000124e-05, 9.861200000000139e-05, 9.827700000000078e-05, 9.893000000000055e-05, 9.894400000000012e-05, 9.86800000000003e-05, 9.88609999999987e-05, 9.863900000000106e-05, 9.865299999999716e-05, 9.873599999999857e-05, 9.895899999999916e-05, 9.838900000000081e-05, 9.905500000000067e-05, 9.880500000000042e-05, 9.862500000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:40:41.434" endtime="20201110 08:40:41.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.429" endtime="20201110 08:40:41.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.439" endtime="20201110 08:40:41.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:41.443" endtime="20201110 08:40:41.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.441" endtime="20201110 08:40:41.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.438" endtime="20201110 08:40:41.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.071" endtime="20201110 08:40:41.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.071" endtime="20201110 08:40:41.464"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.472" endtime="20201110 08:40:41.491"></status>
</kw>
<msg timestamp="20201110 08:40:41.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.471" endtime="20201110 08:40:41.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.492" endtime="20201110 08:40:41.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.495" endtime="20201110 08:40:41.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.468" endtime="20201110 08:40:41.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.466" endtime="20201110 08:40:41.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.503" endtime="20201110 08:40:41.791"></status>
</kw>
<msg timestamp="20201110 08:40:41.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.502" endtime="20201110 08:40:41.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020322375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.795" endtime="20201110 08:40:41.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.803" endtime="20201110 08:40:41.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.499" endtime="20201110 08:40:41.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.498" endtime="20201110 08:40:41.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.810" level="INFO">${RESULT} = [{'time': 0.020422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98060000000009e-05, 'source_diff': 9.98060000000009e-05}, {'time': 0.020531181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:41.807" endtime="20201110 08:40:41.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:41.823" level="INFO">${ACCURACY} = {'time': [0.020422181, 0.020531181, 0.020639194, 0.02074525, 0.020853222, 0.020959236, 0.021066264, 0.021174278, 0.021283264, 0.021389292, 0.021495306, 0.021602306, 0.021710319, 0.021816347, 0.0219224...</msg>
<status status="PASS" starttime="20201110 08:40:41.811" endtime="20201110 08:40:41.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.828" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:40:41.827" endtime="20201110 08:40:41.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.830" level="INFO">VALUE: [9.98060000000009e-05, 0.00010013899999999909, 9.945800000000019e-05, 9.991700000000145e-05, 9.997200000000026e-05, 9.931900000000049e-05, 0.00010011099999999995, 9.94860000000028e-05, 0.00010015299999999866, 9.938900000000181e-05, 9.98479999999996e-05, 9.983400000000003e-05, 9.965199999999869e-05, 9.944400000000062e-05, 9.954200000000107e-05, 9.997200000000026e-05, 9.941699999999748e-05, 9.920799999999994e-05, 9.987499999999927e-05, 0.00010006999999999724, 0.00010013799999999962, 9.959699999999988e-05, 9.91800000000008e-05, 9.94020000000019e-05, 9.930499999999745e-05, 9.974999999999914e-05, 9.979200000000132e-05, 0.000100028000000002, 9.947199999999976e-05, 9.938899999999834e-05, 9.919499999999984e-05, 9.962499999999902e-05, 9.99999999999994e-05, 9.927700000000178e-05, 9.948599999999932e-05, 9.976399999999871e-05, 9.92219999999995e-05, 9.950000000000236e-05, 9.9819999999997e-05, 9.970899999999991e-05, 0.00010007000000000071, 9.9415999999998e-05, 0.00010015199999999919, 9.984700000000013e-05, 9.929100000000135e-05, 9.977799999999828e-05, 9.99999999999994e-05, 9.993100000000102e-05, 9.979200000000132e-05, 0.00010007000000000071]</msg>
<status status="PASS" starttime="20201110 08:40:41.829" endtime="20201110 08:40:41.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.824" endtime="20201110 08:40:41.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.833" endtime="20201110 08:40:41.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:41.837" endtime="20201110 08:40:41.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.835" endtime="20201110 08:40:41.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.832" endtime="20201110 08:40:41.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.465" endtime="20201110 08:40:41.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.464" endtime="20201110 08:40:41.858"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.866" endtime="20201110 08:40:41.887"></status>
</kw>
<msg timestamp="20201110 08:40:41.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.865" endtime="20201110 08:40:41.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:41.888" endtime="20201110 08:40:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.891" endtime="20201110 08:40:41.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.862" endtime="20201110 08:40:41.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.860" endtime="20201110 08:40:41.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.900" endtime="20201110 08:40:42.186"></status>
</kw>
<msg timestamp="20201110 08:40:42.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.898" endtime="20201110 08:40:42.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020380444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.190" endtime="20201110 08:40:42.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.198" endtime="20201110 08:40:42.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.895" endtime="20201110 08:40:42.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.894" endtime="20201110 08:40:42.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:42.205" level="INFO">${RESULT} = [{'time': 0.020480903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010045900000000066, 'source_diff': 0.00010045900000000066}, {'time': 0.020587944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:42.202" endtime="20201110 08:40:42.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:42.219" level="INFO">${ACCURACY} = {'time': [0.020480903, 0.020587944, 0.020697944, 0.020807986, 0.020917, 0.021025, 0.021132972, 0.021239986, 0.021347069, 0.021456014, 0.021564028, 0.021673042, 0.021783056, 0.021892083, 0.022002139, 0...</msg>
<status status="PASS" starttime="20201110 08:40:42.206" endtime="20201110 08:40:42.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.224" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:40:42.223" endtime="20201110 08:40:42.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.226" level="INFO">VALUE: [0.00010045900000000066, 0.00010090199999999994, 0.0001010549999999992, 0.0001004999999999999, 0.00010043100000000152, 0.00010099999999999693, 0.00010016599999999876, 0.00010076399999999971, 0.00010023600000000008, 0.00010083299999999809, 0.00010037499999999977, 0.00010069500000000134, 0.00010033399999999706, 0.00010097200000000126, 0.00010043100000000152, 0.00010111100000000095, 0.00010033299999999759, 0.0001006800000000023, 0.00010019500000000084, 0.00010052799999999903, 0.00010088899999999984, 0.00010018100000000127, 0.00010037499999999977, 0.00010106900000000224, 0.00010090299999999941, 0.0001003060000000014, 0.00010084700000000113, 0.0001005419999999986, 0.00010081899999999852, 0.00010082000000000146, 0.0001003060000000014, 0.00010106999999999824, 0.00010112500000000052, 0.00010026399999999921, 0.0001002220000000005, 0.00010112500000000052, 0.00010044400000000162, 0.00010067999999999883, 0.00010037499999999977, 0.00010023600000000008, 0.00010045899999999719, 0.0001004999999999999, 0.00010065299999999916, 0.0001010549999999992, 0.00010098600000000083, 0.00010109699999999791, 0.00010083300000000156, 0.00010029200000000182, 0.00010113900000000009, 0.00010091699999999898]</msg>
<status status="PASS" starttime="20201110 08:40:42.225" endtime="20201110 08:40:42.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.220" endtime="20201110 08:40:42.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.230" endtime="20201110 08:40:42.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:42.233" endtime="20201110 08:40:42.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.232" endtime="20201110 08:40:42.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.228" endtime="20201110 08:40:42.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.859" endtime="20201110 08:40:42.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.858" endtime="20201110 08:40:42.254"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.263" endtime="20201110 08:40:42.284"></status>
</kw>
<msg timestamp="20201110 08:40:42.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:42.261" endtime="20201110 08:40:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:42.285" endtime="20201110 08:40:42.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.288" endtime="20201110 08:40:42.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.259" endtime="20201110 08:40:42.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.257" endtime="20201110 08:40:42.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.297" endtime="20201110 08:40:42.583"></status>
</kw>
<msg timestamp="20201110 08:40:42.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020472222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.295" endtime="20201110 08:40:42.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020472222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.587" endtime="20201110 08:40:42.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.595" endtime="20201110 08:40:42.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.293" endtime="20201110 08:40:42.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.291" endtime="20201110 08:40:42.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:42.602" level="INFO">${RESULT} = [{'time': 0.020574181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010195899999999869, 'source_diff': 0.00010195899999999869}, {'time': 0.020685194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:42.599" endtime="20201110 08:40:42.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:42.615" level="INFO">${ACCURACY} = {'time': [0.020574181, 0.020685194, 0.02079425, 0.020903222, 0.021012236, 0.021120264, 0.021230264, 0.021339278, 0.021447306, 0.021557292, 0.021666333, 0.021775333, 0.021885333, 0.021994361, 0.0221023...</msg>
<status status="PASS" starttime="20201110 08:40:42.603" endtime="20201110 08:40:42.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.619" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:40:42.618" endtime="20201110 08:40:42.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.622" level="INFO">VALUE: [0.00010195899999999869, 0.00010198600000000183, 0.00010133299999999859, 0.0001016939999999994, 0.00010190300000000041, 0.00010169499999999887, 0.00010177800000000028, 0.0001015000000000009, 0.0001016809999999993, 0.00010162499999999755, 0.00010161099999999798, 0.00010134700000000163, 0.00010211099999999848, 0.0001015000000000009, 0.00010119400000000237, 0.00010177800000000028, 0.0001020420000000001, 0.0001015000000000009, 0.0001018610000000017, 0.00010122300000000098, 0.00010119400000000237, 0.00010147200000000176, 0.0001013610000000012, 0.00010181899999999952, 0.00010158299999999884, 0.00010202700000000106, 0.00010138900000000034, 0.00010162499999999755, 0.0001020000000000014, 0.00010194500000000259, 0.00010190199999999747, 0.00010149999999999743, 0.00010180499999999995, 0.00010181899999999952, 0.00010181899999999952, 0.00010187500000000127, 0.00010212500000000152, 0.00010201400000000097, 0.00010140299999999991, 0.00010113800000000062, 0.00010198699999999783, 0.00010130499999999945, 0.00010194399999999965, 0.00010208300000000281, 0.00010134700000000163, 0.0001018610000000017, 0.00010188900000000084, 0.00010158400000000178, 0.00010199999999999793, 0.0001011809999999988]</msg>
<status status="PASS" starttime="20201110 08:40:42.620" endtime="20201110 08:40:42.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.616" endtime="20201110 08:40:42.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.625" endtime="20201110 08:40:42.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:42.629" endtime="20201110 08:40:42.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.627" endtime="20201110 08:40:42.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.623" endtime="20201110 08:40:42.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.255" endtime="20201110 08:40:42.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.255" endtime="20201110 08:40:42.649"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.658" endtime="20201110 08:40:42.678"></status>
</kw>
<msg timestamp="20201110 08:40:42.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:42.657" endtime="20201110 08:40:42.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:42.679" endtime="20201110 08:40:42.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.681" endtime="20201110 08:40:42.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.654" endtime="20201110 08:40:42.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.652" endtime="20201110 08:40:42.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.690" endtime="20201110 08:40:42.977"></status>
</kw>
<msg timestamp="20201110 08:40:42.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.689" endtime="20201110 08:40:42.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019566889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.981" endtime="20201110 08:40:42.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.989" endtime="20201110 08:40:42.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.686" endtime="20201110 08:40:42.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.685" endtime="20201110 08:40:42.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:42.996" level="INFO">${RESULT} = [{'time': 0.019669625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001027359999999991, 'source_diff': 0.0001027359999999991}, {'time': 0.019781556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:42.993" endtime="20201110 08:40:42.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:43.009" level="INFO">${ACCURACY} = {'time': [0.019669625, 0.019781556, 0.019892569, 0.020001583, 0.020110597, 0.020222611, 0.020334639, 0.020445625, 0.020555667, 0.020666667, 0.020777667, 0.020889694, 0.021001708, 0.021112722, 0.021225...</msg>
<status status="PASS" starttime="20201110 08:40:42.997" endtime="20201110 08:40:43.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.013" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:40:43.012" endtime="20201110 08:40:43.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.016" level="INFO">VALUE: [0.0001027359999999991, 0.00010261199999999845, 0.00010240199999999797, 0.00010220799999999947, 0.0001026940000000004, 0.00010233300000000306, 0.00010295800000000022, 0.00010299999999999893, 0.0001023199999999995, 0.00010234799999999863, 0.00010277800000000128, 0.00010220799999999947, 0.00010275000000000215, 0.00010247199999999929, 0.00010315299999999819, 0.00010249999999999843, 0.00010240299999999744, 0.00010249999999999843, 0.00010229200000000035, 0.00010307000000000024, 0.00010245900000000266, 0.00010306900000000077, 0.0001026940000000004, 0.00010270799999999997, 0.00010306900000000077, 0.00010288899999999837, 0.00010298599999999936, 0.00010298599999999936, 0.00010220899999999894, 0.00010266700000000073, 0.00010223700000000155, 0.00010295800000000022, 0.00010223600000000208, 0.00010283300000000009, 0.00010284699999999966, 0.00010265299999999769, 0.00010229200000000035, 0.0001030000000000024, 0.00010247299999999876, 0.00010237500000000177, 0.00010252799999999757, 0.0001021809999999998, 0.00010226400000000122, 0.00010248599999999886, 0.00010240300000000091, 0.00010268000000000083, 0.00010232000000000296, 0.00010240300000000091, 0.00010284699999999966, 0.00010307000000000024]</msg>
<status status="PASS" starttime="20201110 08:40:43.014" endtime="20201110 08:40:43.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.010" endtime="20201110 08:40:43.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.019" endtime="20201110 08:40:43.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:43.023" endtime="20201110 08:40:43.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.021" endtime="20201110 08:40:43.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.018" endtime="20201110 08:40:43.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.650" endtime="20201110 08:40:43.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.650" endtime="20201110 08:40:43.044"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.052" endtime="20201110 08:40:43.071"></status>
</kw>
<msg timestamp="20201110 08:40:43.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:43.051" endtime="20201110 08:40:43.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:43.073" endtime="20201110 08:40:43.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.075" endtime="20201110 08:40:43.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.048" endtime="20201110 08:40:43.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.046" endtime="20201110 08:40:43.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.084" endtime="20201110 08:40:43.371"></status>
</kw>
<msg timestamp="20201110 08:40:43.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:43.083" endtime="20201110 08:40:43.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019546111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:43.375" endtime="20201110 08:40:43.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.383" endtime="20201110 08:40:43.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.080" endtime="20201110 08:40:43.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.078" endtime="20201110 08:40:43.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:43.390" level="INFO">${RESULT} = [{'time': 0.019650014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010390299999999894, 'source_diff': 0.00010390299999999894}, {'time': 0.019763014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:43.386" endtime="20201110 08:40:43.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:43.403" level="INFO">${ACCURACY} = {'time': [0.019650014, 0.019763014, 0.019875028, 0.019985028, 0.020098042, 0.020209056, 0.020321056, 0.020434069, 0.020547083, 0.020660097, 0.020771111, 0.020884125, 0.020996139, 0.021106167, 0.021217...</msg>
<status status="PASS" starttime="20201110 08:40:43.391" endtime="20201110 08:40:43.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.407" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:40:43.406" endtime="20201110 08:40:43.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.410" level="INFO">VALUE: [0.00010390299999999894, 0.0001038749999999998, 0.00010390299999999894, 0.00010336099999999973, 0.00010369500000000087, 0.0001033200000000005, 0.00010391700000000198, 0.00010397200000000079, 0.00010333300000000059, 0.00010330499999999798, 0.00010395799999999775, 0.00010393100000000155, 0.00010376399999999925, 0.00010356999999999728, 0.0001036949999999974, 0.00010393100000000155, 0.00010342999999999811, 0.00010384699999999719, 0.00010394399999999818, 0.00010381899999999805, 0.00010411100000000048, 0.00010336099999999973, 0.00010359700000000041, 0.00010369500000000087, 0.0001031940000000009, 0.00010341699999999801, 0.00010324999999999918, 0.00010347200000000029, 0.00010324999999999918, 0.00010363899999999912, 0.00010394399999999818, 0.00010315299999999819, 0.00010348599999999986, 0.00010343100000000105, 0.00010374999999999968, 0.00010408400000000081, 0.00010399999999999993, 0.00010384699999999719, 0.00010347200000000029, 0.00010408300000000134, 0.0001040420000000021, 0.00010390299999999894, 0.00010380499999999848, 0.00010374999999999968, 0.00010372300000000001, 0.00010363899999999912, 0.00010333300000000059, 0.00010362499999999955, 0.00010329199999999789, 0.00010366699999999826]</msg>
<status status="PASS" starttime="20201110 08:40:43.408" endtime="20201110 08:40:43.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.404" endtime="20201110 08:40:43.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.413" endtime="20201110 08:40:43.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:43.417" endtime="20201110 08:40:43.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.415" endtime="20201110 08:40:43.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.412" endtime="20201110 08:40:43.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.045" endtime="20201110 08:40:43.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.044" endtime="20201110 08:40:43.438"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.446" endtime="20201110 08:40:43.465"></status>
</kw>
<msg timestamp="20201110 08:40:43.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:43.445" endtime="20201110 08:40:43.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:43.467" endtime="20201110 08:40:43.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.469" endtime="20201110 08:40:43.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.442" endtime="20201110 08:40:43.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.440" endtime="20201110 08:40:43.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.479" endtime="20201110 08:40:43.765"></status>
</kw>
<msg timestamp="20201110 08:40:43.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:43.477" endtime="20201110 08:40:43.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:43.769" endtime="20201110 08:40:43.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.777" endtime="20201110 08:40:43.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.474" endtime="20201110 08:40:43.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.472" endtime="20201110 08:40:43.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:43.784" level="INFO">${RESULT} = [{'time': 0.019814069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010461100000000098, 'source_diff': 0.00010461100000000098}, {'time': 0.019929069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:43.781" endtime="20201110 08:40:43.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:43.798" level="INFO">${ACCURACY} = {'time': [0.019814069, 0.019929069, 0.020042083, 0.020154097, 0.020265125, 0.020376125, 0.020490153, 0.020601139, 0.020714167, 0.020827181, 0.020940222, 0.021051208, 0.021163236, 0.021274222, 0.021385...</msg>
<status status="PASS" starttime="20201110 08:40:43.785" endtime="20201110 08:40:43.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.803" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:40:43.802" endtime="20201110 08:40:43.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:43.805" level="INFO">VALUE: [0.00010461100000000098, 0.00010513800000000115, 0.00010494399999999918, 0.00010500000000000093, 0.00010426399999999975, 0.00010448599999999739, 0.00010441699999999901, 0.00010436100000000073, 0.00010429199999999889, 0.00010458400000000131, 0.00010504100000000016, 0.00010494399999999918, 0.00010490299999999994, 0.00010419399999999843, 0.00010477799999999982, 0.00010502800000000007, 0.00010499999999999746, 0.00010479199999999939, 0.00010465299999999969, 0.0001042360000000006, 0.000104416000000003, 0.00010466599999999979, 0.00010472200000000154, 0.00010511099999999801, 0.0001045420000000026, 0.00010462500000000055, 0.00010481999999999853, 0.00010475000000000068, 0.00010487499999999733, 0.00010420800000000147, 0.00010467999999999936, 0.00010472200000000154, 0.00010502800000000007, 0.00010477800000000329, 0.00010452799999999957, 0.00010512500000000105, 0.00010487499999999733, 0.00010459799999999742, 0.00010500000000000093, 0.0001050689999999993, 0.00010444399999999868, 0.00010505499999999973, 0.00010454199999999914, 0.00010484700000000166, 0.00010425000000000018, 0.00010481999999999853, 0.00010481999999999853, 0.00010506999999999878, 0.00010508300000000234, 0.00010469500000000187]</msg>
<status status="PASS" starttime="20201110 08:40:43.804" endtime="20201110 08:40:43.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.799" endtime="20201110 08:40:43.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.809" endtime="20201110 08:40:43.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:43.812" endtime="20201110 08:40:43.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.811" endtime="20201110 08:40:43.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.807" endtime="20201110 08:40:43.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.438" endtime="20201110 08:40:43.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.438" endtime="20201110 08:40:43.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:04.125" endtime="20201110 08:40:43.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:43.837" endtime="20201110 08:40:43.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.836" endtime="20201110 08:40:43.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.834" endtime="20201110 08:40:43.857"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:40:01.023" endtime="20201110 08:40:43.858" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:43.864" endtime="20201110 08:40:43.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.863" endtime="20201110 08:40:43.884"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:43.898" endtime="20201110 08:40:46.919"></status>
</kw>
<msg timestamp="20201110 08:40:46.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:43.896" endtime="20201110 08:40:46.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:46.923" endtime="20201110 08:40:46.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.936" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:40:46.930" endtime="20201110 08:40:46.937"></status>
</kw>
<status status="FAIL" starttime="20201110 08:40:43.893" endtime="20201110 08:40:46.938"></status>
</kw>
<status status="FAIL" starttime="20201110 08:40:43.891" endtime="20201110 08:40:46.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.890" endtime="20201110 08:40:46.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:40:46.949" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:40:46.948" endtime="20201110 08:40:46.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.943" endtime="20201110 08:40:46.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.889" endtime="20201110 08:40:46.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.888" endtime="20201110 08:40:46.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:46.953" endtime="20201110 08:40:46.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.887" endtime="20201110 08:40:46.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.885" endtime="20201110 08:40:46.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:43.862" endtime="20201110 08:40:46.959"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:46.979" endtime="20201110 08:40:46.997"></status>
</kw>
<msg timestamp="20201110 08:40:46.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:46.975" endtime="20201110 08:40:46.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:47.000" endtime="20201110 08:40:47.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.005" endtime="20201110 08:40:47.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.969" endtime="20201110 08:40:47.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.965" endtime="20201110 08:40:47.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.023" endtime="20201110 08:40:47.320"></status>
</kw>
<msg timestamp="20201110 08:40:47.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10617275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106195472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:47.020" endtime="20201110 08:40:47.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10617275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106195472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:47.325" endtime="20201110 08:40:47.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.333" endtime="20201110 08:40:47.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.015" endtime="20201110 08:40:47.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.011" endtime="20201110 08:40:47.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:47.339" level="INFO">${RESULT} = [{'time': 3.106195472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2722000000197085e-05, 'source_diff': 2.2722000000197085e-05}, {'time': 3.106222431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:47.336" endtime="20201110 08:40:47.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:47.353" level="INFO">${ACCURACY} = {'time': [3.106195472, 3.106222431, 3.106250417, 3.106275431, 3.106303417, 3.106331431, 3.106357444, 3.106383431, 3.106408458, 3.106434472, 3.106460458, 3.106487458, 3.106514458, 3.106541444, 3.106566...</msg>
<status status="PASS" starttime="20201110 08:40:47.340" endtime="20201110 08:40:47.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.358" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:40:47.357" endtime="20201110 08:40:47.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.360" level="INFO">VALUE: [2.2722000000197085e-05, 2.259800000015133e-05, 2.269500000018354e-05, 2.201399999979259e-05, 2.2277999999875675e-05, 2.275000000029337e-05, 2.224999999977939e-05, 2.1944999999856662e-05, 2.2430000000017714e-05, 2.2777999999945564e-05, 2.279100000013301e-05, 2.194400000021801e-05, 2.2125000000094985e-05, 2.274999999984928e-05, 2.1889000000108183e-05, 2.2028000000062775e-05, 2.259700000006859e-05, 2.279100000013301e-05, 2.234700000025569e-05, 2.204100000025022e-05, 2.2555000000146208e-05, 2.230499999988922e-05, 2.220799999985701e-05, 2.2332999999985503e-05, 2.244399999984381e-05, 2.2583000000242492e-05, 2.1889000000108183e-05, 2.2235999999953293e-05, 2.2264000000049577e-05, 2.240300000000417e-05, 2.2721999999752995e-05, 2.2222000000127196e-05, 2.1778000000249875e-05, 2.2667000000087256e-05, 2.1875000000282085e-05, 2.2527999999688575e-05, 2.1791999999631884e-05, 2.2709000000009638e-05, 2.2167000000017367e-05, 2.2486000000210282e-05, 2.2638999999990972e-05, 2.2180999999843465e-05, 2.2430000000017714e-05, 2.2624999999720785e-05, 2.2235999999953293e-05, 2.2610999999894688e-05, 2.1986000000140393e-05, 2.2736999999661833e-05, 2.2362000000164528e-05, 2.224999999977939e-05]</msg>
<status status="PASS" starttime="20201110 08:40:47.359" endtime="20201110 08:40:47.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.354" endtime="20201110 08:40:47.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.363" endtime="20201110 08:40:47.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:47.367" endtime="20201110 08:40:47.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.365" endtime="20201110 08:40:47.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.362" endtime="20201110 08:40:47.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.962" endtime="20201110 08:40:47.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.961" endtime="20201110 08:40:47.388"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.397" endtime="20201110 08:40:47.412"></status>
</kw>
<msg timestamp="20201110 08:40:47.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:47.395" endtime="20201110 08:40:47.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:47.413" endtime="20201110 08:40:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.416" endtime="20201110 08:40:47.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.393" endtime="20201110 08:40:47.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.391" endtime="20201110 08:40:47.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.424" endtime="20201110 08:40:47.710"></status>
</kw>
<msg timestamp="20201110 08:40:47.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.423" endtime="20201110 08:40:47.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.714" endtime="20201110 08:40:47.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.722" endtime="20201110 08:40:47.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.420" endtime="20201110 08:40:47.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.419" endtime="20201110 08:40:47.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:47.729" level="INFO">${RESULT} = [{'time': 0.020149847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.213899999999741e-05, 'source_diff': 2.213899999999741e-05}, {'time': 0.020175764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:47.726" endtime="20201110 08:40:47.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:47.743" level="INFO">${ACCURACY} = {'time': [0.020149847, 0.020175764, 0.020203778, 0.020228778, 0.020255792, 0.020280792, 0.020306778, 0.020331792, 0.020356792, 0.020381819, 0.020406806, 0.020431806, 0.020458806, 0.020484806, 0.020509...</msg>
<status status="PASS" starttime="20201110 08:40:47.730" endtime="20201110 08:40:47.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.747" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:40:47.746" endtime="20201110 08:40:47.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.750" level="INFO">VALUE: [2.213899999999741e-05, 2.193099999999934e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.1792000000003114e-05, 2.2735999999998896e-05, 2.2584000000002574e-05, 2.272300000000227e-05, 2.2013999999997286e-05, 2.2680000000000616e-05, 2.268100000000009e-05, 2.273700000000184e-05, 2.247299999999855e-05, 2.2598000000002144e-05, 2.247299999999855e-05, 2.241700000000027e-05, 2.2222000000002295e-05, 2.261099999999877e-05, 2.1944000000002906e-05, 2.229100000000067e-05, 2.258299999999963e-05, 2.2028000000000325e-05, 2.230500000000024e-05, 2.256900000000006e-05, 2.234700000000242e-05, 2.2749999999998466e-05, 2.2721999999999326e-05, 2.2721999999999326e-05, 2.2749999999998466e-05, 2.266700000000052e-05, 2.2708000000003226e-05, 2.194499999999891e-05, 2.188900000000063e-05, 2.2014000000000755e-05, 2.2541999999996926e-05, 2.1944000000002906e-05, 2.2000000000001185e-05, 2.2457999999999506e-05, 2.2471999999999076e-05, 2.233299999999938e-05, 2.194500000000238e-05, 2.1764000000000505e-05, 2.2542000000000395e-05, 2.184700000000192e-05, 2.2236000000001865e-05, 2.2528000000000825e-05, 2.263899999999791e-05, 2.213900000000088e-05, 2.187499999999759e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201110 08:40:47.749" endtime="20201110 08:40:47.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.744" endtime="20201110 08:40:47.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.753" endtime="20201110 08:40:47.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:47.757" endtime="20201110 08:40:47.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.755" endtime="20201110 08:40:47.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.751" endtime="20201110 08:40:47.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.389" endtime="20201110 08:40:47.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.388" endtime="20201110 08:40:47.778"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.786" endtime="20201110 08:40:47.801"></status>
</kw>
<msg timestamp="20201110 08:40:47.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:47.785" endtime="20201110 08:40:47.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:47.803" endtime="20201110 08:40:47.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.805" endtime="20201110 08:40:47.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.782" endtime="20201110 08:40:47.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.780" endtime="20201110 08:40:47.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.814" endtime="20201110 08:40:48.101"></status>
</kw>
<msg timestamp="20201110 08:40:48.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.813" endtime="20201110 08:40:48.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:48.105" endtime="20201110 08:40:48.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.113" endtime="20201110 08:40:48.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.810" endtime="20201110 08:40:48.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.808" endtime="20201110 08:40:48.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:48.120" level="INFO">${RESULT} = [{'time': 0.019713889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1985999999998146e-05, 'source_diff': 2.1985999999998146e-05}, {'time': 0.019739944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:48.117" endtime="20201110 08:40:48.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:48.134" level="INFO">${ACCURACY} = {'time': [0.019713889, 0.019739944, 0.019766972, 0.019792903, 0.019820903, 0.019847917, 0.019875903, 0.019902917, 0.019928931, 0.019956958, 0.019983917, 0.020011917, 0.020039944, 0.020063944, 0.020091...</msg>
<status status="PASS" starttime="20201110 08:40:48.121" endtime="20201110 08:40:48.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.139" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:40:48.138" endtime="20201110 08:40:48.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.141" level="INFO">VALUE: [2.1985999999998146e-05, 2.2651999999998007e-05, 2.261100000000224e-05, 2.2069999999999035e-05, 2.216700000000002e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.212499999999784e-05, 2.2612000000001714e-05, 2.2207999999999256e-05, 2.2583999999999105e-05, 2.269499999999966e-05, 2.2152000000000976e-05, 2.1929999999999866e-05, 2.215300000000045e-05, 2.2514000000001255e-05, 2.2000000000001185e-05, 2.213900000000088e-05, 2.187499999999759e-05, 2.2151999999997507e-05, 2.2166000000000546e-05, 2.2651999999998007e-05, 2.258299999999963e-05, 2.2235999999998396e-05, 2.2249999999997966e-05, 2.186099999999802e-05, 2.229100000000067e-05, 2.2819999999999785e-05, 2.1764000000000505e-05, 2.255500000000049e-05, 2.256900000000006e-05, 2.2250000000001435e-05, 2.1943999999999436e-05, 2.215300000000045e-05, 2.2278000000000575e-05, 2.2207999999999256e-05, 2.188900000000063e-05, 2.2194000000003156e-05, 2.193099999999934e-05, 2.181900000000278e-05, 2.2083999999998605e-05, 2.1958000000002476e-05, 2.234699999999895e-05, 2.2471999999999076e-05, 2.2207999999999256e-05, 2.186100000000149e-05, 2.2292000000000145e-05, 2.2569999999999535e-05, 2.263899999999791e-05, 2.2583999999999105e-05]</msg>
<status status="PASS" starttime="20201110 08:40:48.140" endtime="20201110 08:40:48.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.135" endtime="20201110 08:40:48.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.145" endtime="20201110 08:40:48.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:48.148" endtime="20201110 08:40:48.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.147" endtime="20201110 08:40:48.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.143" endtime="20201110 08:40:48.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.779" endtime="20201110 08:40:48.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.778" endtime="20201110 08:40:48.169"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.177" endtime="20201110 08:40:48.192"></status>
</kw>
<msg timestamp="20201110 08:40:48.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:48.176" endtime="20201110 08:40:48.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:48.194" endtime="20201110 08:40:48.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.196" endtime="20201110 08:40:48.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.173" endtime="20201110 08:40:48.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.171" endtime="20201110 08:40:48.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.205" endtime="20201110 08:40:48.492"></status>
</kw>
<msg timestamp="20201110 08:40:48.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:48.203" endtime="20201110 08:40:48.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:48.496" endtime="20201110 08:40:48.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.504" endtime="20201110 08:40:48.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.201" endtime="20201110 08:40:48.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.199" endtime="20201110 08:40:48.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:48.511" level="INFO">${RESULT} = [{'time': 0.020351708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.212500000000131e-05, 'source_diff': 2.212500000000131e-05}, {'time': 0.020376722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:48.508" endtime="20201110 08:40:48.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:48.570" level="INFO">${ACCURACY} = {'time': [0.020351708, 0.020376722, 0.020403708, 0.020428792, 0.02045275, 0.020478722, 0.020503806, 0.020529736, 0.020554736, 0.020579736, 0.02060675, 0.020631736, 0.02065775, 0.020683792, 0.02071075,...</msg>
<status status="PASS" starttime="20201110 08:40:48.512" endtime="20201110 08:40:48.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.575" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:40:48.573" endtime="20201110 08:40:48.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.577" level="INFO">VALUE: [2.212500000000131e-05, 2.2193999999999686e-05, 2.263899999999791e-05, 2.22090000000022e-05, 2.181899999999931e-05, 2.254100000000092e-05, 2.195899999999848e-05, 2.2250000000001435e-05, 2.2735999999998896e-05, 2.2736000000002365e-05, 2.241700000000027e-05, 2.2292000000000145e-05, 2.211099999999827e-05, 2.1833999999998355e-05, 2.2707999999999756e-05, 2.1999999999997716e-05, 2.2250000000001435e-05, 2.215300000000045e-05, 2.194499999999891e-05, 2.1834000000001824e-05, 2.2457999999999506e-05, 2.2235999999998396e-05, 2.2500000000001685e-05, 2.2084000000002074e-05, 2.1791999999999645e-05, 2.2542000000000395e-05, 2.2472000000002545e-05, 2.2362000000001464e-05, 2.233299999999938e-05, 2.194499999999891e-05, 2.2471999999999076e-05, 2.236099999999852e-05, 2.2707999999999756e-05, 2.2777999999997606e-05, 2.2542000000000395e-05, 2.2528000000000825e-05, 2.258299999999963e-05, 2.2472000000002545e-05, 2.1929999999999866e-05, 2.180499999999974e-05, 2.1929999999999866e-05, 2.2680000000000616e-05, 2.2207999999999256e-05, 2.24030000000007e-05, 2.208299999999913e-05, 2.254100000000092e-05, 2.2235999999998396e-05, 2.1944000000002906e-05, 2.2694000000000186e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:40:48.576" endtime="20201110 08:40:48.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.571" endtime="20201110 08:40:48.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.581" endtime="20201110 08:40:48.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:48.585" endtime="20201110 08:40:48.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.583" endtime="20201110 08:40:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.579" endtime="20201110 08:40:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.170" endtime="20201110 08:40:48.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.169" endtime="20201110 08:40:48.606"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.614" endtime="20201110 08:40:48.630"></status>
</kw>
<msg timestamp="20201110 08:40:48.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:48.613" endtime="20201110 08:40:48.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:48.631" endtime="20201110 08:40:48.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.634" endtime="20201110 08:40:48.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.610" endtime="20201110 08:40:48.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.608" endtime="20201110 08:40:48.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.643" endtime="20201110 08:40:48.929"></status>
</kw>
<msg timestamp="20201110 08:40:48.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:48.641" endtime="20201110 08:40:48.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:48.933" endtime="20201110 08:40:48.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.941" endtime="20201110 08:40:48.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.639" endtime="20201110 08:40:48.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.637" endtime="20201110 08:40:48.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:48.948" level="INFO">${RESULT} = [{'time': 0.020332889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.020357806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:48.944" endtime="20201110 08:40:48.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:48.961" level="INFO">${ACCURACY} = {'time': [0.020332889, 0.020357806, 0.020382806, 0.020409806, 0.020434847, 0.020458819, 0.020485819, 0.020512819, 0.020538819, 0.020565847, 0.020592833, 0.020617833, 0.020643833, 0.020668833, 0.020693...</msg>
<status status="PASS" starttime="20201110 08:40:48.949" endtime="20201110 08:40:48.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.965" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:40:48.964" endtime="20201110 08:40:48.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:48.968" level="INFO">VALUE: [2.266700000000052e-05, 2.213899999999741e-05, 2.2305999999999715e-05, 2.198699999999762e-05, 2.2166000000000546e-05, 2.184699999999845e-05, 2.204100000000042e-05, 2.229100000000067e-05, 2.2471999999999076e-05, 2.2416000000000796e-05, 2.2750000000001935e-05, 2.2040999999996952e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.19030000000002e-05, 2.1805999999999215e-05, 2.181899999999931e-05, 2.1749999999997466e-05, 2.2443999999999936e-05, 2.2194000000003156e-05, 2.241700000000027e-05, 2.215300000000045e-05, 2.2249999999997966e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.233300000000285e-05, 2.2513999999997786e-05, 2.263900000000138e-05, 2.261099999999877e-05, 2.19030000000002e-05, 2.212499999999784e-05, 2.24030000000007e-05, 2.236100000000199e-05, 2.265300000000095e-05, 2.2305999999999715e-05, 2.186100000000149e-05, 2.213900000000088e-05, 2.262499999999834e-05, 2.2583999999999105e-05, 2.247300000000202e-05, 2.193100000000281e-05, 2.2666000000001046e-05, 2.2528000000000825e-05, 2.195899999999848e-05, 2.24169999999968e-05, 2.218099999999959e-05, 2.2221999999998826e-05, 2.1957999999999006e-05, 2.2221999999998826e-05, 2.231899999999981e-05]</msg>
<status status="PASS" starttime="20201110 08:40:48.967" endtime="20201110 08:40:48.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.962" endtime="20201110 08:40:48.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:48.971" endtime="20201110 08:40:48.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:48.975" endtime="20201110 08:40:48.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.973" endtime="20201110 08:40:48.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.970" endtime="20201110 08:40:48.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.607" endtime="20201110 08:40:48.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.606" endtime="20201110 08:40:48.996"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.005" endtime="20201110 08:40:49.022"></status>
</kw>
<msg timestamp="20201110 08:40:49.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.004" endtime="20201110 08:40:49.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.024" endtime="20201110 08:40:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.026" endtime="20201110 08:40:49.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.000" endtime="20201110 08:40:49.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.998" endtime="20201110 08:40:49.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.035" endtime="20201110 08:40:49.321"></status>
</kw>
<msg timestamp="20201110 08:40:49.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.034" endtime="20201110 08:40:49.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.325" endtime="20201110 08:40:49.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.333" endtime="20201110 08:40:49.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.031" endtime="20201110 08:40:49.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.029" endtime="20201110 08:40:49.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:49.340" level="INFO">${RESULT} = [{'time': 0.021601542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2264000000001005e-05, 'source_diff': 2.2264000000001005e-05}, {'time': 0.021627542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:49.337" endtime="20201110 08:40:49.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:49.354" level="INFO">${ACCURACY} = {'time': [0.021601542, 0.021627542, 0.021655556, 0.021681569, 0.021705556, 0.021730556, 0.021756556, 0.021782583, 0.021807569, 0.021832583, 0.021858597, 0.021883583, 0.021908597, 0.021935583, 0.021962...</msg>
<status status="PASS" starttime="20201110 08:40:49.341" endtime="20201110 08:40:49.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.358" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:40:49.357" endtime="20201110 08:40:49.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.361" level="INFO">VALUE: [2.2264000000001005e-05, 2.2778000000001075e-05, 2.263899999999791e-05, 2.1958000000002476e-05, 2.1778000000000075e-05, 2.1834000000001824e-05, 2.1819999999998785e-05, 2.255500000000049e-05, 2.2012999999997812e-05, 2.256900000000006e-05, 2.238900000000113e-05, 2.1902000000000726e-05, 2.1971999999998576e-05, 2.234700000000242e-05, 2.2707999999999756e-05, 2.181900000000278e-05, 2.258299999999963e-05, 2.2528000000000825e-05, 2.2485999999998646e-05, 2.1971999999998576e-05, 2.234699999999895e-05, 2.2680000000000616e-05, 2.2694000000000186e-05, 2.19030000000002e-05, 2.2472000000002545e-05, 2.20969999999987e-05, 2.268100000000009e-05, 2.2486000000002115e-05, 2.2457999999999506e-05, 2.2443999999999936e-05, 2.2542000000000395e-05, 2.2500000000001685e-05, 2.184699999999845e-05, 2.2792000000000645e-05, 2.2250000000001435e-05, 2.2750000000001935e-05, 2.193100000000281e-05, 2.2235999999998396e-05, 2.1819999999998785e-05, 2.2694000000000186e-05, 2.266700000000052e-05, 2.2680000000000616e-05, 2.223699999999787e-05, 2.2514000000001255e-05, 2.261099999999877e-05, 2.27770000000016e-05, 2.219499999999916e-05, 2.2763999999998036e-05, 2.222300000000177e-05, 2.263900000000138e-05]</msg>
<status status="PASS" starttime="20201110 08:40:49.359" endtime="20201110 08:40:49.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.355" endtime="20201110 08:40:49.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.364" endtime="20201110 08:40:49.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:49.368" endtime="20201110 08:40:49.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.366" endtime="20201110 08:40:49.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.363" endtime="20201110 08:40:49.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.997" endtime="20201110 08:40:49.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:48.996" endtime="20201110 08:40:49.388"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.398" endtime="20201110 08:40:49.413"></status>
</kw>
<msg timestamp="20201110 08:40:49.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.396" endtime="20201110 08:40:49.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.415" endtime="20201110 08:40:49.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.417" endtime="20201110 08:40:49.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.393" endtime="20201110 08:40:49.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.391" endtime="20201110 08:40:49.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.426" endtime="20201110 08:40:49.713"></status>
</kw>
<msg timestamp="20201110 08:40:49.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.424" endtime="20201110 08:40:49.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020567236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.717" endtime="20201110 08:40:49.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.725" endtime="20201110 08:40:49.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.422" endtime="20201110 08:40:49.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.420" endtime="20201110 08:40:49.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:49.732" level="INFO">${RESULT} = [{'time': 0.020589056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1820000000002254e-05, 'source_diff': 2.1820000000002254e-05}, {'time': 0.020616069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:49.728" endtime="20201110 08:40:49.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:49.745" level="INFO">${ACCURACY} = {'time': [0.020589056, 0.020616069, 0.020641056, 0.020668111, 0.020692069, 0.020718069, 0.020746083, 0.020772097, 0.020796083, 0.020823097, 0.020849139, 0.020877083, 0.020905111, 0.020932097, 0.020957...</msg>
<status status="PASS" starttime="20201110 08:40:49.733" endtime="20201110 08:40:49.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.749" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:40:49.748" endtime="20201110 08:40:49.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.752" level="INFO">VALUE: [2.1820000000002254e-05, 2.254100000000092e-05, 2.248700000000159e-05, 2.2207999999999256e-05, 2.181899999999931e-05, 2.2762999999998562e-05, 2.2165999999997077e-05, 2.19030000000002e-05, 2.181899999999931e-05, 2.188899999999716e-05, 2.193099999999934e-05, 2.2193999999999686e-05, 2.263900000000138e-05, 2.229100000000067e-05, 2.187500000000106e-05, 2.262500000000181e-05, 2.263900000000138e-05, 2.191699999999977e-05, 2.2528000000000825e-05, 2.238900000000113e-05, 2.212500000000131e-05, 2.2416000000000796e-05, 2.186099999999802e-05, 2.187499999999759e-05, 2.2263999999997536e-05, 2.20830000000026e-05, 2.2305999999999715e-05, 2.2236000000001865e-05, 2.216700000000002e-05, 2.2777999999997606e-05, 2.19030000000002e-05, 2.2542000000000395e-05, 2.2221999999998826e-05, 2.231899999999981e-05, 2.184699999999845e-05, 2.2097999999998175e-05, 2.1834000000001824e-05, 2.219500000000263e-05, 2.1805999999999215e-05, 2.252700000000135e-05, 2.2278000000000575e-05, 2.2790999999997702e-05, 2.237500000000156e-05, 2.186100000000149e-05, 2.258299999999963e-05, 2.2388000000001657e-05, 2.1972000000002045e-05, 2.2471999999999076e-05, 2.209700000000217e-05, 2.219499999999916e-05]</msg>
<status status="PASS" starttime="20201110 08:40:49.750" endtime="20201110 08:40:49.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.746" endtime="20201110 08:40:49.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.755" endtime="20201110 08:40:49.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:49.759" endtime="20201110 08:40:49.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.757" endtime="20201110 08:40:49.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.754" endtime="20201110 08:40:49.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.389" endtime="20201110 08:40:49.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.389" endtime="20201110 08:40:49.780"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.788" endtime="20201110 08:40:49.804"></status>
</kw>
<msg timestamp="20201110 08:40:49.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.787" endtime="20201110 08:40:49.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:49.806" endtime="20201110 08:40:49.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.808" endtime="20201110 08:40:49.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.784" endtime="20201110 08:40:49.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.782" endtime="20201110 08:40:49.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.817" endtime="20201110 08:40:50.102"></status>
</kw>
<msg timestamp="20201110 08:40:50.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.816" endtime="20201110 08:40:50.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.106" endtime="20201110 08:40:50.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.114" endtime="20201110 08:40:50.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.813" endtime="20201110 08:40:50.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.811" endtime="20201110 08:40:50.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:50.121" level="INFO">${RESULT} = [{'time': 0.020099153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.238900000000113e-05, 'source_diff': 2.238900000000113e-05}, {'time': 0.020126181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:50.118" endtime="20201110 08:40:50.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:50.135" level="INFO">${ACCURACY} = {'time': [0.020099153, 0.020126181, 0.020153153, 0.020180153, 0.020205167, 0.020231167, 0.020259167, 0.020285167, 0.020311167, 0.020336181, 0.020361181, 0.020386181, 0.020414181, 0.020442181, 0.020470...</msg>
<status status="PASS" starttime="20201110 08:40:50.122" endtime="20201110 08:40:50.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.140" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:40:50.139" endtime="20201110 08:40:50.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.142" level="INFO">VALUE: [2.238900000000113e-05, 2.218099999999959e-05, 2.2333999999998855e-05, 2.211099999999827e-05, 2.236099999999852e-05, 2.2305999999999715e-05, 2.2486000000002115e-05, 2.2041999999999895e-05, 2.216700000000002e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.195899999999848e-05, 2.273699999999837e-05, 2.238900000000113e-05, 2.2222000000002295e-05, 2.2776999999998132e-05, 2.2652000000001477e-05, 2.2180000000000116e-05, 2.2694000000000186e-05, 2.263900000000138e-05, 2.204100000000042e-05, 2.2443999999999936e-05, 2.1916000000000296e-05, 2.195900000000195e-05, 2.2485999999998646e-05, 2.1790999999996702e-05, 2.218099999999959e-05, 2.2028000000000325e-05, 2.238900000000113e-05, 2.2542000000000395e-05, 2.2208000000002726e-05, 2.2542000000000395e-05, 2.183300000000235e-05, 2.2694000000000186e-05, 2.2541999999996926e-05, 2.1943999999999436e-05, 2.256900000000006e-05, 2.25969999999992e-05, 2.2500000000001685e-05, 2.258299999999963e-05, 2.2499999999998216e-05, 2.2749999999998466e-05, 2.247300000000202e-05, 2.2235999999998396e-05, 2.2250000000001435e-05, 2.270899999999923e-05, 2.218099999999959e-05, 2.1805999999999215e-05, 2.204100000000042e-05, 2.247300000000202e-05]</msg>
<status status="PASS" starttime="20201110 08:40:50.141" endtime="20201110 08:40:50.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.136" endtime="20201110 08:40:50.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.146" endtime="20201110 08:40:50.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:50.149" endtime="20201110 08:40:50.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.148" endtime="20201110 08:40:50.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.144" endtime="20201110 08:40:50.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.781" endtime="20201110 08:40:50.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.780" endtime="20201110 08:40:50.170"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.179" endtime="20201110 08:40:50.194"></status>
</kw>
<msg timestamp="20201110 08:40:50.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.177" endtime="20201110 08:40:50.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.195" endtime="20201110 08:40:50.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.198" endtime="20201110 08:40:50.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.175" endtime="20201110 08:40:50.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.172" endtime="20201110 08:40:50.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.208" endtime="20201110 08:40:50.494"></status>
</kw>
<msg timestamp="20201110 08:40:50.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.206" endtime="20201110 08:40:50.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.498" endtime="20201110 08:40:50.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.506" endtime="20201110 08:40:50.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.204" endtime="20201110 08:40:50.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.202" endtime="20201110 08:40:50.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:50.513" level="INFO">${RESULT} = [{'time': 0.019639653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2292000000000145e-05, 'source_diff': 2.2292000000000145e-05}, {'time': 0.019664667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:50.510" endtime="20201110 08:40:50.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:50.526" level="INFO">${ACCURACY} = {'time': [0.019639653, 0.019664667, 0.019691667, 0.019717681, 0.019743694, 0.019770681, 0.019796681, 0.019823681, 0.019850681, 0.019875681, 0.019900708, 0.019927694, 0.019952722, 0.019978694, 0.020006...</msg>
<status status="PASS" starttime="20201110 08:40:50.514" endtime="20201110 08:40:50.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.531" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:40:50.530" endtime="20201110 08:40:50.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.533" level="INFO">VALUE: [2.2292000000000145e-05, 2.2542000000000395e-05, 2.265300000000095e-05, 2.241700000000027e-05, 2.2721999999999326e-05, 2.2055999999999465e-05, 2.2000000000001185e-05, 2.247299999999855e-05, 2.245899999999898e-05, 2.1999999999997716e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.204100000000042e-05, 2.252700000000135e-05, 2.237499999999809e-05, 2.188900000000063e-05, 2.2500000000001685e-05, 2.261099999999877e-05, 2.2014000000000755e-05, 2.2430000000000366e-05, 2.2193999999999686e-05, 2.2583999999999105e-05, 2.237499999999809e-05, 2.2222000000002295e-05, 2.184700000000192e-05, 2.2430000000000366e-05, 2.2707999999999756e-05, 2.1957999999999006e-05, 2.1971999999998576e-05, 2.233299999999938e-05, 2.1806000000002684e-05, 2.2514000000001255e-05, 2.2028000000000325e-05, 2.215300000000045e-05, 2.2514000000001255e-05, 2.262500000000181e-05, 2.2264000000001005e-05, 2.19030000000002e-05, 2.283299999999988e-05, 2.270899999999923e-05, 2.2208000000002726e-05, 2.2305999999999715e-05, 2.187499999999759e-05, 2.19030000000002e-05, 2.2707999999999756e-05, 2.27229999999988e-05, 2.2513999999997786e-05, 2.1820000000002254e-05, 2.193099999999934e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:40:50.532" endtime="20201110 08:40:50.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.527" endtime="20201110 08:40:50.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.537" endtime="20201110 08:40:50.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:50.540" endtime="20201110 08:40:50.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.539" endtime="20201110 08:40:50.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.535" endtime="20201110 08:40:50.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.171" endtime="20201110 08:40:50.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.170" endtime="20201110 08:40:50.561"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.571" endtime="20201110 08:40:50.587"></status>
</kw>
<msg timestamp="20201110 08:40:50.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.570" endtime="20201110 08:40:50.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.589" endtime="20201110 08:40:50.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.591" endtime="20201110 08:40:50.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.567" endtime="20201110 08:40:50.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.564" endtime="20201110 08:40:50.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.601" endtime="20201110 08:40:50.886"></status>
</kw>
<msg timestamp="20201110 08:40:50.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.599" endtime="20201110 08:40:50.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021664028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.890" endtime="20201110 08:40:50.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.898" endtime="20201110 08:40:50.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.597" endtime="20201110 08:40:50.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.595" endtime="20201110 08:40:50.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:50.905" level="INFO">${RESULT} = [{'time': 0.021686139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.211100000000174e-05, 'source_diff': 2.211100000000174e-05}, {'time': 0.021712153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:50.901" endtime="20201110 08:40:50.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:50.918" level="INFO">${ACCURACY} = {'time': [0.021686139, 0.021712153, 0.021740139, 0.021765208, 0.021792139, 0.021819167, 0.021847153, 0.021872153, 0.021897153, 0.021923181, 0.021951167, 0.021979167, 0.022004181, 0.022030181, 0.022055...</msg>
<status status="PASS" starttime="20201110 08:40:50.906" endtime="20201110 08:40:50.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.922" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:40:50.921" endtime="20201110 08:40:50.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.925" level="INFO">VALUE: [2.211100000000174e-05, 2.184700000000192e-05, 2.2735999999998896e-05, 2.20830000000026e-05, 2.258299999999963e-05, 2.2014000000000755e-05, 2.2569999999999535e-05, 2.261099999999877e-05, 2.2542000000000395e-05, 2.244499999999941e-05, 2.2514000000001255e-05, 2.270899999999923e-05, 2.1806000000002684e-05, 2.266700000000052e-05, 2.205499999999999e-05, 2.194499999999891e-05, 2.2514000000001255e-05, 2.2235999999998396e-05, 2.2637999999998437e-05, 2.231899999999981e-05, 2.2651999999998007e-05, 2.205499999999999e-05, 2.2292000000000145e-05, 2.2764000000001505e-05, 2.236099999999852e-05, 2.180499999999974e-05, 2.2193999999999686e-05, 2.2249999999997966e-05, 2.2778000000001075e-05, 2.230500000000024e-05, 2.1943999999999436e-05, 2.180499999999974e-05, 2.261100000000224e-05, 2.2513999999997786e-05, 2.265299999999748e-05, 2.233300000000285e-05, 2.2707999999999756e-05, 2.1999999999997716e-05, 2.27229999999988e-05, 2.213899999999741e-05, 2.265300000000095e-05, 2.24030000000007e-05, 2.19030000000002e-05, 2.195900000000195e-05, 2.2471999999999076e-05, 2.2055999999999465e-05, 2.2290999999997202e-05, 2.1819999999998785e-05, 2.2569999999999535e-05, 2.2069999999999035e-05]</msg>
<status status="PASS" starttime="20201110 08:40:50.923" endtime="20201110 08:40:50.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.919" endtime="20201110 08:40:50.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.928" endtime="20201110 08:40:50.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:50.932" endtime="20201110 08:40:50.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.930" endtime="20201110 08:40:50.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.927" endtime="20201110 08:40:50.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.562" endtime="20201110 08:40:50.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.561" endtime="20201110 08:40:50.953"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.961" endtime="20201110 08:40:50.977"></status>
</kw>
<msg timestamp="20201110 08:40:50.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.960" endtime="20201110 08:40:50.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:50.978" endtime="20201110 08:40:50.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.981" endtime="20201110 08:40:50.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.957" endtime="20201110 08:40:50.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.955" endtime="20201110 08:40:50.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.991" endtime="20201110 08:40:51.276"></status>
</kw>
<msg timestamp="20201110 08:40:51.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.989" endtime="20201110 08:40:51.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:51.280" endtime="20201110 08:40:51.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.288" endtime="20201110 08:40:51.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.987" endtime="20201110 08:40:51.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.985" endtime="20201110 08:40:51.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:51.295" level="INFO">${RESULT} = [{'time': 0.019731042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.32229999999993e-05, 'source_diff': 2.32229999999993e-05}, {'time': 0.019757056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:51.292" endtime="20201110 08:40:51.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:51.308" level="INFO">${ACCURACY} = {'time': [0.019731042, 0.019757056, 0.019784069, 0.019813069, 0.019839056, 0.019866083, 0.019892069, 0.019921069, 0.019947083, 0.019973083, 0.020002097, 0.020028125, 0.020055083, 0.020082097, 0.020109...</msg>
<status status="PASS" starttime="20201110 08:40:51.296" endtime="20201110 08:40:51.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.313" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:40:51.312" endtime="20201110 08:40:51.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.315" level="INFO">VALUE: [2.32229999999993e-05, 2.34169999999978e-05, 2.3138000000002407e-05, 2.3693999999997717e-05, 2.347299999999955e-05, 2.3499999999999216e-05, 2.312499999999884e-05, 2.362499999999934e-05, 2.313900000000188e-05, 2.2790999999997702e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3708000000000756e-05, 2.3194000000000686e-05, 2.3722000000000326e-05, 2.361099999999977e-05, 2.334699999999995e-05, 2.3665999999998577e-05, 2.3763999999999036e-05, 2.3542000000001395e-05, 2.2999999999998716e-05, 2.358300000000063e-05, 2.362499999999934e-05, 2.3292000000001145e-05, 2.3499999999999216e-05, 2.35970000000002e-05, 2.286099999999902e-05, 2.358300000000063e-05, 2.3235999999999396e-05, 2.3000000000002185e-05, 2.319500000000016e-05, 2.358300000000063e-05, 2.2819999999999785e-05, 2.336099999999952e-05, 2.293100000000034e-05, 2.3221999999999826e-05, 2.3056000000000465e-05, 2.3056000000000465e-05, 2.312499999999884e-05, 2.369500000000066e-05, 2.315299999999798e-05, 2.2971999999999576e-05, 2.345899999999998e-05, 2.287499999999859e-05, 2.281900000000031e-05, 2.3708000000000756e-05, 2.3819999999997316e-05, 2.3443999999997467e-05, 2.3304999999997772e-05, 2.3444000000000936e-05]</msg>
<status status="PASS" starttime="20201110 08:40:51.314" endtime="20201110 08:40:51.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.309" endtime="20201110 08:40:51.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.319" endtime="20201110 08:40:51.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:51.322" endtime="20201110 08:40:51.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.321" endtime="20201110 08:40:51.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.317" endtime="20201110 08:40:51.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.954" endtime="20201110 08:40:51.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.953" endtime="20201110 08:40:51.343"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.352" endtime="20201110 08:40:51.366"></status>
</kw>
<msg timestamp="20201110 08:40:51.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:51.350" endtime="20201110 08:40:51.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:51.367" endtime="20201110 08:40:51.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.370" endtime="20201110 08:40:51.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.348" endtime="20201110 08:40:51.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.346" endtime="20201110 08:40:51.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.380" endtime="20201110 08:40:51.665"></status>
</kw>
<msg timestamp="20201110 08:40:51.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:51.378" endtime="20201110 08:40:51.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019911056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:51.669" endtime="20201110 08:40:51.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.678" endtime="20201110 08:40:51.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.376" endtime="20201110 08:40:51.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.374" endtime="20201110 08:40:51.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:51.684" level="INFO">${RESULT} = [{'time': 0.019935167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019964167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:51.681" endtime="20201110 08:40:51.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:51.699" level="INFO">${ACCURACY} = {'time': [0.019935167, 0.019964167, 0.019994167, 0.020021194, 0.020049208, 0.020078181, 0.020105194, 0.020133194, 0.020159194, 0.020187194, 0.020216208, 0.020243208, 0.020272208, 0.020300222, 0.020328...</msg>
<status status="PASS" starttime="20201110 08:40:51.685" endtime="20201110 08:40:51.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.703" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:40:51.702" endtime="20201110 08:40:51.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.706" level="INFO">VALUE: [2.411100000000027e-05, 2.4764000000000036e-05, 2.469500000000166e-05, 2.4457999999998037e-05, 2.4096999999997232e-05, 2.4764000000000036e-05, 2.4429999999998897e-05, 2.461100000000077e-05, 2.3790999999998702e-05, 2.4762999999997093e-05, 2.4777000000000132e-05, 2.4554999999999022e-05, 2.4486000000000646e-05, 2.4263999999999536e-05, 2.3999999999999716e-05, 2.437500000000009e-05, 2.4179999999998647e-05, 2.44030000000027e-05, 2.3818999999997842e-05, 2.454100000000292e-05, 2.4235999999996927e-05, 2.4736000000000896e-05, 2.3777999999998606e-05, 2.4472000000001076e-05, 2.4208000000001256e-05, 2.391700000000177e-05, 2.4068999999998092e-05, 2.4305999999998246e-05, 2.383300000000088e-05, 2.4513999999999786e-05, 2.447300000000055e-05, 2.4084000000000605e-05, 2.4042000000001895e-05, 2.436100000000052e-05, 2.4526999999999882e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.437500000000009e-05, 2.444500000000141e-05, 2.436100000000052e-05, 2.469499999999819e-05, 2.4764000000000036e-05, 2.4026999999999382e-05, 2.436099999999705e-05, 2.4179999999998647e-05, 2.4638000000000437e-05, 2.3943999999997967e-05, 2.412499999999984e-05, 2.456900000000206e-05, 2.4249999999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:40:51.704" endtime="20201110 08:40:51.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.699" endtime="20201110 08:40:51.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.711" endtime="20201110 08:40:51.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:51.718" endtime="20201110 08:40:51.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.714" endtime="20201110 08:40:51.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.709" endtime="20201110 08:40:51.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.344" endtime="20201110 08:40:51.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.343" endtime="20201110 08:40:51.740"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.751" endtime="20201110 08:40:51.767"></status>
</kw>
<msg timestamp="20201110 08:40:51.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:51.749" endtime="20201110 08:40:51.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:51.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:51.768" endtime="20201110 08:40:51.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.771" endtime="20201110 08:40:51.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.746" endtime="20201110 08:40:51.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.743" endtime="20201110 08:40:51.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:51.781" endtime="20201110 08:40:52.067"></status>
</kw>
<msg timestamp="20201110 08:40:52.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:51.779" endtime="20201110 08:40:52.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022808194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:52.072" endtime="20201110 08:40:52.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.080" endtime="20201110 08:40:52.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.777" endtime="20201110 08:40:52.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.775" endtime="20201110 08:40:52.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:52.086" level="INFO">${RESULT} = [{'time': 0.022808194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5457999999999037e-05, 'source_diff': 2.5457999999999037e-05}, {'time': 0.022839208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:52.083" endtime="20201110 08:40:52.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:52.100" level="INFO">${ACCURACY} = {'time': [0.022808194, 0.022839208, 0.022870194, 0.022901194, 0.022929194, 0.022957208, 0.022986208, 0.023017222, 0.023047278, 0.023078222, 0.023106236, 0.023135236, 0.02316625, 0.023195236, 0.0232232...</msg>
<status status="PASS" starttime="20201110 08:40:52.087" endtime="20201110 08:40:52.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.104" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:40:52.103" endtime="20201110 08:40:52.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.107" level="INFO">VALUE: [2.5457999999999037e-05, 2.5179999999999647e-05, 2.5166000000000077e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.4902000000000257e-05, 2.481900000000231e-05, 2.5582999999999162e-05, 2.55970000000022e-05, 2.5763999999997567e-05, 2.5096999999998232e-05, 2.5721999999998857e-05, 2.5528000000000356e-05, 2.5054999999999522e-05, 2.513900000000041e-05, 2.540300000000023e-05, 2.4791999999999176e-05, 2.516700000000302e-05, 2.5555999999999496e-05, 2.515299999999998e-05, 2.5264000000000536e-05, 2.5582999999999162e-05, 2.5624999999997872e-05, 2.513900000000041e-05, 2.4791999999999176e-05, 2.515299999999998e-05, 2.55970000000022e-05, 2.494500000000191e-05, 2.5721999999998857e-05, 2.5583999999998636e-05, 2.495899999999801e-05, 2.54169999999998e-05, 2.534700000000195e-05, 2.5555000000000022e-05, 2.5250000000000966e-05, 2.519500000000216e-05, 2.5514000000000786e-05, 2.5693999999999717e-05, 2.5054999999999522e-05, 2.5541000000000452e-05, 2.488900000000016e-05, 2.5208000000002256e-05, 2.5514000000000786e-05, 2.5291000000000202e-05, 2.5708000000002756e-05, 2.5291000000000202e-05, 2.5014000000000286e-05, 2.5514000000000786e-05, 2.488900000000016e-05, 2.4929999999999397e-05]</msg>
<status status="PASS" starttime="20201110 08:40:52.105" endtime="20201110 08:40:52.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.101" endtime="20201110 08:40:52.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.114" endtime="20201110 08:40:52.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:52.118" endtime="20201110 08:40:52.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.116" endtime="20201110 08:40:52.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.113" endtime="20201110 08:40:52.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.741" endtime="20201110 08:40:52.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:51.740" endtime="20201110 08:40:52.139"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.147" endtime="20201110 08:40:52.164"></status>
</kw>
<msg timestamp="20201110 08:40:52.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.146" endtime="20201110 08:40:52.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.166" endtime="20201110 08:40:52.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.168" endtime="20201110 08:40:52.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.143" endtime="20201110 08:40:52.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.141" endtime="20201110 08:40:52.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.178" endtime="20201110 08:40:52.462"></status>
</kw>
<msg timestamp="20201110 08:40:52.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02064675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:52.176" endtime="20201110 08:40:52.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02064675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:52.466" endtime="20201110 08:40:52.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.475" endtime="20201110 08:40:52.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.174" endtime="20201110 08:40:52.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.172" endtime="20201110 08:40:52.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:52.481" level="INFO">${RESULT} = [{'time': 0.020672556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5806000000003215e-05, 'source_diff': 2.5806000000003215e-05}, {'time': 0.020702569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:52.478" endtime="20201110 08:40:52.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:52.495" level="INFO">${ACCURACY} = {'time': [0.020672556, 0.020702569, 0.020732556, 0.020763569, 0.020794569, 0.020823597, 0.020854583, 0.020883583, 0.020914583, 0.020944583, 0.020976611, 0.021007611, 0.021035597, 0.021064611, 0.021095...</msg>
<status status="PASS" starttime="20201110 08:40:52.482" endtime="20201110 08:40:52.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.499" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:40:52.498" endtime="20201110 08:40:52.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.501" level="INFO">VALUE: [2.5806000000003215e-05, 2.5902000000001257e-05, 2.64170000000008e-05, 2.6471999999999607e-05, 2.6415999999997858e-05, 2.638899999999819e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.6277000000001632e-05, 2.5999999999998247e-05, 2.6708000000000287e-05, 2.6583000000000162e-05, 2.5930000000000397e-05, 2.615300000000098e-05, 2.6541000000001452e-05, 2.670899999999976e-05, 2.6569000000000592e-05, 2.6749999999998997e-05, 2.6334000000002855e-05, 2.587500000000159e-05, 2.6583000000000162e-05, 2.6556000000000496e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.6624999999998872e-05, 2.6042000000000426e-05, 2.6014000000001286e-05, 2.645899999999951e-05, 2.6042000000000426e-05, 2.6611999999998776e-05, 2.6763000000002563e-05, 2.6598000000002675e-05, 2.611100000000227e-05, 2.593099999999987e-05, 2.6319000000000342e-05, 2.6597999999999206e-05, 2.6042000000000426e-05, 2.6055000000000522e-05, 2.637500000000209e-05, 2.6277000000001632e-05, 2.6555000000001022e-05, 2.5749999999997997e-05, 2.5943999999999967e-05, 2.6596999999999732e-05, 2.669499999999672e-05, 2.6415999999997858e-05, 2.6235999999998927e-05, 2.6486000000002646e-05]</msg>
<status status="PASS" starttime="20201110 08:40:52.500" endtime="20201110 08:40:52.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.495" endtime="20201110 08:40:52.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.505" endtime="20201110 08:40:52.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:52.508" endtime="20201110 08:40:52.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.507" endtime="20201110 08:40:52.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.503" endtime="20201110 08:40:52.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.140" endtime="20201110 08:40:52.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.139" endtime="20201110 08:40:52.529"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.538" endtime="20201110 08:40:52.554"></status>
</kw>
<msg timestamp="20201110 08:40:52.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.536" endtime="20201110 08:40:52.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.555" endtime="20201110 08:40:52.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.558" endtime="20201110 08:40:52.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.534" endtime="20201110 08:40:52.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.532" endtime="20201110 08:40:52.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.568" endtime="20201110 08:40:52.853"></status>
</kw>
<msg timestamp="20201110 08:40:52.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:52.566" endtime="20201110 08:40:52.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:52.857" endtime="20201110 08:40:52.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.866" endtime="20201110 08:40:52.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.564" endtime="20201110 08:40:52.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.562" endtime="20201110 08:40:52.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:52.872" level="INFO">${RESULT} = [{'time': 0.019709389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.019739375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:52.869" endtime="20201110 08:40:52.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:52.886" level="INFO">${ACCURACY} = {'time': [0.019709389, 0.019739375, 0.019771389, 0.019801389, 0.019833389, 0.019863403, 0.019894403, 0.019923403, 0.019955458, 0.019988431, 0.020020417, 0.020051431, 0.020084417, 0.020115444, 0.020146...</msg>
<status status="PASS" starttime="20201110 08:40:52.873" endtime="20201110 08:40:52.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.890" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:40:52.889" endtime="20201110 08:40:52.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.892" level="INFO">VALUE: [2.7624999999999872e-05, 2.7541999999998457e-05, 2.7763999999999567e-05, 2.7361000000000052e-05, 2.7347000000000482e-05, 2.6846999999999982e-05, 2.7722000000000857e-05, 2.694500000000044e-05, 2.7401999999999288e-05, 2.7361999999999526e-05, 2.740299999999876e-05, 2.688900000000216e-05, 2.7334000000000386e-05, 2.7790999999999233e-05, 2.7070000000000566e-05, 2.7249999999999497e-05, 2.694500000000044e-05, 2.7722000000000857e-05, 2.7110999999999802e-05, 2.7151999999999038e-05, 2.7110999999999802e-05, 2.7235999999999927e-05, 2.7540999999998983e-05, 2.69170000000013e-05, 2.7583000000001162e-05, 2.7513999999999317e-05, 2.690299999999826e-05, 2.7680000000002147e-05, 2.763900000000291e-05, 2.7611000000000302e-05, 2.7388999999999192e-05, 2.7054999999998053e-05, 2.7320000000000816e-05, 2.7069000000001092e-05, 2.6819000000000842e-05, 2.7736000000000427e-05, 2.7542000000001926e-05, 2.7472000000000607e-05, 2.770900000000076e-05, 2.740299999999876e-05, 2.7334000000000386e-05, 2.7264000000002536e-05, 2.7124999999999372e-05, 2.7778000000002606e-05, 2.6806000000000746e-05, 2.718099999999765e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.711100000000327e-05, 2.6806000000000746e-05]</msg>
<status status="PASS" starttime="20201110 08:40:52.891" endtime="20201110 08:40:52.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.886" endtime="20201110 08:40:52.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.896" endtime="20201110 08:40:52.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:52.899" endtime="20201110 08:40:52.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.898" endtime="20201110 08:40:52.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.894" endtime="20201110 08:40:52.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.530" endtime="20201110 08:40:52.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.530" endtime="20201110 08:40:52.921"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.929" endtime="20201110 08:40:52.945"></status>
</kw>
<msg timestamp="20201110 08:40:52.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.928" endtime="20201110 08:40:52.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:52.947" endtime="20201110 08:40:52.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.949" endtime="20201110 08:40:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.925" endtime="20201110 08:40:52.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.923" endtime="20201110 08:40:52.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.959" endtime="20201110 08:40:53.245"></status>
</kw>
<msg timestamp="20201110 08:40:53.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:52.958" endtime="20201110 08:40:53.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:53.250" endtime="20201110 08:40:53.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.258" endtime="20201110 08:40:53.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.955" endtime="20201110 08:40:53.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.953" endtime="20201110 08:40:53.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:53.264" level="INFO">${RESULT} = [{'time': 0.020306181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7819999999997846e-05, 'source_diff': 2.7819999999997846e-05}, {'time': 0.020339167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:53.261" endtime="20201110 08:40:53.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:53.279" level="INFO">${ACCURACY} = {'time': [0.020306181, 0.020339167, 0.020370181, 0.020401181, 0.020431181, 0.020462181, 0.020494181, 0.020526208, 0.020560208, 0.020592194, 0.020625208, 0.020656208, 0.020688208, 0.020720208, 0.020753...</msg>
<status status="PASS" starttime="20201110 08:40:53.265" endtime="20201110 08:40:53.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.283" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:40:53.282" endtime="20201110 08:40:53.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.286" level="INFO">VALUE: [2.7819999999997846e-05, 2.7874999999996652e-05, 2.79170000000023e-05, 2.8070000000001566e-05, 2.791699999999883e-05, 2.8291999999999207e-05, 2.8653000000000012e-05, 2.8429999999999428e-05, 2.8527000000000413e-05, 2.8125000000000372e-05, 2.8707999999998818e-05, 2.8013999999999817e-05, 2.8652000000000538e-05, 2.8375000000000622e-05, 2.7958000000001537e-05, 2.869499999999872e-05, 2.8486000000001177e-05, 2.8125000000000372e-05, 2.8236000000000927e-05, 2.8707999999998818e-05, 2.869500000000219e-05, 2.8555999999999027e-05, 2.8138999999999942e-05, 2.7902999999999262e-05, 2.8457999999998568e-05, 2.7862000000000026e-05, 2.8472000000001607e-05, 2.8721999999998388e-05, 2.8569999999998597e-05, 2.8653000000000012e-05, 2.8500000000000747e-05, 2.841699999999933e-05, 2.8541999999999457e-05, 2.8583999999998166e-05, 2.8361000000001052e-05, 2.8291999999999207e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.822300000000083e-05, 2.8333999999997916e-05, 2.8000000000000247e-05, 2.8472000000001607e-05, 2.8250000000000497e-05, 2.8443999999998998e-05, 2.8235999999997458e-05, 2.8583000000002162e-05, 2.8652000000000538e-05, 2.8778000000000137e-05, 2.8471999999998138e-05, 2.8235999999997458e-05]</msg>
<status status="PASS" starttime="20201110 08:40:53.284" endtime="20201110 08:40:53.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.280" endtime="20201110 08:40:53.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.289" endtime="20201110 08:40:53.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:53.293" endtime="20201110 08:40:53.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.291" endtime="20201110 08:40:53.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.288" endtime="20201110 08:40:53.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.922" endtime="20201110 08:40:53.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.921" endtime="20201110 08:40:53.315"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.326" endtime="20201110 08:40:53.340"></status>
</kw>
<msg timestamp="20201110 08:40:53.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:53.324" endtime="20201110 08:40:53.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:53.342" endtime="20201110 08:40:53.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.344" endtime="20201110 08:40:53.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.321" endtime="20201110 08:40:53.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.318" endtime="20201110 08:40:53.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.354" endtime="20201110 08:40:53.639"></status>
</kw>
<msg timestamp="20201110 08:40:53.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:53.352" endtime="20201110 08:40:53.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023312361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:53.643" endtime="20201110 08:40:53.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.652" endtime="20201110 08:40:53.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.350" endtime="20201110 08:40:53.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.348" endtime="20201110 08:40:53.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:53.659" level="INFO">${RESULT} = [{'time': 0.023312361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9528000000000887e-05, 'source_diff': 2.9528000000000887e-05}, {'time': 0.023345444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:53.655" endtime="20201110 08:40:53.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:53.672" level="INFO">${ACCURACY} = {'time': [0.023312361, 0.023345444, 0.023378375, 0.023410389, 0.023445375, 0.023478389, 0.023512389, 0.023545389, 0.023577389, 0.023610417, 0.023643403, 0.023675403, 0.023710417, 0.023743444, 0.023776...</msg>
<status status="PASS" starttime="20201110 08:40:53.660" endtime="20201110 08:40:53.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.677" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:40:53.676" endtime="20201110 08:40:53.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.680" level="INFO">VALUE: [2.9528000000000887e-05, 2.9263000000001593e-05, 2.9250000000001497e-05, 2.9681000000000152e-05, 2.9750000000001997e-05, 2.9763999999998098e-05, 2.9389000000001192e-05, 2.9235999999998458e-05, 2.8875000000001122e-05, 2.9028000000000387e-05, 2.918099999999965e-05, 2.9721999999999388e-05, 2.970899999999929e-05, 2.9555000000000553e-05, 2.8833000000002412e-05, 2.9541999999996987e-05, 2.9500000000001747e-05, 2.9485999999998708e-05, 2.894499999999897e-05, 2.8847000000001982e-05, 2.9639000000001442e-05, 2.8818999999999373e-05, 2.9193999999999748e-05, 2.9694000000000248e-05, 2.9625000000001872e-05, 2.9707999999999818e-05, 2.8929999999999928e-05, 2.9000000000001247e-05, 2.9139000000000942e-05, 2.8708000000002287e-05, 2.9000000000001247e-05, 2.9681000000000152e-05, 2.8957999999999068e-05, 2.9167000000000082e-05, 2.9249999999998028e-05, 2.9153000000000512e-05, 2.9417000000000332e-05, 2.9583999999999167e-05, 2.9152999999997042e-05, 2.9222000000002357e-05, 2.8860999999998083e-05, 2.944499999999947e-05, 2.9610999999998833e-05, 2.9638999999997973e-05, 2.9625000000001872e-05, 2.9735999999998958e-05, 2.945900000000251e-05, 2.9362000000001526e-05, 2.9597999999998736e-05, 2.919499999999922e-05]</msg>
<status status="PASS" starttime="20201110 08:40:53.678" endtime="20201110 08:40:53.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.673" endtime="20201110 08:40:53.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.683" endtime="20201110 08:40:53.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:53.687" endtime="20201110 08:40:53.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.685" endtime="20201110 08:40:53.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.681" endtime="20201110 08:40:53.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.316" endtime="20201110 08:40:53.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.315" endtime="20201110 08:40:53.707"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.716" endtime="20201110 08:40:53.732"></status>
</kw>
<msg timestamp="20201110 08:40:53.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:53.715" endtime="20201110 08:40:53.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:53.734" endtime="20201110 08:40:53.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.736" endtime="20201110 08:40:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.712" endtime="20201110 08:40:53.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.710" endtime="20201110 08:40:53.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.746" endtime="20201110 08:40:54.032"></status>
</kw>
<msg timestamp="20201110 08:40:54.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:53.745" endtime="20201110 08:40:54.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:54.037" endtime="20201110 08:40:54.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.045" endtime="20201110 08:40:54.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.742" endtime="20201110 08:40:54.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.740" endtime="20201110 08:40:54.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:54.051" level="INFO">${RESULT} = [{'time': 0.020409181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0597999999999737e-05, 'source_diff': 3.0597999999999737e-05}, {'time': 0.020443236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:54.048" endtime="20201110 08:40:54.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:54.065" level="INFO">${ACCURACY} = {'time': [0.020409181, 0.020443236, 0.020479181, 0.020512194, 0.020547194, 0.020581278, 0.020617194, 0.020651208, 0.020687222, 0.020721222, 0.020757222, 0.020791236, 0.020823236, 0.02085625, 0.0208923...</msg>
<status status="PASS" starttime="20201110 08:40:54.052" endtime="20201110 08:40:54.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.069" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:40:54.068" endtime="20201110 08:40:54.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.072" level="INFO">VALUE: [3.0597999999999737e-05, 3.0235999999999458e-05, 3.022299999999936e-05, 3.0472000000000138e-05, 2.9819000000000373e-05, 3.0472000000000138e-05, 3.061099999999983e-05, 3.0055000000001053e-05, 3.0222000000003357e-05, 3.0069000000000623e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 2.9958000000000068e-05, 3.0458000000000568e-05, 3.0416999999997862e-05, 3.059700000000026e-05, 3.065300000000201e-05, 3.0194000000000748e-05, 3.061099999999983e-05, 2.9792000000000707e-05, 3.0388999999998723e-05, 3.0485999999999708e-05, 3.0235999999999458e-05, 2.9819999999999847e-05, 3.0153000000001512e-05, 3.0485999999999708e-05, 3.0360999999999583e-05, 3.0000000000002247e-05, 3.054199999999799e-05, 2.994499999999997e-05, 3.0083999999999667e-05, 3.0138999999998473e-05, 3.0250000000002497e-05, 3.072299999999986e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.069400000000125e-05, 2.9930000000000928e-05, 3.063899999999897e-05, 3.0180000000001178e-05, 3.0360999999999583e-05, 2.9777000000001663e-05, 3.0138999999998473e-05, 3.0319000000000873e-05, 3.0277999999998167e-05, 3.0347000000000013e-05, 3.0277999999998167e-05, 3.0277999999998167e-05, 3.0138999999998473e-05, 3.077799999999867e-05]</msg>
<status status="PASS" starttime="20201110 08:40:54.070" endtime="20201110 08:40:54.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.066" endtime="20201110 08:40:54.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.075" endtime="20201110 08:40:54.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:54.079" endtime="20201110 08:40:54.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.077" endtime="20201110 08:40:54.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.073" endtime="20201110 08:40:54.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.708" endtime="20201110 08:40:54.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.708" endtime="20201110 08:40:54.099"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.108" endtime="20201110 08:40:54.123"></status>
</kw>
<msg timestamp="20201110 08:40:54.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.106" endtime="20201110 08:40:54.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.125" endtime="20201110 08:40:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.127" endtime="20201110 08:40:54.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.104" endtime="20201110 08:40:54.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.102" endtime="20201110 08:40:54.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.137" endtime="20201110 08:40:54.423"></status>
</kw>
<msg timestamp="20201110 08:40:54.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01972425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:54.135" endtime="20201110 08:40:54.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01972425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:54.427" endtime="20201110 08:40:54.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.435" endtime="20201110 08:40:54.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.133" endtime="20201110 08:40:54.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.131" endtime="20201110 08:40:54.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:54.442" level="INFO">${RESULT} = [{'time': 0.01972425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179199999999924e-05, 'source_diff': 3.179199999999924e-05}, {'time': 0.019761236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:40:54.439" endtime="20201110 08:40:54.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:54.455" level="INFO">${ACCURACY} = {'time': [0.01972425, 0.019761236, 0.01979525, 0.01983025, 0.01986625, 0.019902264, 0.019936278, 0.019973278, 0.020007278, 0.020044278, 0.020080278, 0.020116292, 0.020152278, 0.020189292, 0.020225292,...</msg>
<status status="PASS" starttime="20201110 08:40:54.443" endtime="20201110 08:40:54.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.460" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:40:54.459" endtime="20201110 08:40:54.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.462" level="INFO">VALUE: [3.179199999999924e-05, 3.145800000000157e-05, 3.166699999999911e-05, 3.14310000000019e-05, 3.104199999999849e-05, 3.11249999999999e-05, 3.091700000000183e-05, 3.129200000000221e-05, 3.138899999999972e-05, 3.163899999999997e-05, 3.122200000000089e-05, 3.11249999999999e-05, 3.17640000000001e-05, 3.145900000000104e-05, 3.105599999999806e-05, 3.1540999999999514e-05, 3.125000000000003e-05, 3.104200000000196e-05, 3.099999999999978e-05, 3.140299999999929e-05, 3.090300000000226e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.140199999999982e-05, 3.163899999999997e-05, 3.099999999999978e-05, 3.1790999999999764e-05, 3.175000000000053e-05, 3.094399999999803e-05, 3.117999999999871e-05, 3.088899999999922e-05, 3.166699999999911e-05, 3.106999999999763e-05, 3.09579999999976e-05, 3.12639999999996e-05, 3.141700000000233e-05, 3.17640000000001e-05, 3.104200000000196e-05, 3.1582999999998224e-05, 3.144500000000147e-05, 3.165299999999954e-05, 3.175000000000053e-05, 3.122200000000089e-05, 3.09310000000014e-05, 3.1598000000000737e-05, 3.147200000000114e-05, 3.147300000000061e-05, 3.122299999999689e-05, 3.163899999999997e-05, 3.144399999999853e-05]</msg>
<status status="PASS" starttime="20201110 08:40:54.461" endtime="20201110 08:40:54.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.456" endtime="20201110 08:40:54.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.466" endtime="20201110 08:40:54.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:54.469" endtime="20201110 08:40:54.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.468" endtime="20201110 08:40:54.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.464" endtime="20201110 08:40:54.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.100" endtime="20201110 08:40:54.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.100" endtime="20201110 08:40:54.490"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.499" endtime="20201110 08:40:54.515"></status>
</kw>
<msg timestamp="20201110 08:40:54.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.497" endtime="20201110 08:40:54.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.517" endtime="20201110 08:40:54.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.519" endtime="20201110 08:40:54.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.495" endtime="20201110 08:40:54.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.493" endtime="20201110 08:40:54.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.529" endtime="20201110 08:40:54.815"></status>
</kw>
<msg timestamp="20201110 08:40:54.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:40:54.528" endtime="20201110 08:40:54.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:40:54.819" endtime="20201110 08:40:54.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.827" endtime="20201110 08:40:54.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.525" endtime="20201110 08:40:54.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.523" endtime="20201110 08:40:54.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:54.834" level="INFO">${RESULT} = [{'time': 0.019758, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.180600000000228e-05, 'source_diff': 3.180600000000228e-05}, {'time': 0.019793, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2...</msg>
<status status="PASS" starttime="20201110 08:40:54.830" endtime="20201110 08:40:54.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:54.848" level="INFO">${ACCURACY} = {'time': [0.019758, 0.019793, 0.019828014, 0.019864, 0.0199, 0.019936028, 0.019973014, 0.020007069, 0.020043042, 0.020080028, 0.020117056, 0.020153056, 0.020189042, 0.020226042, 0.020262042, 0.0202970...</msg>
<status status="PASS" starttime="20201110 08:40:54.835" endtime="20201110 08:40:54.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.852" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:40:54.851" endtime="20201110 08:40:54.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.855" level="INFO">VALUE: [3.180600000000228e-05, 3.273600000000196e-05, 3.233300000000244e-05, 3.265300000000054e-05, 3.270799999999935e-05, 3.190299999999979e-05, 3.182000000000185e-05, 3.190200000000032e-05, 3.21250000000009e-05, 3.229199999999974e-05, 3.230600000000278e-05, 3.231999999999888e-05, 3.277800000000067e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.182000000000185e-05, 3.229199999999974e-05, 3.275000000000153e-05, 3.1832999999998474e-05, 3.248600000000171e-05, 3.2318999999999404e-05, 3.240300000000029e-05, 3.192999999999946e-05, 3.2304999999999834e-05, 3.225000000000103e-05, 3.186100000000108e-05, 3.265300000000054e-05, 3.1790999999999764e-05, 3.265300000000054e-05, 3.251399999999738e-05, 3.2096999999998294e-05, 3.215300000000004e-05, 3.241699999999986e-05, 3.1846999999998044e-05, 3.251399999999738e-05, 3.248599999999824e-05, 3.259700000000226e-05, 3.27779999999972e-05, 3.208400000000167e-05, 3.190299999999979e-05, 3.27640000000011e-05, 3.198599999999774e-05, 3.1804999999999334e-05, 3.223699999999746e-05, 3.181900000000237e-05, 3.27640000000011e-05, 3.242999999999996e-05, 3.198699999999721e-05, 3.21250000000009e-05, 3.261100000000183e-05]</msg>
<status status="PASS" starttime="20201110 08:40:54.854" endtime="20201110 08:40:54.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.849" endtime="20201110 08:40:54.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.859" endtime="20201110 08:40:54.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:54.862" endtime="20201110 08:40:54.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.860" endtime="20201110 08:40:54.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.857" endtime="20201110 08:40:54.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.491" endtime="20201110 08:40:54.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.491" endtime="20201110 08:40:54.883"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.891" endtime="20201110 08:40:54.907"></status>
</kw>
<msg timestamp="20201110 08:40:54.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.890" endtime="20201110 08:40:54.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:54.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:54.909" endtime="20201110 08:40:54.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.911" endtime="20201110 08:40:54.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.887" endtime="20201110 08:40:54.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.885" endtime="20201110 08:40:54.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:54.921" endtime="20201110 08:40:55.207"></status>
</kw>
<msg timestamp="20201110 08:40:55.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:54.920" endtime="20201110 08:40:55.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:55.211" endtime="20201110 08:40:55.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.219" endtime="20201110 08:40:55.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.917" endtime="20201110 08:40:55.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.915" endtime="20201110 08:40:55.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:55.226" level="INFO">${RESULT} = [{'time': 0.019814694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2818999999999904e-05, 'source_diff': 3.2818999999999904e-05}, {'time': 0.019852722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:55.223" endtime="20201110 08:40:55.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:55.239" level="INFO">${ACCURACY} = {'time': [0.019814694, 0.019852722, 0.019888708, 0.019926708, 0.019963708, 0.019999736, 0.020036722, 0.020073722, 0.020112736, 0.020148736, 0.020184736, 0.020221764, 0.02025875, 0.020296764, 0.0203327...</msg>
<status status="PASS" starttime="20201110 08:40:55.227" endtime="20201110 08:40:55.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.244" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:40:55.243" endtime="20201110 08:40:55.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.246" level="INFO">VALUE: [3.2818999999999904e-05, 3.319400000000028e-05, 3.3319000000000404e-05, 3.3583000000000224e-05, 3.3110999999998864e-05, 3.374999999999906e-05, 3.3541000000001514e-05, 3.323599999999899e-05, 3.3583000000000224e-05, 3.2818999999999904e-05, 3.366700000000111e-05, 3.290300000000079e-05, 3.365299999999807e-05, 3.299999999999831e-05, 3.373599999999949e-05, 3.350000000000228e-05, 3.368099999999721e-05, 3.347199999999967e-05, 3.368100000000068e-05, 3.329200000000074e-05, 3.31250000000019e-05, 3.354200000000099e-05, 3.316700000000061e-05, 3.295899999999907e-05, 3.336199999999859e-05, 3.341700000000086e-05, 3.3762999999999155e-05, 3.340199999999835e-05, 3.350000000000228e-05, 3.311100000000233e-05, 3.318000000000071e-05, 3.3527000000001944e-05, 3.3555000000001084e-05, 3.372199999999992e-05, 3.319400000000028e-05, 3.375000000000253e-05, 3.31250000000019e-05, 3.352799999999795e-05, 3.323599999999899e-05, 3.348599999999924e-05, 3.291700000000036e-05, 3.343100000000043e-05, 3.3332999999999974e-05, 3.293099999999993e-05, 3.3610999999999364e-05, 3.3138999999998e-05, 3.376399999999863e-05, 3.295900000000254e-05, 3.358400000000317e-05, 3.329199999999727e-05]</msg>
<status status="PASS" starttime="20201110 08:40:55.245" endtime="20201110 08:40:55.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.240" endtime="20201110 08:40:55.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.250" endtime="20201110 08:40:55.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:55.253" endtime="20201110 08:40:55.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.252" endtime="20201110 08:40:55.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.248" endtime="20201110 08:40:55.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.884" endtime="20201110 08:40:55.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:54.883" endtime="20201110 08:40:55.274"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.283" endtime="20201110 08:40:55.298"></status>
</kw>
<msg timestamp="20201110 08:40:55.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:55.281" endtime="20201110 08:40:55.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:55.299" endtime="20201110 08:40:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.302" endtime="20201110 08:40:55.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.279" endtime="20201110 08:40:55.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.276" endtime="20201110 08:40:55.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.312" endtime="20201110 08:40:55.597"></status>
</kw>
<msg timestamp="20201110 08:40:55.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:55.310" endtime="20201110 08:40:55.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:40:55.601" endtime="20201110 08:40:55.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.610" endtime="20201110 08:40:55.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.308" endtime="20201110 08:40:55.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.306" endtime="20201110 08:40:55.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:55.616" level="INFO">${RESULT} = [{'time': 0.019707625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4374999999999684e-05, 'source_diff': 3.4374999999999684e-05}, {'time': 0.019745639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:55.613" endtime="20201110 08:40:55.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:55.630" level="INFO">${ACCURACY} = {'time': [0.019707625, 0.019745639, 0.019783639, 0.019821653, 0.019859653, 0.019896667, 0.019936694, 0.019975653, 0.020012667, 0.020052694, 0.020089667, 0.020127681, 0.020165681, 0.020203694, 0.020241...</msg>
<status status="PASS" starttime="20201110 08:40:55.617" endtime="20201110 08:40:55.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.634" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:40:55.633" endtime="20201110 08:40:55.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.637" level="INFO">VALUE: [3.4374999999999684e-05, 3.47779999999992e-05, 3.418099999999771e-05, 3.4361000000000114e-05, 3.448600000000024e-05, 3.426399999999913e-05, 3.449999999999981e-05, 3.4638999999999504e-05, 3.430600000000131e-05, 3.442999999999849e-05, 3.3888999999998753e-05, 3.472300000000039e-05, 3.463900000000297e-05, 3.4013000000002874e-05, 3.4305000000001834e-05, 3.441600000000239e-05, 3.4304999999998365e-05, 3.441599999999892e-05, 3.4097000000000294e-05, 3.437500000000315e-05, 3.420800000000085e-05, 3.418000000000171e-05, 3.423599999999999e-05, 3.390299999999832e-05, 3.47779999999992e-05, 3.4597000000000794e-05, 3.451399999999938e-05, 3.4347000000000544e-05, 3.393099999999746e-05, 3.388900000000222e-05, 3.395900000000007e-05, 3.452799999999895e-05, 3.452800000000242e-05, 3.402799999999845e-05, 3.475000000000006e-05, 3.444400000000153e-05, 3.466699999999864e-05, 3.416699999999814e-05, 3.4638999999999504e-05, 3.4276999999999225e-05, 3.447300000000014e-05, 3.4124999999999434e-05, 3.426399999999913e-05, 3.392999999999799e-05, 3.417999999999824e-05, 3.388799999999928e-05, 3.3791000000001764e-05, 3.419400000000128e-05, 3.4361000000000114e-05, 3.3860999999999614e-05]</msg>
<status status="PASS" starttime="20201110 08:40:55.635" endtime="20201110 08:40:55.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.630" endtime="20201110 08:40:55.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.640" endtime="20201110 08:40:55.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:55.643" endtime="20201110 08:40:55.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.642" endtime="20201110 08:40:55.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.639" endtime="20201110 08:40:55.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.275" endtime="20201110 08:40:55.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.274" endtime="20201110 08:40:55.665"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.673" endtime="20201110 08:40:55.688"></status>
</kw>
<msg timestamp="20201110 08:40:55.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:55.671" endtime="20201110 08:40:55.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:55.690" endtime="20201110 08:40:55.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.692" endtime="20201110 08:40:55.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.669" endtime="20201110 08:40:55.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.667" endtime="20201110 08:40:55.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.703" endtime="20201110 08:40:55.988"></status>
</kw>
<msg timestamp="20201110 08:40:55.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:55.701" endtime="20201110 08:40:55.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:55.992" endtime="20201110 08:40:55.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.000" endtime="20201110 08:40:56.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.699" endtime="20201110 08:40:56.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.697" endtime="20201110 08:40:56.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:56.007" level="INFO">${RESULT} = [{'time': 0.019764125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52779999999997e-05, 'source_diff': 3.52779999999997e-05}, {'time': 0.019802125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:40:56.003" endtime="20201110 08:40:56.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:56.020" level="INFO">${ACCURACY} = {'time': [0.019764125, 0.019802125, 0.019843125, 0.019884139, 0.019922139, 0.019959139, 0.019997194, 0.020037167, 0.020078167, 0.020119167, 0.020157167, 0.020197194, 0.020237181, 0.020278181, 0.020316...</msg>
<status status="PASS" starttime="20201110 08:40:56.008" endtime="20201110 08:40:56.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.025" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:40:56.023" endtime="20201110 08:40:56.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.027" level="INFO">VALUE: [3.52779999999997e-05, 3.5416999999999393e-05, 3.5389000000000254e-05, 3.5346999999998074e-05, 3.5402999999999823e-05, 3.476399999999963e-05, 3.4875000000000184e-05, 3.548600000000124e-05, 3.576400000000063e-05, 3.5625000000000934e-05, 3.519500000000175e-05, 3.513800000000053e-05, 3.5402999999999823e-05, 3.52779999999997e-05, 3.520799999999838e-05, 3.4833000000001474e-05, 3.4861000000000614e-05, 3.5054999999999115e-05, 3.491599999999942e-05, 3.494399999999856e-05, 3.520800000000185e-05, 3.545799999999863e-05, 3.5332999999998504e-05, 3.5666999999999643e-05, 3.522200000000142e-05, 3.5346999999998074e-05, 3.573600000000149e-05, 3.4875000000000184e-05, 3.4875000000000184e-05, 3.5166999999999143e-05, 3.5166999999999143e-05, 3.549999999999734e-05, 3.5666999999999643e-05, 3.552799999999995e-05, 3.54719999999982e-05, 3.523600000000099e-05, 3.47779999999992e-05, 3.527800000000317e-05, 3.482000000000138e-05, 3.529199999999927e-05, 3.4846999999997574e-05, 3.573700000000096e-05, 3.540200000000035e-05, 3.547200000000167e-05, 3.4888999999999754e-05, 3.572200000000192e-05, 3.500000000000031e-05, 3.5639000000000504e-05, 3.525000000000056e-05, 3.566600000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:40:56.026" endtime="20201110 08:40:56.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.021" endtime="20201110 08:40:56.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.030" endtime="20201110 08:40:56.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:56.034" endtime="20201110 08:40:56.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.032" endtime="20201110 08:40:56.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.029" endtime="20201110 08:40:56.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.665" endtime="20201110 08:40:56.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.665" endtime="20201110 08:40:56.055"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.063" endtime="20201110 08:40:56.080"></status>
</kw>
<msg timestamp="20201110 08:40:56.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.062" endtime="20201110 08:40:56.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.082" endtime="20201110 08:40:56.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.084" endtime="20201110 08:40:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.059" endtime="20201110 08:40:56.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.057" endtime="20201110 08:40:56.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.094" endtime="20201110 08:40:56.380"></status>
</kw>
<msg timestamp="20201110 08:40:56.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.092" endtime="20201110 08:40:56.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019672111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.384" endtime="20201110 08:40:56.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.392" endtime="20201110 08:40:56.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.090" endtime="20201110 08:40:56.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.088" endtime="20201110 08:40:56.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:56.399" level="INFO">${RESULT} = [{'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.652800000000095e-05, 'source_diff': 3.652800000000095e-05}, {'time': 0.019747653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:56.395" endtime="20201110 08:40:56.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:56.413" level="INFO">${ACCURACY} = {'time': [0.019708639, 0.019747653, 0.019788639, 0.019829639, 0.019869653, 0.019908653, 0.019947667, 0.019987681, 0.020028667, 0.020069681, 0.020110681, 0.020151694, 0.020192708, 0.020231694, 0.020270...</msg>
<status status="PASS" starttime="20201110 08:40:56.400" endtime="20201110 08:40:56.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.418" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:40:56.417" endtime="20201110 08:40:56.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.420" level="INFO">VALUE: [3.652800000000095e-05, 3.644499999999953e-05, 3.6167000000000143e-05, 3.674999999999859e-05, 3.630599999999984e-05, 3.6416999999996924e-05, 3.5903000000000324e-05, 3.59589999999986e-05, 3.629200000000027e-05, 3.647299999999867e-05, 3.622299999999842e-05, 3.5875000000001184e-05, 3.672199999999945e-05, 3.672200000000292e-05, 3.619399999999981e-05, 3.672200000000292e-05, 3.6638999999998034e-05, 3.622199999999895e-05, 3.6096999999998824e-05, 3.619399999999981e-05, 3.6569000000000185e-05, 3.683399999999948e-05, 3.6347000000002544e-05, 3.623599999999852e-05, 3.594399999999956e-05, 3.5916999999999893e-05, 3.631999999999941e-05, 3.605599999999959e-05, 3.647300000000214e-05, 3.5875000000001184e-05, 3.5916999999999893e-05, 3.6555000000000615e-05, 3.623600000000199e-05, 3.631999999999941e-05, 3.634799999999855e-05, 3.676399999999816e-05, 3.636199999999812e-05, 3.593100000000293e-05, 3.6152999999997104e-05, 3.619499999999928e-05, 3.5776999999997255e-05, 3.6318999999999935e-05, 3.6582999999999755e-05, 3.617999999999677e-05, 3.6610999999998894e-05, 3.6777000000001725e-05, 3.6347000000002544e-05, 3.672199999999945e-05, 3.620799999999938e-05, 3.647200000000267e-05]</msg>
<status status="PASS" starttime="20201110 08:40:56.419" endtime="20201110 08:40:56.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.414" endtime="20201110 08:40:56.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.424" endtime="20201110 08:40:56.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:56.427" endtime="20201110 08:40:56.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.426" endtime="20201110 08:40:56.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.422" endtime="20201110 08:40:56.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.056" endtime="20201110 08:40:56.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.055" endtime="20201110 08:40:56.448"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.457" endtime="20201110 08:40:56.472"></status>
</kw>
<msg timestamp="20201110 08:40:56.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.455" endtime="20201110 08:40:56.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.474" endtime="20201110 08:40:56.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.476" endtime="20201110 08:40:56.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.452" endtime="20201110 08:40:56.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.450" endtime="20201110 08:40:56.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.486" endtime="20201110 08:40:56.772"></status>
</kw>
<msg timestamp="20201110 08:40:56.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.485" endtime="20201110 08:40:56.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.777" endtime="20201110 08:40:56.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.785" endtime="20201110 08:40:56.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.482" endtime="20201110 08:40:56.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.480" endtime="20201110 08:40:56.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:56.792" level="INFO">${RESULT} = [{'time': 0.019961208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-05, 'source_diff': 3.750000000000281e-05}, {'time': 0.020004236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:56.788" endtime="20201110 08:40:56.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:56.805" level="INFO">${ACCURACY} = {'time': [0.019961208, 0.020004236, 0.020045222, 0.020085222, 0.020126236, 0.02016525, 0.020207236, 0.02024925, 0.020292264, 0.02033125, 0.020373264, 0.020415278, 0.020455278, 0.020495333, 0.020535292...</msg>
<status status="PASS" starttime="20201110 08:40:56.793" endtime="20201110 08:40:56.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.809" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:40:56.808" endtime="20201110 08:40:56.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.812" level="INFO">VALUE: [3.750000000000281e-05, 3.7167000000001144e-05, 3.7653000000002074e-05, 3.7124999999998964e-05, 3.7068999999997215e-05, 3.694400000000056e-05, 3.7388999999998784e-05, 3.702800000000145e-05, 3.7347000000000075e-05, 3.670799999999988e-05, 3.705599999999712e-05, 3.7180999999997244e-05, 3.705600000000059e-05, 3.694400000000056e-05, 3.7153000000001574e-05, 3.7624999999999464e-05, 3.6791000000001295e-05, 3.69589999999996e-05, 3.684799999999905e-05, 3.7027000000001975e-05, 3.747299999999967e-05, 3.774999999999959e-05, 3.7555000000001615e-05, 3.7055000000001115e-05, 3.748599999999977e-05, 3.772200000000045e-05, 3.6860999999999144e-05, 3.7333000000000505e-05, 3.701399999999841e-05, 3.7597000000000325e-05, 3.699999999999884e-05, 3.7667000000001644e-05, 3.7624999999999464e-05, 3.7639000000002504e-05, 3.7111000000002864e-05, 3.7403000000001824e-05, 3.7638999999999034e-05, 3.748600000000324e-05, 3.7166999999997674e-05, 3.704199999999755e-05, 3.770900000000035e-05, 3.683399999999948e-05, 3.707000000000016e-05, 3.756999999999719e-05, 3.774999999999959e-05, 3.698600000000274e-05, 3.690199999999838e-05, 3.7583000000000755e-05, 3.7597000000000325e-05, 3.6805000000000865e-05]</msg>
<status status="PASS" starttime="20201110 08:40:56.810" endtime="20201110 08:40:56.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.806" endtime="20201110 08:40:56.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.815" endtime="20201110 08:40:56.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:56.819" endtime="20201110 08:40:56.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.817" endtime="20201110 08:40:56.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.814" endtime="20201110 08:40:56.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.449" endtime="20201110 08:40:56.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.448" endtime="20201110 08:40:56.840"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.848" endtime="20201110 08:40:56.863"></status>
</kw>
<msg timestamp="20201110 08:40:56.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.847" endtime="20201110 08:40:56.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:56.865" endtime="20201110 08:40:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.867" endtime="20201110 08:40:56.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.844" endtime="20201110 08:40:56.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.842" endtime="20201110 08:40:56.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.877" endtime="20201110 08:40:57.162"></status>
</kw>
<msg timestamp="20201110 08:40:57.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.876" endtime="20201110 08:40:57.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:57.166" endtime="20201110 08:40:57.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.174" endtime="20201110 08:40:57.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.873" endtime="20201110 08:40:57.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.871" endtime="20201110 08:40:57.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:57.181" level="INFO">${RESULT} = [{'time': 0.019893431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.801399999999941e-05, 'source_diff': 3.801399999999941e-05}, {'time': 0.019937431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:57.177" endtime="20201110 08:40:57.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:57.194" level="INFO">${ACCURACY} = {'time': [0.019893431, 0.019937431, 0.019981431, 0.020025431, 0.020069431, 0.020109444, 0.020151444, 0.020192458, 0.020233472, 0.020273458, 0.020316458, 0.020357486, 0.020399486, 0.020440486, 0.020480...</msg>
<status status="PASS" starttime="20201110 08:40:57.182" endtime="20201110 08:40:57.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.199" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:40:57.198" endtime="20201110 08:40:57.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.201" level="INFO">VALUE: [3.801399999999941e-05, 3.8402999999999354e-05, 3.8402999999999354e-05, 3.8444999999998064e-05, 3.856999999999819e-05, 3.7861000000000145e-05, 3.872200000000145e-05, 3.873600000000102e-05, 3.875000000000059e-05, 3.794400000000156e-05, 3.875000000000059e-05, 3.7861000000000145e-05, 3.8583000000001755e-05, 3.802800000000245e-05, 3.795799999999766e-05, 3.8304999999998895e-05, 3.802799999999898e-05, 3.855599999999862e-05, 3.8639000000000034e-05, 3.7888999999999284e-05, 3.7832999999997535e-05, 3.7874999999999714e-05, 3.8361000000000645e-05, 3.876400000000016e-05, 3.826399999999966e-05, 3.8459000000001103e-05, 3.8652999999999604e-05, 3.854199999999905e-05, 3.8138999999999534e-05, 3.798699999999974e-05, 3.788799999999981e-05, 3.8625000000000465e-05, 3.825000000000009e-05, 3.8124999999999964e-05, 3.791600000000242e-05, 3.8361000000000645e-05, 3.822200000000095e-05, 3.795800000000113e-05, 3.847199999999773e-05, 3.794399999999809e-05, 3.8346999999997605e-05, 3.845800000000163e-05, 3.8361000000000645e-05, 3.826399999999966e-05, 3.786199999999962e-05, 3.8430999999998494e-05, 3.8459000000001103e-05, 3.8138999999999534e-05, 3.8166999999998674e-05, 3.852799999999948e-05]</msg>
<status status="PASS" starttime="20201110 08:40:57.200" endtime="20201110 08:40:57.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.195" endtime="20201110 08:40:57.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.208" endtime="20201110 08:40:57.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:57.212" endtime="20201110 08:40:57.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.210" endtime="20201110 08:40:57.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.207" endtime="20201110 08:40:57.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.841" endtime="20201110 08:40:57.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.840" endtime="20201110 08:40:57.233"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.241" endtime="20201110 08:40:57.256"></status>
</kw>
<msg timestamp="20201110 08:40:57.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:57.240" endtime="20201110 08:40:57.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:57.258" endtime="20201110 08:40:57.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.260" endtime="20201110 08:40:57.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.237" endtime="20201110 08:40:57.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.235" endtime="20201110 08:40:57.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.270" endtime="20201110 08:40:57.556"></status>
</kw>
<msg timestamp="20201110 08:40:57.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:57.269" endtime="20201110 08:40:57.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:57.560" endtime="20201110 08:40:57.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.568" endtime="20201110 08:40:57.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.266" endtime="20201110 08:40:57.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.264" endtime="20201110 08:40:57.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:57.575" level="INFO">${RESULT} = [{'time': 0.019739181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.976400000000116e-05, 'source_diff': 3.976400000000116e-05}, {'time': 0.019783222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:57.571" endtime="20201110 08:40:57.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:57.588" level="INFO">${ACCURACY} = {'time': [0.019739181, 0.019783222, 0.019826181, 0.019870181, 0.01991525, 0.019958208, 0.020003194, 0.020047194, 0.020091208, 0.020136208, 0.020181208, 0.020225236, 0.020270222, 0.020313236, 0.0203562...</msg>
<status status="PASS" starttime="20201110 08:40:57.576" endtime="20201110 08:40:57.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.592" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:40:57.591" endtime="20201110 08:40:57.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.595" level="INFO">VALUE: [3.976400000000116e-05, 3.9389000000000784e-05, 3.9486999999997774e-05, 3.934800000000155e-05, 3.94859999999983e-05, 3.9805000000000396e-05, 3.9624999999997995e-05, 3.91660000000002e-05, 3.949999999999787e-05, 3.9277000000000756e-05, 3.969399999999984e-05, 3.919399999999934e-05, 3.950000000000134e-05, 3.924999999999762e-05, 3.9166999999999674e-05, 3.922199999999848e-05, 3.922200000000195e-05, 3.976399999999769e-05, 3.919399999999934e-05, 3.945799999999916e-05, 3.952800000000048e-05, 3.9374999999997745e-05, 3.9430999999999494e-05, 3.947199999999873e-05, 3.92919999999998e-05, 3.977800000000073e-05, 3.927800000000023e-05, 3.897199999999823e-05, 3.9458999999998634e-05, 3.9708999999998884e-05, 3.897199999999823e-05, 3.943000000000002e-05, 3.891599999999995e-05, 3.940200000000088e-05, 3.947199999999873e-05, 3.920799999999891e-05, 3.9097000000001825e-05, 3.9403000000000354e-05, 3.894399999999909e-05, 3.894399999999909e-05, 3.8874999999997245e-05, 3.9583000000002755e-05, 3.951400000000091e-05, 3.9639000000001035e-05, 3.8874999999997245e-05, 3.930600000000284e-05, 3.9361000000001645e-05, 3.9181000000002714e-05, 3.9374999999997745e-05, 3.9430999999999494e-05]</msg>
<status status="PASS" starttime="20201110 08:40:57.593" endtime="20201110 08:40:57.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.589" endtime="20201110 08:40:57.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.599" endtime="20201110 08:40:57.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:57.602" endtime="20201110 08:40:57.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.600" endtime="20201110 08:40:57.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.597" endtime="20201110 08:40:57.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.233" endtime="20201110 08:40:57.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.233" endtime="20201110 08:40:57.623"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.631" endtime="20201110 08:40:57.649"></status>
</kw>
<msg timestamp="20201110 08:40:57.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:57.630" endtime="20201110 08:40:57.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:57.650" endtime="20201110 08:40:57.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.653" endtime="20201110 08:40:57.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.627" endtime="20201110 08:40:57.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.625" endtime="20201110 08:40:57.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.663" endtime="20201110 08:40:57.949"></status>
</kw>
<msg timestamp="20201110 08:40:57.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:57.661" endtime="20201110 08:40:57.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:57.953" endtime="20201110 08:40:57.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.961" endtime="20201110 08:40:57.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.659" endtime="20201110 08:40:57.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.657" endtime="20201110 08:40:57.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:57.968" level="INFO">${RESULT} = [{'time': 0.020600278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.051399999999844e-05, 'source_diff': 4.051399999999844e-05}, {'time': 0.020645361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:57.964" endtime="20201110 08:40:57.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:57.982" level="INFO">${ACCURACY} = {'time': [0.020600278, 0.020645361, 0.020690333, 0.020735292, 0.020779292, 0.020825306, 0.020871347, 0.020916347, 0.020962319, 0.021004319, 0.021048347, 0.021092333, 0.021135347, 0.021178347, 0.021221...</msg>
<status status="PASS" starttime="20201110 08:40:57.969" endtime="20201110 08:40:57.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.987" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:40:57.986" endtime="20201110 08:40:57.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:57.989" level="INFO">VALUE: [4.051399999999844e-05, 4.0833000000000536e-05, 4.075000000000259e-05, 4.076399999999869e-05, 4.02920000000008e-05, 4.051399999999844e-05, 4.072199999999998e-05, 3.991599999999748e-05, 4.0277000000001756e-05, 3.9818999999999966e-05, 3.991599999999748e-05, 4.0541000000001576e-05, 4.0138999999998065e-05, 3.9903000000000854e-05, 3.9917000000000424e-05, 4.047199999999973e-05, 4.030600000000037e-05, 4.04859999999993e-05, 3.9903000000000854e-05, 4.0583000000000286e-05, 4.0124999999998495e-05, 4.026400000000166e-05, 4.052800000000148e-05, 3.9832999999999535e-05, 4.0458999999999634e-05, 4.050000000000234e-05, 4.0181000000000244e-05, 4.0361000000002645e-05, 3.99859999999988e-05, 4.072199999999998e-05, 4.0237000000001993e-05, 4.0695000000000314e-05, 4.044399999999712e-05, 4.068000000000127e-05, 4.0333000000000035e-05, 3.994400000000009e-05, 4.023599999999905e-05, 4.045800000000016e-05, 4.073599999999955e-05, 3.9875000000001715e-05, 4.001399999999794e-05, 4.027799999999776e-05, 4.0639000000002035e-05, 4.009799999999883e-05, 4.0417000000000924e-05, 4.050000000000234e-05, 4.0153000000001104e-05, 4.075000000000259e-05, 3.9944999999999564e-05, 4.055600000000062e-05]</msg>
<status status="PASS" starttime="20201110 08:40:57.988" endtime="20201110 08:40:57.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.983" endtime="20201110 08:40:57.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:57.992" endtime="20201110 08:40:57.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:57.996" endtime="20201110 08:40:58.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.994" endtime="20201110 08:40:58.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.991" endtime="20201110 08:40:58.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.624" endtime="20201110 08:40:58.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:57.623" endtime="20201110 08:40:58.017"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.025" endtime="20201110 08:40:58.042"></status>
</kw>
<msg timestamp="20201110 08:40:58.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.024" endtime="20201110 08:40:58.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.044" endtime="20201110 08:40:58.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.046" endtime="20201110 08:40:58.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.021" endtime="20201110 08:40:58.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.019" endtime="20201110 08:40:58.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.056" endtime="20201110 08:40:58.343"></status>
</kw>
<msg timestamp="20201110 08:40:58.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.055" endtime="20201110 08:40:58.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.347" endtime="20201110 08:40:58.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.355" endtime="20201110 08:40:58.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.052" endtime="20201110 08:40:58.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.050" endtime="20201110 08:40:58.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:58.362" level="INFO">${RESULT} = [{'time': 0.019835319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1276999999999286e-05, 'source_diff': 4.1276999999999286e-05}, {'time': 0.019879319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:58.358" endtime="20201110 08:40:58.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:58.375" level="INFO">${ACCURACY} = {'time': [0.019835319, 0.019879319, 0.019923333, 0.019968347, 0.020015333, 0.020061347, 0.020105361, 0.020150347, 0.020194361, 0.020240375, 0.020286417, 0.020333389, 0.020377375, 0.020424389, 0.020470...</msg>
<status status="PASS" starttime="20201110 08:40:58.363" endtime="20201110 08:40:58.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.379" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:40:58.378" endtime="20201110 08:40:58.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.382" level="INFO">VALUE: [4.1276999999999286e-05, 4.124999999999962e-05, 4.1139000000002535e-05, 4.168000000000227e-05, 4.1554999999998676e-05, 4.123600000000005e-05, 4.1402999999998885e-05, 4.14860000000003e-05, 4.095800000000066e-05, 4.147200000000073e-05, 4.0860999999999675e-05, 4.1361000000000175e-05, 4.172200000000098e-05, 4.170800000000141e-05, 4.1667000000002175e-05, 4.155600000000162e-05, 4.1361000000000175e-05, 4.154200000000205e-05, 4.0875000000002715e-05, 4.1723000000000454e-05, 4.0930999999997525e-05, 4.129199999999833e-05, 4.1776999999999787e-05, 4.152800000000248e-05, 4.1333000000001036e-05, 4.1568999999998246e-05, 4.165199999999966e-05, 4.14860000000003e-05, 4.123600000000005e-05, 4.152800000000248e-05, 4.119400000000134e-05, 4.175000000000012e-05, 4.095800000000066e-05, 4.154199999999858e-05, 4.152800000000248e-05, 4.172200000000098e-05, 4.1638999999999565e-05, 4.1624999999999995e-05, 4.1347000000000605e-05, 4.170799999999794e-05, 4.104199999999808e-05, 4.124999999999962e-05, 4.1374999999999745e-05, 4.127799999999876e-05, 4.157000000000119e-05, 4.1124999999999495e-05, 4.1222999999999954e-05, 4.155600000000162e-05, 4.166599999999923e-05, 4.173599999999708e-05]</msg>
<status status="PASS" starttime="20201110 08:40:58.380" endtime="20201110 08:40:58.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.376" endtime="20201110 08:40:58.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.385" endtime="20201110 08:40:58.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:58.389" endtime="20201110 08:40:58.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.387" endtime="20201110 08:40:58.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.384" endtime="20201110 08:40:58.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.018" endtime="20201110 08:40:58.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.017" endtime="20201110 08:40:58.410"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.418" endtime="20201110 08:40:58.434"></status>
</kw>
<msg timestamp="20201110 08:40:58.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.417" endtime="20201110 08:40:58.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.436" endtime="20201110 08:40:58.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.438" endtime="20201110 08:40:58.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.414" endtime="20201110 08:40:58.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.412" endtime="20201110 08:40:58.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.448" endtime="20201110 08:40:58.733"></status>
</kw>
<msg timestamp="20201110 08:40:58.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.447" endtime="20201110 08:40:58.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.737" endtime="20201110 08:40:58.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.746" endtime="20201110 08:40:58.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.444" endtime="20201110 08:40:58.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.442" endtime="20201110 08:40:58.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:58.752" level="INFO">${RESULT} = [{'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2582999999998816e-05, 'source_diff': 4.2582999999998816e-05}, {'time': 0.019991972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:58.749" endtime="20201110 08:40:58.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:58.765" level="INFO">${ACCURACY} = {'time': [0.019944972, 0.019991972, 0.020037972, 0.020084972, 0.020132986, 0.020178986, 0.020226986, 0.020271, 0.020317, 0.020364014, 0.020409014, 0.020456028, 0.020501028, 0.020549028, 0.020596028, 0...</msg>
<status status="PASS" starttime="20201110 08:40:58.753" endtime="20201110 08:40:58.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.770" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:40:58.769" endtime="20201110 08:40:58.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.772" level="INFO">VALUE: [4.2582999999998816e-05, 4.223600000000105e-05, 4.2304999999999426e-05, 4.216599999999973e-05, 4.2568999999999246e-05, 4.2361000000001175e-05, 4.227799999999976e-05, 4.1847000000001106e-05, 4.2361000000001175e-05, 4.2361000000001175e-05, 4.1832999999998066e-05, 4.222200000000148e-05, 4.2695000000002314e-05, 4.2402999999999885e-05, 4.2166999999999205e-05, 4.1902999999999385e-05, 4.188800000000034e-05, 4.19860000000008e-05, 4.182000000000144e-05, 4.219399999999887e-05, 4.2290999999999856e-05, 4.215200000000016e-05, 4.195800000000166e-05, 4.1818999999998496e-05, 4.270799999999894e-05, 4.2346999999998136e-05, 4.251400000000044e-05, 4.2332999999998566e-05, 4.276400000000069e-05, 4.200000000000037e-05, 4.251400000000044e-05, 4.23059999999989e-05, 4.23059999999989e-05, 4.231999999999847e-05, 4.227799999999976e-05, 4.250000000000087e-05, 4.2722999999997985e-05, 4.2653000000000135e-05, 4.23059999999989e-05, 4.257000000000219e-05, 4.229199999999933e-05, 4.229199999999933e-05, 4.176399999999969e-05, 4.220799999999844e-05, 4.2583000000002286e-05, 4.244399999999912e-05, 4.250000000000087e-05, 4.240200000000041e-05, 4.2333000000002036e-05, 4.2653000000000135e-05]</msg>
<status status="PASS" starttime="20201110 08:40:58.771" endtime="20201110 08:40:58.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.766" endtime="20201110 08:40:58.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.776" endtime="20201110 08:40:58.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:58.779" endtime="20201110 08:40:58.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.778" endtime="20201110 08:40:58.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.774" endtime="20201110 08:40:58.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.411" endtime="20201110 08:40:58.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.410" endtime="20201110 08:40:58.800"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.809" endtime="20201110 08:40:58.826"></status>
</kw>
<msg timestamp="20201110 08:40:58.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.807" endtime="20201110 08:40:58.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:58.828" endtime="20201110 08:40:58.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.831" endtime="20201110 08:40:58.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.805" endtime="20201110 08:40:58.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.803" endtime="20201110 08:40:58.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.843" endtime="20201110 08:40:59.128"></status>
</kw>
<msg timestamp="20201110 08:40:59.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.841" endtime="20201110 08:40:59.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:59.132" endtime="20201110 08:40:59.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.140" endtime="20201110 08:40:59.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.839" endtime="20201110 08:40:59.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.837" endtime="20201110 08:40:59.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:59.147" level="INFO">${RESULT} = [{'time': 0.020523958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3332999999999566e-05, 'source_diff': 4.3332999999999566e-05}, {'time': 0.020571958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:40:59.143" endtime="20201110 08:40:59.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:59.160" level="INFO">${ACCURACY} = {'time': [0.020523958, 0.020571958, 0.020618958, 0.020665972, 0.020712028, 0.020758972, 0.020805986, 0.020853986, 0.020899986, 0.020949, 0.020996014, 0.021042056, 0.021089014, 0.021135069, 0.021181028...</msg>
<status status="PASS" starttime="20201110 08:40:59.148" endtime="20201110 08:40:59.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.165" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:40:59.164" endtime="20201110 08:40:59.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.167" level="INFO">VALUE: [4.3332999999999566e-05, 4.341600000000098e-05, 4.347199999999926e-05, 4.3541000000001107e-05, 4.348599999999883e-05, 4.341600000000098e-05, 4.29999999999979e-05, 4.2903000000000385e-05, 4.3305000000000426e-05, 4.376399999999822e-05, 4.323600000000205e-05, 4.2944999999999095e-05, 4.372199999999951e-05, 4.3596999999999386e-05, 4.308400000000226e-05, 4.350000000000187e-05, 4.359800000000233e-05, 4.329200000000033e-05, 4.3167000000000205e-05, 4.3360999999998706e-05, 4.359799999999886e-05, 4.370799999999994e-05, 4.3611000000002426e-05, 4.302699999999757e-05, 4.369400000000037e-05, 4.3110999999998456e-05, 4.3125000000001495e-05, 4.2818999999999496e-05, 4.369400000000037e-05, 4.324999999999815e-05, 4.36800000000008e-05, 4.345799999999969e-05, 4.3346999999999136e-05, 4.3417000000000455e-05, 4.3237000000001524e-05, 4.373599999999908e-05, 4.3417000000000455e-05, 4.3403000000000885e-05, 4.3374999999998276e-05, 4.33059999999999e-05, 4.293000000000005e-05, 4.286200000000115e-05, 4.3332999999999566e-05, 4.34999999999984e-05, 4.343000000000055e-05, 4.372199999999951e-05, 4.377700000000179e-05, 4.294399999999962e-05, 4.324999999999815e-05, 4.2847000000002106e-05]</msg>
<status status="PASS" starttime="20201110 08:40:59.166" endtime="20201110 08:40:59.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.161" endtime="20201110 08:40:59.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.171" endtime="20201110 08:40:59.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:59.174" endtime="20201110 08:40:59.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.173" endtime="20201110 08:40:59.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.169" endtime="20201110 08:40:59.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.801" endtime="20201110 08:40:59.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.801" endtime="20201110 08:40:59.195"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.204" endtime="20201110 08:40:59.219"></status>
</kw>
<msg timestamp="20201110 08:40:59.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:59.202" endtime="20201110 08:40:59.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:59.220" endtime="20201110 08:40:59.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.223" endtime="20201110 08:40:59.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.200" endtime="20201110 08:40:59.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.198" endtime="20201110 08:40:59.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.233" endtime="20201110 08:40:59.518"></status>
</kw>
<msg timestamp="20201110 08:40:59.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:59.231" endtime="20201110 08:40:59.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:59.522" endtime="20201110 08:40:59.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.530" endtime="20201110 08:40:59.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.229" endtime="20201110 08:40:59.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.227" endtime="20201110 08:40:59.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:59.537" level="INFO">${RESULT} = [{'time': 0.019919444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.438800000000284e-05, 'source_diff': 4.438800000000284e-05}, {'time': 0.019967389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:59.534" endtime="20201110 08:40:59.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:59.552" level="INFO">${ACCURACY} = {'time': [0.019919444, 0.019967389, 0.020017403, 0.020065403, 0.020112403, 0.020159417, 0.020208431, 0.020257431, 0.020305431, 0.020355431, 0.020403472, 0.020452444, 0.020501472, 0.020550472, 0.020597...</msg>
<status status="PASS" starttime="20201110 08:40:59.538" endtime="20201110 08:40:59.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.556" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:40:59.555" endtime="20201110 08:40:59.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.559" level="INFO">VALUE: [4.438800000000284e-05, 4.4652999999998666e-05, 4.4610999999999956e-05, 4.4709000000000415e-05, 4.472200000000051e-05, 4.408399999999979e-05, 4.451399999999897e-05, 4.381999999999997e-05, 4.424999999999915e-05, 4.4138999999998596e-05, 4.427799999999829e-05, 4.3819000000000496e-05, 4.448599999999983e-05, 4.4360999999999706e-05, 4.3888999999998346e-05, 4.447200000000026e-05, 4.3805000000000927e-05, 4.479199999999836e-05, 4.4347000000000136e-05, 4.425000000000262e-05, 4.473600000000008e-05, 4.381999999999997e-05, 4.3833000000000066e-05, 4.445800000000069e-05, 4.4709000000000415e-05, 4.407000000000022e-05, 4.432000000000047e-05, 4.4709000000000415e-05, 4.476399999999922e-05, 4.474999999999965e-05, 4.470800000000094e-05, 4.400000000000237e-05, 4.423599999999958e-05, 4.4083000000000316e-05, 4.466599999999876e-05, 4.4208999999999915e-05, 4.392999999999758e-05, 4.3833000000000066e-05, 4.394400000000062e-05, 4.457000000000072e-05, 4.4096999999999886e-05, 4.454200000000158e-05, 4.3861000000002676e-05, 4.405600000000065e-05, 4.39860000000028e-05, 4.451399999999897e-05, 4.459799999999986e-05, 4.4403000000001885e-05, 4.426399999999872e-05, 4.416599999999826e-05]</msg>
<status status="PASS" starttime="20201110 08:40:59.557" endtime="20201110 08:40:59.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.552" endtime="20201110 08:40:59.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.562" endtime="20201110 08:40:59.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:59.566" endtime="20201110 08:40:59.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.564" endtime="20201110 08:40:59.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.560" endtime="20201110 08:40:59.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.196" endtime="20201110 08:40:59.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.195" endtime="20201110 08:40:59.587"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.595" endtime="20201110 08:40:59.611"></status>
</kw>
<msg timestamp="20201110 08:40:59.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:59.593" endtime="20201110 08:40:59.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:59.613" endtime="20201110 08:40:59.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.615" endtime="20201110 08:40:59.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.591" endtime="20201110 08:40:59.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.589" endtime="20201110 08:40:59.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.625" endtime="20201110 08:40:59.911"></status>
</kw>
<msg timestamp="20201110 08:40:59.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:59.624" endtime="20201110 08:40:59.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019848528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:59.915" endtime="20201110 08:40:59.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.923" endtime="20201110 08:40:59.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.621" endtime="20201110 08:40:59.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.619" endtime="20201110 08:40:59.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:59.930" level="INFO">${RESULT} = [{'time': 0.019894069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554099999999964e-05, 'source_diff': 4.554099999999964e-05}, {'time': 0.019941014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:40:59.927" endtime="20201110 08:40:59.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:40:59.943" level="INFO">${ACCURACY} = {'time': [0.019894069, 0.019941014, 0.019989, 0.020037014, 0.020086028, 0.020134014, 0.020184028, 0.020232028, 0.020280042, 0.020329056, 0.020379042, 0.020430056, 0.020480069, 0.020528069, 0.020578083...</msg>
<status status="PASS" starttime="20201110 08:40:59.931" endtime="20201110 08:40:59.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.948" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:40:59.947" endtime="20201110 08:40:59.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:59.950" level="INFO">VALUE: [4.554099999999964e-05, 4.4847000000000636e-05, 4.5125000000000026e-05, 4.4944999999997626e-05, 4.5416999999998986e-05, 4.559699999999792e-05, 4.5402999999999416e-05, 4.4959000000000665e-05, 4.5723000000000985e-05, 4.508400000000079e-05, 4.5709000000001415e-05, 4.5402999999999416e-05, 4.494400000000162e-05, 4.513800000000012e-05, 4.526399999999972e-05, 4.547200000000126e-05, 4.492999999999858e-05, 4.479099999999889e-05, 4.49999999999999e-05, 4.525000000000015e-05, 4.5209000000000915e-05, 4.5167000000002205e-05, 4.495800000000119e-05, 4.579199999999936e-05, 4.577800000000326e-05, 4.532000000000147e-05, 4.5597000000001386e-05, 4.53329999999981e-05, 4.4930999999998056e-05, 4.530599999999843e-05, 4.577799999999979e-05, 4.5180999999998306e-05, 4.4944999999997626e-05, 4.494400000000162e-05, 4.482000000000097e-05, 4.494400000000162e-05, 4.548599999999736e-05, 4.504099999999914e-05, 4.4819000000001497e-05, 4.4874999999999776e-05, 4.5625000000000526e-05, 4.5111000000000456e-05, 4.4874999999999776e-05, 4.498600000000033e-05, 4.5652999999999666e-05, 4.530599999999843e-05, 4.5152999999999166e-05, 4.552799999999954e-05, 4.508299999999785e-05, 4.4833000000001066e-05]</msg>
<status status="PASS" starttime="20201110 08:40:59.949" endtime="20201110 08:40:59.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.944" endtime="20201110 08:40:59.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.954" endtime="20201110 08:40:59.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:59.957" endtime="20201110 08:40:59.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.956" endtime="20201110 08:40:59.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.952" endtime="20201110 08:40:59.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.587" endtime="20201110 08:40:59.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.587" endtime="20201110 08:40:59.978"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.987" endtime="20201110 08:41:00.005"></status>
</kw>
<msg timestamp="20201110 08:41:00.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:40:59.985" endtime="20201110 08:41:00.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:00.006" endtime="20201110 08:41:00.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.009" endtime="20201110 08:41:00.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.983" endtime="20201110 08:41:00.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.981" endtime="20201110 08:41:00.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.018" endtime="20201110 08:41:00.303"></status>
</kw>
<msg timestamp="20201110 08:41:00.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020756319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:00.017" endtime="20201110 08:41:00.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020756319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:00.307" endtime="20201110 08:41:00.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.316" endtime="20201110 08:41:00.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.014" endtime="20201110 08:41:00.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.013" endtime="20201110 08:41:00.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:00.322" level="INFO">${RESULT} = [{'time': 0.020802417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.609800000000136e-05, 'source_diff': 4.609800000000136e-05}, {'time': 0.020851431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:00.319" endtime="20201110 08:41:00.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:00.336" level="INFO">${ACCURACY} = {'time': [0.020802417, 0.020851431, 0.020899417, 0.0209495, 0.020998431, 0.021047472, 0.021096472, 0.021147458, 0.021198458, 0.021248458, 0.021298486, 0.021346472, 0.021398472, 0.0214465, 0.021496486,...</msg>
<status status="PASS" starttime="20201110 08:41:00.323" endtime="20201110 08:41:00.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.340" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:41:00.339" endtime="20201110 08:41:00.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.342" level="INFO">VALUE: [4.609800000000136e-05, 4.602800000000004e-05, 4.5944999999998626e-05, 4.631899999999953e-05, 4.6181000000002775e-05, 4.6389000000000846e-05, 4.676400000000122e-05, 4.592999999999958e-05, 4.665200000000119e-05, 4.580500000000293e-05, 4.61529999999967e-05, 4.579099999999989e-05, 4.622200000000201e-05, 4.594399999999915e-05, 4.612499999999756e-05, 4.6125000000001026e-05, 4.594399999999915e-05, 4.6403000000000416e-05, 4.6333000000002567e-05, 4.58199999999985e-05, 4.5847000000001636e-05, 4.6430999999999556e-05, 4.623600000000158e-05, 4.5930999999999056e-05, 4.677700000000132e-05, 4.663899999999763e-05, 4.608299999999885e-05, 4.637499999999781e-05, 4.6097000000001886e-05, 4.615200000000069e-05, 4.665199999999772e-05, 4.663899999999763e-05, 4.5861000000001206e-05, 4.597200000000176e-05, 4.668000000000033e-05, 4.577799999999979e-05, 4.677800000000079e-05, 4.6180999999999306e-05, 4.654200000000011e-05, 4.580599999999893e-05, 4.633399999999857e-05, 4.602800000000004e-05, 4.580599999999893e-05, 4.5916999999999486e-05, 4.584799999999764e-05, 4.647199999999879e-05, 4.620799999999897e-05, 4.579199999999936e-05, 4.58199999999985e-05, 4.668000000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:41:00.341" endtime="20201110 08:41:00.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.336" endtime="20201110 08:41:00.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.346" endtime="20201110 08:41:00.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:00.349" endtime="20201110 08:41:00.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.348" endtime="20201110 08:41:00.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.344" endtime="20201110 08:41:00.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.979" endtime="20201110 08:41:00.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:59.979" endtime="20201110 08:41:00.370"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.379" endtime="20201110 08:41:00.394"></status>
</kw>
<msg timestamp="20201110 08:41:00.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:00.377" endtime="20201110 08:41:00.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:00.395" endtime="20201110 08:41:00.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.398" endtime="20201110 08:41:00.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.375" endtime="20201110 08:41:00.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.373" endtime="20201110 08:41:00.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.408" endtime="20201110 08:41:00.692"></status>
</kw>
<msg timestamp="20201110 08:41:00.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:00.406" endtime="20201110 08:41:00.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:00.696" endtime="20201110 08:41:00.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.705" endtime="20201110 08:41:00.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.403" endtime="20201110 08:41:00.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.402" endtime="20201110 08:41:00.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:00.711" level="INFO">${RESULT} = [{'time': 0.019703806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7223000000002485e-05, 'source_diff': 4.7223000000002485e-05}, {'time': 0.019753806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:00.708" endtime="20201110 08:41:00.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:00.725" level="INFO">${ACCURACY} = {'time': [0.019703806, 0.019753806, 0.019805875, 0.019857847, 0.019908819, 0.019961847, 0.020011861, 0.020063847, 0.020115847, 0.020167847, 0.020218861, 0.020270861, 0.020321875, 0.020373875, 0.020424...</msg>
<status status="PASS" starttime="20201110 08:41:00.712" endtime="20201110 08:41:00.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.729" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:41:00.728" endtime="20201110 08:41:00.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.731" level="INFO">VALUE: [4.7223000000002485e-05, 4.730600000000043e-05, 4.70000000000019e-05, 4.755500000000121e-05, 4.705500000000071e-05, 4.751400000000197e-05, 4.697199999999929e-05, 4.718000000000083e-05, 4.745800000000022e-05, 4.709699999999942e-05, 4.7653000000001666e-05, 4.697200000000276e-05, 4.776399999999875e-05, 4.776399999999875e-05, 4.726400000000172e-05, 4.7695000000000376e-05, 4.7458999999999696e-05, 4.701400000000147e-05, 4.6944999999999626e-05, 4.730600000000043e-05, 4.7237000000002055e-05, 4.679200000000036e-05, 4.748600000000283e-05, 4.6875000000001776e-05, 4.681900000000003e-05, 4.73330000000001e-05, 4.741600000000151e-05, 4.76940000000009e-05, 4.720799999999997e-05, 4.773599999999961e-05, 4.772200000000004e-05, 4.75139999999985e-05, 4.681900000000003e-05, 4.702799999999757e-05, 4.687499999999831e-05, 4.737499999999881e-05, 4.704200000000061e-05, 4.734699999999967e-05, 4.762499999999906e-05, 4.68199999999995e-05, 4.757000000000025e-05, 4.699999999999843e-05, 4.7708999999999946e-05, 4.7695000000000376e-05, 4.76529999999982e-05, 4.729099999999792e-05, 4.762499999999906e-05, 4.694400000000015e-05, 4.7597000000003387e-05, 4.726399999999825e-05]</msg>
<status status="PASS" starttime="20201110 08:41:00.730" endtime="20201110 08:41:00.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.725" endtime="20201110 08:41:00.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.735" endtime="20201110 08:41:00.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:00.738" endtime="20201110 08:41:00.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.737" endtime="20201110 08:41:00.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.733" endtime="20201110 08:41:00.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.371" endtime="20201110 08:41:00.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.371" endtime="20201110 08:41:00.760"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.769" endtime="20201110 08:41:00.786"></status>
</kw>
<msg timestamp="20201110 08:41:00.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:00.767" endtime="20201110 08:41:00.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:00.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:00.787" endtime="20201110 08:41:00.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.790" endtime="20201110 08:41:00.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.765" endtime="20201110 08:41:00.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.762" endtime="20201110 08:41:00.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:00.800" endtime="20201110 08:41:01.085"></status>
</kw>
<msg timestamp="20201110 08:41:01.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:00.798" endtime="20201110 08:41:01.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021075722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.090" endtime="20201110 08:41:01.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.098" endtime="20201110 08:41:01.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.796" endtime="20201110 08:41:01.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.794" endtime="20201110 08:41:01.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:01.104" level="INFO">${RESULT} = [{'time': 0.021075722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859700000000092e-05, 'source_diff': 4.859700000000092e-05}, {'time': 0.021129722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:01.101" endtime="20201110 08:41:01.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:01.119" level="INFO">${ACCURACY} = {'time': [0.021075722, 0.021129722, 0.02118075, 0.021233736, 0.021286736, 0.02133875, 0.02139275, 0.021444764, 0.021497764, 0.021551778, 0.021602847, 0.021656778, 0.021708792, 0.021759792, 0.021813819...</msg>
<status status="PASS" starttime="20201110 08:41:01.106" endtime="20201110 08:41:01.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.123" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:41:01.122" endtime="20201110 08:41:01.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.126" level="INFO">VALUE: [4.859700000000092e-05, 4.85139999999995e-05, 4.862500000000006e-05, 4.798599999999986e-05, 4.8167000000001736e-05, 4.86529999999992e-05, 4.818099999999784e-05, 4.847200000000079e-05, 4.823600000000011e-05, 4.8459000000000696e-05, 4.820800000000097e-05, 4.8695000000001376e-05, 4.85139999999995e-05, 4.8709000000000946e-05, 4.818000000000183e-05, 4.8375000000003276e-05, 4.8125000000003026e-05, 4.868000000000233e-05, 4.827699999999935e-05, 4.829099999999892e-05, 4.861100000000049e-05, 4.798599999999986e-05, 4.824999999999968e-05, 4.872199999999757e-05, 4.8431000000001556e-05, 4.7889000000002346e-05, 4.823600000000011e-05, 4.78330000000006e-05, 4.847200000000079e-05, 4.829200000000186e-05, 4.8389000000002846e-05, 4.780600000000093e-05, 4.855600000000168e-05, 4.854199999999864e-05, 4.876399999999975e-05, 4.869399999999843e-05, 4.8639000000003096e-05, 4.838899999999938e-05, 4.876300000000028e-05, 4.862500000000006e-05, 4.876399999999975e-05, 4.818000000000183e-05, 4.8459000000000696e-05, 4.794400000000115e-05, 4.837499999999981e-05, 4.819399999999793e-05, 4.823600000000011e-05, 4.804200000000161e-05, 4.779200000000136e-05, 4.7903000000001916e-05]</msg>
<status status="PASS" starttime="20201110 08:41:01.125" endtime="20201110 08:41:01.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.120" endtime="20201110 08:41:01.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.129" endtime="20201110 08:41:01.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:01.133" endtime="20201110 08:41:01.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.131" endtime="20201110 08:41:01.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.128" endtime="20201110 08:41:01.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.761" endtime="20201110 08:41:01.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:00.760" endtime="20201110 08:41:01.154"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.162" endtime="20201110 08:41:01.180"></status>
</kw>
<msg timestamp="20201110 08:41:01.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:01.161" endtime="20201110 08:41:01.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:01.181" endtime="20201110 08:41:01.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.184" endtime="20201110 08:41:01.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.158" endtime="20201110 08:41:01.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.156" endtime="20201110 08:41:01.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.194" endtime="20201110 08:41:01.478"></status>
</kw>
<msg timestamp="20201110 08:41:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.192" endtime="20201110 08:41:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020546167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.483" endtime="20201110 08:41:01.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.491" endtime="20201110 08:41:01.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.190" endtime="20201110 08:41:01.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.188" endtime="20201110 08:41:01.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:01.498" level="INFO">${RESULT} = [{'time': 0.020595625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.945799999999875e-05, 'source_diff': 4.945799999999875e-05}, {'time': 0.020647667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:01.494" endtime="20201110 08:41:01.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:01.511" level="INFO">${ACCURACY} = {'time': [0.020595625, 0.020647667, 0.020699625, 0.020751625, 0.020803625, 0.020855667, 0.020909653, 0.020961653, 0.021014653, 0.021066667, 0.021120667, 0.021174736, 0.021229681, 0.021283681, 0.021335...</msg>
<status status="PASS" starttime="20201110 08:41:01.499" endtime="20201110 08:41:01.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.516" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:41:01.514" endtime="20201110 08:41:01.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.518" level="INFO">VALUE: [4.945799999999875e-05, 4.8959000000001196e-05, 4.895799999999825e-05, 4.908299999999838e-05, 4.9014e-05, 4.9223000000001016e-05, 4.925000000000068e-05, 4.926400000000025e-05, 4.954199999999964e-05, 4.948600000000136e-05, 4.911099999999752e-05, 4.887500000000031e-05, 4.958400000000182e-05, 4.976399999999728e-05, 4.919399999999893e-05, 4.9637999999997684e-05, 4.956899999999931e-05, 4.8903000000002916e-05, 4.979199999999989e-05, 4.967999999999986e-05, 4.959700000000192e-05, 4.966699999999977e-05, 4.892999999999911e-05, 4.887500000000031e-05, 4.945800000000222e-05, 4.972200000000204e-05, 4.9014e-05, 4.9459000000001696e-05, 4.8945000000001626e-05, 4.968099999999934e-05, 4.911099999999752e-05, 4.913900000000013e-05, 4.927799999999982e-05, 4.941699999999952e-05, 4.973599999999814e-05, 4.972200000000204e-05, 4.941600000000004e-05, 4.919399999999893e-05, 4.891699999999902e-05, 4.906899999999881e-05, 4.930499999999949e-05, 4.917999999999936e-05, 4.917999999999936e-05, 4.9417000000002986e-05, 4.911100000000099e-05, 4.96530000000002e-05, 4.8945000000001626e-05, 4.877799999999932e-05, 4.949999999999746e-05, 4.976400000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:41:01.517" endtime="20201110 08:41:01.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.512" endtime="20201110 08:41:01.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.522" endtime="20201110 08:41:01.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:01.525" endtime="20201110 08:41:01.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.523" endtime="20201110 08:41:01.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.520" endtime="20201110 08:41:01.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.155" endtime="20201110 08:41:01.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.154" endtime="20201110 08:41:01.546"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.554" endtime="20201110 08:41:01.570"></status>
</kw>
<msg timestamp="20201110 08:41:01.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:01.553" endtime="20201110 08:41:01.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:01.572" endtime="20201110 08:41:01.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.574" endtime="20201110 08:41:01.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.550" endtime="20201110 08:41:01.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.548" endtime="20201110 08:41:01.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.585" endtime="20201110 08:41:01.875"></status>
</kw>
<msg timestamp="20201110 08:41:01.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.583" endtime="20201110 08:41:01.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.885" endtime="20201110 08:41:01.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.904" endtime="20201110 08:41:01.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.580" endtime="20201110 08:41:01.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.578" endtime="20201110 08:41:01.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:01.919" level="INFO">${RESULT} = [{'time': 0.019725944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.059699999999945e-05, 'source_diff': 5.059699999999945e-05}, {'time': 0.019777958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:01.911" endtime="20201110 08:41:01.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:01.950" level="INFO">${ACCURACY} = {'time': [0.019725944, 0.019777958, 0.019831958, 0.019886972, 0.019940958, 0.019995958, 0.020050986, 0.020103972, 0.020159, 0.020211986, 0.020265, 0.020318, 0.020373014, 0.020428028, 0.020481014, 0.02...</msg>
<status status="PASS" starttime="20201110 08:41:01.921" endtime="20201110 08:41:01.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.959" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:41:01.957" endtime="20201110 08:41:01.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.964" level="INFO">VALUE: [5.059699999999945e-05, 4.987500000000131e-05, 4.990200000000097e-05, 5.079099999999795e-05, 5.077700000000185e-05, 5.034700000000267e-05, 4.983299999999913e-05, 5.012500000000156e-05, 5.006899999999981e-05, 4.995800000000272e-05, 5.026399999999778e-05, 5.043100000000009e-05, 5.069499999999991e-05, 5.059699999999945e-05, 5.006999999999928e-05, 5.031999999999953e-05, 5.026400000000125e-05, 5.016600000000079e-05, 5.006999999999928e-05, 5.025000000000168e-05, 5.033400000000257e-05, 5.055499999999727e-05, 5.076399999999828e-05, 5.03469999999992e-05, 5.059699999999945e-05, 5.052800000000107e-05, 5.031900000000006e-05, 5.041600000000104e-05, 5.061099999999902e-05, 4.994399999999968e-05, 4.986100000000174e-05, 4.998600000000186e-05, 5.016600000000079e-05, 4.98469999999987e-05, 4.980600000000293e-05, 5.031999999999953e-05, 4.98200000000025e-05, 5.054200000000064e-05, 5.06530000000012e-05, 4.986200000000121e-05, 5.070899999999948e-05, 5.022199999999907e-05, 5.011099999999852e-05, 4.9888000000001403e-05, 5.048599999999889e-05, 4.977700000000085e-05, 5.030500000000049e-05, 4.98469999999987e-05, 5.019399999999993e-05, 5.055599999999674e-05]</msg>
<status status="PASS" starttime="20201110 08:41:01.961" endtime="20201110 08:41:01.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.951" endtime="20201110 08:41:01.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.969" endtime="20201110 08:41:01.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:01.972" endtime="20201110 08:41:01.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.971" endtime="20201110 08:41:01.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.967" endtime="20201110 08:41:01.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.547" endtime="20201110 08:41:01.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.546" endtime="20201110 08:41:01.993"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.002" endtime="20201110 08:41:02.019"></status>
</kw>
<msg timestamp="20201110 08:41:02.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.000" endtime="20201110 08:41:02.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.020" endtime="20201110 08:41:02.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.023" endtime="20201110 08:41:02.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.998" endtime="20201110 08:41:02.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.996" endtime="20201110 08:41:02.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.033" endtime="20201110 08:41:02.320"></status>
</kw>
<msg timestamp="20201110 08:41:02.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:02.031" endtime="20201110 08:41:02.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:02.324" endtime="20201110 08:41:02.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.333" endtime="20201110 08:41:02.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.029" endtime="20201110 08:41:02.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.027" endtime="20201110 08:41:02.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:02.339" level="INFO">${RESULT} = [{'time': 0.020254778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1014000000002e-05, 'source_diff': 5.1014000000002e-05}, {'time': 0.020311764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:41:02.336" endtime="20201110 08:41:02.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:02.353" level="INFO">${ACCURACY} = {'time': [0.020254778, 0.020311764, 0.020366778, 0.020422778, 0.020478861, 0.020531861, 0.020586819, 0.020642833, 0.020698819, 0.020753819, 0.020809819, 0.020863847, 0.020920833, 0.020974847, 0.021028...</msg>
<status status="PASS" starttime="20201110 08:41:02.340" endtime="20201110 08:41:02.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.357" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:41:02.356" endtime="20201110 08:41:02.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.360" level="INFO">VALUE: [5.1014000000002e-05, 5.162499999999959e-05, 5.08339999999996e-05, 5.176399999999928e-05, 5.159700000000045e-05, 5.086099999999927e-05, 5.1387999999999434e-05, 5.102699999999863e-05, 5.172200000000057e-05, 5.15409999999987e-05, 5.080500000000099e-05, 5.15140000000025e-05, 5.145800000000075e-05, 5.161100000000002e-05, 5.091600000000154e-05, 5.086099999999927e-05, 5.0929999999997644e-05, 5.093100000000059e-05, 5.11669999999978e-05, 5.150000000000293e-05, 5.129200000000139e-05, 5.140300000000195e-05, 5.087499999999884e-05, 5.162500000000306e-05, 5.143100000000109e-05, 5.158400000000035e-05, 5.120899999999998e-05, 5.101399999999853e-05, 5.099999999999896e-05, 5.145800000000075e-05, 5.0929999999997644e-05, 5.136099999999977e-05, 5.123599999999964e-05, 5.133300000000063e-05, 5.137499999999934e-05, 5.149999999999946e-05, 5.1429999999998144e-05, 5.136099999999977e-05, 5.172200000000057e-05, 5.118099999999737e-05, 5.176399999999928e-05, 5.145800000000075e-05, 5.154200000000164e-05, 5.159799999999992e-05, 5.094500000000016e-05, 5.145900000000023e-05, 5.10279999999981e-05, 5.083400000000307e-05, 5.131900000000106e-05, 5.106900000000081e-05]</msg>
<status status="PASS" starttime="20201110 08:41:02.358" endtime="20201110 08:41:02.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.354" endtime="20201110 08:41:02.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.373" endtime="20201110 08:41:02.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:02.377" endtime="20201110 08:41:02.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.376" endtime="20201110 08:41:02.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.372" endtime="20201110 08:41:02.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.994" endtime="20201110 08:41:02.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.994" endtime="20201110 08:41:02.398"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.407" endtime="20201110 08:41:02.424"></status>
</kw>
<msg timestamp="20201110 08:41:02.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.405" endtime="20201110 08:41:02.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.426" endtime="20201110 08:41:02.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.428" endtime="20201110 08:41:02.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.403" endtime="20201110 08:41:02.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.400" endtime="20201110 08:41:02.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.438" endtime="20201110 08:41:02.724"></status>
</kw>
<msg timestamp="20201110 08:41:02.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:02.437" endtime="20201110 08:41:02.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:02.728" endtime="20201110 08:41:02.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.736" endtime="20201110 08:41:02.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.434" endtime="20201110 08:41:02.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.432" endtime="20201110 08:41:02.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:02.743" level="INFO">${RESULT} = [{'time': 0.019915889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.198600000000039e-05, 'source_diff': 5.198600000000039e-05}, {'time': 0.019973917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:02.740" endtime="20201110 08:41:02.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:02.758" level="INFO">${ACCURACY} = {'time': [0.019915889, 0.019973917, 0.020028903, 0.020083917, 0.020138917, 0.020194931, 0.020249944, 0.020305931, 0.020362944, 0.020416972, 0.020472, 0.020526958, 0.020581986, 0.020637, 0.020691986, 0...</msg>
<status status="PASS" starttime="20201110 08:41:02.744" endtime="20201110 08:41:02.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.762" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:41:02.761" endtime="20201110 08:41:02.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.765" level="INFO">VALUE: [5.198600000000039e-05, 5.241699999999905e-05, 5.237500000000034e-05, 5.208400000000085e-05, 5.208400000000085e-05, 5.194499999999769e-05, 5.2679999999999394e-05, 5.223700000000012e-05, 5.269400000000243e-05, 5.181899999999809e-05, 5.25279999999996e-05, 5.195800000000125e-05, 5.227799999999935e-05, 5.256899999999884e-05, 5.212500000000009e-05, 5.222200000000107e-05, 5.277799999999985e-05, 5.2014000000003e-05, 5.18470000000007e-05, 5.23470000000012e-05, 5.269499999999844e-05, 5.25279999999996e-05, 5.247200000000132e-05, 5.194500000000116e-05, 5.273699999999715e-05, 5.245899999999776e-05, 5.225000000000021e-05, 5.247200000000132e-05, 5.194500000000116e-05, 5.2652000000000254e-05, 5.277700000000038e-05, 5.199999999999996e-05, 5.248600000000089e-05, 5.223600000000064e-05, 5.181900000000156e-05, 5.218000000000236e-05, 5.277800000000332e-05, 5.255600000000221e-05, 5.243099999999862e-05, 5.186100000000027e-05, 5.269499999999844e-05, 5.213899999999966e-05, 5.218099999999837e-05, 5.268099999999887e-05, 5.215299999999923e-05, 5.245900000000123e-05, 5.187499999999984e-05, 5.218000000000236e-05, 5.18470000000007e-05, 5.279200000000289e-05]</msg>
<status status="PASS" starttime="20201110 08:41:02.763" endtime="20201110 08:41:02.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.759" endtime="20201110 08:41:02.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.768" endtime="20201110 08:41:02.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:02.772" endtime="20201110 08:41:02.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.770" endtime="20201110 08:41:02.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.767" endtime="20201110 08:41:02.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.399" endtime="20201110 08:41:02.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.398" endtime="20201110 08:41:02.793"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.802" endtime="20201110 08:41:02.819"></status>
</kw>
<msg timestamp="20201110 08:41:02.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.800" endtime="20201110 08:41:02.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:02.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:02.820" endtime="20201110 08:41:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.823" endtime="20201110 08:41:02.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.798" endtime="20201110 08:41:02.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.795" endtime="20201110 08:41:02.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:02.833" endtime="20201110 08:41:03.120"></status>
</kw>
<msg timestamp="20201110 08:41:03.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:02.831" endtime="20201110 08:41:03.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:03.124" endtime="20201110 08:41:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.132" endtime="20201110 08:41:03.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.829" endtime="20201110 08:41:03.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.827" endtime="20201110 08:41:03.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:03.139" level="INFO">${RESULT} = [{'time': 0.020158597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.348600000000189e-05, 'source_diff': 5.348600000000189e-05}, {'time': 0.020217583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:03.136" endtime="20201110 08:41:03.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:03.152" level="INFO">${ACCURACY} = {'time': [0.020158597, 0.020217583, 0.020275597, 0.020332611, 0.020389611, 0.020445611, 0.020504611, 0.020560694, 0.020617639, 0.020674667, 0.020731653, 0.020788653, 0.020847653, 0.020903722, 0.020959...</msg>
<status status="PASS" starttime="20201110 08:41:03.140" endtime="20201110 08:41:03.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.157" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:41:03.156" endtime="20201110 08:41:03.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.159" level="INFO">VALUE: [5.348600000000189e-05, 5.348600000000189e-05, 5.35280000000006e-05, 5.312500000000109e-05, 5.281899999999909e-05, 5.290299999999998e-05, 5.3193999999999464e-05, 5.361100000000202e-05, 5.306999999999881e-05, 5.351400000000103e-05, 5.343099999999962e-05, 5.294500000000216e-05, 5.35280000000006e-05, 5.35410000000007e-05, 5.361100000000202e-05, 5.294499999999869e-05, 5.359799999999845e-05, 5.301300000000106e-05, 5.338900000000091e-05, 5.283300000000213e-05, 5.283299999999866e-05, 5.305499999999977e-05, 5.312500000000109e-05, 5.312500000000109e-05, 5.28470000000017e-05, 5.31669999999998e-05, 5.281899999999909e-05, 5.323600000000164e-05, 5.341700000000005e-05, 5.3235999999998174e-05, 5.370899999999901e-05, 5.356899999999984e-05, 5.3499999999997994e-05, 5.33479999999982e-05, 5.300000000000096e-05, 5.323700000000112e-05, 5.3207999999999034e-05, 5.2902000000000504e-05, 5.306899999999934e-05, 5.327700000000088e-05, 5.294500000000216e-05, 5.3166000000000324e-05, 5.377800000000085e-05, 5.283399999999813e-05, 5.3777999999997383e-05, 5.362500000000159e-05, 5.2957999999998784e-05, 5.334699999999873e-05, 5.326400000000078e-05, 5.338900000000091e-05]</msg>
<status status="PASS" starttime="20201110 08:41:03.158" endtime="20201110 08:41:03.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.153" endtime="20201110 08:41:03.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.163" endtime="20201110 08:41:03.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:03.166" endtime="20201110 08:41:03.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.165" endtime="20201110 08:41:03.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.161" endtime="20201110 08:41:03.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.794" endtime="20201110 08:41:03.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:02.793" endtime="20201110 08:41:03.187"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.196" endtime="20201110 08:41:03.212"></status>
</kw>
<msg timestamp="20201110 08:41:03.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:03.194" endtime="20201110 08:41:03.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:03.214" endtime="20201110 08:41:03.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.216" endtime="20201110 08:41:03.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.192" endtime="20201110 08:41:03.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.190" endtime="20201110 08:41:03.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.226" endtime="20201110 08:41:03.526"></status>
</kw>
<msg timestamp="20201110 08:41:03.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:03.225" endtime="20201110 08:41:03.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:03.530" endtime="20201110 08:41:03.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.538" endtime="20201110 08:41:03.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.222" endtime="20201110 08:41:03.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.220" endtime="20201110 08:41:03.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:03.545" level="INFO">${RESULT} = [{'time': 0.019801861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4708000000000534e-05, 'source_diff': 5.4708000000000534e-05}, {'time': 0.019858875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:03.542" endtime="20201110 08:41:03.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:03.558" level="INFO">${ACCURACY} = {'time': [0.019801861, 0.019858875, 0.019915875, 0.019975875, 0.020033889, 0.020092889, 0.020149903, 0.020206917, 0.020264903, 0.020323917, 0.020382917, 0.020439944, 0.020495931, 0.020555944, 0.020613...</msg>
<status status="PASS" starttime="20201110 08:41:03.546" endtime="20201110 08:41:03.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.563" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:41:03.562" endtime="20201110 08:41:03.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.565" level="INFO">VALUE: [5.4708000000000534e-05, 5.390300000000098e-05, 5.408299999999991e-05, 5.451400000000203e-05, 5.437499999999887e-05, 5.377800000000085e-05, 5.4221999999999604e-05, 5.451400000000203e-05, 5.454200000000117e-05, 5.405600000000024e-05, 5.45280000000016e-05, 5.4208000000000034e-05, 5.38479999999987e-05, 5.4387999999998965e-05, 5.475000000000271e-05, 5.426400000000178e-05, 5.4485999999999424e-05, 5.3943999999996745e-05, 5.4208000000000034e-05, 5.465300000000173e-05, 5.4485999999999424e-05, 5.379200000000042e-05, 5.4458000000000284e-05, 5.4735999999999674e-05, 5.438900000000191e-05, 5.426400000000178e-05, 5.437499999999887e-05, 5.398600000000239e-05, 5.384800000000217e-05, 5.430600000000049e-05, 5.411199999999852e-05, 5.455600000000074e-05, 5.4180000000000894e-05, 5.4735999999999674e-05, 5.427800000000135e-05, 5.461099999999955e-05, 5.4415999999998105e-05, 5.451400000000203e-05, 5.402699999999816e-05, 5.465300000000173e-05, 5.408299999999991e-05, 5.3985999999998924e-05, 5.448600000000289e-05, 5.469500000000044e-05, 5.472299999999958e-05, 5.440299999999801e-05, 5.401400000000153e-05, 5.46809999999974e-05, 5.430600000000049e-05, 5.476400000000228e-05]</msg>
<status status="PASS" starttime="20201110 08:41:03.564" endtime="20201110 08:41:03.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.559" endtime="20201110 08:41:03.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.569" endtime="20201110 08:41:03.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:03.572" endtime="20201110 08:41:03.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.571" endtime="20201110 08:41:03.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.567" endtime="20201110 08:41:03.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.188" endtime="20201110 08:41:03.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.187" endtime="20201110 08:41:03.593"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.602" endtime="20201110 08:41:03.618"></status>
</kw>
<msg timestamp="20201110 08:41:03.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:03.600" endtime="20201110 08:41:03.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:03.620" endtime="20201110 08:41:03.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.622" endtime="20201110 08:41:03.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.598" endtime="20201110 08:41:03.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.596" endtime="20201110 08:41:03.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.632" endtime="20201110 08:41:03.918"></status>
</kw>
<msg timestamp="20201110 08:41:03.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:03.631" endtime="20201110 08:41:03.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:03.922" endtime="20201110 08:41:03.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.930" endtime="20201110 08:41:03.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.628" endtime="20201110 08:41:03.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.626" endtime="20201110 08:41:03.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:03.937" level="INFO">${RESULT} = [{'time': 0.019811403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.484700000000023e-05, 'source_diff': 5.484700000000023e-05}, {'time': 0.019868417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:03.934" endtime="20201110 08:41:03.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:03.950" level="INFO">${ACCURACY} = {'time': [0.019811403, 0.019868417, 0.019928444, 0.019986444, 0.020045444, 0.020105431, 0.020164458, 0.0202235, 0.020282444, 0.020341458, 0.020400472, 0.020459472, 0.020518472, 0.020579528, 0.0206405,...</msg>
<status status="PASS" starttime="20201110 08:41:03.938" endtime="20201110 08:41:03.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.955" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:41:03.954" endtime="20201110 08:41:03.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.957" level="INFO">VALUE: [5.484700000000023e-05, 5.48609999999998e-05, 5.558300000000141e-05, 5.5707999999998065e-05, 5.5151999999999285e-05, 5.570900000000101e-05, 5.4901999999999035e-05, 5.509699999999701e-05, 5.5165999999998855e-05, 5.534700000000073e-05, 5.487499999999937e-05, 5.5722000000001104e-05, 5.483300000000066e-05, 5.561100000000055e-05, 5.5291999999998453e-05, 5.5693999999998495e-05, 5.5693999999998495e-05, 5.5499999999999994e-05, 5.5721999999997635e-05, 5.540299999999901e-05, 5.5499999999999994e-05, 5.520900000000051e-05, 5.530600000000149e-05, 5.507000000000081e-05, 5.53480000000002e-05, 5.558300000000141e-05, 5.562500000000012e-05, 5.480500000000152e-05, 5.5694000000001964e-05, 5.483300000000066e-05, 5.530500000000202e-05, 5.5443999999998245e-05, 5.559700000000098e-05, 5.508300000000091e-05, 5.5236000000000174e-05, 5.477700000000238e-05, 5.565299999999926e-05, 5.50280000000021e-05, 5.5750000000000244e-05, 5.562500000000012e-05, 5.543099999999815e-05, 5.554099999999923e-05, 5.483400000000013e-05, 5.5721999999997635e-05, 5.5458000000001284e-05, 5.561100000000055e-05, 5.4999999999999494e-05, 5.484700000000023e-05, 5.5429999999998675e-05, 5.565299999999926e-05]</msg>
<status status="PASS" starttime="20201110 08:41:03.956" endtime="20201110 08:41:03.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.951" endtime="20201110 08:41:03.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.961" endtime="20201110 08:41:03.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:03.964" endtime="20201110 08:41:03.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.963" endtime="20201110 08:41:03.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.959" endtime="20201110 08:41:03.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.594" endtime="20201110 08:41:03.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.594" endtime="20201110 08:41:03.985"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.994" endtime="20201110 08:41:04.010"></status>
</kw>
<msg timestamp="20201110 08:41:04.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:03.992" endtime="20201110 08:41:04.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:04.012" endtime="20201110 08:41:04.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.014" endtime="20201110 08:41:04.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.990" endtime="20201110 08:41:04.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.988" endtime="20201110 08:41:04.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.024" endtime="20201110 08:41:04.309"></status>
</kw>
<msg timestamp="20201110 08:41:04.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.022" endtime="20201110 08:41:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.313" endtime="20201110 08:41:04.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.322" endtime="20201110 08:41:04.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.020" endtime="20201110 08:41:04.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.018" endtime="20201110 08:41:04.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:04.328" level="INFO">${RESULT} = [{'time': 0.020070944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.676300000000134e-05, 'source_diff': 5.676300000000134e-05}, {'time': 0.020130972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:04.325" endtime="20201110 08:41:04.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:04.343" level="INFO">${ACCURACY} = {'time': [0.020070944, 0.020130972, 0.020190972, 0.020251986, 0.020313972, 0.020373986, 0.020433986, 0.020493, 0.020554014, 0.020614014, 0.020675042, 0.020736014, 0.020797083, 0.020858056, 0.020919056...</msg>
<status status="PASS" starttime="20201110 08:41:04.329" endtime="20201110 08:41:04.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.347" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:41:04.346" endtime="20201110 08:41:04.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.350" level="INFO">VALUE: [5.676300000000134e-05, 5.6736000000001674e-05, 5.6014000000000064e-05, 5.6471999999998385e-05, 5.658299999999894e-05, 5.6250000000000744e-05, 5.6722000000002104e-05, 5.583300000000166e-05, 5.590299999999951e-05, 5.583300000000166e-05, 5.583400000000113e-05, 5.605600000000224e-05, 5.5930000000002644e-05, 5.606999999999834e-05, 5.581999999999809e-05, 5.606999999999834e-05, 5.633400000000163e-05, 5.662500000000112e-05, 5.6666000000000355e-05, 5.6027999999999634e-05, 5.652700000000066e-05, 5.659699999999851e-05, 5.6027999999999634e-05, 5.665300000000026e-05, 5.658299999999894e-05, 5.618100000000237e-05, 5.587500000000037e-05, 5.6222000000001604e-05, 5.6291999999999454e-05, 5.6486000000001424e-05, 5.6305999999999023e-05, 5.591699999999908e-05, 5.612500000000062e-05, 5.633399999999816e-05, 5.640300000000001e-05, 5.626299999999737e-05, 5.583299999999819e-05, 5.606999999999834e-05, 5.5958000000001784e-05, 5.6679999999999925e-05, 5.6000000000000494e-05, 5.656899999999937e-05, 5.630600000000249e-05, 5.6693999999999495e-05, 5.5791999999998954e-05, 5.663900000000069e-05, 5.594500000000169e-05, 5.6000000000000494e-05, 5.658399999999841e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201110 08:41:04.348" endtime="20201110 08:41:04.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.344" endtime="20201110 08:41:04.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.353" endtime="20201110 08:41:04.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:04.357" endtime="20201110 08:41:04.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.355" endtime="20201110 08:41:04.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.352" endtime="20201110 08:41:04.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.986" endtime="20201110 08:41:04.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.986" endtime="20201110 08:41:04.378"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.386" endtime="20201110 08:41:04.403"></status>
</kw>
<msg timestamp="20201110 08:41:04.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:04.385" endtime="20201110 08:41:04.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:04.405" endtime="20201110 08:41:04.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.407" endtime="20201110 08:41:04.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.382" endtime="20201110 08:41:04.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.380" endtime="20201110 08:41:04.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.417" endtime="20201110 08:41:04.702"></status>
</kw>
<msg timestamp="20201110 08:41:04.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.416" endtime="20201110 08:41:04.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020284097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.707" endtime="20201110 08:41:04.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.715" endtime="20201110 08:41:04.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.413" endtime="20201110 08:41:04.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.411" endtime="20201110 08:41:04.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:04.721" level="INFO">${RESULT} = [{'time': 0.020341597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7499999999998525e-05, 'source_diff': 5.7499999999998525e-05}, {'time': 0.020403583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:04.718" endtime="20201110 08:41:04.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:04.735" level="INFO">${ACCURACY} = {'time': [0.020341597, 0.020403583, 0.020464597, 0.020525653, 0.020585611, 0.020646639, 0.020709625, 0.020770625, 0.020832653, 0.020894667, 0.020957653, 0.021019694, 0.021079667, 0.021140667, 0.021202...</msg>
<status status="PASS" starttime="20201110 08:41:04.722" endtime="20201110 08:41:04.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.739" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:41:04.738" endtime="20201110 08:41:04.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.742" level="INFO">VALUE: [5.7499999999998525e-05, 5.68749999999979e-05, 5.7666000000001355e-05, 5.7000000000001494e-05, 5.684699999999876e-05, 5.73610000000023e-05, 5.7221999999999135e-05, 5.7000000000001494e-05, 5.741700000000058e-05, 5.7556000000000274e-05, 5.7499999999998525e-05, 5.701299999999812e-05, 5.683399999999866e-05, 5.694499999999922e-05, 5.7430000000000675e-05, 5.7652000000001785e-05, 5.759699999999951e-05, 5.688899999999747e-05, 5.680500000000005e-05, 5.713899999999772e-05, 5.7749999999998775e-05, 5.704100000000073e-05, 5.713900000000119e-05, 5.709699999999901e-05, 5.7069999999999343e-05, 5.758299999999994e-05, 5.740300000000101e-05, 5.690300000000051e-05, 5.733299999999969e-05, 5.736099999999883e-05, 5.7514000000001564e-05, 5.730500000000055e-05, 5.7083999999998913e-05, 5.687500000000137e-05, 5.711099999999858e-05, 5.7666000000001355e-05, 5.7193999999999995e-05, 5.7708000000000065e-05, 5.713900000000119e-05, 5.75550000000008e-05, 5.7471999999999385e-05, 5.7306000000000024e-05, 5.7583999999999413e-05, 5.7735999999999205e-05, 5.6999999999998024e-05, 5.6985999999998455e-05, 5.719499999999947e-05, 5.7778000000001384e-05, 5.713899999999772e-05, 5.702700000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:41:04.740" endtime="20201110 08:41:04.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.736" endtime="20201110 08:41:04.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.745" endtime="20201110 08:41:04.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:04.749" endtime="20201110 08:41:04.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.747" endtime="20201110 08:41:04.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.744" endtime="20201110 08:41:04.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.378" endtime="20201110 08:41:04.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.378" endtime="20201110 08:41:04.770"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.780" endtime="20201110 08:41:04.797"></status>
</kw>
<msg timestamp="20201110 08:41:04.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:04.778" endtime="20201110 08:41:04.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:04.799" endtime="20201110 08:41:04.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.801" endtime="20201110 08:41:04.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.775" endtime="20201110 08:41:04.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.773" endtime="20201110 08:41:04.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.812" endtime="20201110 08:41:05.098"></status>
</kw>
<msg timestamp="20201110 08:41:05.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.810" endtime="20201110 08:41:05.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.102" endtime="20201110 08:41:05.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.110" endtime="20201110 08:41:05.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.807" endtime="20201110 08:41:05.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.805" endtime="20201110 08:41:05.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:05.117" level="INFO">${RESULT} = [{'time': 0.022339264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8056000000000774e-05, 'source_diff': 5.8056000000000774e-05}, {'time': 0.022402278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:05.114" endtime="20201110 08:41:05.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:05.130" level="INFO">${ACCURACY} = {'time': [0.022339264, 0.022402278, 0.022464278, 0.022525292, 0.022585306, 0.022646306, 0.022708306, 0.022771361, 0.022834319, 0.022897333, 0.022959333, 0.023020375, 0.023082361, 0.023146361, 0.023208...</msg>
<status status="PASS" starttime="20201110 08:41:05.118" endtime="20201110 08:41:05.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.135" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:41:05.134" endtime="20201110 08:41:05.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.137" level="INFO">VALUE: [5.8056000000000774e-05, 5.840300000000201e-05, 5.865300000000226e-05, 5.872300000000011e-05, 5.78619999999988e-05, 5.837500000000287e-05, 5.841700000000158e-05, 5.8042000000001204e-05, 5.852699999999919e-05, 5.8415999999998636e-05, 5.781899999999715e-05, 5.78749999999989e-05, 5.866699999999836e-05, 5.8458000000000815e-05, 5.8014000000002064e-05, 5.840300000000201e-05, 5.8736000000000205e-05, 5.8013999999998594e-05, 5.865299999999879e-05, 5.870899999999707e-05, 5.7999999999999025e-05, 5.788900000000194e-05, 5.865300000000226e-05, 5.8028000000001634e-05, 5.808300000000044e-05, 5.85550000000018e-05, 5.8471999999996915e-05, 5.8194000000000995e-05, 5.858299999999747e-05, 5.8458000000000815e-05, 5.7999999999999025e-05, 5.836099999999983e-05, 5.844499999999725e-05, 5.8056000000000774e-05, 5.795899999999979e-05, 5.8083999999999913e-05, 5.8777999999998914e-05, 5.841699999999811e-05, 5.8597999999999983e-05, 5.793100000000065e-05, 5.820900000000004e-05, 5.8320000000000594e-05, 5.8472000000000385e-05, 5.7944000000000745e-05, 5.8708000000001065e-05, 5.788899999999847e-05, 5.8306000000001024e-05, 5.863899999999922e-05, 5.784699999999976e-05, 5.781899999999715e-05]</msg>
<status status="PASS" starttime="20201110 08:41:05.136" endtime="20201110 08:41:05.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.131" endtime="20201110 08:41:05.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.141" endtime="20201110 08:41:05.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:05.145" endtime="20201110 08:41:05.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.143" endtime="20201110 08:41:05.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.139" endtime="20201110 08:41:05.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.771" endtime="20201110 08:41:05.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.770" endtime="20201110 08:41:05.166"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.174" endtime="20201110 08:41:05.191"></status>
</kw>
<msg timestamp="20201110 08:41:05.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.173" endtime="20201110 08:41:05.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.192" endtime="20201110 08:41:05.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.195" endtime="20201110 08:41:05.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.170" endtime="20201110 08:41:05.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.168" endtime="20201110 08:41:05.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.205" endtime="20201110 08:41:05.489"></status>
</kw>
<msg timestamp="20201110 08:41:05.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.203" endtime="20201110 08:41:05.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019988639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.493" endtime="20201110 08:41:05.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.501" endtime="20201110 08:41:05.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.201" endtime="20201110 08:41:05.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.199" endtime="20201110 08:41:05.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:05.508" level="INFO">${RESULT} = [{'time': 0.019988639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8957999999997845e-05, 'source_diff': 5.8957999999997845e-05}, {'time': 0.020053653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:05.505" endtime="20201110 08:41:05.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:05.521" level="INFO">${ACCURACY} = {'time': [0.019988639, 0.020053653, 0.020117653, 0.020179681, 0.020243667, 0.020305694, 0.020369681, 0.020431736, 0.020495694, 0.020556736, 0.020618736, 0.020680736, 0.020743792, 0.020806736, 0.020869...</msg>
<status status="PASS" starttime="20201110 08:41:05.509" endtime="20201110 08:41:05.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.526" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:41:05.525" endtime="20201110 08:41:05.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.528" level="INFO">VALUE: [5.8957999999997845e-05, 5.916700000000233e-05, 5.9735999999997735e-05, 5.9278000000002884e-05, 5.9098000000000483e-05, 5.9207999999998095e-05, 5.9112000000000053e-05, 5.8986000000000455e-05, 5.934699999999779e-05, 5.881899999999815e-05, 5.9207999999998095e-05, 5.938899999999997e-05, 5.943100000000215e-05, 5.959699999999804e-05, 5.913899999999972e-05, 5.9277999999999414e-05, 5.938899999999997e-05, 5.895900000000079e-05, 5.8819999999997624e-05, 5.947300000000086e-05, 5.9320000000001594e-05, 5.918099999999843e-05, 5.941699999999911e-05, 5.893100000000165e-05, 5.9138000000000246e-05, 5.9235999999997235e-05, 5.9707999999998596e-05, 5.881900000000162e-05, 5.9777999999999915e-05, 5.9193999999998526e-05, 5.93750000000004e-05, 5.938899999999997e-05, 5.9777999999999915e-05, 5.9764000000000345e-05, 5.945899999999782e-05, 5.969500000000197e-05, 5.941699999999911e-05, 5.9042000000002204e-05, 5.9306000000002024e-05, 5.9555999999998804e-05, 5.894499999999775e-05, 5.9680000000002925e-05, 5.911100000000058e-05, 5.9415999999999636e-05, 5.9429999999999206e-05, 5.9013999999999595e-05, 5.9764000000000345e-05, 5.9013999999999595e-05, 5.9764000000000345e-05, 5.890300000000251e-05]</msg>
<status status="PASS" starttime="20201110 08:41:05.527" endtime="20201110 08:41:05.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.522" endtime="20201110 08:41:05.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.532" endtime="20201110 08:41:05.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:05.535" endtime="20201110 08:41:05.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.534" endtime="20201110 08:41:05.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.530" endtime="20201110 08:41:05.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.167" endtime="20201110 08:41:05.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.166" endtime="20201110 08:41:05.556"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.565" endtime="20201110 08:41:05.583"></status>
</kw>
<msg timestamp="20201110 08:41:05.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.563" endtime="20201110 08:41:05.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.584" endtime="20201110 08:41:05.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.587" endtime="20201110 08:41:05.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.561" endtime="20201110 08:41:05.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.559" endtime="20201110 08:41:05.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.599" endtime="20201110 08:41:05.886"></status>
</kw>
<msg timestamp="20201110 08:41:05.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.598" endtime="20201110 08:41:05.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019745042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.890" endtime="20201110 08:41:05.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.898" endtime="20201110 08:41:05.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.595" endtime="20201110 08:41:05.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.593" endtime="20201110 08:41:05.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:05.905" level="INFO">${RESULT} = [{'time': 0.019805806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0763999999997875e-05, 'source_diff': 6.0763999999997875e-05}, {'time': 0.019871819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:05.901" endtime="20201110 08:41:05.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:05.919" level="INFO">${ACCURACY} = {'time': [0.019805806, 0.019871819, 0.019936833, 0.020000833, 0.020062861, 0.020128875, 0.020193861, 0.020258875, 0.020324889, 0.020389875, 0.020454889, 0.020519889, 0.020583903, 0.020646917, 0.020710...</msg>
<status status="PASS" starttime="20201110 08:41:05.906" endtime="20201110 08:41:05.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.924" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:41:05.923" endtime="20201110 08:41:05.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.926" level="INFO">VALUE: [6.0763999999997875e-05, 6.027699999999747e-05, 6.036100000000183e-05, 6.036099999999836e-05, 5.980499999999958e-05, 6.0778000000000915e-05, 6.0222000000002135e-05, 6.0249999999997805e-05, 6.041700000000011e-05, 5.9985999999997985e-05, 6.034699999999879e-05, 6.0291999999999984e-05, 6.0194999999999e-05, 6.068099999999993e-05, 5.9833999999998194e-05, 6.0500000000001525e-05, 6.0584000000002414e-05, 6.031900000000312e-05, 6.059700000000251e-05, 5.9999999999997555e-05, 6.0264000000000845e-05, 5.984700000000176e-05, 6.005499999999983e-05, 6.008299999999897e-05, 5.9957999999998846e-05, 6.0485999999998485e-05, 6.041700000000011e-05, 6.037499999999793e-05, 6.009700000000201e-05, 6.0291999999999984e-05, 6.040300000000054e-05, 6.0362000000001304e-05, 6.013900000000072e-05, 6.065300000000079e-05, 6.0764000000001345e-05, 5.9929999999999706e-05, 6.0749999999998305e-05, 6.0472000000002385e-05, 6.0680000000000456e-05, 6.055500000000033e-05, 6.0457999999999346e-05, 5.9943999999999276e-05, 5.988900000000047e-05, 6.0736000000002205e-05, 6.0569999999999374e-05, 6.036099999999836e-05, 6.036099999999836e-05, 5.988900000000047e-05, 5.9805999999999054e-05, 6.013900000000072e-05]</msg>
<status status="PASS" starttime="20201110 08:41:05.925" endtime="20201110 08:41:05.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.920" endtime="20201110 08:41:05.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.930" endtime="20201110 08:41:05.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:05.933" endtime="20201110 08:41:05.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.932" endtime="20201110 08:41:05.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.928" endtime="20201110 08:41:05.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.557" endtime="20201110 08:41:05.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.557" endtime="20201110 08:41:05.954"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.962" endtime="20201110 08:41:05.981"></status>
</kw>
<msg timestamp="20201110 08:41:05.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.961" endtime="20201110 08:41:05.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:05.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:05.982" endtime="20201110 08:41:05.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.985" endtime="20201110 08:41:05.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.958" endtime="20201110 08:41:05.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.956" endtime="20201110 08:41:05.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:05.995" endtime="20201110 08:41:06.280"></status>
</kw>
<msg timestamp="20201110 08:41:06.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:05.993" endtime="20201110 08:41:06.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020697111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:06.284" endtime="20201110 08:41:06.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.292" endtime="20201110 08:41:06.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.991" endtime="20201110 08:41:06.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.989" endtime="20201110 08:41:06.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:06.299" level="INFO">${RESULT} = [{'time': 0.020758889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.177799999999845e-05, 'source_diff': 6.177799999999845e-05}, {'time': 0.020824875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:06.296" endtime="20201110 08:41:06.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:06.312" level="INFO">${ACCURACY} = {'time': [0.020758889, 0.020824875, 0.020888903, 0.020953903, 0.021017931, 0.021081903, 0.021145931, 0.021210931, 0.021275944, 0.021340931, 0.021405958, 0.021469958, 0.021533958, 0.021599958, 0.021664...</msg>
<status status="PASS" starttime="20201110 08:41:06.300" endtime="20201110 08:41:06.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.317" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:41:06.316" endtime="20201110 08:41:06.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.319" level="INFO">VALUE: [6.177799999999845e-05, 6.134699999999979e-05, 6.163899999999875e-05, 6.15279999999982e-05, 6.140300000000154e-05, 6.0888999999998e-05, 6.15560000000008e-05, 6.093100000000018e-05, 6.179100000000201e-05, 6.0778000000000915e-05, 6.144400000000078e-05, 6.173599999999974e-05, 6.084699999999929e-05, 6.14439999999973e-05, 6.149999999999906e-05, 6.10690000000004e-05, 6.115299999999782e-05, 6.159700000000004e-05, 6.13889999999985e-05, 6.154200000000123e-05, 6.12360000000027e-05, 6.12360000000027e-05, 6.141700000000111e-05, 6.147299999999939e-05, 6.127800000000141e-05, 6.163900000000222e-05, 6.158399999999994e-05, 6.118000000000096e-05, 6.177799999999845e-05, 6.166600000000189e-05, 6.170799999999713e-05, 6.148599999999949e-05, 6.152800000000166e-05, 6.083299999999972e-05, 6.086099999999886e-05, 6.149999999999906e-05, 6.126400000000184e-05, 6.094499999999975e-05, 6.144500000000025e-05, 6.140300000000154e-05, 6.14300000000012e-05, 6.170900000000007e-05, 6.13889999999985e-05, 6.136099999999936e-05, 6.162499999999918e-05, 6.088900000000147e-05, 6.0944000000000276e-05, 6.10690000000004e-05, 6.0930000000000706e-05, 6.123599999999924e-05]</msg>
<status status="PASS" starttime="20201110 08:41:06.318" endtime="20201110 08:41:06.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.313" endtime="20201110 08:41:06.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.323" endtime="20201110 08:41:06.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:06.326" endtime="20201110 08:41:06.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.325" endtime="20201110 08:41:06.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.321" endtime="20201110 08:41:06.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.955" endtime="20201110 08:41:06.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:05.954" endtime="20201110 08:41:06.347"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.356" endtime="20201110 08:41:06.374"></status>
</kw>
<msg timestamp="20201110 08:41:06.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:06.354" endtime="20201110 08:41:06.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:06.375" endtime="20201110 08:41:06.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.378" endtime="20201110 08:41:06.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.352" endtime="20201110 08:41:06.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.350" endtime="20201110 08:41:06.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.388" endtime="20201110 08:41:06.674"></status>
</kw>
<msg timestamp="20201110 08:41:06.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:06.386" endtime="20201110 08:41:06.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:06.678" endtime="20201110 08:41:06.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.686" endtime="20201110 08:41:06.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.384" endtime="20201110 08:41:06.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.382" endtime="20201110 08:41:06.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:06.693" level="INFO">${RESULT} = [{'time': 0.019807278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.245900000000082e-05, 'source_diff': 6.245900000000082e-05}, {'time': 0.019874278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:06.689" endtime="20201110 08:41:06.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:06.706" level="INFO">${ACCURACY} = {'time': [0.019807278, 0.019874278, 0.019940306, 0.020005292, 0.020071306, 0.020139306, 0.020203319, 0.020268361, 0.020334333, 0.020401333, 0.020465347, 0.020533361, 0.020601403, 0.020666389, 0.020734...</msg>
<status status="PASS" starttime="20201110 08:41:06.694" endtime="20201110 08:41:06.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.711" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:41:06.710" endtime="20201110 08:41:06.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.713" level="INFO">VALUE: [6.245900000000082e-05, 6.199999999999956e-05, 6.244500000000125e-05, 6.261100000000061e-05, 6.254200000000223e-05, 6.216699999999839e-05, 6.194400000000128e-05, 6.259699999999757e-05, 6.201399999999913e-05, 6.216600000000239e-05, 6.179099999999854e-05, 6.25279999999992e-05, 6.244500000000125e-05, 6.262500000000018e-05, 6.251399999999963e-05, 6.201399999999913e-05, 6.227799999999895e-05, 6.190299999999857e-05, 6.191700000000161e-05, 6.209800000000001e-05, 6.247299999999692e-05, 6.24019999999996e-05, 6.252699999999972e-05, 6.242999999999874e-05, 6.22080000000011e-05, 6.255499999999886e-05, 6.20690000000014e-05, 6.19300000000017e-05, 6.204200000000173e-05, 6.205499999999836e-05, 6.180600000000105e-05, 6.276399999999988e-05, 6.236100000000036e-05, 6.250000000000006e-05, 6.184700000000029e-05, 6.187499999999943e-05, 6.195900000000032e-05, 6.270900000000107e-05, 6.186199999999933e-05, 6.24439999999983e-05, 6.269400000000203e-05, 6.186099999999986e-05, 6.226400000000284e-05, 6.190300000000204e-05, 6.186099999999986e-05, 6.254199999999877e-05, 6.241699999999864e-05, 6.207000000000087e-05, 6.201399999999913e-05, 6.22499999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:41:06.712" endtime="20201110 08:41:06.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.707" endtime="20201110 08:41:06.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.717" endtime="20201110 08:41:06.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:06.720" endtime="20201110 08:41:06.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.719" endtime="20201110 08:41:06.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.715" endtime="20201110 08:41:06.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.348" endtime="20201110 08:41:06.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.348" endtime="20201110 08:41:06.741"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.750" endtime="20201110 08:41:06.767"></status>
</kw>
<msg timestamp="20201110 08:41:06.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:06.748" endtime="20201110 08:41:06.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:06.768" endtime="20201110 08:41:06.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.770" endtime="20201110 08:41:06.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.746" endtime="20201110 08:41:06.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.743" endtime="20201110 08:41:06.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.780" endtime="20201110 08:41:07.066"></status>
</kw>
<msg timestamp="20201110 08:41:07.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:41:06.779" endtime="20201110 08:41:07.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020084514, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:41:07.071" endtime="20201110 08:41:07.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.079" endtime="20201110 08:41:07.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.776" endtime="20201110 08:41:07.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.775" endtime="20201110 08:41:07.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:07.085" level="INFO">${RESULT} = [{'time': 0.020084514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.351400000000063e-05, 'source_diff': 6.351400000000063e-05}, {'time': 0.020151528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:07.082" endtime="20201110 08:41:07.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:07.099" level="INFO">${ACCURACY} = {'time': [0.020084514, 0.020151528, 0.020219528, 0.020285528, 0.020352597, 0.020418583, 0.020486569, 0.020552556, 0.020621569, 0.020689583, 0.020756597, 0.020823597, 0.020889611, 0.020958653, 0.021024...</msg>
<status status="PASS" starttime="20201110 08:41:07.086" endtime="20201110 08:41:07.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.103" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:41:07.102" endtime="20201110 08:41:07.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.106" level="INFO">VALUE: [6.351400000000063e-05, 6.323599999999777e-05, 6.312500000000068e-05, 6.312500000000068e-05, 6.292999999999924e-05, 6.300000000000056e-05, 6.348599999999802e-05, 6.2889e-05, 6.362499999999771e-05, 6.34020000000006e-05, 6.373600000000174e-05, 6.312500000000068e-05, 6.33890000000005e-05, 6.329199999999952e-05, 6.284700000000129e-05, 6.329199999999952e-05, 6.2889e-05, 6.334699999999832e-05, 6.281999999999816e-05, 6.336100000000136e-05, 6.295900000000132e-05, 6.295899999999785e-05, 6.329199999999952e-05, 6.319400000000253e-05, 6.276299999999693e-05, 6.342999999999974e-05, 6.290299999999957e-05, 6.359699999999857e-05, 6.372200000000217e-05, 6.312499999999721e-05, 6.323600000000124e-05, 6.316699999999939e-05, 6.337500000000093e-05, 6.33890000000005e-05, 6.311100000000111e-05, 6.373599999999827e-05, 6.337499999999746e-05, 6.347299999999792e-05, 6.312500000000068e-05, 6.336099999999789e-05, 6.32500000000008e-05, 6.351300000000115e-05, 6.337500000000093e-05, 6.341600000000017e-05, 6.366600000000042e-05, 6.365299999999685e-05, 6.35280000000002e-05, 6.300000000000056e-05, 6.322200000000167e-05, 6.329200000000298e-05]</msg>
<status status="PASS" starttime="20201110 08:41:07.104" endtime="20201110 08:41:07.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.100" endtime="20201110 08:41:07.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.109" endtime="20201110 08:41:07.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:07.113" endtime="20201110 08:41:07.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.111" endtime="20201110 08:41:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.108" endtime="20201110 08:41:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.742" endtime="20201110 08:41:07.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.741" endtime="20201110 08:41:07.134"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.142" endtime="20201110 08:41:07.160"></status>
</kw>
<msg timestamp="20201110 08:41:07.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.141" endtime="20201110 08:41:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.161" endtime="20201110 08:41:07.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.164" endtime="20201110 08:41:07.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.138" endtime="20201110 08:41:07.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.136" endtime="20201110 08:41:07.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.174" endtime="20201110 08:41:07.459"></status>
</kw>
<msg timestamp="20201110 08:41:07.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.172" endtime="20201110 08:41:07.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.463" endtime="20201110 08:41:07.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.472" endtime="20201110 08:41:07.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.170" endtime="20201110 08:41:07.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.168" endtime="20201110 08:41:07.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:07.478" level="INFO">${RESULT} = [{'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.443100000000021e-05, 'source_diff': 6.443100000000021e-05}, {'time': 0.020501903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:07.475" endtime="20201110 08:41:07.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:07.493" level="INFO">${ACCURACY} = {'time': [0.020432889, 0.020501903, 0.020569917, 0.020638931, 0.020705958, 0.020773931, 0.020842944, 0.020909958, 0.020978944, 0.021046972, 0.021116972, 0.021184972, 0.021253986, 0.021319986, 0.021388...</msg>
<status status="PASS" starttime="20201110 08:41:07.479" endtime="20201110 08:41:07.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.497" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:41:07.496" endtime="20201110 08:41:07.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.500" level="INFO">VALUE: [6.443100000000021e-05, 6.459699999999957e-05, 6.424999999999834e-05, 6.419499999999953e-05, 6.411099999999864e-05, 6.430600000000009e-05, 6.431900000000018e-05, 6.451399999999816e-05, 6.470800000000013e-05, 6.437500000000193e-05, 6.44440000000003e-05, 6.393000000000024e-05, 6.436099999999889e-05, 6.377800000000045e-05, 6.45699999999999e-05, 6.409699999999907e-05, 6.43890000000015e-05, 6.426400000000138e-05, 6.393099999999971e-05, 6.473600000000274e-05, 6.437499999999846e-05, 6.44440000000003e-05, 6.465300000000132e-05, 6.42219999999992e-05, 6.395799999999938e-05, 6.443000000000074e-05, 6.433300000000322e-05, 6.448599999999902e-05, 6.416700000000039e-05, 6.380599999999959e-05, 6.473600000000274e-05, 6.379200000000002e-05, 6.412499999999821e-05, 6.394500000000275e-05, 6.3889000000001e-05, 6.3889000000001e-05, 6.404200000000027e-05, 6.380500000000011e-05, 6.399999999999809e-05, 6.387500000000143e-05, 6.393000000000024e-05, 6.417999999999702e-05, 6.381899999999968e-05, 6.440300000000107e-05, 6.45280000000012e-05, 6.437499999999846e-05, 6.427800000000095e-05, 6.386100000000186e-05, 6.468100000000046e-05, 6.458399999999948e-05]</msg>
<status status="PASS" starttime="20201110 08:41:07.498" endtime="20201110 08:41:07.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.494" endtime="20201110 08:41:07.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.503" endtime="20201110 08:41:07.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:07.507" endtime="20201110 08:41:07.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.505" endtime="20201110 08:41:07.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.502" endtime="20201110 08:41:07.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.135" endtime="20201110 08:41:07.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.134" endtime="20201110 08:41:07.528"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.537" endtime="20201110 08:41:07.554"></status>
</kw>
<msg timestamp="20201110 08:41:07.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.535" endtime="20201110 08:41:07.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.556" endtime="20201110 08:41:07.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.558" endtime="20201110 08:41:07.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.532" endtime="20201110 08:41:07.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.530" endtime="20201110 08:41:07.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.568" endtime="20201110 08:41:07.853"></status>
</kw>
<msg timestamp="20201110 08:41:07.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.567" endtime="20201110 08:41:07.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.857" endtime="20201110 08:41:07.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.866" endtime="20201110 08:41:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.564" endtime="20201110 08:41:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.562" endtime="20201110 08:41:07.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:07.873" level="INFO">${RESULT} = [{'time': 0.020597208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.497199999999995e-05, 'source_diff': 6.497199999999995e-05}, {'time': 0.020666194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:07.869" endtime="20201110 08:41:07.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:07.886" level="INFO">${ACCURACY} = {'time': [0.020597208, 0.020666194, 0.020735208, 0.020804208, 0.020872222, 0.020940236, 0.021008236, 0.02107925, 0.021147264, 0.021216264, 0.021285264, 0.021354292, 0.021422292, 0.021493292, 0.0215623...</msg>
<status status="PASS" starttime="20201110 08:41:07.873" endtime="20201110 08:41:07.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.890" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:41:07.889" endtime="20201110 08:41:07.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.893" level="INFO">VALUE: [6.497199999999995e-05, 6.572199999999723e-05, 6.543000000000174e-05, 6.565200000000285e-05, 6.513899999999878e-05, 6.549999999999959e-05, 6.523599999999977e-05, 6.545800000000088e-05, 6.515299999999835e-05, 6.565299999999885e-05, 6.511100000000311e-05, 6.579200000000202e-05, 6.532000000000066e-05, 6.527800000000195e-05, 6.495899999999985e-05, 6.555599999999787e-05, 6.573600000000027e-05, 6.479100000000154e-05, 6.54159999999987e-05, 6.561100000000014e-05, 6.549999999999959e-05, 6.577799999999898e-05, 6.516700000000139e-05, 6.532000000000066e-05, 6.515299999999835e-05, 6.483299999999678e-05, 6.511099999999964e-05, 6.55280000000022e-05, 6.518099999999749e-05, 6.561100000000014e-05, 6.520800000000063e-05, 6.563899999999928e-05, 6.501399999999866e-05, 6.573600000000027e-05, 6.566599999999895e-05, 6.486100000000286e-05, 6.561100000000014e-05, 6.480500000000111e-05, 6.541700000000164e-05, 6.555600000000134e-05, 6.545799999999741e-05, 6.490300000000157e-05, 6.52630000000029e-05, 6.543099999999774e-05, 6.566699999999842e-05, 6.519400000000106e-05, 6.513900000000225e-05, 6.565199999999938e-05, 6.5583000000001e-05, 6.554099999999882e-05]</msg>
<status status="PASS" starttime="20201110 08:41:07.891" endtime="20201110 08:41:07.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.887" endtime="20201110 08:41:07.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.896" endtime="20201110 08:41:07.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:07.900" endtime="20201110 08:41:07.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.898" endtime="20201110 08:41:07.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.895" endtime="20201110 08:41:07.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.529" endtime="20201110 08:41:07.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.528" endtime="20201110 08:41:07.921"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.929" endtime="20201110 08:41:07.947"></status>
</kw>
<msg timestamp="20201110 08:41:07.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.928" endtime="20201110 08:41:07.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:07.948" endtime="20201110 08:41:07.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.951" endtime="20201110 08:41:07.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.925" endtime="20201110 08:41:07.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.923" endtime="20201110 08:41:07.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.961" endtime="20201110 08:41:08.246"></status>
</kw>
<msg timestamp="20201110 08:41:08.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.959" endtime="20201110 08:41:08.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:08.250" endtime="20201110 08:41:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.258" endtime="20201110 08:41:08.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.957" endtime="20201110 08:41:08.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.955" endtime="20201110 08:41:08.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:08.265" level="INFO">${RESULT} = [{'time': 0.019912417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.583400000000073e-05, 'source_diff': 6.583400000000073e-05}, {'time': 0.019983444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:08.261" endtime="20201110 08:41:08.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:08.278" level="INFO">${ACCURACY} = {'time': [0.019912417, 0.019983444, 0.020054458, 0.020125458, 0.020196458, 0.020267458, 0.020336472, 0.020405486, 0.020476486, 0.020548514, 0.020618528, 0.020689514, 0.020758528, 0.020828528, 0.020900...</msg>
<status status="PASS" starttime="20201110 08:41:08.266" endtime="20201110 08:41:08.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.283" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:41:08.281" endtime="20201110 08:41:08.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.285" level="INFO">VALUE: [6.583400000000073e-05, 6.625000000000034e-05, 6.595800000000138e-05, 6.64159999999997e-05, 6.59440000000018e-05, 6.651400000000016e-05, 6.666599999999995e-05, 6.609700000000107e-05, 6.652799999999973e-05, 6.648600000000102e-05, 6.638900000000003e-05, 6.658299999999853e-05, 6.638900000000003e-05, 6.601399999999966e-05, 6.675000000000084e-05, 6.674999999999737e-05, 6.631899999999871e-05, 6.598600000000052e-05, 6.625000000000034e-05, 6.637500000000046e-05, 6.650000000000059e-05, 6.625000000000034e-05, 6.612500000000021e-05, 6.627800000000295e-05, 6.662500000000071e-05, 6.586100000000039e-05, 6.656999999999844e-05, 6.665299999999985e-05, 6.595900000000085e-05, 6.67640000000004e-05, 6.594500000000128e-05, 6.634799999999733e-05, 6.661100000000114e-05, 6.595799999999791e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.655499999999939e-05, 6.595800000000138e-05, 6.59159999999992e-05, 6.65969999999981e-05, 6.641699999999917e-05, 6.623600000000077e-05, 6.661099999999767e-05, 6.670800000000213e-05, 6.609800000000055e-05, 6.670899999999813e-05, 6.579200000000202e-05, 6.601399999999966e-05, 6.625000000000034e-05, 6.656899999999896e-05]</msg>
<status status="PASS" starttime="20201110 08:41:08.284" endtime="20201110 08:41:08.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.279" endtime="20201110 08:41:08.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.289" endtime="20201110 08:41:08.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:08.292" endtime="20201110 08:41:08.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.290" endtime="20201110 08:41:08.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.287" endtime="20201110 08:41:08.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.922" endtime="20201110 08:41:08.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.921" endtime="20201110 08:41:08.313"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.321" endtime="20201110 08:41:08.339"></status>
</kw>
<msg timestamp="20201110 08:41:08.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:08.320" endtime="20201110 08:41:08.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:08.340" endtime="20201110 08:41:08.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.343" endtime="20201110 08:41:08.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.317" endtime="20201110 08:41:08.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.315" endtime="20201110 08:41:08.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.353" endtime="20201110 08:41:08.637"></status>
</kw>
<msg timestamp="20201110 08:41:08.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:08.351" endtime="20201110 08:41:08.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:08.641" endtime="20201110 08:41:08.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.650" endtime="20201110 08:41:08.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.349" endtime="20201110 08:41:08.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.347" endtime="20201110 08:41:08.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:08.656" level="INFO">${RESULT} = [{'time': 0.019903875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.712500000000121e-05, 'source_diff': 6.712500000000121e-05}, {'time': 0.019976861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:08.653" endtime="20201110 08:41:08.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:08.670" level="INFO">${ACCURACY} = {'time': [0.019903875, 0.019976861, 0.020048875, 0.020119875, 0.020190889, 0.020259903, 0.020331903, 0.020403917, 0.020475917, 0.020546944, 0.020618958, 0.020689944, 0.020762958, 0.020835958, 0.020908...</msg>
<status status="PASS" starttime="20201110 08:41:08.657" endtime="20201110 08:41:08.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.674" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:41:08.673" endtime="20201110 08:41:08.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.677" level="INFO">VALUE: [6.712500000000121e-05, 6.740299999999713e-05, 6.687500000000096e-05, 6.747199999999898e-05, 6.723600000000177e-05, 6.695899999999838e-05, 6.711099999999817e-05, 6.700000000000109e-05, 6.765300000000085e-05, 6.766600000000095e-05, 6.75969999999991e-05, 6.741599999999723e-05, 6.762500000000171e-05, 6.756899999999996e-05, 6.762500000000171e-05, 6.683300000000225e-05, 6.736099999999842e-05, 6.686100000000139e-05, 6.745800000000288e-05, 6.724999999999787e-05, 6.727799999999701e-05, 6.745799999999941e-05, 6.694499999999881e-05, 6.741700000000017e-05, 6.729200000000005e-05, 6.722300000000167e-05, 6.726399999999744e-05, 6.734700000000232e-05, 6.729100000000057e-05, 6.720799999999916e-05, 6.694399999999934e-05, 6.761099999999867e-05, 6.734699999999885e-05, 6.75969999999991e-05, 6.744400000000331e-05, 6.730599999999962e-05, 6.695900000000185e-05, 6.727800000000048e-05, 6.749999999999812e-05, 6.738899999999756e-05, 6.715300000000035e-05, 6.765199999999791e-05, 6.770799999999966e-05, 6.74160000000007e-05, 6.755500000000039e-05, 6.679100000000007e-05, 6.765300000000085e-05, 6.748599999999855e-05, 6.72359999999983e-05, 6.77909999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:41:08.675" endtime="20201110 08:41:08.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.670" endtime="20201110 08:41:08.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.680" endtime="20201110 08:41:08.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:08.684" endtime="20201110 08:41:08.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.682" endtime="20201110 08:41:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.679" endtime="20201110 08:41:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.314" endtime="20201110 08:41:08.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.313" endtime="20201110 08:41:08.705"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.713" endtime="20201110 08:41:08.729"></status>
</kw>
<msg timestamp="20201110 08:41:08.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:08.711" endtime="20201110 08:41:08.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:08.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:08.731" endtime="20201110 08:41:08.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.733" endtime="20201110 08:41:08.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.709" endtime="20201110 08:41:08.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.707" endtime="20201110 08:41:08.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:08.743" endtime="20201110 08:41:09.028"></status>
</kw>
<msg timestamp="20201110 08:41:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:08.742" endtime="20201110 08:41:09.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.032" endtime="20201110 08:41:09.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.040" endtime="20201110 08:41:09.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.739" endtime="20201110 08:41:09.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.738" endtime="20201110 08:41:09.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:09.047" level="INFO">${RESULT} = [{'time': 0.019799653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.857000000000044e-05, 'source_diff': 6.857000000000044e-05}, {'time': 0.019873681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:09.044" endtime="20201110 08:41:09.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:09.061" level="INFO">${ACCURACY} = {'time': [0.019799653, 0.019873681, 0.019946708, 0.020019667, 0.020092681, 0.020165681, 0.020238722, 0.020311708, 0.020382708, 0.020455722, 0.020528722, 0.02059975, 0.020673736, 0.02074675, 0.02081880...</msg>
<status status="PASS" starttime="20201110 08:41:09.048" endtime="20201110 08:41:09.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.066" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:41:09.065" endtime="20201110 08:41:09.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.068" level="INFO">VALUE: [6.857000000000044e-05, 6.819500000000006e-05, 6.80969999999996e-05, 6.809800000000255e-05, 6.859799999999958e-05, 6.875000000000284e-05, 6.82640000000019e-05, 6.798600000000252e-05, 6.849999999999912e-05, 6.854099999999835e-05, 6.799999999999862e-05, 6.784699999999935e-05, 6.820800000000016e-05, 6.787500000000196e-05, 6.818099999999702e-05, 6.837500000000246e-05, 6.809799999999908e-05, 6.862499999999924e-05, 6.829100000000157e-05, 6.849999999999912e-05, 6.867999999999805e-05, 6.861099999999967e-05, 6.806900000000046e-05, 6.794400000000034e-05, 6.848599999999955e-05, 6.819399999999712e-05, 6.813900000000178e-05, 6.817999999999755e-05, 6.844400000000084e-05, 6.808300000000003e-05, 6.805600000000037e-05, 6.863899999999881e-05, 6.844400000000084e-05, 6.851400000000216e-05, 6.855500000000139e-05, 6.780600000000012e-05, 6.87359999999998e-05, 6.843000000000127e-05, 6.805500000000089e-05, 6.781900000000021e-05, 6.826399999999844e-05, 6.815300000000135e-05, 6.87359999999998e-05, 6.827800000000148e-05, 6.827800000000148e-05, 6.806999999999994e-05, 6.820800000000016e-05, 6.82090000000031e-05, 6.848599999999955e-05, 6.830599999999715e-05]</msg>
<status status="PASS" starttime="20201110 08:41:09.067" endtime="20201110 08:41:09.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.062" endtime="20201110 08:41:09.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.072" endtime="20201110 08:41:09.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:09.076" endtime="20201110 08:41:09.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.074" endtime="20201110 08:41:09.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.070" endtime="20201110 08:41:09.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.705" endtime="20201110 08:41:09.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:08.705" endtime="20201110 08:41:09.096"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.105" endtime="20201110 08:41:09.123"></status>
</kw>
<msg timestamp="20201110 08:41:09.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.103" endtime="20201110 08:41:09.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.124" endtime="20201110 08:41:09.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.127" endtime="20201110 08:41:09.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.101" endtime="20201110 08:41:09.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.099" endtime="20201110 08:41:09.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.137" endtime="20201110 08:41:09.422"></status>
</kw>
<msg timestamp="20201110 08:41:09.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.135" endtime="20201110 08:41:09.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.426" endtime="20201110 08:41:09.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.435" endtime="20201110 08:41:09.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.133" endtime="20201110 08:41:09.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.131" endtime="20201110 08:41:09.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:09.442" level="INFO">${RESULT} = [{'time': 0.020489778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.901399999999919e-05, 'source_diff': 6.901399999999919e-05}, {'time': 0.020563792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:09.438" endtime="20201110 08:41:09.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:09.455" level="INFO">${ACCURACY} = {'time': [0.020489778, 0.020563792, 0.020638792, 0.020710806, 0.020781806, 0.020856833, 0.020929847, 0.021003875, 0.021077861, 0.021149847, 0.021221889, 0.021295875, 0.021368889, 0.021440903, 0.021513...</msg>
<status status="PASS" starttime="20201110 08:41:09.442" endtime="20201110 08:41:09.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.459" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:41:09.458" endtime="20201110 08:41:09.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.462" level="INFO">VALUE: [6.901399999999919e-05, 6.92230000000002e-05, 6.9584000000001e-05, 6.944499999999784e-05, 6.879200000000155e-05, 6.94160000000027e-05, 6.887500000000296e-05, 6.97360000000008e-05, 6.948600000000055e-05, 6.894399999999787e-05, 6.916700000000192e-05, 6.912499999999974e-05, 6.968099999999852e-05, 6.90840000000005e-05, 6.92360000000003e-05, 6.919500000000106e-05, 6.887499999999949e-05, 6.915300000000235e-05, 6.877799999999851e-05, 6.906999999999747e-05, 6.899999999999962e-05, 6.970800000000166e-05, 6.948600000000055e-05, 6.92909999999991e-05, 6.879100000000207e-05, 6.95970000000011e-05, 6.906899999999799e-05, 6.934700000000085e-05, 6.956999999999797e-05, 6.972200000000123e-05, 6.905600000000137e-05, 6.893000000000177e-05, 6.963899999999981e-05, 6.880600000000112e-05, 6.965199999999991e-05, 6.951300000000021e-05, 6.954099999999935e-05, 6.916600000000245e-05, 6.888900000000253e-05, 6.95420000000023e-05, 6.912499999999974e-05, 6.912499999999974e-05, 6.972199999999776e-05, 6.936100000000042e-05, 6.901399999999919e-05, 6.951399999999969e-05, 6.894500000000081e-05, 6.962500000000024e-05, 6.919400000000159e-05, 6.968000000000252e-05]</msg>
<status status="PASS" starttime="20201110 08:41:09.460" endtime="20201110 08:41:09.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.456" endtime="20201110 08:41:09.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.465" endtime="20201110 08:41:09.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:09.469" endtime="20201110 08:41:09.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.467" endtime="20201110 08:41:09.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.464" endtime="20201110 08:41:09.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.097" endtime="20201110 08:41:09.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.097" endtime="20201110 08:41:09.490"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.498" endtime="20201110 08:41:09.516"></status>
</kw>
<msg timestamp="20201110 08:41:09.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.497" endtime="20201110 08:41:09.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.518" endtime="20201110 08:41:09.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.520" endtime="20201110 08:41:09.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.494" endtime="20201110 08:41:09.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.492" endtime="20201110 08:41:09.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.530" endtime="20201110 08:41:09.816"></status>
</kw>
<msg timestamp="20201110 08:41:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020927806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.529" endtime="20201110 08:41:09.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020857444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020927806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.820" endtime="20201110 08:41:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.828" endtime="20201110 08:41:09.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.526" endtime="20201110 08:41:09.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.525" endtime="20201110 08:41:09.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:09.835" level="INFO">${RESULT} = [{'time': 0.020927806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.03620000000009e-05, 'source_diff': 7.03620000000009e-05}, {'time': 0.021000806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:09.832" endtime="20201110 08:41:09.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:09.848" level="INFO">${ACCURACY} = {'time': [0.020927806, 0.021000806, 0.021074819, 0.021149819, 0.021224833, 0.021297861, 0.021371847, 0.021444931, 0.021518875, 0.021594875, 0.021668903, 0.021744889, 0.021820903, 0.021893931, 0.021966...</msg>
<status status="PASS" starttime="20201110 08:41:09.836" endtime="20201110 08:41:09.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.853" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:41:09.852" endtime="20201110 08:41:09.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.855" level="INFO">VALUE: [7.03620000000009e-05, 7.066699999999995e-05, 6.983300000000178e-05, 7.040200000000066e-05, 7.002699999999681e-05, 7.038900000000056e-05, 7.048599999999808e-05, 7.068099999999952e-05, 7.06109999999982e-05, 7.027800000000001e-05, 7.031999999999872e-05, 7.020799999999869e-05, 7.022199999999826e-05, 7.062499999999777e-05, 7.002799999999976e-05, 7.048700000000102e-05, 7.073599999999833e-05, 7.025000000000087e-05, 6.994399999999887e-05, 6.983299999999831e-05, 7.038900000000056e-05, 7.005499999999942e-05, 7.047199999999851e-05, 7.011100000000117e-05, 7.019499999999859e-05, 6.984700000000135e-05, 7.043099999999927e-05, 7.04169999999997e-05, 6.980599999999865e-05, 6.977799999999951e-05, 7.006999999999847e-05, 7.066600000000048e-05, 7.000000000000062e-05, 6.997200000000148e-05, 7.025000000000087e-05, 6.990299999999963e-05, 7.047200000000198e-05, 7.020800000000216e-05, 7.045799999999894e-05, 7.032000000000219e-05, 7.012500000000074e-05, 7.045899999999841e-05, 7.058399999999854e-05, 6.983399999999779e-05, 6.995799999999844e-05, 6.987500000000049e-05, 7.019399999999912e-05, 6.988900000000006e-05, 6.981899999999874e-05, 7.04299999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:41:09.854" endtime="20201110 08:41:09.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.849" endtime="20201110 08:41:09.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.859" endtime="20201110 08:41:09.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:09.862" endtime="20201110 08:41:09.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.861" endtime="20201110 08:41:09.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.857" endtime="20201110 08:41:09.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.490" endtime="20201110 08:41:09.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.490" endtime="20201110 08:41:09.883"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.893" endtime="20201110 08:41:09.910"></status>
</kw>
<msg timestamp="20201110 08:41:09.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.891" endtime="20201110 08:41:09.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:09.911" endtime="20201110 08:41:09.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.914" endtime="20201110 08:41:09.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.888" endtime="20201110 08:41:09.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.886" endtime="20201110 08:41:09.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.924" endtime="20201110 08:41:10.209"></status>
</kw>
<msg timestamp="20201110 08:41:10.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.922" endtime="20201110 08:41:10.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020832111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:10.213" endtime="20201110 08:41:10.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.221" endtime="20201110 08:41:10.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.920" endtime="20201110 08:41:10.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.918" endtime="20201110 08:41:10.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:10.228" level="INFO">${RESULT} = [{'time': 0.020903583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.147199999999951e-05, 'source_diff': 7.147199999999951e-05}, {'time': 0.020977583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:10.225" endtime="20201110 08:41:10.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:10.241" level="INFO">${ACCURACY} = {'time': [0.020903583, 0.020977583, 0.021051611, 0.021126625, 0.021200653, 0.021277625, 0.021352681, 0.021429653, 0.021505681, 0.021579694, 0.021653681, 0.021727694, 0.021803694, 0.021879694, 0.021954...</msg>
<status status="PASS" starttime="20201110 08:41:10.229" endtime="20201110 08:41:10.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.246" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:41:10.245" endtime="20201110 08:41:10.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.248" level="INFO">VALUE: [7.147199999999951e-05, 7.083299999999931e-05, 7.175000000000237e-05, 7.131900000000024e-05, 7.159699999999963e-05, 7.176400000000194e-05, 7.177799999999804e-05, 7.136099999999895e-05, 7.102799999999729e-05, 7.11109999999987e-05, 7.109800000000208e-05, 7.098599999999858e-05, 7.142999999999733e-05, 7.118000000000055e-05, 7.166700000000095e-05, 7.090299999999716e-05, 7.115300000000088e-05, 7.109699999999913e-05, 7.126399999999797e-05, 7.16109999999992e-05, 7.148599999999908e-05, 7.166700000000095e-05, 7.086099999999845e-05, 7.1069e-05, 7.179200000000108e-05, 7.112499999999827e-05, 7.168100000000052e-05, 7.115300000000088e-05, 7.170800000000019e-05, 7.177799999999804e-05, 7.095799999999944e-05, 7.131899999999677e-05, 7.088900000000106e-05, 7.123599999999883e-05, 7.172199999999976e-05, 7.152800000000126e-05, 7.143100000000027e-05, 7.127800000000101e-05, 7.102800000000076e-05, 7.098599999999858e-05, 7.080599999999965e-05, 7.161200000000215e-05, 7.122199999999926e-05, 7.166599999999801e-05, 7.120799999999969e-05, 7.098600000000205e-05, 7.152799999999779e-05, 7.127800000000101e-05, 7.09300000000003e-05, 7.109699999999913e-05]</msg>
<status status="PASS" starttime="20201110 08:41:10.247" endtime="20201110 08:41:10.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.242" endtime="20201110 08:41:10.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.252" endtime="20201110 08:41:10.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:10.255" endtime="20201110 08:41:10.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.254" endtime="20201110 08:41:10.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.250" endtime="20201110 08:41:10.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.884" endtime="20201110 08:41:10.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.884" endtime="20201110 08:41:10.276"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.285" endtime="20201110 08:41:10.303"></status>
</kw>
<msg timestamp="20201110 08:41:10.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:10.283" endtime="20201110 08:41:10.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:10.304" endtime="20201110 08:41:10.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.307" endtime="20201110 08:41:10.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.281" endtime="20201110 08:41:10.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.279" endtime="20201110 08:41:10.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.317" endtime="20201110 08:41:10.602"></status>
</kw>
<msg timestamp="20201110 08:41:10.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:10.315" endtime="20201110 08:41:10.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020004556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:10.607" endtime="20201110 08:41:10.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.615" endtime="20201110 08:41:10.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.313" endtime="20201110 08:41:10.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.311" endtime="20201110 08:41:10.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:10.621" level="INFO">${RESULT} = [{'time': 0.020004556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.261199999999968e-05, 'source_diff': 7.261199999999968e-05}, {'time': 0.020081569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:10.618" endtime="20201110 08:41:10.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:10.636" level="INFO">${ACCURACY} = {'time': [0.020004556, 0.020081569, 0.020156583, 0.020231611, 0.020306597, 0.020384597, 0.020458625, 0.020533639, 0.020608625, 0.020686653, 0.020761639, 0.020837667, 0.020913667, 0.020990667, 0.021066...</msg>
<status status="PASS" starttime="20201110 08:41:10.622" endtime="20201110 08:41:10.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.640" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:41:10.639" endtime="20201110 08:41:10.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.643" level="INFO">VALUE: [7.261199999999968e-05, 7.223599999999983e-05, 7.24439999999979e-05, 7.216700000000145e-05, 7.206899999999752e-05, 7.216600000000198e-05, 7.179200000000108e-05, 7.216699999999798e-05, 7.218099999999755e-05, 7.248600000000008e-05, 7.22499999999994e-05, 7.213900000000231e-05, 7.26110000000002e-05, 7.245900000000041e-05, 7.204200000000133e-05, 7.245799999999747e-05, 7.234700000000038e-05, 7.195799999999697e-05, 7.187499999999902e-05, 7.234700000000038e-05, 7.181900000000074e-05, 7.184699999999988e-05, 7.245800000000094e-05, 7.223599999999983e-05, 7.201400000000219e-05, 7.247200000000051e-05, 7.259800000000011e-05, 7.238899999999909e-05, 7.24309999999978e-05, 7.187499999999902e-05, 7.223599999999983e-05, 7.181900000000074e-05, 7.236099999999995e-05, 7.268000000000205e-05, 7.251399999999922e-05, 7.259700000000063e-05, 7.248600000000008e-05, 7.234700000000038e-05, 7.226399999999897e-05, 7.182000000000022e-05, 7.194500000000034e-05, 7.22499999999994e-05, 7.229199999999811e-05, 7.188899999999859e-05, 7.241599999999876e-05, 7.234700000000038e-05, 7.255499999999845e-05, 7.249999999999965e-05, 7.276399999999947e-05, 7.250000000000312e-05]</msg>
<status status="PASS" starttime="20201110 08:41:10.641" endtime="20201110 08:41:10.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.637" endtime="20201110 08:41:10.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.646" endtime="20201110 08:41:10.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:10.650" endtime="20201110 08:41:10.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.648" endtime="20201110 08:41:10.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.645" endtime="20201110 08:41:10.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.277" endtime="20201110 08:41:10.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.277" endtime="20201110 08:41:10.672"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.683" endtime="20201110 08:41:10.701"></status>
</kw>
<msg timestamp="20201110 08:41:10.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:10.681" endtime="20201110 08:41:10.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:10.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:10.702" endtime="20201110 08:41:10.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.705" endtime="20201110 08:41:10.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.678" endtime="20201110 08:41:10.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.675" endtime="20201110 08:41:10.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.715" endtime="20201110 08:41:11.000"></status>
</kw>
<msg timestamp="20201110 08:41:11.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024095069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:10.713" endtime="20201110 08:41:11.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024095069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024168375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:11.004" endtime="20201110 08:41:11.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.012" endtime="20201110 08:41:11.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.711" endtime="20201110 08:41:11.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.709" endtime="20201110 08:41:11.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:11.019" level="INFO">${RESULT} = [{'time': 0.024168375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.330599999999868e-05, 'source_diff': 7.330599999999868e-05}, {'time': 0.024244347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:11.015" endtime="20201110 08:41:11.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:11.032" level="INFO">${ACCURACY} = {'time': [0.024168375, 0.024244347, 0.024321347, 0.024398361, 0.024477375, 0.024556375, 0.024633403, 0.024710417, 0.024788403, 0.024864417, 0.024941431, 0.025020431, 0.025098472, 0.025174444, 0.025253...</msg>
<status status="PASS" starttime="20201110 08:41:11.020" endtime="20201110 08:41:11.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.037" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:41:11.036" endtime="20201110 08:41:11.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.039" level="INFO">VALUE: [7.330599999999868e-05, 7.306899999999852e-05, 7.287500000000002e-05, 7.281900000000174e-05, 7.361099999999773e-05, 7.316699999999898e-05, 7.344500000000184e-05, 7.36249999999973e-05, 7.358400000000154e-05, 7.373600000000133e-05, 7.305599999999843e-05, 7.334800000000086e-05, 7.291599999999926e-05, 7.366600000000001e-05, 7.327700000000006e-05, 7.288899999999959e-05, 7.34439999999989e-05, 7.361099999999773e-05, 7.293100000000177e-05, 7.348600000000108e-05, 7.330500000000267e-05, 7.38049999999997e-05, 7.320799999999822e-05, 7.315299999999941e-05, 7.295900000000091e-05, 7.313899999999984e-05, 7.355499999999945e-05, 7.362500000000077e-05, 7.367999999999958e-05, 7.34439999999989e-05, 7.331899999999877e-05, 7.362500000000077e-05, 7.313899999999984e-05, 7.355599999999893e-05, 7.282000000000122e-05, 7.318099999999855e-05, 7.358400000000154e-05, 7.329199999999911e-05, 7.368099999999905e-05, 7.370899999999819e-05, 7.352700000000031e-05, 7.337500000000052e-05, 7.297200000000101e-05, 7.298600000000058e-05, 7.336100000000095e-05, 7.29170000000022e-05, 7.329200000000258e-05, 7.348700000000055e-05, 7.341699999999923e-05, 7.320799999999822e-05]</msg>
<status status="PASS" starttime="20201110 08:41:11.038" endtime="20201110 08:41:11.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.033" endtime="20201110 08:41:11.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.043" endtime="20201110 08:41:11.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:11.046" endtime="20201110 08:41:11.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.045" endtime="20201110 08:41:11.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.041" endtime="20201110 08:41:11.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.673" endtime="20201110 08:41:11.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.672" endtime="20201110 08:41:11.067"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.075" endtime="20201110 08:41:11.093"></status>
</kw>
<msg timestamp="20201110 08:41:11.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.074" endtime="20201110 08:41:11.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.095" endtime="20201110 08:41:11.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.097" endtime="20201110 08:41:11.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.071" endtime="20201110 08:41:11.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.069" endtime="20201110 08:41:11.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.107" endtime="20201110 08:41:11.393"></status>
</kw>
<msg timestamp="20201110 08:41:11.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:11.106" endtime="20201110 08:41:11.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019838708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:11.397" endtime="20201110 08:41:11.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.405" endtime="20201110 08:41:11.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.103" endtime="20201110 08:41:11.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.101" endtime="20201110 08:41:11.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:11.412" level="INFO">${RESULT} = [{'time': 0.019838708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.413900000000084e-05, 'source_diff': 7.413900000000084e-05}, {'time': 0.019915722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:11.409" endtime="20201110 08:41:11.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:11.425" level="INFO">${ACCURACY} = {'time': [0.019838708, 0.019915722, 0.019994764, 0.020073736, 0.020152792, 0.020232764, 0.020311764, 0.020388792, 0.020465792, 0.020545792, 0.020624806, 0.020704819, 0.020784819, 0.020861833, 0.020939...</msg>
<status status="PASS" starttime="20201110 08:41:11.413" endtime="20201110 08:41:11.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.430" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:41:11.429" endtime="20201110 08:41:11.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.432" level="INFO">VALUE: [7.413900000000084e-05, 7.469400000000015e-05, 7.408300000000256e-05, 7.465299999999744e-05, 7.445899999999894e-05, 7.462500000000177e-05, 7.411099999999823e-05, 7.415300000000041e-05, 7.468100000000005e-05, 7.433399999999882e-05, 7.405599999999943e-05, 7.470799999999972e-05, 7.416600000000051e-05, 7.381899999999927e-05, 7.406899999999952e-05, 7.43050000000002e-05, 7.433300000000281e-05, 7.447199999999904e-05, 7.454200000000036e-05, 7.436099999999848e-05, 7.384699999999841e-05, 7.401400000000072e-05, 7.44309999999998e-05, 7.431999999999925e-05, 7.455599999999993e-05, 7.422300000000173e-05, 7.400000000000115e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.448599999999861e-05, 7.461099999999873e-05, 7.468100000000005e-05, 7.4763999999998e-05, 7.384699999999841e-05, 7.432000000000272e-05, 7.444500000000284e-05, 7.438900000000109e-05, 7.437499999999805e-05, 7.452799999999732e-05, 7.427799999999707e-05, 7.390200000000069e-05, 7.447199999999904e-05, 7.470800000000319e-05, 7.402799999999682e-05, 7.455499999999698e-05, 7.383299999999884e-05, 7.424999999999793e-05, 7.448600000000208e-05, 7.46110000000022e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:41:11.431" endtime="20201110 08:41:11.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.426" endtime="20201110 08:41:11.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.436" endtime="20201110 08:41:11.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:11.439" endtime="20201110 08:41:11.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.438" endtime="20201110 08:41:11.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.434" endtime="20201110 08:41:11.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.068" endtime="20201110 08:41:11.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.067" endtime="20201110 08:41:11.460"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.469" endtime="20201110 08:41:11.486"></status>
</kw>
<msg timestamp="20201110 08:41:11.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.467" endtime="20201110 08:41:11.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.487" endtime="20201110 08:41:11.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.490" endtime="20201110 08:41:11.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.465" endtime="20201110 08:41:11.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.462" endtime="20201110 08:41:11.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.500" endtime="20201110 08:41:11.785"></status>
</kw>
<msg timestamp="20201110 08:41:11.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:11.498" endtime="20201110 08:41:11.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02005325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:11.789" endtime="20201110 08:41:11.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.797" endtime="20201110 08:41:11.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.496" endtime="20201110 08:41:11.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.494" endtime="20201110 08:41:11.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:11.804" level="INFO">${RESULT} = [{'time': 0.020128222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.497199999999954e-05, 'source_diff': 7.497199999999954e-05}, {'time': 0.020206236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:11.801" endtime="20201110 08:41:11.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:11.817" level="INFO">${ACCURACY} = {'time': [0.020128222, 0.020206236, 0.020284264, 0.020362306, 0.020441319, 0.020522278, 0.020599333, 0.020677306, 0.020756306, 0.020835319, 0.020913319, 0.020992333, 0.021071333, 0.021149347, 0.021228...</msg>
<status status="PASS" starttime="20201110 08:41:11.805" endtime="20201110 08:41:11.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.822" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:41:11.821" endtime="20201110 08:41:11.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.824" level="INFO">VALUE: [7.497199999999954e-05, 7.529199999999764e-05, 7.533300000000034e-05, 7.501400000000172e-05, 7.493000000000083e-05, 7.570900000000019e-05, 7.500000000000215e-05, 7.497299999999901e-05, 7.530599999999721e-05, 7.537500000000252e-05, 7.493000000000083e-05, 7.579099999999866e-05, 7.518000000000108e-05, 7.567999999999811e-05, 7.574999999999943e-05, 7.530600000000068e-05, 7.523599999999936e-05, 7.495799999999997e-05, 7.52639999999985e-05, 7.516600000000151e-05, 7.495899999999944e-05, 7.534799999999939e-05, 7.548599999999961e-05, 7.533399999999982e-05, 7.520800000000022e-05, 7.54440000000009e-05, 7.538899999999862e-05, 7.523599999999936e-05, 7.540300000000166e-05, 7.563899999999887e-05, 7.577799999999857e-05, 7.565299999999844e-05, 7.569500000000062e-05, 7.548599999999961e-05, 7.530600000000068e-05, 7.541700000000123e-05, 7.513899999999837e-05, 7.566600000000201e-05, 7.495799999999997e-05, 7.515300000000141e-05, 7.506900000000052e-05, 7.543000000000133e-05, 7.565299999999844e-05, 7.488899999999812e-05, 7.518099999999708e-05, 7.565300000000191e-05, 7.516700000000098e-05, 7.488900000000159e-05, 7.494499999999987e-05, 7.501400000000172e-05]</msg>
<status status="PASS" starttime="20201110 08:41:11.823" endtime="20201110 08:41:11.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.818" endtime="20201110 08:41:11.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.828" endtime="20201110 08:41:11.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:11.831" endtime="20201110 08:41:11.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.830" endtime="20201110 08:41:11.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.826" endtime="20201110 08:41:11.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.461" endtime="20201110 08:41:11.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.460" endtime="20201110 08:41:11.852"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.861" endtime="20201110 08:41:11.878"></status>
</kw>
<msg timestamp="20201110 08:41:11.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.859" endtime="20201110 08:41:11.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:11.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:11.880" endtime="20201110 08:41:11.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.882" endtime="20201110 08:41:11.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.857" endtime="20201110 08:41:11.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.855" endtime="20201110 08:41:11.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:11.892" endtime="20201110 08:41:12.178"></status>
</kw>
<msg timestamp="20201110 08:41:12.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:11.891" endtime="20201110 08:41:12.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01976325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:12.183" endtime="20201110 08:41:12.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.191" endtime="20201110 08:41:12.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.888" endtime="20201110 08:41:12.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.887" endtime="20201110 08:41:12.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:12.197" level="INFO">${RESULT} = [{'time': 0.01976325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.622200000000079e-05, 'source_diff': 7.622200000000079e-05}, {'time': 0.01984325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:12.194" endtime="20201110 08:41:12.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:12.212" level="INFO">${ACCURACY} = {'time': [0.01976325, 0.01984325, 0.019923278, 0.020005292, 0.020085278, 0.020164292, 0.020244306, 0.020326361, 0.020404333, 0.020486333, 0.020564333, 0.020644361, 0.020725375, 0.020805361, 0.02088443...</msg>
<status status="PASS" starttime="20201110 08:41:12.198" endtime="20201110 08:41:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.216" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:41:12.215" endtime="20201110 08:41:12.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.219" level="INFO">VALUE: [7.622200000000079e-05, 7.648600000000061e-05, 7.673600000000086e-05, 7.658400000000107e-05, 7.665300000000291e-05, 7.661100000000073e-05, 7.605600000000143e-05, 7.663899999999987e-05, 7.57769999999991e-05, 7.634699999999744e-05, 7.579100000000213e-05, 7.63189999999983e-05, 7.590300000000216e-05, 7.647200000000104e-05, 7.643099999999833e-05, 7.659800000000064e-05, 7.620900000000069e-05, 7.670799999999825e-05, 7.591699999999826e-05, 7.582000000000075e-05, 7.624999999999993e-05, 7.618000000000208e-05, 7.672200000000129e-05, 7.643000000000233e-05, 7.643099999999833e-05, 7.613899999999937e-05, 7.654199999999889e-05, 7.620800000000122e-05, 7.622200000000079e-05, 7.673599999999739e-05, 7.666700000000248e-05, 7.64310000000018e-05, 7.6457999999998e-05, 7.66250000000003e-05, 7.601399999999925e-05, 7.622200000000079e-05, 7.626300000000003e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.623600000000036e-05, 7.669500000000162e-05, 7.61249999999998e-05, 7.658299999999812e-05, 7.62639999999995e-05, 7.672300000000076e-05, 7.629200000000211e-05, 7.652799999999932e-05, 7.669399999999868e-05, 7.594399999999793e-05, 7.677699999999663e-05]</msg>
<status status="PASS" starttime="20201110 08:41:12.217" endtime="20201110 08:41:12.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.213" endtime="20201110 08:41:12.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.222" endtime="20201110 08:41:12.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:12.226" endtime="20201110 08:41:12.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.224" endtime="20201110 08:41:12.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.221" endtime="20201110 08:41:12.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.853" endtime="20201110 08:41:12.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:11.852" endtime="20201110 08:41:12.247"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.255" endtime="20201110 08:41:12.273"></status>
</kw>
<msg timestamp="20201110 08:41:12.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:12.254" endtime="20201110 08:41:12.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:12.275" endtime="20201110 08:41:12.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.277" endtime="20201110 08:41:12.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.251" endtime="20201110 08:41:12.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.249" endtime="20201110 08:41:12.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.287" endtime="20201110 08:41:12.573"></status>
</kw>
<msg timestamp="20201110 08:41:12.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.286" endtime="20201110 08:41:12.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020657556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.577" endtime="20201110 08:41:12.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.585" endtime="20201110 08:41:12.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.283" endtime="20201110 08:41:12.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.281" endtime="20201110 08:41:12.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:12.592" level="INFO">${RESULT} = [{'time': 0.020657556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.708400000000157e-05, 'source_diff': 7.708400000000157e-05}, {'time': 0.020738569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:12.589" endtime="20201110 08:41:12.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:12.605" level="INFO">${ACCURACY} = {'time': [0.020657556, 0.020738569, 0.020817569, 0.020897583, 0.020977597, 0.021060597, 0.021140625, 0.021223639, 0.021303625, 0.021384653, 0.021464653, 0.021547653, 0.021630667, 0.021711694, 0.021792...</msg>
<status status="PASS" starttime="20201110 08:41:12.593" endtime="20201110 08:41:12.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.610" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:41:12.609" endtime="20201110 08:41:12.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.612" level="INFO">VALUE: [7.708400000000157e-05, 7.724999999999746e-05, 7.684700000000141e-05, 7.725000000000093e-05, 7.737500000000105e-05, 7.727800000000007e-05, 7.769399999999968e-05, 7.730599999999921e-05, 7.741699999999976e-05, 7.695900000000144e-05, 7.74449999999989e-05, 7.745899999999847e-05, 7.716699999999951e-05, 7.71380000000009e-05, 7.690200000000022e-05, 7.751300000000128e-05, 7.743099999999933e-05, 7.777699999999763e-05, 7.701400000000025e-05, 7.68189999999988e-05, 7.729200000000311e-05, 7.763900000000087e-05, 7.713900000000037e-05, 7.74030000000002e-05, 7.697299999999754e-05, 7.733399999999835e-05, 7.770899999999872e-05, 7.730599999999921e-05, 7.77770000000011e-05, 7.687500000000055e-05, 7.734699999999844e-05, 7.772199999999882e-05, 7.698600000000111e-05, 7.736099999999801e-05, 7.755599999999946e-05, 7.779100000000067e-05, 7.748600000000161e-05, 7.725000000000093e-05, 7.747299999999804e-05, 7.705499999999949e-05, 7.745899999999847e-05, 7.750000000000118e-05, 7.768000000000011e-05, 7.745800000000247e-05, 7.736100000000148e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.737500000000105e-05, 7.752799999999685e-05, 7.752800000000032e-05]</msg>
<status status="PASS" starttime="20201110 08:41:12.611" endtime="20201110 08:41:12.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.606" endtime="20201110 08:41:12.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.620" endtime="20201110 08:41:12.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:12.623" endtime="20201110 08:41:12.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.622" endtime="20201110 08:41:12.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.618" endtime="20201110 08:41:12.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.248" endtime="20201110 08:41:12.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.247" endtime="20201110 08:41:12.644"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.652" endtime="20201110 08:41:12.670"></status>
</kw>
<msg timestamp="20201110 08:41:12.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:12.651" endtime="20201110 08:41:12.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:12.672" endtime="20201110 08:41:12.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.674" endtime="20201110 08:41:12.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.648" endtime="20201110 08:41:12.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.646" endtime="20201110 08:41:12.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.684" endtime="20201110 08:41:12.970"></status>
</kw>
<msg timestamp="20201110 08:41:12.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.683" endtime="20201110 08:41:12.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.975" endtime="20201110 08:41:12.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.983" endtime="20201110 08:41:12.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.680" endtime="20201110 08:41:12.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.678" endtime="20201110 08:41:12.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:12.990" level="INFO">${RESULT} = [{'time': 0.020525875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.856900000000056e-05, 'source_diff': 7.856900000000056e-05}, {'time': 0.020609931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:12.986" endtime="20201110 08:41:12.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:13.003" level="INFO">${ACCURACY} = {'time': [0.020525875, 0.020609931, 0.020693917, 0.020774903, 0.020857931, 0.020940931, 0.021022931, 0.021104944, 0.021186972, 0.021268958, 0.021352042, 0.021434014, 0.021516986, 0.021598, 0.021679014...</msg>
<status status="PASS" starttime="20201110 08:41:12.991" endtime="20201110 08:41:13.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.007" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:41:13.006" endtime="20201110 08:41:13.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.010" level="INFO">VALUE: [7.856900000000056e-05, 7.838900000000162e-05, 7.847299999999904e-05, 7.85969999999997e-05, 7.861199999999874e-05, 7.823699999999836e-05, 7.8070000000003e-05, 7.834699999999944e-05, 7.802799999999735e-05, 7.872199999999982e-05, 7.830600000000021e-05, 7.791700000000026e-05, 7.82779999999976e-05, 7.837499999999858e-05, 7.862499999999883e-05, 7.830600000000021e-05, 7.82640000000015e-05, 7.819499999999965e-05, 7.870900000000319e-05, 7.800000000000168e-05, 7.82779999999976e-05, 7.824999999999846e-05, 7.804099999999745e-05, 7.827800000000107e-05, 7.813900000000137e-05, 7.837500000000205e-05, 7.779200000000014e-05, 7.833399999999935e-05, 7.8458e-05, 7.780599999999971e-05, 7.795899999999897e-05, 7.877800000000157e-05, 7.85129999999988e-05, 7.876299999999906e-05, 7.829100000000117e-05, 7.805500000000049e-05, 7.806900000000006e-05, 7.811099999999876e-05, 7.870800000000025e-05, 7.804200000000039e-05, 7.808299999999962e-05, 7.820799999999975e-05, 7.819499999999965e-05, 7.851399999999828e-05, 7.851400000000175e-05, 7.81389999999979e-05, 7.816700000000051e-05, 7.794399999999993e-05, 7.80969999999992e-05, 7.799999999999821e-05]</msg>
<status status="PASS" starttime="20201110 08:41:13.009" endtime="20201110 08:41:13.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.004" endtime="20201110 08:41:13.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.013" endtime="20201110 08:41:13.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:13.017" endtime="20201110 08:41:13.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.015" endtime="20201110 08:41:13.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.012" endtime="20201110 08:41:13.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.645" endtime="20201110 08:41:13.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.644" endtime="20201110 08:41:13.038"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.046" endtime="20201110 08:41:13.064"></status>
</kw>
<msg timestamp="20201110 08:41:13.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.045" endtime="20201110 08:41:13.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.065" endtime="20201110 08:41:13.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.068" endtime="20201110 08:41:13.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.042" endtime="20201110 08:41:13.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.040" endtime="20201110 08:41:13.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.078" endtime="20201110 08:41:13.364"></status>
</kw>
<msg timestamp="20201110 08:41:13.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:13.076" endtime="20201110 08:41:13.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:13.368" endtime="20201110 08:41:13.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.376" endtime="20201110 08:41:13.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.074" endtime="20201110 08:41:13.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.072" endtime="20201110 08:41:13.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:13.383" level="INFO">${RESULT} = [{'time': 0.019812792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.938899999999915e-05, 'source_diff': 7.938899999999915e-05}, {'time': 0.019896806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:13.380" endtime="20201110 08:41:13.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:13.396" level="INFO">${ACCURACY} = {'time': [0.019812792, 0.019896806, 0.019981806, 0.020062819, 0.020146819, 0.020229819, 0.020312833, 0.020396875, 0.020479847, 0.020563861, 0.020645889, 0.020729875, 0.020813889, 0.020896903, 0.020980...</msg>
<status status="PASS" starttime="20201110 08:41:13.384" endtime="20201110 08:41:13.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.401" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:41:13.400" endtime="20201110 08:41:13.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.403" level="INFO">VALUE: [7.938899999999915e-05, 7.943099999999786e-05, 7.92229999999998e-05, 7.890199999999875e-05, 7.95970000000007e-05, 7.974999999999996e-05, 7.954099999999895e-05, 7.897200000000007e-05, 7.917999999999814e-05, 7.887499999999908e-05, 7.974999999999996e-05, 7.876399999999853e-05, 7.929199999999817e-05, 7.911099999999976e-05, 7.919400000000118e-05, 7.929200000000164e-05, 7.959800000000017e-05, 7.9151999999999e-05, 7.9458000000001e-05, 7.966599999999907e-05, 7.902799999999835e-05, 7.95970000000007e-05, 7.916700000000151e-05, 7.930599999999774e-05, 7.97779999999991e-05, 7.94719999999971e-05, 7.92229999999998e-05, 7.934700000000044e-05, 7.936100000000001e-05, 7.976399999999953e-05, 7.897200000000007e-05, 7.952800000000232e-05, 7.906899999999759e-05, 7.897200000000007e-05, 7.906899999999759e-05, 7.923599999999989e-05, 7.944400000000143e-05, 7.902800000000182e-05, 7.90970000000002e-05, 7.901399999999878e-05, 7.899999999999921e-05, 7.918099999999761e-05, 7.933300000000088e-05, 7.966700000000201e-05, 7.887500000000255e-05, 7.926399999999903e-05, 7.929200000000164e-05, 7.883300000000037e-05, 7.934700000000044e-05, 7.970800000000125e-05]</msg>
<status status="PASS" starttime="20201110 08:41:13.402" endtime="20201110 08:41:13.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.397" endtime="20201110 08:41:13.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.407" endtime="20201110 08:41:13.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:13.410" endtime="20201110 08:41:13.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.409" endtime="20201110 08:41:13.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.405" endtime="20201110 08:41:13.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.039" endtime="20201110 08:41:13.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.038" endtime="20201110 08:41:13.431"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.440" endtime="20201110 08:41:13.457"></status>
</kw>
<msg timestamp="20201110 08:41:13.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.438" endtime="20201110 08:41:13.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.459" endtime="20201110 08:41:13.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.461" endtime="20201110 08:41:13.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.436" endtime="20201110 08:41:13.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.434" endtime="20201110 08:41:13.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.471" endtime="20201110 08:41:13.757"></status>
</kw>
<msg timestamp="20201110 08:41:13.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:13.470" endtime="20201110 08:41:13.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:13.761" endtime="20201110 08:41:13.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.769" endtime="20201110 08:41:13.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.467" endtime="20201110 08:41:13.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.465" endtime="20201110 08:41:13.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:13.776" level="INFO">${RESULT} = [{'time': 0.019873278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.01389999999999e-05, 'source_diff': 8.01389999999999e-05}, {'time': 0.019958264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:13.772" endtime="20201110 08:41:13.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:13.790" level="INFO">${ACCURACY} = {'time': [0.019873278, 0.019958264, 0.020043278, 0.020127278, 0.020211278, 0.020294292, 0.020380306, 0.020465306, 0.020548333, 0.020634333, 0.020717333, 0.020801361, 0.020887375, 0.020971375, 0.021055...</msg>
<status status="PASS" starttime="20201110 08:41:13.777" endtime="20201110 08:41:13.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.795" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:41:13.794" endtime="20201110 08:41:13.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.797" level="INFO">VALUE: [8.01389999999999e-05, 8.007000000000153e-05, 7.983400000000085e-05, 8.037499999999712e-05, 7.987500000000008e-05, 8.001399999999978e-05, 8.075000000000096e-05, 8.065299999999997e-05, 7.992999999999889e-05, 8.016599999999957e-05, 8.03190000000023e-05, 7.990299999999922e-05, 8.022200000000132e-05, 8.04169999999993e-05, 8.023600000000089e-05, 7.993099999999836e-05, 8.008399999999763e-05, 8.069500000000215e-05, 8.019499999999818e-05, 8.032000000000178e-05, 8.069400000000268e-05, 8.043099999999886e-05, 7.983300000000138e-05, 8.079200000000314e-05, 8.016700000000251e-05, 8.05130000000008e-05, 7.998600000000064e-05, 8.000000000000021e-05, 8.062500000000083e-05, 8.06109999999978e-05, 8.022199999999785e-05, 8.005600000000196e-05, 7.981999999999781e-05, 8.073700000000086e-05, 7.988800000000018e-05, 8.022200000000132e-05, 8.066600000000007e-05, 8.034699999999798e-05, 8.038899999999669e-05, 8.04169999999993e-05, 8.052700000000038e-05, 8.068099999999911e-05, 7.97779999999991e-05, 8.05970000000017e-05, 8.040299999999972e-05, 8.05840000000016e-05, 8.033400000000135e-05, 7.99580000000015e-05, 8.030499999999927e-05, 8.033300000000188e-05]</msg>
<status status="PASS" starttime="20201110 08:41:13.796" endtime="20201110 08:41:13.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.791" endtime="20201110 08:41:13.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.801" endtime="20201110 08:41:13.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:13.804" endtime="20201110 08:41:13.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.803" endtime="20201110 08:41:13.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.799" endtime="20201110 08:41:13.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.432" endtime="20201110 08:41:13.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.431" endtime="20201110 08:41:13.825"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.834" endtime="20201110 08:41:13.853"></status>
</kw>
<msg timestamp="20201110 08:41:13.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.832" endtime="20201110 08:41:13.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:13.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:13.854" endtime="20201110 08:41:13.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.857" endtime="20201110 08:41:13.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.829" endtime="20201110 08:41:13.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.827" endtime="20201110 08:41:13.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:13.867" endtime="20201110 08:41:14.152"></status>
</kw>
<msg timestamp="20201110 08:41:14.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:13.865" endtime="20201110 08:41:14.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019771097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:14.157" endtime="20201110 08:41:14.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.165" endtime="20201110 08:41:14.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.863" endtime="20201110 08:41:14.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.861" endtime="20201110 08:41:14.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:14.171" level="INFO">${RESULT} = [{'time': 0.019852736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.163899999999794e-05, 'source_diff': 8.163899999999794e-05}, {'time': 0.01993975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:41:14.168" endtime="20201110 08:41:14.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:14.185" level="INFO">${ACCURACY} = {'time': [0.019852736, 0.01993975, 0.020025778, 0.020110764, 0.020193778, 0.020278806, 0.020362806, 0.020446806, 0.020533833, 0.020618833, 0.020702847, 0.020788903, 0.020872875, 0.020956861, 0.0210418...</msg>
<status status="PASS" starttime="20201110 08:41:14.172" endtime="20201110 08:41:14.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.189" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:41:14.188" endtime="20201110 08:41:14.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.192" level="INFO">VALUE: [8.163899999999794e-05, 8.152800000000085e-05, 8.143099999999986e-05, 8.081999999999881e-05, 8.093099999999936e-05, 8.088900000000065e-05, 8.097300000000154e-05, 8.143099999999986e-05, 8.156900000000009e-05, 8.159699999999923e-05, 8.095799999999903e-05, 8.15840000000026e-05, 8.169400000000021e-05, 8.08329999999989e-05, 8.154200000000042e-05, 8.166700000000054e-05, 8.175000000000196e-05, 8.126400000000103e-05, 8.124999999999799e-05, 8.120899999999875e-05, 8.155599999999999e-05, 8.161100000000227e-05, 8.141600000000082e-05, 8.122199999999885e-05, 8.155599999999999e-05, 8.138900000000115e-05, 8.155599999999999e-05, 8.095799999999903e-05, 8.1152999999997e-05, 8.173599999999892e-05, 8.088900000000065e-05, 8.15979999999987e-05, 8.158299999999966e-05, 8.158399999999913e-05, 8.088900000000065e-05, 8.123600000000189e-05, 8.102800000000035e-05, 8.123599999999842e-05, 8.14719999999991e-05, 8.158399999999913e-05, 8.137500000000158e-05, 8.101400000000078e-05, 8.123600000000189e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.152800000000085e-05, 8.126299999999809e-05, 8.163799999999846e-05, 8.105500000000002e-05, 8.10970000000022e-05]</msg>
<status status="PASS" starttime="20201110 08:41:14.190" endtime="20201110 08:41:14.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.186" endtime="20201110 08:41:14.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.195" endtime="20201110 08:41:14.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:14.199" endtime="20201110 08:41:14.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.197" endtime="20201110 08:41:14.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.194" endtime="20201110 08:41:14.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.826" endtime="20201110 08:41:14.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:13.825" endtime="20201110 08:41:14.220"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.228" endtime="20201110 08:41:14.246"></status>
</kw>
<msg timestamp="20201110 08:41:14.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:14.227" endtime="20201110 08:41:14.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:14.247" endtime="20201110 08:41:14.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.250" endtime="20201110 08:41:14.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.224" endtime="20201110 08:41:14.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.222" endtime="20201110 08:41:14.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.260" endtime="20201110 08:41:14.544"></status>
</kw>
<msg timestamp="20201110 08:41:14.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:14.258" endtime="20201110 08:41:14.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:14.548" endtime="20201110 08:41:14.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.557" endtime="20201110 08:41:14.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.256" endtime="20201110 08:41:14.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.254" endtime="20201110 08:41:14.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:14.563" level="INFO">${RESULT} = [{'time': 0.019823542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.25979999999997e-05, 'source_diff': 8.25979999999997e-05}, {'time': 0.019911556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:14.560" endtime="20201110 08:41:14.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:14.576" level="INFO">${ACCURACY} = {'time': [0.019823542, 0.019911556, 0.019997569, 0.020084569, 0.020171583, 0.020259597, 0.020346597, 0.020433625, 0.020518667, 0.020603639, 0.020690639, 0.020775653, 0.020860681, 0.020948667, 0.021036...</msg>
<status status="PASS" starttime="20201110 08:41:14.564" endtime="20201110 08:41:14.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.581" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:41:14.580" endtime="20201110 08:41:14.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.583" level="INFO">VALUE: [8.25979999999997e-05, 8.216700000000104e-05, 8.26659999999986e-05, 8.251299999999934e-05, 8.17910000000012e-05, 8.216600000000157e-05, 8.205500000000102e-05, 8.26109999999998e-05, 8.218100000000061e-05, 8.262499999999937e-05, 8.24170000000013e-05, 8.188900000000165e-05, 8.202799999999788e-05, 8.268100000000111e-05, 8.251399999999881e-05, 8.194399999999699e-05, 8.24720000000001e-05, 8.272200000000035e-05, 8.218000000000114e-05, 8.229200000000117e-05, 8.187499999999862e-05, 8.245799999999706e-05, 8.186099999999905e-05, 8.224999999999899e-05, 8.222200000000332e-05, 8.184799999999895e-05, 8.177799999999763e-05, 8.230600000000074e-05, 8.263799999999946e-05, 8.202700000000188e-05, 8.202799999999788e-05, 8.226400000000203e-05, 8.226400000000203e-05, 8.224999999999899e-05, 8.200000000000221e-05, 8.186099999999905e-05, 8.230600000000074e-05, 8.19589999999995e-05, 8.256999999999709e-05, 8.212499999999887e-05, 8.237500000000259e-05, 8.276299999999959e-05, 8.244400000000096e-05, 8.236099999999955e-05, 8.241599999999835e-05, 8.244500000000043e-05, 8.200000000000221e-05, 8.26109999999998e-05, 8.268099999999765e-05, 8.219500000000018e-05]</msg>
<status status="PASS" starttime="20201110 08:41:14.582" endtime="20201110 08:41:14.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.577" endtime="20201110 08:41:14.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.587" endtime="20201110 08:41:14.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:14.590" endtime="20201110 08:41:14.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.589" endtime="20201110 08:41:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.585" endtime="20201110 08:41:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.220" endtime="20201110 08:41:14.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.220" endtime="20201110 08:41:14.612"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.620" endtime="20201110 08:41:14.639"></status>
</kw>
<msg timestamp="20201110 08:41:14.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:14.619" endtime="20201110 08:41:14.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:14.640" endtime="20201110 08:41:14.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.643" endtime="20201110 08:41:14.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.616" endtime="20201110 08:41:14.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.614" endtime="20201110 08:41:14.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.653" endtime="20201110 08:41:14.938"></status>
</kw>
<msg timestamp="20201110 08:41:14.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:14.651" endtime="20201110 08:41:14.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:14.942" endtime="20201110 08:41:14.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.951" endtime="20201110 08:41:14.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.649" endtime="20201110 08:41:14.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.647" endtime="20201110 08:41:14.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:14.958" level="INFO">${RESULT} = [{'time': 0.020098778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.344500000000143e-05, 'source_diff': 8.344500000000143e-05}, {'time': 0.020185792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:14.954" endtime="20201110 08:41:14.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:14.971" level="INFO">${ACCURACY} = {'time': [0.020098778, 0.020185792, 0.020272806, 0.020360819, 0.020448833, 0.020537875, 0.020624847, 0.020712847, 0.020800875, 0.020888889, 0.020976875, 0.021062944, 0.021149903, 0.021238917, 0.021325...</msg>
<status status="PASS" starttime="20201110 08:41:14.959" endtime="20201110 08:41:14.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.976" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:41:14.975" endtime="20201110 08:41:14.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.978" level="INFO">VALUE: [8.344500000000143e-05, 8.348600000000067e-05, 8.343100000000186e-05, 8.312499999999987e-05, 8.294399999999799e-05, 8.320800000000128e-05, 8.343000000000239e-05, 8.309700000000073e-05, 8.341699999999883e-05, 8.290300000000222e-05, 8.376400000000006e-05, 8.308300000000116e-05, 8.34720000000011e-05, 8.322300000000032e-05, 8.287499999999962e-05, 8.370799999999831e-05, 8.366600000000307e-05, 8.324999999999999e-05, 8.319399999999824e-05, 8.308300000000116e-05, 8.28330000000009e-05, 8.376400000000006e-05, 8.363899999999994e-05, 8.336200000000002e-05, 8.337500000000012e-05, 8.284700000000048e-05, 8.368099999999865e-05, 8.294400000000146e-05, 8.35980000000007e-05, 8.298600000000017e-05, 8.323600000000042e-05, 8.359700000000123e-05, 8.334700000000098e-05, 8.359699999999776e-05, 8.316700000000204e-05, 8.370799999999831e-05, 8.281999999999734e-05, 8.291699999999833e-05, 8.322199999999738e-05, 8.305600000000149e-05, 8.376400000000006e-05, 8.376300000000059e-05, 8.370800000000178e-05, 8.330500000000227e-05, 8.294399999999799e-05, 8.287499999999962e-05, 8.33049999999988e-05, 8.356900000000209e-05, 8.344500000000143e-05, 8.322200000000085e-05]</msg>
<status status="PASS" starttime="20201110 08:41:14.977" endtime="20201110 08:41:14.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.972" endtime="20201110 08:41:14.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.982" endtime="20201110 08:41:14.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:14.986" endtime="20201110 08:41:15.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.984" endtime="20201110 08:41:15.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.980" endtime="20201110 08:41:15.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.612" endtime="20201110 08:41:15.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.612" endtime="20201110 08:41:15.007"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.015" endtime="20201110 08:41:15.033"></status>
</kw>
<msg timestamp="20201110 08:41:15.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.013" endtime="20201110 08:41:15.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.035" endtime="20201110 08:41:15.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.037" endtime="20201110 08:41:15.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.011" endtime="20201110 08:41:15.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.009" endtime="20201110 08:41:15.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.047" endtime="20201110 08:41:15.332"></status>
</kw>
<msg timestamp="20201110 08:41:15.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020700861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.046" endtime="20201110 08:41:15.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020616875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020700861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.337" endtime="20201110 08:41:15.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.346" endtime="20201110 08:41:15.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.043" endtime="20201110 08:41:15.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.042" endtime="20201110 08:41:15.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:15.353" level="INFO">${RESULT} = [{'time': 0.020700861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.398600000000117e-05, 'source_diff': 8.398600000000117e-05}, {'time': 0.020790847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:15.349" endtime="20201110 08:41:15.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:15.367" level="INFO">${ACCURACY} = {'time': [0.020700861, 0.020790847, 0.020880861, 0.020969875, 0.021058875, 0.021145889, 0.021235903, 0.021324931, 0.021412931, 0.021500931, 0.021589958, 0.021676958, 0.021763958, 0.021852972, 0.021941...</msg>
<status status="PASS" starttime="20201110 08:41:15.354" endtime="20201110 08:41:15.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.372" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:41:15.371" endtime="20201110 08:41:15.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.374" level="INFO">VALUE: [8.398600000000117e-05, 8.41110000000013e-05, 8.470799999999931e-05, 8.441699999999983e-05, 8.46530000000005e-05, 8.401400000000031e-05, 8.452800000000038e-05, 8.449999999999777e-05, 8.42370000000009e-05, 8.46530000000005e-05, 8.441600000000035e-05, 8.383299999999844e-05, 8.383299999999844e-05, 8.459699999999876e-05, 8.477800000000063e-05, 8.459699999999876e-05, 8.470799999999931e-05, 8.398600000000117e-05, 8.388900000000019e-05, 8.45980000000017e-05, 8.422199999999838e-05, 8.388900000000019e-05, 8.474999999999802e-05, 8.472199999999888e-05, 8.394399999999899e-05, 8.461099999999833e-05, 8.46249999999979e-05, 8.430599999999927e-05, 8.466700000000008e-05, 8.450000000000124e-05, 8.447199999999863e-05, 8.448600000000167e-05, 8.400000000000074e-05, 8.463900000000094e-05, 8.408299999999869e-05, 8.387500000000062e-05, 8.442999999999992e-05, 8.43469999999985e-05, 8.47920000000002e-05, 8.42919999999997e-05, 8.455600000000299e-05, 8.422200000000185e-05, 8.44859999999982e-05, 8.447199999999863e-05, 8.412500000000087e-05, 8.405600000000249e-05, 8.440200000000078e-05, 8.461099999999833e-05, 8.436100000000155e-05, 8.465200000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:41:15.373" endtime="20201110 08:41:15.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.368" endtime="20201110 08:41:15.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.378" endtime="20201110 08:41:15.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:15.381" endtime="20201110 08:41:15.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.380" endtime="20201110 08:41:15.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.376" endtime="20201110 08:41:15.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.007" endtime="20201110 08:41:15.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.007" endtime="20201110 08:41:15.402"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.411" endtime="20201110 08:41:15.429"></status>
</kw>
<msg timestamp="20201110 08:41:15.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.409" endtime="20201110 08:41:15.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.431" endtime="20201110 08:41:15.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.433" endtime="20201110 08:41:15.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.407" endtime="20201110 08:41:15.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.405" endtime="20201110 08:41:15.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.443" endtime="20201110 08:41:15.729"></status>
</kw>
<msg timestamp="20201110 08:41:15.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.442" endtime="20201110 08:41:15.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.733" endtime="20201110 08:41:15.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.741" endtime="20201110 08:41:15.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.439" endtime="20201110 08:41:15.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.438" endtime="20201110 08:41:15.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:15.748" level="INFO">${RESULT} = [{'time': 0.019776389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.574999999999902e-05, 'source_diff': 8.574999999999902e-05}, {'time': 0.019865403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:15.744" endtime="20201110 08:41:15.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:15.761" level="INFO">${ACCURACY} = {'time': [0.019776389, 0.019865403, 0.019953403, 0.020043417, 0.020133431, 0.020224444, 0.020315444, 0.020405444, 0.020496472, 0.020584472, 0.020675486, 0.0207635, 0.020852514, 0.020942514, 0.02103054...</msg>
<status status="PASS" starttime="20201110 08:41:15.749" endtime="20201110 08:41:15.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.766" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:41:15.765" endtime="20201110 08:41:15.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.768" level="INFO">VALUE: [8.574999999999902e-05, 8.495899999999904e-05, 8.566700000000108e-05, 8.494499999999947e-05, 8.501400000000131e-05, 8.577700000000216e-05, 8.540199999999831e-05, 8.511099999999883e-05, 8.522200000000285e-05, 8.549999999999877e-05, 8.516700000000058e-05, 8.519400000000024e-05, 8.494499999999947e-05, 8.530600000000027e-05, 8.490300000000076e-05, 8.481999999999934e-05, 8.541699999999736e-05, 8.506899999999665e-05, 8.516599999999763e-05, 8.53469999999995e-05, 8.572199999999988e-05, 8.576400000000206e-05, 8.542999999999745e-05, 8.530600000000027e-05, 8.579099999999826e-05, 8.488900000000119e-05, 8.563899999999847e-05, 8.555600000000052e-05, 8.565299999999804e-05, 8.541699999999736e-05, 8.549999999999877e-05, 8.574999999999902e-05, 8.56660000000016e-05, 8.486099999999858e-05, 8.518000000000067e-05, 8.52920000000007e-05, 8.49309999999999e-05, 8.495799999999956e-05, 8.550000000000224e-05, 8.552800000000138e-05, 8.574999999999902e-05, 8.48050000000003e-05, 8.523699999999843e-05, 8.501300000000184e-05, 8.574999999999902e-05, 8.483299999999944e-05, 8.522199999999938e-05, 8.552800000000138e-05, 8.527800000000113e-05, 8.540300000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:41:15.767" endtime="20201110 08:41:15.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.762" endtime="20201110 08:41:15.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.772" endtime="20201110 08:41:15.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:15.775" endtime="20201110 08:41:15.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.773" endtime="20201110 08:41:15.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.770" endtime="20201110 08:41:15.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.403" endtime="20201110 08:41:15.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.402" endtime="20201110 08:41:15.796"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.805" endtime="20201110 08:41:15.823"></status>
</kw>
<msg timestamp="20201110 08:41:15.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.803" endtime="20201110 08:41:15.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:15.825" endtime="20201110 08:41:15.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.827" endtime="20201110 08:41:15.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.800" endtime="20201110 08:41:15.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.798" endtime="20201110 08:41:15.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.837" endtime="20201110 08:41:16.123"></status>
</kw>
<msg timestamp="20201110 08:41:16.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.835" endtime="20201110 08:41:16.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:16.128" endtime="20201110 08:41:16.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.136" endtime="20201110 08:41:16.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.833" endtime="20201110 08:41:16.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.831" endtime="20201110 08:41:16.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:16.142" level="INFO">${RESULT} = [{'time': 0.019785889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582000000000034e-05, 'source_diff': 8.582000000000034e-05}, {'time': 0.019875903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:16.139" endtime="20201110 08:41:16.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:16.156" level="INFO">${ACCURACY} = {'time': [0.019785889, 0.019875903, 0.019963958, 0.020052917, 0.020140931, 0.020229931, 0.020318958, 0.020409958, 0.020499986, 0.020588972, 0.020678986, 0.020769, 0.020861014, 0.020952014, 0.021043028...</msg>
<status status="PASS" starttime="20201110 08:41:16.143" endtime="20201110 08:41:16.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.160" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:41:16.159" endtime="20201110 08:41:16.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.163" level="INFO">VALUE: [8.582000000000034e-05, 8.599999999999927e-05, 8.583300000000044e-05, 8.61249999999994e-05, 8.59310000000009e-05, 8.613899999999897e-05, 8.583300000000044e-05, 8.616599999999863e-05, 8.6153000000002e-05, 8.601399999999884e-05, 8.601399999999884e-05, 8.661100000000033e-05, 8.623599999999995e-05, 8.587500000000262e-05, 8.618099999999768e-05, 8.590300000000176e-05, 8.583399999999991e-05, 8.634799999999998e-05, 8.675000000000002e-05, 8.662500000000337e-05, 8.619400000000124e-05, 8.654099999999901e-05, 8.623599999999995e-05, 8.626399999999909e-05, 8.63470000000005e-05, 8.620899999999682e-05, 8.638899999999922e-05, 8.624999999999952e-05, 8.608399999999669e-05, 8.5847e-05, 8.679100000000273e-05, 8.63470000000005e-05, 8.647200000000063e-05, 8.676399999999959e-05, 8.647200000000063e-05, 8.644399999999802e-05, 8.601400000000231e-05, 8.670800000000131e-05, 8.661100000000033e-05, 8.613899999999897e-05, 8.594500000000047e-05, 8.593099999999743e-05, 8.583300000000044e-05, 8.594400000000099e-05, 8.663899999999947e-05, 8.644400000000149e-05, 8.672200000000088e-05, 8.638899999999922e-05, 8.629199999999823e-05, 8.655599999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:41:16.161" endtime="20201110 08:41:16.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.157" endtime="20201110 08:41:16.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.166" endtime="20201110 08:41:16.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:16.170" endtime="20201110 08:41:16.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.168" endtime="20201110 08:41:16.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.165" endtime="20201110 08:41:16.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.797" endtime="20201110 08:41:16.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.796" endtime="20201110 08:41:16.191"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.199" endtime="20201110 08:41:16.218"></status>
</kw>
<msg timestamp="20201110 08:41:16.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:16.198" endtime="20201110 08:41:16.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:16.219" endtime="20201110 08:41:16.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.222" endtime="20201110 08:41:16.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.195" endtime="20201110 08:41:16.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.193" endtime="20201110 08:41:16.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.232" endtime="20201110 08:41:16.516"></status>
</kw>
<msg timestamp="20201110 08:41:16.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:16.230" endtime="20201110 08:41:16.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020775208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:16.520" endtime="20201110 08:41:16.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.528" endtime="20201110 08:41:16.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.228" endtime="20201110 08:41:16.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.226" endtime="20201110 08:41:16.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:16.535" level="INFO">${RESULT} = [{'time': 0.020775208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.729099999999976e-05, 'source_diff': 8.729099999999976e-05}, {'time': 0.020865236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:16.532" endtime="20201110 08:41:16.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:16.548" level="INFO">${ACCURACY} = {'time': [0.020775208, 0.020865236, 0.020955236, 0.02104725, 0.021137264, 0.021227264, 0.021318278, 0.021408292, 0.021501292, 0.021591319, 0.021682333, 0.021771333, 0.021862375, 0.021953347, 0.0220463...</msg>
<status status="PASS" starttime="20201110 08:41:16.536" endtime="20201110 08:41:16.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.553" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:41:16.552" endtime="20201110 08:41:16.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.555" level="INFO">VALUE: [8.729099999999976e-05, 8.738900000000022e-05, 8.773599999999798e-05, 8.772199999999841e-05, 8.715299999999954e-05, 8.772199999999841e-05, 8.719499999999825e-05, 8.71250000000004e-05, 8.720900000000129e-05, 8.686100000000058e-05, 8.713899999999997e-05, 8.695800000000156e-05, 8.751400000000034e-05, 8.71660000000031e-05, 8.737500000000065e-05, 8.741699999999936e-05, 8.769400000000274e-05, 8.770799999999884e-05, 8.71669999999991e-05, 8.702799999999941e-05, 8.737500000000065e-05, 8.726400000000009e-05, 8.73470000000015e-05, 8.679099999999926e-05, 8.775000000000102e-05, 8.716599999999963e-05, 8.762499999999743e-05, 8.770800000000231e-05, 8.706999999999812e-05, 8.74860000000012e-05, 8.709700000000126e-05, 8.6847000000001e-05, 8.734800000000098e-05, 8.684800000000048e-05, 8.690199999999981e-05, 8.702799999999941e-05, 8.713899999999997e-05, 8.722200000000138e-05, 8.737500000000065e-05, 8.686100000000058e-05, 8.683299999999797e-05, 8.687500000000015e-05, 8.718100000000215e-05, 8.6944999999998e-05, 8.683400000000091e-05, 8.701399999999984e-05, 8.732000000000184e-05, 8.742999999999945e-05, 8.694399999999852e-05, 8.774999999999755e-05]</msg>
<status status="PASS" starttime="20201110 08:41:16.554" endtime="20201110 08:41:16.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.549" endtime="20201110 08:41:16.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.559" endtime="20201110 08:41:16.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:16.562" endtime="20201110 08:41:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.561" endtime="20201110 08:41:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.557" endtime="20201110 08:41:16.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.191" endtime="20201110 08:41:16.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.191" endtime="20201110 08:41:16.583"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.592" endtime="20201110 08:41:16.611"></status>
</kw>
<msg timestamp="20201110 08:41:16.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:16.590" endtime="20201110 08:41:16.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:16.612" endtime="20201110 08:41:16.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.615" endtime="20201110 08:41:16.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.588" endtime="20201110 08:41:16.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.586" endtime="20201110 08:41:16.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.624" endtime="20201110 08:41:16.911"></status>
</kw>
<msg timestamp="20201110 08:41:16.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:16.623" endtime="20201110 08:41:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019885806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:16.916" endtime="20201110 08:41:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.924" endtime="20201110 08:41:16.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.620" endtime="20201110 08:41:16.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.619" endtime="20201110 08:41:16.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:16.930" level="INFO">${RESULT} = [{'time': 0.019885806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.869499999999975e-05, 'source_diff': 8.869499999999975e-05}, {'time': 0.019976847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:16.927" endtime="20201110 08:41:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:16.945" level="INFO">${ACCURACY} = {'time': [0.019885806, 0.019976847, 0.020070833, 0.020162819, 0.020253833, 0.020346847, 0.020438861, 0.020530889, 0.020623875, 0.020717944, 0.020811903, 0.020904917, 0.020997944, 0.021089944, 0.021181...</msg>
<status status="PASS" starttime="20201110 08:41:16.931" endtime="20201110 08:41:16.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.949" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:41:16.948" endtime="20201110 08:41:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:16.952" level="INFO">VALUE: [8.869499999999975e-05, 8.795799999999909e-05, 8.876399999999812e-05, 8.823599999999848e-05, 8.873599999999898e-05, 8.792999999999995e-05, 8.783299999999897e-05, 8.838900000000122e-05, 8.852800000000091e-05, 8.862499999999843e-05, 8.845899999999907e-05, 8.783399999999844e-05, 8.826300000000162e-05, 8.83189999999999e-05, 8.825000000000152e-05, 8.822200000000238e-05, 8.806899999999965e-05, 8.806899999999965e-05, 8.790300000000029e-05, 8.874999999999855e-05, 8.813900000000097e-05, 8.829200000000023e-05, 8.825000000000152e-05, 8.804199999999998e-05, 8.84999999999983e-05, 8.843000000000045e-05, 8.784699999999854e-05, 8.86670000000006e-05, 8.862499999999843e-05, 8.859699999999929e-05, 8.834699999999904e-05, 8.850000000000177e-05, 8.786100000000158e-05, 8.869499999999975e-05, 8.83189999999999e-05, 8.84999999999983e-05, 8.834799999999851e-05, 8.822300000000186e-05, 8.872200000000288e-05, 8.833300000000294e-05, 8.808299999999922e-05, 8.822299999999839e-05, 8.845799999999959e-05, 8.877800000000116e-05, 8.802799999999694e-05, 8.852800000000091e-05, 8.777700000000069e-05, 8.794399999999952e-05, 8.781999999999887e-05, 8.834799999999851e-05]</msg>
<status status="PASS" starttime="20201110 08:41:16.950" endtime="20201110 08:41:16.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.946" endtime="20201110 08:41:16.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.955" endtime="20201110 08:41:16.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:16.959" endtime="20201110 08:41:16.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.957" endtime="20201110 08:41:16.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.954" endtime="20201110 08:41:16.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.584" endtime="20201110 08:41:16.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.584" endtime="20201110 08:41:16.980"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:16.989" endtime="20201110 08:41:17.008"></status>
</kw>
<msg timestamp="20201110 08:41:17.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:16.988" endtime="20201110 08:41:17.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:17.010" endtime="20201110 08:41:17.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.012" endtime="20201110 08:41:17.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.985" endtime="20201110 08:41:17.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.982" endtime="20201110 08:41:17.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.022" endtime="20201110 08:41:17.307"></status>
</kw>
<msg timestamp="20201110 08:41:17.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.020" endtime="20201110 08:41:17.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.312" endtime="20201110 08:41:17.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.320" endtime="20201110 08:41:17.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.018" endtime="20201110 08:41:17.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.016" endtime="20201110 08:41:17.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:17.327" level="INFO">${RESULT} = [{'time': 0.021161347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.969400000000127e-05, 'source_diff': 8.969400000000127e-05}, {'time': 0.021254361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:17.323" endtime="20201110 08:41:17.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:17.340" level="INFO">${ACCURACY} = {'time': [0.021161347, 0.021254361, 0.021346361, 0.021439361, 0.021533375, 0.021625403, 0.021717431, 0.021809403, 0.021902417, 0.021994431, 0.022086444, 0.022180444, 0.022274458, 0.022369472, 0.022463...</msg>
<status status="PASS" starttime="20201110 08:41:17.328" endtime="20201110 08:41:17.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.344" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:41:17.343" endtime="20201110 08:41:17.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.347" level="INFO">VALUE: [8.969400000000127e-05, 8.888899999999825e-05, 8.897199999999966e-05, 8.970800000000084e-05, 8.912499999999893e-05, 8.925000000000252e-05, 8.905600000000055e-05, 8.950000000000277e-05, 8.970900000000032e-05, 8.961199999999933e-05, 8.897199999999966e-05, 8.890200000000181e-05, 8.96519999999991e-05, 8.976400000000259e-05, 8.965300000000204e-05, 8.888900000000172e-05, 8.936099999999961e-05, 8.888800000000224e-05, 8.920899999999982e-05, 8.895899999999957e-05, 8.963900000000247e-05, 8.947299999999964e-05, 8.954099999999854e-05, 8.900000000000227e-05, 8.904200000000098e-05, 8.924999999999905e-05, 8.893000000000095e-05, 8.89999999999988e-05, 8.901400000000184e-05, 8.8945e-05, 8.932000000000037e-05, 8.93060000000008e-05, 8.888899999999825e-05, 8.979100000000226e-05, 8.930500000000133e-05, 8.908300000000022e-05, 8.974999999999955e-05, 8.926400000000209e-05, 8.913900000000197e-05, 8.955600000000105e-05, 8.959700000000029e-05, 8.951399999999887e-05, 8.912499999999893e-05, 8.970900000000032e-05, 8.944400000000102e-05, 8.923699999999896e-05, 8.919400000000077e-05, 8.927800000000166e-05, 8.902800000000141e-05, 8.93190000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:41:17.345" endtime="20201110 08:41:17.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.341" endtime="20201110 08:41:17.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.350" endtime="20201110 08:41:17.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:17.354" endtime="20201110 08:41:17.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.352" endtime="20201110 08:41:17.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.349" endtime="20201110 08:41:17.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.981" endtime="20201110 08:41:17.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:16.980" endtime="20201110 08:41:17.375"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.383" endtime="20201110 08:41:17.402"></status>
</kw>
<msg timestamp="20201110 08:41:17.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:17.382" endtime="20201110 08:41:17.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:17.403" endtime="20201110 08:41:17.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.406" endtime="20201110 08:41:17.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.379" endtime="20201110 08:41:17.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.377" endtime="20201110 08:41:17.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.416" endtime="20201110 08:41:17.701"></status>
</kw>
<msg timestamp="20201110 08:41:17.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.414" endtime="20201110 08:41:17.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.705" endtime="20201110 08:41:17.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.713" endtime="20201110 08:41:17.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.412" endtime="20201110 08:41:17.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.410" endtime="20201110 08:41:17.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:17.720" level="INFO">${RESULT} = [{'time': 0.019965139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.062500000000043e-05, 'source_diff': 9.062500000000043e-05}, {'time': 0.020058139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:17.717" endtime="20201110 08:41:17.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:17.733" level="INFO">${ACCURACY} = {'time': [0.019965139, 0.020058139, 0.020153125, 0.020247139, 0.020343208, 0.020438181, 0.020532167, 0.020628181, 0.020723208, 0.020817208, 0.020912264, 0.021007222, 0.021101236, 0.021196264, 0.021289...</msg>
<status status="PASS" starttime="20201110 08:41:17.721" endtime="20201110 08:41:17.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.738" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:41:17.737" endtime="20201110 08:41:17.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.740" level="INFO">VALUE: [9.062500000000043e-05, 9.016699999999864e-05, 9.022200000000091e-05, 9.019500000000125e-05, 9.051399999999987e-05, 9.05000000000003e-05, 9.007000000000112e-05, 9.04589999999976e-05, 9.01939999999983e-05, 9.054099999999954e-05, 9.034700000000104e-05, 8.981899999999793e-05, 8.98329999999975e-05, 9.077799999999969e-05, 9.056999999999815e-05, 9.073600000000098e-05, 9.048599999999726e-05, 9.077799999999969e-05, 8.99869999999997e-05, 8.994400000000152e-05, 9.072200000000141e-05, 8.983300000000097e-05, 9.061100000000086e-05, 9.065299999999957e-05, 9.0639e-05, 9.002800000000241e-05, 9.040299999999932e-05, 9.032000000000137e-05, 8.9945000000001e-05, 9.04589999999976e-05, 8.979200000000173e-05, 9.005499999999861e-05, 8.991600000000238e-05, 9.051399999999987e-05, 9.045799999999812e-05, 9.037500000000018e-05, 9.061100000000086e-05, 9.048600000000073e-05, 8.983300000000097e-05, 8.979200000000173e-05, 9.002799999999894e-05, 9.037500000000018e-05, 9.079099999999979e-05, 9.002699999999947e-05, 9.009700000000079e-05, 9.001399999999937e-05, 8.980500000000183e-05, 8.992999999999848e-05, 9.030599999999833e-05, 9.066699999999914e-05]</msg>
<status status="PASS" starttime="20201110 08:41:17.739" endtime="20201110 08:41:17.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.734" endtime="20201110 08:41:17.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.744" endtime="20201110 08:41:17.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:17.747" endtime="20201110 08:41:17.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.746" endtime="20201110 08:41:17.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.742" endtime="20201110 08:41:17.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.376" endtime="20201110 08:41:17.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.375" endtime="20201110 08:41:17.768"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.777" endtime="20201110 08:41:17.796"></status>
</kw>
<msg timestamp="20201110 08:41:17.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:17.775" endtime="20201110 08:41:17.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:17.798" endtime="20201110 08:41:17.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.800" endtime="20201110 08:41:17.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.773" endtime="20201110 08:41:17.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.771" endtime="20201110 08:41:17.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.810" endtime="20201110 08:41:18.096"></status>
</kw>
<msg timestamp="20201110 08:41:18.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.809" endtime="20201110 08:41:18.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020295792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.100" endtime="20201110 08:41:18.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.108" endtime="20201110 08:41:18.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.806" endtime="20201110 08:41:18.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.805" endtime="20201110 08:41:18.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:18.114" level="INFO">${RESULT} = [{'time': 0.020295792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.147300000000164e-05, 'source_diff': 9.147300000000164e-05}, {'time': 0.020392792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:18.111" endtime="20201110 08:41:18.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:18.128" level="INFO">${ACCURACY} = {'time': [0.020295792, 0.020392792, 0.020486792, 0.020581875, 0.020676819, 0.020772833, 0.020867847, 0.020964861, 0.021061861, 0.021158875, 0.021253889, 0.021348903, 0.021443903, 0.021538917, 0.021634...</msg>
<status status="PASS" starttime="20201110 08:41:18.115" endtime="20201110 08:41:18.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.132" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:41:18.131" endtime="20201110 08:41:18.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.135" level="INFO">VALUE: [9.147300000000164e-05, 9.129199999999976e-05, 9.155599999999958e-05, 9.166700000000014e-05, 9.117999999999973e-05, 9.141600000000041e-05, 9.149999999999783e-05, 9.134700000000204e-05, 9.138900000000075e-05, 9.147200000000216e-05, 9.11390000000005e-05, 9.159699999999882e-05, 9.112500000000093e-05, 9.111100000000136e-05, 9.129199999999976e-05, 9.119400000000277e-05, 9.180599999999983e-05, 9.08329999999985e-05, 9.081899999999893e-05, 9.161100000000186e-05, 9.09589999999981e-05, 9.177799999999722e-05, 9.141699999999989e-05, 9.129199999999976e-05, 9.172299999999842e-05, 9.155599999999958e-05, 9.15269999999975e-05, 9.129199999999976e-05, 9.112500000000093e-05, 9.161100000000186e-05, 9.170899999999885e-05, 9.112499999999746e-05, 9.151400000000087e-05, 9.155500000000011e-05, 9.120900000000182e-05, 9.107000000000212e-05, 9.094499999999853e-05, 9.084800000000101e-05, 9.134699999999857e-05, 9.10000000000008e-05, 9.168000000000023e-05, 9.16939999999998e-05, 9.148600000000173e-05, 9.102799999999994e-05, 9.140300000000032e-05, 9.106999999999865e-05, 9.138900000000075e-05, 9.088900000000025e-05, 9.148599999999826e-05, 9.104100000000004e-05]</msg>
<status status="PASS" starttime="20201110 08:41:18.133" endtime="20201110 08:41:18.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.129" endtime="20201110 08:41:18.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.138" endtime="20201110 08:41:18.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:18.142" endtime="20201110 08:41:18.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.140" endtime="20201110 08:41:18.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.137" endtime="20201110 08:41:18.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.769" endtime="20201110 08:41:18.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.769" endtime="20201110 08:41:18.163"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.171" endtime="20201110 08:41:18.190"></status>
</kw>
<msg timestamp="20201110 08:41:18.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.170" endtime="20201110 08:41:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.192" endtime="20201110 08:41:18.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.194" endtime="20201110 08:41:18.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.167" endtime="20201110 08:41:18.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.165" endtime="20201110 08:41:18.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.204" endtime="20201110 08:41:18.488"></status>
</kw>
<msg timestamp="20201110 08:41:18.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.202" endtime="20201110 08:41:18.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.492" endtime="20201110 08:41:18.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.500" endtime="20201110 08:41:18.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.200" endtime="20201110 08:41:18.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.198" endtime="20201110 08:41:18.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:18.507" level="INFO">${RESULT} = [{'time': 0.019753167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.199999999999833e-05, 'source_diff': 9.199999999999833e-05}, {'time': 0.019851167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:18.504" endtime="20201110 08:41:18.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:18.522" level="INFO">${ACCURACY} = {'time': [0.019753167, 0.019851167, 0.019946194, 0.020043278, 0.020138222, 0.020233222, 0.020328222, 0.020424264, 0.02051925, 0.020615264, 0.020712264, 0.020807278, 0.020903292, 0.020999306, 0.0210964...</msg>
<status status="PASS" starttime="20201110 08:41:18.508" endtime="20201110 08:41:18.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.526" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:41:18.525" endtime="20201110 08:41:18.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.529" level="INFO">VALUE: [9.199999999999833e-05, 9.220899999999935e-05, 9.191600000000091e-05, 9.23199999999999e-05, 9.218000000000073e-05, 9.256899999999721e-05, 9.231900000000043e-05, 9.218100000000021e-05, 9.211099999999889e-05, 9.21390000000015e-05, 9.255600000000058e-05, 9.205600000000008e-05, 9.248599999999926e-05, 9.24589999999996e-05, 9.257000000000015e-05, 9.25000000000023e-05, 9.21390000000015e-05, 9.238900000000175e-05, 9.198599999999876e-05, 9.258300000000025e-05, 9.211099999999889e-05, 9.194499999999953e-05, 9.2639000000002e-05, 9.226399999999815e-05, 9.194499999999953e-05, 9.193099999999996e-05, 9.180500000000036e-05, 9.208299999999975e-05, 9.208299999999975e-05, 9.240299999999785e-05, 9.263899999999853e-05, 9.234800000000251e-05, 9.205600000000008e-05, 9.255600000000058e-05, 9.220899999999935e-05, 9.194499999999953e-05, 9.19589999999991e-05, 9.26940000000008e-05, 9.1945000000003e-05, 9.225000000000205e-05, 9.241700000000089e-05, 9.252800000000144e-05, 9.268099999999724e-05, 9.270800000000037e-05, 9.230600000000033e-05, 9.193099999999996e-05, 9.220899999999935e-05, 9.273700000000246e-05, 9.236099999999914e-05, 9.224999999999858e-05]</msg>
<status status="PASS" starttime="20201110 08:41:18.527" endtime="20201110 08:41:18.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.523" endtime="20201110 08:41:18.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.532" endtime="20201110 08:41:18.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:18.536" endtime="20201110 08:41:18.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.534" endtime="20201110 08:41:18.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.530" endtime="20201110 08:41:18.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.163" endtime="20201110 08:41:18.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.163" endtime="20201110 08:41:18.556"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.565" endtime="20201110 08:41:18.584"></status>
</kw>
<msg timestamp="20201110 08:41:18.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.563" endtime="20201110 08:41:18.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.586" endtime="20201110 08:41:18.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.589" endtime="20201110 08:41:18.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.561" endtime="20201110 08:41:18.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.559" endtime="20201110 08:41:18.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.599" endtime="20201110 08:41:18.885"></status>
</kw>
<msg timestamp="20201110 08:41:18.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.597" endtime="20201110 08:41:18.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.889" endtime="20201110 08:41:18.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.897" endtime="20201110 08:41:18.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.595" endtime="20201110 08:41:18.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.593" endtime="20201110 08:41:18.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:18.904" level="INFO">${RESULT} = [{'time': 0.019812806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.324999999999958e-05, 'source_diff': 9.324999999999958e-05}, {'time': 0.019909819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:18.901" endtime="20201110 08:41:18.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:18.917" level="INFO">${ACCURACY} = {'time': [0.019812806, 0.019909819, 0.020006819, 0.020103833, 0.020202847, 0.020301861, 0.020399861, 0.020496875, 0.020593889, 0.020690917, 0.020788903, 0.020887917, 0.020986931, 0.021083014, 0.021178...</msg>
<status status="PASS" starttime="20201110 08:41:18.905" endtime="20201110 08:41:18.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.922" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:41:18.921" endtime="20201110 08:41:18.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.924" level="INFO">VALUE: [9.324999999999958e-05, 9.337499999999971e-05, 9.347199999999722e-05, 9.325000000000305e-05, 9.352799999999897e-05, 9.365300000000257e-05, 9.287499999999921e-05, 9.343100000000146e-05, 9.323600000000001e-05, 9.343099999999799e-05, 9.305600000000108e-05, 9.369499999999781e-05, 9.316700000000164e-05, 9.373600000000051e-05, 9.31520000000026e-05, 9.340199999999937e-05, 9.284700000000007e-05, 9.343000000000198e-05, 9.341700000000189e-05, 9.319500000000078e-05, 9.362499999999996e-05, 9.301400000000237e-05, 9.366700000000214e-05, 9.379099999999932e-05, 9.375000000000008e-05, 9.340199999999937e-05, 9.348600000000026e-05, 9.29720000000002e-05, 9.334700000000057e-05, 9.279200000000126e-05, 9.29720000000002e-05, 9.376399999999965e-05, 9.363899999999953e-05, 9.372300000000042e-05, 9.345899999999713e-05, 9.362499999999996e-05, 9.306900000000118e-05, 9.33469999999971e-05, 9.31940000000013e-05, 9.36529999999991e-05, 9.334700000000057e-05, 9.355600000000158e-05, 9.34720000000007e-05, 9.304199999999804e-05, 9.288899999999878e-05, 9.284799999999954e-05, 9.308400000000022e-05, 9.375000000000008e-05, 9.323600000000001e-05, 9.377799999999922e-05]</msg>
<status status="PASS" starttime="20201110 08:41:18.923" endtime="20201110 08:41:18.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.918" endtime="20201110 08:41:18.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.928" endtime="20201110 08:41:18.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:18.932" endtime="20201110 08:41:18.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.930" endtime="20201110 08:41:18.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.926" endtime="20201110 08:41:18.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.557" endtime="20201110 08:41:18.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.557" endtime="20201110 08:41:18.953"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.961" endtime="20201110 08:41:18.981"></status>
</kw>
<msg timestamp="20201110 08:41:18.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.960" endtime="20201110 08:41:18.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:18.983" endtime="20201110 08:41:18.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.985" endtime="20201110 08:41:18.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.957" endtime="20201110 08:41:18.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.955" endtime="20201110 08:41:18.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.995" endtime="20201110 08:41:19.281"></status>
</kw>
<msg timestamp="20201110 08:41:19.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020711208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.994" endtime="20201110 08:41:19.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020711208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:19.285" endtime="20201110 08:41:19.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.294" endtime="20201110 08:41:19.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.991" endtime="20201110 08:41:19.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.989" endtime="20201110 08:41:19.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:19.300" level="INFO">${RESULT} = [{'time': 0.020805167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.39590000000011e-05, 'source_diff': 9.39590000000011e-05}, {'time': 0.020904181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:19.297" endtime="20201110 08:41:19.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:19.314" level="INFO">${ACCURACY} = {'time': [0.020805167, 0.020904181, 0.021002194, 0.021100222, 0.021200236, 0.021299236, 0.021399236, 0.021497264, 0.021594264, 0.021693292, 0.021793292, 0.021890292, 0.021990306, 0.022089361, 0.022187...</msg>
<status status="PASS" starttime="20201110 08:41:19.301" endtime="20201110 08:41:19.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.318" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:41:19.317" endtime="20201110 08:41:19.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.321" level="INFO">VALUE: [9.39590000000011e-05, 9.459800000000129e-05, 9.423599999999754e-05, 9.449999999999736e-05, 9.459700000000182e-05, 9.412500000000046e-05, 9.42079999999984e-05, 9.444499999999856e-05, 9.383299999999803e-05, 9.459799999999782e-05, 9.463900000000053e-05, 9.459799999999782e-05, 9.420900000000135e-05, 9.456899999999921e-05, 9.456899999999921e-05, 9.390299999999935e-05, 9.417999999999926e-05, 9.431899999999896e-05, 9.380599999999836e-05, 9.424999999999711e-05, 9.408400000000122e-05, 9.419500000000178e-05, 9.438900000000028e-05, 9.383299999999803e-05, 9.418099999999874e-05, 9.422200000000144e-05, 9.475000000000108e-05, 9.395799999999815e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.440299999999985e-05, 9.418099999999874e-05, 9.458399999999825e-05, 9.388899999999978e-05, 9.431999999999843e-05, 9.472200000000194e-05, 9.475000000000108e-05, 9.441599999999994e-05, 9.409700000000132e-05, 9.383299999999803e-05, 9.455599999999911e-05, 9.47079999999989e-05, 9.456999999999868e-05, 9.419499999999831e-05, 9.443099999999899e-05, 9.434800000000104e-05, 9.427799999999972e-05, 9.445799999999865e-05, 9.425000000000058e-05, 9.479199999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:41:19.319" endtime="20201110 08:41:19.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.315" endtime="20201110 08:41:19.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.324" endtime="20201110 08:41:19.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:19.328" endtime="20201110 08:41:19.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.326" endtime="20201110 08:41:19.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.323" endtime="20201110 08:41:19.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.954" endtime="20201110 08:41:19.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.953" endtime="20201110 08:41:19.349"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.357" endtime="20201110 08:41:19.376"></status>
</kw>
<msg timestamp="20201110 08:41:19.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:19.356" endtime="20201110 08:41:19.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:19.377" endtime="20201110 08:41:19.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.380" endtime="20201110 08:41:19.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.353" endtime="20201110 08:41:19.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.351" endtime="20201110 08:41:19.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.390" endtime="20201110 08:41:19.675"></status>
</kw>
<msg timestamp="20201110 08:41:19.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020674139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:19.388" endtime="20201110 08:41:19.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020674139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:19.679" endtime="20201110 08:41:19.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.687" endtime="20201110 08:41:19.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.386" endtime="20201110 08:41:19.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.384" endtime="20201110 08:41:19.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:19.694" level="INFO">${RESULT} = [{'time': 0.020674139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.512500000000146e-05, 'source_diff': 9.512500000000146e-05}, {'time': 0.020772222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:19.691" endtime="20201110 08:41:19.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:19.707" level="INFO">${ACCURACY} = {'time': [0.020674139, 0.020772222, 0.020871181, 0.020969208, 0.021070181, 0.021168194, 0.021267194, 0.021368208, 0.021469222, 0.021567236, 0.02166625, 0.02176525, 0.021864264, 0.021965292, 0.02206229...</msg>
<status status="PASS" starttime="20201110 08:41:19.695" endtime="20201110 08:41:19.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.712" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:41:19.711" endtime="20201110 08:41:19.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.714" level="INFO">VALUE: [9.512500000000146e-05, 9.509699999999885e-05, 9.522299999999845e-05, 9.54859999999988e-05, 9.563900000000153e-05, 9.513800000000155e-05, 9.559699999999935e-05, 9.540200000000137e-05, 9.533299999999953e-05, 9.52079999999994e-05, 9.506900000000318e-05, 9.525000000000158e-05, 9.50140000000009e-05, 9.547300000000217e-05, 9.49590000000021e-05, 9.563899999999806e-05, 9.541700000000042e-05, 9.501300000000143e-05, 9.548600000000226e-05, 9.512500000000146e-05, 9.555600000000011e-05, 9.491699999999992e-05, 9.559699999999935e-05, 9.536100000000214e-05, 9.540300000000085e-05, 9.543099999999999e-05, 9.486100000000164e-05, 9.505599999999961e-05, 9.529099999999735e-05, 9.568100000000024e-05, 9.487500000000121e-05, 9.562499999999849e-05, 9.479199999999979e-05, 9.487499999999774e-05, 9.554200000000054e-05, 9.54859999999988e-05, 9.575000000000208e-05, 9.563900000000153e-05, 9.520900000000235e-05, 9.525000000000158e-05, 9.506899999999971e-05, 9.513900000000103e-05, 9.544400000000008e-05, 9.506899999999971e-05, 9.519500000000278e-05, 9.561099999999892e-05, 9.536099999999867e-05, 9.495899999999863e-05, 9.556999999999968e-05, 9.570899999999938e-05]</msg>
<status status="PASS" starttime="20201110 08:41:19.713" endtime="20201110 08:41:19.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.708" endtime="20201110 08:41:19.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.718" endtime="20201110 08:41:19.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:19.721" endtime="20201110 08:41:19.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.720" endtime="20201110 08:41:19.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.716" endtime="20201110 08:41:19.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.350" endtime="20201110 08:41:19.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.349" endtime="20201110 08:41:19.742"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.751" endtime="20201110 08:41:19.769"></status>
</kw>
<msg timestamp="20201110 08:41:19.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:19.749" endtime="20201110 08:41:19.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:19.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:19.771" endtime="20201110 08:41:19.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.773" endtime="20201110 08:41:19.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.747" endtime="20201110 08:41:19.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.745" endtime="20201110 08:41:19.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:19.783" endtime="20201110 08:41:20.070"></status>
</kw>
<msg timestamp="20201110 08:41:20.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:19.782" endtime="20201110 08:41:20.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:20.075" endtime="20201110 08:41:20.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.083" endtime="20201110 08:41:20.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.779" endtime="20201110 08:41:20.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.777" endtime="20201110 08:41:20.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:20.089" level="INFO">${RESULT} = [{'time': 0.019912764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.643100000000099e-05, 'source_diff': 9.643100000000099e-05}, {'time': 0.020012778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:20.086" endtime="20201110 08:41:20.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:20.104" level="INFO">${ACCURACY} = {'time': [0.019912764, 0.020012778, 0.020111792, 0.020213806, 0.020311819, 0.020412833, 0.020512833, 0.020613861, 0.020715861, 0.020816875, 0.020917889, 0.021017931, 0.021118917, 0.021220917, 0.021320...</msg>
<status status="PASS" starttime="20201110 08:41:20.090" endtime="20201110 08:41:20.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.108" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:41:20.107" endtime="20201110 08:41:20.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.111" level="INFO">VALUE: [9.643100000000099e-05, 9.612499999999899e-05, 9.673600000000004e-05, 9.622299999999945e-05, 9.579099999999785e-05, 9.636099999999967e-05, 9.593000000000101e-05, 9.630500000000139e-05, 9.651399999999893e-05, 9.581899999999699e-05, 9.665299999999863e-05, 9.593100000000049e-05, 9.676400000000265e-05, 9.658400000000025e-05, 9.595899999999963e-05, 9.666599999999873e-05, 9.636099999999967e-05, 9.655500000000164e-05, 9.611099999999942e-05, 9.62920000000013e-05, 9.602800000000147e-05, 9.581999999999993e-05, 9.594500000000006e-05, 9.656999999999721e-05, 9.669499999999734e-05, 9.677800000000222e-05, 9.595800000000015e-05, 9.67080000000009e-05, 9.67080000000009e-05, 9.674999999999961e-05, 9.577800000000122e-05, 9.576400000000165e-05, 9.61669999999977e-05, 9.67920000000018e-05, 9.61530000000016e-05, 9.601399999999843e-05, 9.676400000000265e-05, 9.594399999999711e-05, 9.590200000000187e-05, 9.597199999999972e-05, 9.629099999999835e-05, 9.591700000000092e-05, 9.590300000000135e-05, 9.593100000000049e-05, 9.657000000000068e-05, 9.622199999999997e-05, 9.658400000000025e-05, 9.63059999999974e-05, 9.608300000000028e-05, 9.613899999999856e-05]</msg>
<status status="PASS" starttime="20201110 08:41:20.109" endtime="20201110 08:41:20.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.105" endtime="20201110 08:41:20.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.114" endtime="20201110 08:41:20.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:20.118" endtime="20201110 08:41:20.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.116" endtime="20201110 08:41:20.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.113" endtime="20201110 08:41:20.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.743" endtime="20201110 08:41:20.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:19.743" endtime="20201110 08:41:20.139"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.147" endtime="20201110 08:41:20.167"></status>
</kw>
<msg timestamp="20201110 08:41:20.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.146" endtime="20201110 08:41:20.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.168" endtime="20201110 08:41:20.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.171" endtime="20201110 08:41:20.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.143" endtime="20201110 08:41:20.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.141" endtime="20201110 08:41:20.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.180" endtime="20201110 08:41:20.465"></status>
</kw>
<msg timestamp="20201110 08:41:20.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02086775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020964597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:20.179" endtime="20201110 08:41:20.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02086775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020964597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:20.469" endtime="20201110 08:41:20.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.477" endtime="20201110 08:41:20.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.176" endtime="20201110 08:41:20.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.175" endtime="20201110 08:41:20.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:20.484" level="INFO">${RESULT} = [{'time': 0.020964597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68470000000006e-05, 'source_diff': 9.68470000000006e-05}, {'time': 0.021065611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:41:20.480" endtime="20201110 08:41:20.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:20.497" level="INFO">${ACCURACY} = {'time': [0.020964597, 0.021065611, 0.021166639, 0.021268639, 0.021369653, 0.021472681, 0.02157275, 0.021672681, 0.02177275, 0.021872708, 0.021973736, 0.022074819, 0.022176736, 0.02227975, 0.022382778...</msg>
<status status="PASS" starttime="20201110 08:41:20.485" endtime="20201110 08:41:20.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.501" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:41:20.500" endtime="20201110 08:41:20.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.504" level="INFO">VALUE: [9.68470000000006e-05, 9.743000000000251e-05, 9.713899999999956e-05, 9.712499999999999e-05, 9.748599999999732e-05, 9.725000000000011e-05, 9.763900000000006e-05, 9.699999999999986e-05, 9.773600000000104e-05, 9.731900000000196e-05, 9.691700000000192e-05, 9.70409999999991e-05, 9.711100000000042e-05, 9.769400000000233e-05, 9.741699999999895e-05, 9.763900000000006e-05, 9.712499999999999e-05, 9.715299999999913e-05, 9.723599999999707e-05, 9.706899999999824e-05, 9.686100000000017e-05, 9.69860000000003e-05, 9.738899999999981e-05, 9.688899999999931e-05, 9.707000000000118e-05, 9.747200000000122e-05, 9.723600000000054e-05, 9.73059999999984e-05, 9.725000000000011e-05, 9.706900000000171e-05, 9.712499999999999e-05, 9.686100000000017e-05, 9.762500000000049e-05, 9.729199999999882e-05, 9.7721999999998e-05, 9.686100000000017e-05, 9.701399999999943e-05, 9.68470000000006e-05, 9.736200000000014e-05, 9.726399999999968e-05, 9.733300000000153e-05, 9.688899999999931e-05, 9.711100000000042e-05, 9.776400000000018e-05, 9.681900000000146e-05, 9.697200000000072e-05, 9.707000000000118e-05, 9.688900000000278e-05, 9.690299999999888e-05, 9.711199999999989e-05]</msg>
<status status="PASS" starttime="20201110 08:41:20.502" endtime="20201110 08:41:20.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.498" endtime="20201110 08:41:20.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.507" endtime="20201110 08:41:20.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:20.511" endtime="20201110 08:41:20.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.509" endtime="20201110 08:41:20.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.506" endtime="20201110 08:41:20.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.140" endtime="20201110 08:41:20.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.139" endtime="20201110 08:41:20.532"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.540" endtime="20201110 08:41:20.559"></status>
</kw>
<msg timestamp="20201110 08:41:20.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.539" endtime="20201110 08:41:20.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.561" endtime="20201110 08:41:20.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.563" endtime="20201110 08:41:20.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.536" endtime="20201110 08:41:20.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.534" endtime="20201110 08:41:20.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.573" endtime="20201110 08:41:20.860"></status>
</kw>
<msg timestamp="20201110 08:41:20.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:20.572" endtime="20201110 08:41:20.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019854431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:20.864" endtime="20201110 08:41:20.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.873" endtime="20201110 08:41:20.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.569" endtime="20201110 08:41:20.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.568" endtime="20201110 08:41:20.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:20.879" level="INFO">${RESULT} = [{'time': 0.019854431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.865299999999716e-05, 'source_diff': 9.865299999999716e-05}, {'time': 0.019957472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:20.876" endtime="20201110 08:41:20.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:20.892" level="INFO">${ACCURACY} = {'time': [0.019854431, 0.019957472, 0.020061458, 0.020163472, 0.020263486, 0.020366486, 0.0204685, 0.020570514, 0.020674542, 0.020776542, 0.020877569, 0.020980556, 0.021083569, 0.021186583, 0.02128962...</msg>
<status status="PASS" starttime="20201110 08:41:20.880" endtime="20201110 08:41:20.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.897" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:41:20.896" endtime="20201110 08:41:20.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.899" level="INFO">VALUE: [9.865299999999716e-05, 9.786100000000117e-05, 9.829100000000035e-05, 9.801400000000043e-05, 9.78470000000016e-05, 9.876400000000118e-05, 9.811100000000142e-05, 9.847200000000222e-05, 9.877800000000075e-05, 9.851399999999746e-05, 9.863799999999812e-05, 9.84730000000017e-05, 9.805499999999967e-05, 9.840199999999744e-05, 9.88059999999999e-05, 9.854200000000007e-05, 9.823599999999807e-05, 9.862499999999802e-05, 9.83470000000021e-05, 9.848599999999832e-05, 9.848700000000127e-05, 9.833299999999906e-05, 9.797199999999825e-05, 9.829100000000035e-05, 9.841600000000048e-05, 9.801400000000043e-05, 9.838900000000081e-05, 9.804199999999957e-05, 9.805599999999914e-05, 9.851400000000093e-05, 9.81669999999997e-05, 9.812500000000099e-05, 9.820900000000188e-05, 9.802700000000053e-05, 9.863900000000106e-05, 9.801400000000043e-05, 9.84860000000018e-05, 9.791699999999945e-05, 9.790300000000335e-05, 9.781999999999846e-05, 9.868099999999977e-05, 9.800000000000086e-05, 9.851400000000093e-05, 9.804199999999957e-05, 9.822200000000197e-05, 9.858299999999931e-05, 9.798599999999782e-05, 9.784699999999813e-05, 9.792999999999955e-05, 9.86670000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:41:20.898" endtime="20201110 08:41:20.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.893" endtime="20201110 08:41:20.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.903" endtime="20201110 08:41:20.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:20.907" endtime="20201110 08:41:20.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.905" endtime="20201110 08:41:20.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.901" endtime="20201110 08:41:20.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.533" endtime="20201110 08:41:20.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.532" endtime="20201110 08:41:20.927"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.936" endtime="20201110 08:41:20.956"></status>
</kw>
<msg timestamp="20201110 08:41:20.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.934" endtime="20201110 08:41:20.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:20.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:20.957" endtime="20201110 08:41:20.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.960" endtime="20201110 08:41:20.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.932" endtime="20201110 08:41:20.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.930" endtime="20201110 08:41:20.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:20.970" endtime="20201110 08:41:21.255"></status>
</kw>
<msg timestamp="20201110 08:41:21.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:20.968" endtime="20201110 08:41:21.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:21.259" endtime="20201110 08:41:21.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.267" endtime="20201110 08:41:21.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.966" endtime="20201110 08:41:21.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.964" endtime="20201110 08:41:21.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:21.274" level="INFO">${RESULT} = [{'time': 0.019821528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.911100000000242e-05, 'source_diff': 9.911100000000242e-05}, {'time': 0.019924542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:21.271" endtime="20201110 08:41:21.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:21.287" level="INFO">${ACCURACY} = {'time': [0.019821528, 0.019924542, 0.020025542, 0.020128556, 0.020230556, 0.020334569, 0.020438583, 0.020540597, 0.020643611, 0.020745625, 0.020849639, 0.020952639, 0.021054667, 0.021157667, 0.021260...</msg>
<status status="PASS" starttime="20201110 08:41:21.275" endtime="20201110 08:41:21.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.292" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:41:21.291" endtime="20201110 08:41:21.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.294" level="INFO">VALUE: [9.911100000000242e-05, 9.924999999999864e-05, 9.88059999999999e-05, 9.941699999999748e-05, 9.898700000000177e-05, 9.913799999999862e-05, 9.91800000000008e-05, 9.959699999999988e-05, 9.883299999999956e-05, 9.883299999999956e-05, 9.934699999999963e-05, 9.940299999999791e-05, 9.890299999999741e-05, 9.941700000000095e-05, 9.922299999999898e-05, 9.926400000000168e-05, 9.880500000000042e-05, 9.894400000000012e-05, 9.96670000000012e-05, 9.922200000000297e-05, 9.976399999999871e-05, 9.954099999999813e-05, 9.955600000000064e-05, 9.888900000000131e-05, 9.915299999999766e-05, 9.965199999999869e-05, 9.887499999999827e-05, 9.926400000000168e-05, 9.912499999999852e-05, 9.926400000000168e-05, 9.954200000000107e-05, 9.918100000000027e-05, 9.879200000000032e-05, 9.91670000000007e-05, 9.968100000000077e-05, 9.923700000000202e-05, 9.973599999999957e-05, 9.961100000000292e-05, 9.91800000000008e-05, 9.895799999999969e-05, 9.958300000000031e-05, 9.955599999999717e-05, 9.947299999999923e-05, 9.89860000000023e-05, 9.938799999999887e-05, 9.937500000000224e-05, 9.96670000000012e-05, 9.945900000000313e-05, 9.929100000000135e-05, 9.897199999999926e-05]</msg>
<status status="PASS" starttime="20201110 08:41:21.293" endtime="20201110 08:41:21.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.288" endtime="20201110 08:41:21.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.298" endtime="20201110 08:41:21.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:21.301" endtime="20201110 08:41:21.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.300" endtime="20201110 08:41:21.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.296" endtime="20201110 08:41:21.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.928" endtime="20201110 08:41:21.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:20.928" endtime="20201110 08:41:21.322"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.331" endtime="20201110 08:41:21.349"></status>
</kw>
<msg timestamp="20201110 08:41:21.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:21.329" endtime="20201110 08:41:21.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:21.351" endtime="20201110 08:41:21.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.353" endtime="20201110 08:41:21.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.327" endtime="20201110 08:41:21.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.325" endtime="20201110 08:41:21.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.363" endtime="20201110 08:41:21.648"></status>
</kw>
<msg timestamp="20201110 08:41:21.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:21.361" endtime="20201110 08:41:21.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:21.652" endtime="20201110 08:41:21.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.660" endtime="20201110 08:41:21.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.359" endtime="20201110 08:41:21.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.357" endtime="20201110 08:41:21.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:21.667" level="INFO">${RESULT} = [{'time': 0.019901125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010052799999999903, 'source_diff': 0.00010052799999999903}, {'time': 0.020004139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:21.663" endtime="20201110 08:41:21.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:21.681" level="INFO">${ACCURACY} = {'time': [0.019901125, 0.020004139, 0.020107181, 0.020212167, 0.020317181, 0.020422181, 0.020524236, 0.020629222, 0.020732208, 0.020838222, 0.020942236, 0.02104725, 0.021151264, 0.021255278, 0.0213613...</msg>
<status status="PASS" starttime="20201110 08:41:21.668" endtime="20201110 08:41:21.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.685" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:41:21.684" endtime="20201110 08:41:21.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.688" level="INFO">VALUE: [0.00010052799999999903, 0.00010051399999999946, 9.988899999999884e-05, 0.00010077799999999928, 0.00010024999999999964, 0.00010023699999999955, 0.00010000000000000286, 9.995800000000069e-05, 0.00010042999999999858, 0.00010023600000000008, 0.00010001399999999896, 0.00010011099999999995, 0.0001003610000000002, 0.00010030599999999792, 0.00010073600000000058, 0.0001004869999999998, 9.979199999999785e-05, 9.986100000000317e-05, 9.980499999999795e-05, 0.00010040300000000238, 0.00010077699999999981, 0.00010062500000000002, 0.0001006939999999984, 0.00010006999999999724, 0.00010044500000000109, 0.00010052799999999903, 0.0001001939999999979, 9.987499999999927e-05, 0.00010076399999999971, 0.00010027799999999878, 0.00010045800000000119, 9.980500000000142e-05, 9.983300000000056e-05, 9.998599999999983e-05, 0.0001001809999999978, 0.00010055600000000164, 0.00010027799999999878, 0.00010063899999999959, 0.00010044500000000109, 0.00010066599999999926, 0.00010063899999999959, 0.00010033299999999759, 0.00010038899999999934, 0.00010001399999999896, 0.00010076399999999971, 0.00010068100000000177, 9.994500000000059e-05, 0.00010077699999999981, 0.00010045799999999772, 0.00010025000000000311]</msg>
<status status="PASS" starttime="20201110 08:41:21.686" endtime="20201110 08:41:21.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.682" endtime="20201110 08:41:21.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.691" endtime="20201110 08:41:21.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:21.695" endtime="20201110 08:41:21.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.693" endtime="20201110 08:41:21.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.690" endtime="20201110 08:41:21.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.323" endtime="20201110 08:41:21.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.323" endtime="20201110 08:41:21.716"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.724" endtime="20201110 08:41:21.743"></status>
</kw>
<msg timestamp="20201110 08:41:21.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:21.723" endtime="20201110 08:41:21.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:21.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:21.745" endtime="20201110 08:41:21.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.747" endtime="20201110 08:41:21.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.720" endtime="20201110 08:41:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.718" endtime="20201110 08:41:21.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:21.757" endtime="20201110 08:41:22.043"></status>
</kw>
<msg timestamp="20201110 08:41:22.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020462014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:21.755" endtime="20201110 08:41:22.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020462014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.047" endtime="20201110 08:41:22.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.056" endtime="20201110 08:41:22.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.753" endtime="20201110 08:41:22.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.751" endtime="20201110 08:41:22.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:22.063" level="INFO">${RESULT} = [{'time': 0.020462014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010143099999999905, 'source_diff': 0.00010143099999999905}, {'time': 0.020567028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:22.059" endtime="20201110 08:41:22.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:22.076" level="INFO">${ACCURACY} = {'time': [0.020462014, 0.020567028, 0.020671042, 0.020778056, 0.020883069, 0.020987069, 0.021094083, 0.021199097, 0.021305125, 0.021410125, 0.021516139, 0.021619153, 0.021725167, 0.021832167, 0.021938...</msg>
<status status="PASS" starttime="20201110 08:41:22.063" endtime="20201110 08:41:22.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.080" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:41:22.079" endtime="20201110 08:41:22.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.082" level="INFO">VALUE: [0.00010143099999999905, 0.00010083400000000103, 0.00010126400000000021, 0.00010145899999999819, 0.00010119400000000237, 0.00010125000000000065, 0.00010122199999999804, 0.00010161100000000145, 0.00010112500000000052, 0.0001013749999999973, 0.0001015419999999996, 0.00010079199999999885, 0.00010166699999999973, 0.00010169499999999887, 0.0001015549999999997, 0.00010161100000000145, 0.00010095800000000169, 0.0001012220000000015, 0.00010115299999999966, 0.00010179199999999985, 0.00010163900000000059, 0.00010098600000000083, 0.00010161100000000145, 0.00010159799999999788, 0.00010112500000000052, 0.00010129099999999988, 0.00010102799999999953, 0.00010117999999999933, 0.00010173600000000158, 0.0001013610000000012, 0.00010090299999999941, 0.00010143100000000252, 0.00010166699999999973, 0.00010113900000000009, 0.00010088899999999984, 0.00010116699999999923, 0.00010176299999999777, 0.00010152800000000003, 0.00010083400000000103, 0.00010161099999999798, 0.00010173600000000158, 0.00010116699999999923, 0.00010116699999999923, 0.00010095900000000116, 0.00010143099999999905, 0.00010116699999999923, 0.00010134699999999816, 0.00010148600000000133, 0.00010125000000000065, 0.000101819999999999]</msg>
<status status="PASS" starttime="20201110 08:41:22.081" endtime="20201110 08:41:22.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.076" endtime="20201110 08:41:22.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.086" endtime="20201110 08:41:22.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:22.089" endtime="20201110 08:41:22.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.088" endtime="20201110 08:41:22.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.084" endtime="20201110 08:41:22.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.717" endtime="20201110 08:41:22.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:21.716" endtime="20201110 08:41:22.110"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.119" endtime="20201110 08:41:22.139"></status>
</kw>
<msg timestamp="20201110 08:41:22.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.117" endtime="20201110 08:41:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.140" endtime="20201110 08:41:22.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.143" endtime="20201110 08:41:22.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.115" endtime="20201110 08:41:22.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.113" endtime="20201110 08:41:22.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.153" endtime="20201110 08:41:22.438"></status>
</kw>
<msg timestamp="20201110 08:41:22.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020666736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.151" endtime="20201110 08:41:22.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020666736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.442" endtime="20201110 08:41:22.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.450" endtime="20201110 08:41:22.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.149" endtime="20201110 08:41:22.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.147" endtime="20201110 08:41:22.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:22.457" level="INFO">${RESULT} = [{'time': 0.020768917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001021809999999998, 'source_diff': 0.0001021809999999998}, {'time': 0.020874931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:22.454" endtime="20201110 08:41:22.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:22.470" level="INFO">${ACCURACY} = {'time': [0.020768917, 0.020874931, 0.020979944, 0.021086944, 0.021191958, 0.021296056, 0.021402, 0.021508, 0.021616014, 0.021721014, 0.021826042, 0.021932042, 0.022040056, 0.022146069, 0.022251083, 0...</msg>
<status status="PASS" starttime="20201110 08:41:22.458" endtime="20201110 08:41:22.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.475" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:41:22.473" endtime="20201110 08:41:22.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.477" level="INFO">VALUE: [0.0001021809999999998, 0.00010259799999999888, 0.00010209699999999891, 0.00010236099999999873, 0.00010190200000000094, 0.00010183400000000203, 0.00010226400000000122, 0.00010279200000000085, 0.00010241700000000048, 0.00010255600000000017, 0.00010202800000000053, 0.00010261099999999898, 0.00010269499999999987, 0.00010195799999999922, 0.00010273600000000258, 0.0001024299999999971, 0.00010184699999999866, 0.00010234699999999916, 0.00010233399999999906, 0.00010230599999999992, 0.00010208399999999881, 0.00010243100000000005, 0.00010202700000000106, 0.00010183300000000256, 0.00010206899999999977, 0.00010268000000000083, 0.00010230500000000045, 0.00010187500000000127, 0.00010272199999999954, 0.0001027359999999991, 0.00010222299999999851, 0.00010207000000000271, 0.00010188900000000084, 0.00010229100000000088, 0.00010222199999999904, 0.00010213900000000109, 0.0001025550000000007, 0.00010266700000000073, 0.00010184700000000213, 0.00010272199999999954, 0.000101819999999999, 0.00010193099999999955, 0.0001022359999999986, 0.00010207000000000271, 0.00010262500000000202, 0.0001023749999999983, 0.00010209699999999891, 0.00010188900000000084, 0.00010256900000000027, 0.00010208299999999934]</msg>
<status status="PASS" starttime="20201110 08:41:22.476" endtime="20201110 08:41:22.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.471" endtime="20201110 08:41:22.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.481" endtime="20201110 08:41:22.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:22.484" endtime="20201110 08:41:22.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.482" endtime="20201110 08:41:22.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.479" endtime="20201110 08:41:22.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.111" endtime="20201110 08:41:22.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.111" endtime="20201110 08:41:22.505"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.513" endtime="20201110 08:41:22.533"></status>
</kw>
<msg timestamp="20201110 08:41:22.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.512" endtime="20201110 08:41:22.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.534" endtime="20201110 08:41:22.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.537" endtime="20201110 08:41:22.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.509" endtime="20201110 08:41:22.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.507" endtime="20201110 08:41:22.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.546" endtime="20201110 08:41:22.833"></status>
</kw>
<msg timestamp="20201110 08:41:22.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.545" endtime="20201110 08:41:22.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.837" endtime="20201110 08:41:22.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.845" endtime="20201110 08:41:22.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.542" endtime="20201110 08:41:22.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.541" endtime="20201110 08:41:22.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:22.852" level="INFO">${RESULT} = [{'time': 0.019903944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010315199999999872, 'source_diff': 0.00010315199999999872}, {'time': 0.020009944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:22.848" endtime="20201110 08:41:22.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:22.865" level="INFO">${ACCURACY} = {'time': [0.019903944, 0.020009944, 0.020115972, 0.020223986, 0.020332986, 0.020441014, 0.020550014, 0.020658028, 0.020767056, 0.020876056, 0.020985056, 0.021094069, 0.021203083, 0.021309097, 0.021418...</msg>
<status status="PASS" starttime="20201110 08:41:22.852" endtime="20201110 08:41:22.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.869" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:41:22.868" endtime="20201110 08:41:22.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.871" level="INFO">VALUE: [0.00010315199999999872, 0.0001035000000000029, 0.00010333300000000059, 0.0001031940000000009, 0.00010329200000000135, 0.00010290300000000141, 0.00010374999999999968, 0.00010288899999999837, 0.00010352799999999857, 0.00010334799999999963, 0.00010374999999999968, 0.00010344400000000115, 0.00010340200000000244, 0.00010348599999999986, 0.00010341699999999801, 0.00010368099999999783, 0.00010376399999999925, 0.00010308399999999981, 0.00010324999999999918, 0.00010283399999999956, 0.00010355499999999823, 0.00010336099999999973, 0.00010365199999999922, 0.00010345800000000072, 0.00010327800000000179, 0.00010374999999999968, 0.000103207999999997, 0.00010330600000000092, 0.00010343100000000105, 0.00010368099999999783, 0.00010329200000000135, 0.00010377699999999934, 0.0001035550000000017, 0.00010372200000000054, 0.00010280600000000042, 0.00010320899999999994, 0.00010342999999999811, 0.00010363899999999912, 0.00010283399999999956, 0.00010324999999999918, 0.00010280500000000095, 0.00010348599999999986, 0.00010324999999999918, 0.00010283300000000009, 0.00010355499999999823, 0.00010320800000000047, 0.00010295800000000022, 0.0001033749999999993, 0.00010361099999999998, 0.00010290300000000141]</msg>
<status status="PASS" starttime="20201110 08:41:22.870" endtime="20201110 08:41:22.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.866" endtime="20201110 08:41:22.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.879" endtime="20201110 08:41:22.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:22.882" endtime="20201110 08:41:22.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.881" endtime="20201110 08:41:22.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.877" endtime="20201110 08:41:22.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.506" endtime="20201110 08:41:22.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.505" endtime="20201110 08:41:22.903"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.912" endtime="20201110 08:41:22.930"></status>
</kw>
<msg timestamp="20201110 08:41:22.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.910" endtime="20201110 08:41:22.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:22.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:22.932" endtime="20201110 08:41:22.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.934" endtime="20201110 08:41:22.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.908" endtime="20201110 08:41:22.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.906" endtime="20201110 08:41:22.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:22.944" endtime="20201110 08:41:23.230"></status>
</kw>
<msg timestamp="20201110 08:41:23.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:22.943" endtime="20201110 08:41:23.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:23.234" endtime="20201110 08:41:23.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.242" endtime="20201110 08:41:23.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.940" endtime="20201110 08:41:23.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.938" endtime="20201110 08:41:23.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:23.249" level="INFO">${RESULT} = [{'time': 0.019889097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010413900000000309, 'source_diff': 0.00010413900000000309}, {'time': 0.019997069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:23.245" endtime="20201110 08:41:23.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:23.263" level="INFO">${ACCURACY} = {'time': [0.019889097, 0.019997069, 0.020105069, 0.020212097, 0.020320111, 0.020430111, 0.020539125, 0.020648153, 0.020758153, 0.020865167, 0.020973181, 0.021080181, 0.021187194, 0.021294208, 0.021402...</msg>
<status status="PASS" starttime="20201110 08:41:23.250" endtime="20201110 08:41:23.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.267" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:41:23.266" endtime="20201110 08:41:23.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.270" level="INFO">VALUE: [0.00010413900000000309, 0.00010479099999999991, 0.00010452700000000009, 0.00010462499999999708, 0.00010411099999999701, 0.00010452799999999957, 0.0001047079999999985, 0.00010459699999999794, 0.00010452800000000304, 0.00010461100000000098, 0.00010441699999999901, 0.0001043750000000003, 0.00010405499999999873, 0.00010426399999999975, 0.00010436099999999726, 0.00010452799999999957, 0.00010402800000000254, 0.00010416700000000223, 0.00010429199999999889, 0.00010447299999999729, 0.00010450000000000043, 0.00010445800000000172, 0.00010458300000000184, 0.00010430599999999846, 0.0001040689999999983, 0.00010402799999999907, 0.00010425000000000018, 0.00010416700000000223, 0.00010416700000000223, 0.00010395900000000069, 0.000104514, 0.00010383400000000056, 0.00010461099999999751, 0.00010394399999999818, 0.00010436100000000073, 0.00010413899999999962, 0.000103820000000001, 0.00010415299999999919, 0.00010425000000000018, 0.00010422200000000104, 0.00010457000000000174, 0.00010436100000000073, 0.00010420800000000147, 0.00010444399999999868, 0.00010455499999999923, 0.0001045420000000026, 0.00010391700000000198, 0.00010426399999999975, 0.00010398699999999983, 0.00010434700000000116]</msg>
<status status="PASS" starttime="20201110 08:41:23.268" endtime="20201110 08:41:23.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.264" endtime="20201110 08:41:23.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.273" endtime="20201110 08:41:23.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:23.277" endtime="20201110 08:41:23.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.275" endtime="20201110 08:41:23.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.272" endtime="20201110 08:41:23.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.904" endtime="20201110 08:41:23.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:22.904" endtime="20201110 08:41:23.298"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.306" endtime="20201110 08:41:23.327"></status>
</kw>
<msg timestamp="20201110 08:41:23.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:23.305" endtime="20201110 08:41:23.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:23.328" endtime="20201110 08:41:23.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.331" endtime="20201110 08:41:23.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.302" endtime="20201110 08:41:23.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.300" endtime="20201110 08:41:23.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.341" endtime="20201110 08:41:23.626"></status>
</kw>
<msg timestamp="20201110 08:41:23.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:23.339" endtime="20201110 08:41:23.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:23.630" endtime="20201110 08:41:23.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.638" endtime="20201110 08:41:23.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.336" endtime="20201110 08:41:23.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.335" endtime="20201110 08:41:23.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:23.644" level="INFO">${RESULT} = [{'time': 0.020465819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010565200000000122, 'source_diff': 0.00010565200000000122}, {'time': 0.020574806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:23.641" endtime="20201110 08:41:23.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:23.657" level="INFO">${ACCURACY} = {'time': [0.020465819, 0.020574806, 0.020683833, 0.020791847, 0.020900847, 0.021009875, 0.021119917, 0.021226889, 0.021336889, 0.021446903, 0.021557931, 0.021666958, 0.021775958, 0.021883972, 0.021992...</msg>
<status status="PASS" starttime="20201110 08:41:23.645" endtime="20201110 08:41:23.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.662" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:41:23.661" endtime="20201110 08:41:23.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.664" level="INFO">VALUE: [0.00010565200000000122, 0.00010511200000000095, 0.00010488900000000037, 0.00010526399999999728, 0.00010566600000000079, 0.00010561100000000198, 0.00010570899999999897, 0.00010480599999999896, 0.00010570800000000297, 0.00010540300000000044, 0.00010522299999999804, 0.00010497199999999832, 0.00010526400000000075, 0.00010533300000000259, 0.00010561099999999851, 0.00010490299999999994, 0.00010531999999999903, 0.0001048750000000008, 0.00010512500000000105, 0.00010566699999999679, 0.00010488900000000037, 0.00010563900000000112, 0.00010487499999999733, 0.00010549999999999796, 0.00010545799999999925, 0.00010517999999999986, 0.0001057079999999995, 0.00010556999999999928, 0.00010488900000000037, 0.00010500000000000093, 0.00010569500000000287, 0.00010520900000000194, 0.00010527699999999737, 0.00010519399999999943, 0.00010547199999999882, 0.00010558299999999937, 0.00010526400000000075, 0.00010512499999999758, 0.0001051949999999989, 0.00010530599999999946, 0.00010572300000000201, 0.00010519399999999943, 0.00010558299999999937, 0.0001052360000000016, 0.00010505499999999973, 0.00010548600000000186, 0.00010558300000000284, 0.00010549999999999796, 0.00010515300000000019, 0.00010566700000000026]</msg>
<status status="PASS" starttime="20201110 08:41:23.663" endtime="20201110 08:41:23.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.658" endtime="20201110 08:41:23.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.668" endtime="20201110 08:41:23.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:23.671" endtime="20201110 08:41:23.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.670" endtime="20201110 08:41:23.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.666" endtime="20201110 08:41:23.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.299" endtime="20201110 08:41:23.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.298" endtime="20201110 08:41:23.692"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.701" endtime="20201110 08:41:23.720"></status>
</kw>
<msg timestamp="20201110 08:41:23.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:23.699" endtime="20201110 08:41:23.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:23.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:23.722" endtime="20201110 08:41:23.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.724" endtime="20201110 08:41:23.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.697" endtime="20201110 08:41:23.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.695" endtime="20201110 08:41:23.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:23.734" endtime="20201110 08:41:24.020"></status>
</kw>
<msg timestamp="20201110 08:41:24.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:23.733" endtime="20201110 08:41:24.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.024" endtime="20201110 08:41:24.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.032" endtime="20201110 08:41:24.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.730" endtime="20201110 08:41:24.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.729" endtime="20201110 08:41:24.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:24.039" level="INFO">${RESULT} = [{'time': 0.019925014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010657000000000028, 'source_diff': 0.00010657000000000028}, {'time': 0.020035042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:24.036" endtime="20201110 08:41:24.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:24.052" level="INFO">${ACCURACY} = {'time': [0.019925014, 0.020035042, 0.020144083, 0.020256056, 0.020365056, 0.020475083, 0.020585083, 0.020697097, 0.020808111, 0.020917111, 0.021028125, 0.021138208, 0.021248167, 0.02135925, 0.0214701...</msg>
<status status="PASS" starttime="20201110 08:41:24.040" endtime="20201110 08:41:24.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.057" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:41:24.056" endtime="20201110 08:41:24.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.059" level="INFO">VALUE: [0.00010657000000000028, 0.00010591700000000051, 0.00010619400000000043, 0.00010654200000000114, 0.00010620899999999947, 0.00010650000000000243, 0.00010597199999999932, 0.00010647199999999982, 0.00010630500000000098, 0.00010619399999999696, 0.00010618100000000033, 0.00010669399999999746, 0.0001058339999999991, 0.00010631900000000055, 0.00010613800000000215, 0.00010622199999999957, 0.0001067499999999992, 0.00010659699999999994, 0.00010609799999999892, 0.00010629199999999742, 0.00010584700000000266, 0.00010622199999999957, 0.0001058750000000018, 0.00010673599999999964, 0.00010583400000000256, 0.00010580500000000048, 0.00010581900000000005, 0.00010666599999999832, 0.0001067080000000005, 0.00010673599999999964, 0.00010632000000000003, 0.000105901999999998, 0.00010611099999999901, 0.00010649999999999896, 0.00010665300000000169, 0.00010686099999999976, 0.00010679199999999792, 0.00010662500000000255, 0.0001065560000000007, 0.00010644400000000068, 0.0001062499999999987, 0.00010638900000000187, 0.00010598600000000236, 0.00010627799999999785, 0.00010633300000000012, 0.00010662499999999908, 0.00010655500000000123, 0.00010633300000000012, 0.00010611099999999901, 0.00010602800000000107]</msg>
<status status="PASS" starttime="20201110 08:41:24.058" endtime="20201110 08:41:24.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.053" endtime="20201110 08:41:24.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.062" endtime="20201110 08:41:24.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:24.066" endtime="20201110 08:41:24.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.064" endtime="20201110 08:41:24.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.061" endtime="20201110 08:41:24.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.693" endtime="20201110 08:41:24.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:23.693" endtime="20201110 08:41:24.087"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.096" endtime="20201110 08:41:24.115"></status>
</kw>
<msg timestamp="20201110 08:41:24.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.094" endtime="20201110 08:41:24.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.116" endtime="20201110 08:41:24.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.119" endtime="20201110 08:41:24.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.092" endtime="20201110 08:41:24.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.089" endtime="20201110 08:41:24.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.129" endtime="20201110 08:41:24.415"></status>
</kw>
<msg timestamp="20201110 08:41:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.127" endtime="20201110 08:41:24.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.419" endtime="20201110 08:41:24.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.427" endtime="20201110 08:41:24.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.125" endtime="20201110 08:41:24.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.123" endtime="20201110 08:41:24.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:24.433" level="INFO">${RESULT} = [{'time': 0.020175208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010708300000000087, 'source_diff': 0.00010708300000000087}, {'time': 0.020285236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:24.430" endtime="20201110 08:41:24.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:24.446" level="INFO">${ACCURACY} = {'time': [0.020175208, 0.020285236, 0.020398236, 0.020508292, 0.020619264, 0.020731292, 0.020843292, 0.020955361, 0.021066319, 0.021178319, 0.021289347, 0.021399389, 0.021509361, 0.021620403, 0.021732...</msg>
<status status="PASS" starttime="20201110 08:41:24.434" endtime="20201110 08:41:24.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.451" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:41:24.450" endtime="20201110 08:41:24.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.453" level="INFO">VALUE: [0.00010708300000000087, 0.00010708300000000087, 0.00010758300000000137, 0.00010754200000000214, 0.00010761100000000051, 0.0001070279999999986, 0.00010697299999999979, 0.00010740299999999897, 0.00010741599999999907, 0.00010727699999999937, 0.00010779099999999944, 0.00010726400000000275, 0.00010699999999999946, 0.00010745900000000072, 0.00010761100000000051, 0.00010777799999999935, 0.00010708399999999688, 0.0001072499999999997, 0.00010736100000000026, 0.00010734700000000069, 0.00010759699999999747, 0.00010726399999999928, 0.00010723600000000014, 0.00010687499999999933, 0.0001074019999999995, 0.0001068340000000001, 0.00010766699999999879, 0.00010691699999999804, 0.00010759700000000094, 0.00010731900000000155, 0.00010719400000000143, 0.00010741699999999854, 0.00010697200000000032, 0.00010759700000000094, 0.00010734700000000069, 0.00010697200000000032, 0.0001076950000000014, 0.00010701399999999903, 0.00010752699999999962, 0.00010730500000000198, 0.00010712499999999958, 0.0001070140000000025, 0.00010702800000000207, 0.00010751399999999953, 0.00010687499999999933, 0.00010687499999999933, 0.00010777799999999935, 0.00010718000000000186, 0.00010748600000000039, 0.00010711100000000001]</msg>
<status status="PASS" starttime="20201110 08:41:24.452" endtime="20201110 08:41:24.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.447" endtime="20201110 08:41:24.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.457" endtime="20201110 08:41:24.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:24.460" endtime="20201110 08:41:24.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.459" endtime="20201110 08:41:24.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.455" endtime="20201110 08:41:24.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.088" endtime="20201110 08:41:24.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.087" endtime="20201110 08:41:24.481"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.490" endtime="20201110 08:41:24.509"></status>
</kw>
<msg timestamp="20201110 08:41:24.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.488" endtime="20201110 08:41:24.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.510" endtime="20201110 08:41:24.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.512" endtime="20201110 08:41:24.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.486" endtime="20201110 08:41:24.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.484" endtime="20201110 08:41:24.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.522" endtime="20201110 08:41:24.808"></status>
</kw>
<msg timestamp="20201110 08:41:24.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.521" endtime="20201110 08:41:24.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019726542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.812" endtime="20201110 08:41:24.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.820" endtime="20201110 08:41:24.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.518" endtime="20201110 08:41:24.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.517" endtime="20201110 08:41:24.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:24.827" level="INFO">${RESULT} = [{'time': 0.019835167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010862500000000108, 'source_diff': 0.00010862500000000108}, {'time': 0.019946167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:24.823" endtime="20201110 08:41:24.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:24.841" level="INFO">${ACCURACY} = {'time': [0.019835167, 0.019946167, 0.020059167, 0.020172208, 0.020286194, 0.020400208, 0.020512222, 0.020624236, 0.02073625, 0.020848264, 0.020960278, 0.021072306, 0.021185319, 0.021298333, 0.0214103...</msg>
<status status="PASS" starttime="20201110 08:41:24.828" endtime="20201110 08:41:24.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.846" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:41:24.845" endtime="20201110 08:41:24.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.848" level="INFO">VALUE: [0.00010862500000000108, 0.00010866699999999979, 0.00010865300000000022, 0.00010813900000000015, 0.0001084020000000005, 0.00010844399999999921, 0.00010795800000000175, 0.00010879199999999992, 0.00010872200000000207, 0.00010819499999999843, 0.00010879199999999992, 0.0001080279999999996, 0.00010850000000000096, 0.00010826400000000028, 0.00010823600000000114, 0.00010836100000000126, 0.00010806899999999883, 0.00010829199999999942, 0.00010823600000000114, 0.00010807000000000178, 0.00010877800000000035, 0.00010793000000000261, 0.00010793099999999861, 0.00010855499999999976, 0.00010833299999999865, 0.00010841600000000007, 0.00010811100000000101, 0.00010815299999999972, 0.00010840299999999997, 0.00010859699999999847, 0.00010855499999999976, 0.00010784800000000067, 0.00010841699999999954, 0.00010850000000000096, 0.00010795800000000175, 0.00010797199999999785, 0.00010865300000000022, 0.00010858300000000237, 0.00010793099999999861, 0.00010834700000000169, 0.00010818099999999886, 0.00010872300000000154, 0.00010815200000000025, 0.0001085829999999989, 0.00010815299999999972, 0.00010863899999999718, 0.00010819399999999896, 0.00010847200000000182, 0.00010858400000000185, 0.00010841699999999954]</msg>
<status status="PASS" starttime="20201110 08:41:24.847" endtime="20201110 08:41:24.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.842" endtime="20201110 08:41:24.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.852" endtime="20201110 08:41:24.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:24.855" endtime="20201110 08:41:24.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.854" endtime="20201110 08:41:24.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.850" endtime="20201110 08:41:24.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.482" endtime="20201110 08:41:24.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.481" endtime="20201110 08:41:24.876"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.885" endtime="20201110 08:41:24.905"></status>
</kw>
<msg timestamp="20201110 08:41:24.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.884" endtime="20201110 08:41:24.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:24.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:24.906" endtime="20201110 08:41:24.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.909" endtime="20201110 08:41:24.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.881" endtime="20201110 08:41:24.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.879" endtime="20201110 08:41:24.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:24.920" endtime="20201110 08:41:25.206"></status>
</kw>
<msg timestamp="20201110 08:41:25.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:24.919" endtime="20201110 08:41:25.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020146486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:25.210" endtime="20201110 08:41:25.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.218" endtime="20201110 08:41:25.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.915" endtime="20201110 08:41:25.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.913" endtime="20201110 08:41:25.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:25.225" level="INFO">${RESULT} = [{'time': 0.020146486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010880500000000001, 'source_diff': 0.00010880500000000001}, {'time': 0.020258514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:25.221" endtime="20201110 08:41:25.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:25.238" level="INFO">${ACCURACY} = {'time': [0.020146486, 0.020258514, 0.020370514, 0.020483542, 0.020597542, 0.020710556, 0.020821569, 0.020932597, 0.021044597, 0.021159611, 0.021273625, 0.021385625, 0.021497639, 0.021611653, 0.021724...</msg>
<status status="PASS" starttime="20201110 08:41:25.226" endtime="20201110 08:41:25.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.242" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:41:25.241" endtime="20201110 08:41:25.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.245" level="INFO">VALUE: [0.00010880500000000001, 0.00010913899999999768, 0.00010923599999999867, 0.00010944499999999968, 0.00010894499999999918, 0.00010977800000000135, 0.00010884700000000219, 0.00010897200000000232, 0.0001090280000000006, 0.00010973599999999917, 0.00010898600000000189, 0.00010919399999999996, 0.00010931999999999956, 0.00010887500000000133, 0.00010954200000000067, 0.00010904200000000017, 0.00010954099999999772, 0.00010901400000000103, 0.00010884700000000219, 0.00010934700000000269, 0.00010943100000000011, 0.00010941700000000054, 0.00010884699999999872, 0.00010962499999999861, 0.00010915300000000072, 0.00010909799999999845, 0.00010943000000000064, 0.00010895899999999875, 0.0001090829999999994, 0.00010933299999999965, 0.00010927799999999738, 0.0001092219999999991, 0.00010943100000000011, 0.00010955600000000024, 0.00010943100000000011, 0.00010929200000000042, 0.00010941600000000107, 0.00010912499999999811, 0.00010918000000000039, 0.00010979200000000092, 0.00010937499999999836, 0.00010959699999999947, 0.0001095699999999998, 0.00010976400000000178, 0.00010943000000000064, 0.00010923600000000214, 0.00010883299999999915, 0.00010891600000000057, 0.0001090829999999994, 0.00010950000000000196]</msg>
<status status="PASS" starttime="20201110 08:41:25.243" endtime="20201110 08:41:25.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.239" endtime="20201110 08:41:25.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.248" endtime="20201110 08:41:25.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:25.252" endtime="20201110 08:41:25.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.250" endtime="20201110 08:41:25.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.247" endtime="20201110 08:41:25.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.877" endtime="20201110 08:41:25.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:24.877" endtime="20201110 08:41:25.273"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.281" endtime="20201110 08:41:25.302"></status>
</kw>
<msg timestamp="20201110 08:41:25.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:25.280" endtime="20201110 08:41:25.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:25.303" endtime="20201110 08:41:25.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.306" endtime="20201110 08:41:25.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.277" endtime="20201110 08:41:25.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.275" endtime="20201110 08:41:25.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.316" endtime="20201110 08:41:25.613"></status>
</kw>
<msg timestamp="20201110 08:41:25.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:25.314" endtime="20201110 08:41:25.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:25.617" endtime="20201110 08:41:25.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.625" endtime="20201110 08:41:25.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.311" endtime="20201110 08:41:25.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.310" endtime="20201110 08:41:25.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:25.632" level="INFO">${RESULT} = [{'time': 0.019830181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001100700000000003, 'source_diff': 0.0001100700000000003}, {'time': 0.019943181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:41:25.629" endtime="20201110 08:41:25.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:25.645" level="INFO">${ACCURACY} = {'time': [0.019830181, 0.019943181, 0.020058194, 0.020174222, 0.020289222, 0.020402236, 0.02051725, 0.020633264, 0.020748278, 0.020862292, 0.020978319, 0.021091319, 0.021206333, 0.021321347, 0.0214343...</msg>
<status status="PASS" starttime="20201110 08:41:25.633" endtime="20201110 08:41:25.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.650" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:41:25.648" endtime="20201110 08:41:25.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.652" level="INFO">VALUE: [0.0001100700000000003, 0.00010982000000000006, 0.00011059700000000047, 0.00011023599999999967, 0.00011047200000000035, 0.00011044400000000121, 0.00010990300000000147, 0.00011076399999999931, 0.0001100419999999977, 0.00011061100000000004, 0.00011036099999999979, 0.00011061100000000004, 0.0001107769999999994, 0.00011024999999999924, 0.00011015299999999825, 0.00010982000000000006, 0.000109902999999998, 0.00011016700000000129, 0.00011018100000000086, 0.00011080499999999854, 0.00010988899999999843, 0.00011052699999999915, 0.00011011100000000301, 0.00010983300000000015, 0.00011041699999999807, 0.00011037499999999936, 0.00011038899999999893, 0.00011058400000000038, 0.00010987500000000233, 0.00011076399999999931, 0.00011059700000000047, 0.00011061100000000004, 0.00010991600000000157, 0.00010983300000000015, 0.00010994400000000071, 0.00011009699999999997, 0.00011045800000000078, 0.00011061100000000004, 0.00010995899999999975, 0.00011048699999999939, 0.0001107769999999994, 0.00011038899999999893, 0.00011033299999999718, 0.00011020800000000053, 0.00010987499999999886, 0.00010979200000000092, 0.0001100700000000003, 0.00011080600000000149, 0.0001107090000000005, 0.00011018000000000139]</msg>
<status status="PASS" starttime="20201110 08:41:25.651" endtime="20201110 08:41:25.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.646" endtime="20201110 08:41:25.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.656" endtime="20201110 08:41:25.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:25.659" endtime="20201110 08:41:25.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.657" endtime="20201110 08:41:25.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.654" endtime="20201110 08:41:25.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.274" endtime="20201110 08:41:25.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.273" endtime="20201110 08:41:25.680"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.688" endtime="20201110 08:41:25.708"></status>
</kw>
<msg timestamp="20201110 08:41:25.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:25.687" endtime="20201110 08:41:25.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:25.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:25.710" endtime="20201110 08:41:25.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.712" endtime="20201110 08:41:25.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.684" endtime="20201110 08:41:25.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.682" endtime="20201110 08:41:25.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:25.722" endtime="20201110 08:41:26.008"></status>
</kw>
<msg timestamp="20201110 08:41:26.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:25.721" endtime="20201110 08:41:26.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019661625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:26.012" endtime="20201110 08:41:26.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.020" endtime="20201110 08:41:26.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.718" endtime="20201110 08:41:26.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.716" endtime="20201110 08:41:26.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:26.027" level="INFO">${RESULT} = [{'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011093100000000161, 'source_diff': 0.00011093100000000161}, {'time': 0.019889625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:26.023" endtime="20201110 08:41:26.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:26.040" level="INFO">${ACCURACY} = {'time': [0.019772556, 0.019889625, 0.020005569, 0.020119583, 0.020236597, 0.020351611, 0.020467639, 0.020582639, 0.020698653, 0.020814667, 0.020929681, 0.021045708, 0.021158708, 0.021275722, 0.021389...</msg>
<status status="PASS" starttime="20201110 08:41:26.028" endtime="20201110 08:41:26.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.044" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:41:26.043" endtime="20201110 08:41:26.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.047" level="INFO">VALUE: [0.00011093100000000161, 0.00011123600000000067, 0.00011087499999999986, 0.00011090199999999953, 0.00011170799999999856, 0.00011101399999999956, 0.00011112500000000011, 0.000110902999999999, 0.0001117220000000016, 0.00011170899999999803, 0.00011125000000000024, 0.00011119399999999849, 0.00011084699999999725, 0.00011127799999999938, 0.00011133299999999818, 0.00011123600000000067, 0.00011084700000000072, 0.00011119500000000143, 0.00011130599999999852, 0.0001110969999999975, 0.0001115549999999993, 0.00011170799999999856, 0.0001108890000000029, 0.00011154099999999972, 0.00011148600000000092, 0.00011170799999999856, 0.00011134700000000122, 0.00011122199999999763, 0.00011173600000000117, 0.00011145900000000125, 0.00011081899999999811, 0.00011166599999999985, 0.00011123600000000067, 0.00011113899999999968, 0.00011176400000000031, 0.00011076399999999931, 0.00011118099999999839, 0.0001117090000000015, 0.00011144499999999821, 0.00011094500000000118, 0.00011154099999999972, 0.00011080499999999854, 0.00011080500000000201, 0.00011167999999999942, 0.0001115700000000018, 0.0001115700000000018, 0.00011162500000000061, 0.00011123600000000067, 0.00011133400000000113, 0.00011080499999999854]</msg>
<status status="PASS" starttime="20201110 08:41:26.045" endtime="20201110 08:41:26.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.041" endtime="20201110 08:41:26.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.050" endtime="20201110 08:41:26.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:26.054" endtime="20201110 08:41:26.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.052" endtime="20201110 08:41:26.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.049" endtime="20201110 08:41:26.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.681" endtime="20201110 08:41:26.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:25.680" endtime="20201110 08:41:26.075"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.083" endtime="20201110 08:41:26.104"></status>
</kw>
<msg timestamp="20201110 08:41:26.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:26.082" endtime="20201110 08:41:26.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:26.105" endtime="20201110 08:41:26.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.108" endtime="20201110 08:41:26.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.079" endtime="20201110 08:41:26.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.077" endtime="20201110 08:41:26.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.119" endtime="20201110 08:41:26.405"></status>
</kw>
<msg timestamp="20201110 08:41:26.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:26.117" endtime="20201110 08:41:26.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:26.409" endtime="20201110 08:41:26.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.417" endtime="20201110 08:41:26.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.115" endtime="20201110 08:41:26.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.113" endtime="20201110 08:41:26.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:26.423" level="INFO">${RESULT} = [{'time': 0.020193653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011261099999999857, 'source_diff': 0.00011261099999999857}, {'time': 0.020310694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:41:26.420" endtime="20201110 08:41:26.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:41:26.438" level="INFO">${ACCURACY} = {'time': [0.020193653, 0.020310694, 0.020427653, 0.020544667, 0.020660694, 0.020776694, 0.020891708, 0.021006722, 0.021123736, 0.021240764, 0.021358778, 0.021474778, 0.021592778, 0.021709792, 0.021826...</msg>
<status status="PASS" starttime="20201110 08:41:26.424" endtime="20201110 08:41:26.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.442" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:41:26.441" endtime="20201110 08:41:26.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.445" level="INFO">VALUE: [0.00011261099999999857, 0.00011265200000000128, 0.00011218099999999939, 0.00011188900000000043, 0.00011220799999999906, 0.00011181899999999911, 0.00011226399999999734, 0.00011215299999999678, 0.00011217999999999992, 0.00011230599999999952, 0.0001122359999999982, 0.00011197199999999838, 0.00011223600000000167, 0.00011187499999999739, 0.00011209800000000145, 0.00011261099999999857, 0.000112596999999999, 0.00011222199999999863, 0.0001125550000000003, 0.00011205600000000274, 0.00011206999999999884, 0.0001117359999999977, 0.00011229199999999995, 0.00011237500000000136, 0.00011208299999999893, 0.00011277799999999741, 0.00011238899999999746, 0.00011188900000000043, 0.00011206899999999936, 0.00011265300000000075, 0.00011263899999999771, 0.00011215300000000025, 0.00011192999999999967, 0.00011225000000000124, 0.00011194399999999924, 0.00011238899999999746, 0.00011194400000000271, 0.00011201400000000056, 0.00011219499999999896, 0.00011184699999999825, 0.00011256999999999934, 0.00011244499999999921, 0.00011231899999999961, 0.00011197200000000185, 0.00011225000000000124, 0.00011217999999999992, 0.00011213900000000068, 0.00011259799999999848, 0.00011191699999999957, 0.00011231999999999909]</msg>
<status status="PASS" starttime="20201110 08:41:26.443" endtime="20201110 08:41:26.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.439" endtime="20201110 08:41:26.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:26.448" endtime="20201110 08:41:26.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:26.452" endtime="20201110 08:41:26.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.450" endtime="20201110 08:41:26.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.447" endtime="20201110 08:41:26.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.076" endtime="20201110 08:41:26.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.075" endtime="20201110 08:41:26.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.959" endtime="20201110 08:41:26.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:26.476" endtime="20201110 08:41:26.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.475" endtime="20201110 08:41:26.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.474" endtime="20201110 08:41:26.497"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201110 08:40:43.859" endtime="20201110 08:41:26.497" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:39:53.503" endtime="20201110 08:41:26.500"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:41:26.555" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:41:26.564" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:41:27.715" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:41:26.554" endtime="20201110 08:41:27.716"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:41:30.721" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:41:27.718" endtime="20201110 08:41:30.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.553" endtime="20201110 08:41:30.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:30.725" endtime="20201110 08:41:30.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.723" endtime="20201110 08:41:30.967"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:30.979" endtime="20201110 08:41:34.000"></status>
</kw>
<msg timestamp="20201110 08:41:34.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:30.978" endtime="20201110 08:41:34.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:34.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:34.004" endtime="20201110 08:41:34.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:41:34.013" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:41:34.009" endtime="20201110 08:41:34.013"></status>
</kw>
<status status="FAIL" starttime="20201110 08:41:30.976" endtime="20201110 08:41:34.015"></status>
</kw>
<status status="FAIL" starttime="20201110 08:41:30.973" endtime="20201110 08:41:34.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.972" endtime="20201110 08:41:34.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:41:34.026" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:41:34.025" endtime="20201110 08:41:34.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.019" endtime="20201110 08:41:34.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.971" endtime="20201110 08:41:34.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.970" endtime="20201110 08:41:34.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:34.030" endtime="20201110 08:41:34.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.969" endtime="20201110 08:41:34.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:34.036" endtime="20201110 08:41:34.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:30.968" endtime="20201110 08:41:34.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:26.551" endtime="20201110 08:41:34.041"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:34.054" endtime="20201110 08:41:34.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.051" endtime="20201110 08:41:34.077"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:34.103" endtime="20201110 08:41:37.126"></status>
</kw>
<msg timestamp="20201110 08:41:37.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:34.100" endtime="20201110 08:41:37.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:37.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:41:37.129" endtime="20201110 08:41:37.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:41:37.139" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:41:37.134" endtime="20201110 08:41:37.140"></status>
</kw>
<status status="FAIL" starttime="20201110 08:41:34.095" endtime="20201110 08:41:37.143"></status>
</kw>
<status status="FAIL" starttime="20201110 08:41:34.090" endtime="20201110 08:41:37.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.087" endtime="20201110 08:41:37.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:41:37.156" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:41:37.154" endtime="20201110 08:41:37.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.148" endtime="20201110 08:41:37.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.085" endtime="20201110 08:41:37.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.084" endtime="20201110 08:41:37.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:37.161" endtime="20201110 08:41:37.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.081" endtime="20201110 08:41:37.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.078" endtime="20201110 08:41:37.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:34.048" endtime="20201110 08:41:37.170"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:41:37.178" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:37.194" endtime="20201110 08:41:39.304"></status>
</kw>
<msg timestamp="20201110 08:41:39.306" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6086988, 'start-iter': 1, 'wakeups': [6096993, 6106995, 6116995, 61269...</msg>
<status status="PASS" starttime="20201110 08:41:37.190" endtime="20201110 08:41:39.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6086988, 'start-iter': 1, 'wakeups': [6096993, 6106995, 6116995, 61269...</msg>
<status status="PASS" starttime="20201110 08:41:39.308" endtime="20201110 08:41:39.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:39.315" endtime="20201110 08:41:39.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.185" endtime="20201110 08:41:39.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.181" endtime="20201110 08:41:39.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:39.325" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 1, 'start-time': 6086988, 'wakeups': [6096993, 6106995, 6116995, 6126995, 6136995, 6146995, 6156995, 6166995, 6176995, 6186995, 6196995, 62069...</msg>
<status status="PASS" starttime="20201110 08:41:39.321" endtime="20201110 08:41:39.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.333" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:39.332" endtime="20201110 08:41:39.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.335" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:39.334" endtime="20201110 08:41:39.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.327" endtime="20201110 08:41:39.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.340" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:39.339" endtime="20201110 08:41:39.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.342" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:39.341" endtime="20201110 08:41:39.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.336" endtime="20201110 08:41:39.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.347" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:39.346" endtime="20201110 08:41:39.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.349" level="INFO">VALUE: 6086988</msg>
<status status="PASS" starttime="20201110 08:41:39.348" endtime="20201110 08:41:39.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.343" endtime="20201110 08:41:39.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.353" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:39.352" endtime="20201110 08:41:39.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.356" level="INFO">VALUE: [6096993, 6106995, 6116995, 6126995, 6136995, 6146995, 6156995, 6166995, 6176995, 6186995, 6196995, 6206995, 6216995, 6226995, 6236995, 6246995, 6256995, 6266995, 6276995, 6286995, 6296995, 6306995, 6316995, 6326995, 6336995, 6346995, 6356995, 6366995, 6376995, 6386995, 6396995, 6406995, 6416995, 6426995, 6436995, 6446995, 6456995, 6466995, 6476995, 6486995, 6496995, 6506995, 6516995, 6526995, 6536995, 6546995, 6556995, 6566995, 6576995, 6586995, 6596995, 6606995, 6616995, 6626995, 6636995, 6646995, 6656995, 6666995, 6676995, 6686995, 6696995, 6706995, 6716995, 6726995, 6736995, 6746995, 6756995, 6766995, 6776995, 6786995, 6796995, 6806995, 6816995, 6826995, 6836995, 6846995, 6856995, 6866995, 6876995, 6886995, 6896995, 6906995, 6916995, 6926995, 6936995, 6946995, 6956995, 6966995, 6976995, 6986995, 6996995, 7006995, 7016995, 7026995, 7036995, 7046995, 7056995, 7066995, 7076995, 7086995]</msg>
<status status="PASS" starttime="20201110 08:41:39.355" endtime="20201110 08:41:39.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.350" endtime="20201110 08:41:39.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:39.363" endtime="20201110 08:41:39.668"></status>
</kw>
<msg timestamp="20201110 08:41:39.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.129550264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139557403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:39.361" endtime="20201110 08:41:39.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.129550264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139557403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:39.672" endtime="20201110 08:41:39.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:39.679" endtime="20201110 08:41:39.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.359" endtime="20201110 08:41:39.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.357" endtime="20201110 08:41:39.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:39.706" level="INFO">${RESULT} = {'time': [3.129550264, 3.139557403, 3.149560542, 3.159561667, 3.169562847, 3.179563944, 3.189565097, 3.199566278, 3.209567389, 3.2195685, 3.229569653, 3.239570792, 3.249571944, 3.259573069, 3.26957423...</msg>
<status status="PASS" starttime="20201110 08:41:39.683" endtime="20201110 08:41:39.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.710" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:39.709" endtime="20201110 08:41:39.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.712" level="INFO">VALUE: 3.129550264</msg>
<status status="PASS" starttime="20201110 08:41:39.711" endtime="20201110 08:41:39.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.707" endtime="20201110 08:41:39.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.718" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:39.717" endtime="20201110 08:41:39.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:39.720" level="INFO">VALUE: [3.139557403, 3.149560542, 3.159561667, 3.169562847, 3.179563944, 3.189565097, 3.199566278, 3.209567389, 3.2195685, 3.229569653, 3.239570792, 3.249571944, 3.259573069, 3.269574236, 3.279575333, 3.289576514, 3.299577625, 3.309578778, 3.319579903, 3.329581069, 3.339582167, 3.349583333, 3.359584444, 3.369585611, 3.379586722, 3.389587889, 3.399589, 3.409590167, 3.419591292, 3.429592458, 3.439593556, 3.449594736, 3.459595833, 3.469597, 3.479598153, 3.489599278, 3.499600403, 3.509601556, 3.519602694, 3.529603875, 3.539604944, 3.549606125, 3.559607222, 3.569608389, 3.5796095, 3.589610667, 3.599611778, 3.609612944, 3.619614139, 3.629615222, 3.639616347, 3.6496175, 3.659618625, 3.669619819, 3.679620903, 3.689622083, 3.699623181, 3.709624347, 3.719625472, 3.729626625, 3.739627736, 3.749628903, 3.759630014, 3.769631181, 3.779632292, 3.789633472, 3.799634569, 3.809635764, 3.819636861, 3.829638028, 3.839639125, 3.849640306, 3.859641431, 3.869642583, 3.879643681, 3.889644847, 3.899645972, 3.909647139, 3.919648236, 3.929649403, 3.939650528, 3.949651694, 3.959652819, 3.969653958, 3.979655083, 3.98965625, 3.999657361, 4.009658542, 4.019659653, 4.029660806, 4.039661917, 4.049663083, 4.059664194, 4.069665431, 4.079666486, 4.089667639, 4.099668806, 4.109669917, 4.119671042, 4.129672194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:39.719" endtime="20201110 08:41:39.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.714" endtime="20201110 08:41:39.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:39.723" endtime="20201110 08:41:39.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:39.726" endtime="20201110 08:41:39.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.725" endtime="20201110 08:41:39.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.721" endtime="20201110 08:41:39.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.179" endtime="20201110 08:41:39.747"></status>
</kw>
<msg timestamp="20201110 08:41:39.747" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:39.755" endtime="20201110 08:41:41.866"></status>
</kw>
<msg timestamp="20201110 08:41:41.867" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8648628, 'start-iter': 1, 'wakeups': [8658633, 8668635, 8678635, 86886...</msg>
<status status="PASS" starttime="20201110 08:41:39.754" endtime="20201110 08:41:41.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 8648628, 'start-iter': 1, 'wakeups': [8658633, 8668635, 8678635, 86886...</msg>
<status status="PASS" starttime="20201110 08:41:41.869" endtime="20201110 08:41:41.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:41.875" endtime="20201110 08:41:41.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.751" endtime="20201110 08:41:41.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.749" endtime="20201110 08:41:41.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:41.886" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 1, 'start-time': 8648628, 'wakeups': [8658633, 8668635, 8678635, 8688635, 8698635, 8708635, 8718635, 8728635, 8738635, 8748635, 8758635, 87686...</msg>
<status status="PASS" starttime="20201110 08:41:41.882" endtime="20201110 08:41:41.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.891" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:41.890" endtime="20201110 08:41:41.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.893" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:41.892" endtime="20201110 08:41:41.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.887" endtime="20201110 08:41:41.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.898" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:41.897" endtime="20201110 08:41:41.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.900" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:41.899" endtime="20201110 08:41:41.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.895" endtime="20201110 08:41:41.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.905" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:41.904" endtime="20201110 08:41:41.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.907" level="INFO">VALUE: 8648628</msg>
<status status="PASS" starttime="20201110 08:41:41.906" endtime="20201110 08:41:41.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.901" endtime="20201110 08:41:41.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.912" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:41.911" endtime="20201110 08:41:41.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:41.914" level="INFO">VALUE: [8658633, 8668635, 8678635, 8688635, 8698635, 8708635, 8718635, 8728635, 8738635, 8748635, 8758635, 8768635, 8778635, 8788635, 8798635, 8808635, 8818635, 8828635, 8838635, 8848635, 8858635, 8868635, 8878635, 8888635, 8898635, 8908635, 8918635, 8928635, 8938635, 8948635, 8958635, 8968635, 8978635, 8988635, 8998635, 9008635, 9018635, 9028635, 9038635, 9048635, 9058635, 9068635, 9078635, 9088635, 9098635, 9108635, 9118635, 9128635, 9138635, 9148635, 9158635, 9168635, 9178635, 9188635, 9198635, 9208635, 9218635, 9228635, 9238635, 9248635, 9258635, 9268635, 9278635, 9288635, 9298635, 9308635, 9318635, 9328635, 9338635, 9348635, 9358635, 9368635, 9378635, 9388635, 9398635, 9408635, 9418635, 9428635, 9438635, 9448635, 9458635, 9468635, 9478635, 9488635, 9498635, 9508635, 9518635, 9528635, 9538635, 9548635, 9558635, 9568635, 9578635, 9588635, 9598635, 9608635, 9618635, 9628635, 9638635, 9648635]</msg>
<status status="PASS" starttime="20201110 08:41:41.913" endtime="20201110 08:41:41.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.908" endtime="20201110 08:41:41.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:41.921" endtime="20201110 08:41:42.213"></status>
</kw>
<msg timestamp="20201110 08:41:42.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029034542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:41.920" endtime="20201110 08:41:42.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:42.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029034542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:42.217" endtime="20201110 08:41:42.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:42.224" endtime="20201110 08:41:42.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.917" endtime="20201110 08:41:42.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:41.915" endtime="20201110 08:41:42.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:42.252" level="INFO">${RESULT} = {'time': [0.019027403, 0.029034542, 0.039037694, 0.049038806, 0.059040028, 0.069041111, 0.07904225, 0.089043361, 0.099044556, 0.109045639, 0.119046819, 0.129047931, 0.139049083, 0.149050222, 0.1590513...</msg>
<status status="PASS" starttime="20201110 08:41:42.227" endtime="20201110 08:41:42.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:42.256" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:42.255" endtime="20201110 08:41:42.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:42.258" level="INFO">VALUE: 0.019027403</msg>
<status status="PASS" starttime="20201110 08:41:42.257" endtime="20201110 08:41:42.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.253" endtime="20201110 08:41:42.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:42.270" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:42.269" endtime="20201110 08:41:42.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:42.272" level="INFO">VALUE: [0.029034542, 0.039037694, 0.049038806, 0.059040028, 0.069041111, 0.07904225, 0.089043361, 0.099044556, 0.109045639, 0.119046819, 0.129047931, 0.139049083, 0.149050222, 0.159051375, 0.169052486, 0.179053653, 0.189054778, 0.199055944, 0.209057056, 0.219058222, 0.229059333, 0.2390605, 0.249061611, 0.259062778, 0.269063903, 0.279065056, 0.289066167, 0.299067319, 0.309068458, 0.319069639, 0.329070722, 0.339071875, 0.349072986, 0.359074222, 0.36907525, 0.379076417, 0.389077528, 0.399078694, 0.409079806, 0.419080958, 0.429082069, 0.43908325, 0.449084347, 0.459085514, 0.469086639, 0.479087792, 0.489088931, 0.499090056, 0.509091194, 0.519092347, 0.529093444, 0.539094653, 0.549095722, 0.559096889, 0.569098056, 0.579099194, 0.589100292, 0.599101444, 0.609102583, 0.619103778, 0.629104847, 0.639106, 0.649107111, 0.659108264, 0.669109389, 0.679110542, 0.689111653, 0.699112819, 0.709113931, 0.719115111, 0.729116208, 0.739117375, 0.749118486, 0.759119639, 0.769120764, 0.779121917, 0.789123028, 0.799124194, 0.809125306, 0.819126486, 0.829127583, 0.83912875, 0.849129875, 0.859131028, 0.869132153, 0.879133306, 0.889134417, 0.899135569, 0.909136694, 0.919137875, 0.929138986, 0.939140167, 0.949141236, 0.959142403, 0.969143528, 0.979144681, 0.989145792, 0.999146958, 1.009148069, 1.01914925] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:42.271" endtime="20201110 08:41:42.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.266" endtime="20201110 08:41:42.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:42.275" endtime="20201110 08:41:42.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:42.279" endtime="20201110 08:41:42.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.277" endtime="20201110 08:41:42.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.274" endtime="20201110 08:41:42.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:39.748" endtime="20201110 08:41:42.300"></status>
</kw>
<msg timestamp="20201110 08:41:42.300" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:42.308" endtime="20201110 08:41:44.411"></status>
</kw>
<msg timestamp="20201110 08:41:44.412" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11200119, 'start-iter': 1, 'wakeups': [11210125, 11220126, 11230126, 1...</msg>
<status status="PASS" starttime="20201110 08:41:42.306" endtime="20201110 08:41:44.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.418" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 11200119, 'start-iter': 1, 'wakeups': [11210125, 11220126, 11230126, 1...</msg>
<status status="PASS" starttime="20201110 08:41:44.414" endtime="20201110 08:41:44.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:44.420" endtime="20201110 08:41:44.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.304" endtime="20201110 08:41:44.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.302" endtime="20201110 08:41:44.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:44.431" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 1, 'start-time': 11200119, 'wakeups': [11210125, 11220126, 11230126, 11240126, 11250126, 11260126, 11270126, 11280126, 11290126, 11300126, 113...</msg>
<status status="PASS" starttime="20201110 08:41:44.427" endtime="20201110 08:41:44.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.439" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:44.437" endtime="20201110 08:41:44.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.446" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:44.444" endtime="20201110 08:41:44.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.433" endtime="20201110 08:41:44.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.456" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:44.454" endtime="20201110 08:41:44.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.460" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:44.458" endtime="20201110 08:41:44.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.449" endtime="20201110 08:41:44.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.466" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:44.465" endtime="20201110 08:41:44.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.468" level="INFO">VALUE: 11200119</msg>
<status status="PASS" starttime="20201110 08:41:44.467" endtime="20201110 08:41:44.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.463" endtime="20201110 08:41:44.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.473" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:44.472" endtime="20201110 08:41:44.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.475" level="INFO">VALUE: [11210125, 11220126, 11230126, 11240126, 11250126, 11260126, 11270126, 11280126, 11290126, 11300126, 11310126, 11320126, 11330126, 11340126, 11350126, 11360126, 11370126, 11380126, 11390126, 11400126, 11410126, 11420126, 11430126, 11440126, 11450126, 11460126, 11470126, 11480126, 11490126, 11500126, 11510126, 11520126, 11530126, 11540126, 11550126, 11560126, 11570126, 11580126, 11590126, 11600126, 11610126, 11620126, 11630126, 11640126, 11650126, 11660126, 11670126, 11680126, 11690126, 11700126, 11710126, 11720126, 11730126, 11740126, 11750126, 11760126, 11770126, 11780126, 11790126, 11800126, 11810126, 11820126, 11830126, 11840126, 11850126, 11860126, 11870126, 11880126, 11890126, 11900126, 11910126, 11920126, 11930126, 11940126, 11950126, 11960126, 11970126, 11980126, 11990126, 12000126, 12010126, 12020126, 12030126, 12040126, 12050126, 12060126, 12070126, 12080126, 12090126, 12100126, 12110126, 12120126, 12130126, 12140126, 12150126, 12160126, 12170126, 12180126, 12190126, 12200126]</msg>
<status status="PASS" starttime="20201110 08:41:44.474" endtime="20201110 08:41:44.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.470" endtime="20201110 08:41:44.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:44.483" endtime="20201110 08:41:44.775"></status>
</kw>
<msg timestamp="20201110 08:41:44.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028168417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:44.481" endtime="20201110 08:41:44.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028168417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:44.779" endtime="20201110 08:41:44.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:44.786" endtime="20201110 08:41:44.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.478" endtime="20201110 08:41:44.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.477" endtime="20201110 08:41:44.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:44.814" level="INFO">${RESULT} = {'time': [0.018160667, 0.028168417, 0.038170611, 0.048171708, 0.058172861, 0.068173972, 0.078175139, 0.088176264, 0.098177417, 0.108178528, 0.118179694, 0.128180819, 0.138181986, 0.148183111, 0.158184...</msg>
<status status="PASS" starttime="20201110 08:41:44.790" endtime="20201110 08:41:44.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.819" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:41:44.818" endtime="20201110 08:41:44.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.821" level="INFO">VALUE: 0.018160667</msg>
<status status="PASS" starttime="20201110 08:41:44.820" endtime="20201110 08:41:44.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.815" endtime="20201110 08:41:44.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.826" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:44.825" endtime="20201110 08:41:44.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:44.829" level="INFO">VALUE: [0.028168417, 0.038170611, 0.048171708, 0.058172861, 0.068173972, 0.078175139, 0.088176264, 0.098177417, 0.108178528, 0.118179694, 0.128180819, 0.138181986, 0.148183111, 0.158184278, 0.168185389, 0.178186569, 0.188187653, 0.198188819, 0.208189931, 0.218191097, 0.228192222, 0.238193403, 0.248194514, 0.258195708, 0.268196778, 0.278197931, 0.288199042, 0.298200208, 0.308201319, 0.318202458, 0.328203569, 0.338204764, 0.348205847, 0.358207, 0.368208111, 0.378209278, 0.388210375, 0.398211542, 0.408212681, 0.418213806, 0.428214917, 0.438216083, 0.448217194, 0.458218347, 0.468219458, 0.478220639, 0.488221792, 0.498222903, 0.508224, 0.518225181, 0.528226292, 0.538227431, 0.548228611, 0.558229722, 0.568230819, 0.578232014, 0.588233153, 0.598234319, 0.608235361, 0.618236528, 0.628237653, 0.638238792, 0.648239917, 0.658241069, 0.668242181, 0.678243333, 0.688244458, 0.698245625, 0.70824675, 0.718247875, 0.728249028, 0.738250153, 0.748251278, 0.758252417, 0.768253542, 0.778254736, 0.788255806, 0.798256986, 0.808258097, 0.818259236, 0.828260403, 0.838261569, 0.848262625, 0.858263778, 0.868264889, 0.878266069, 0.888267236, 0.898268319, 0.908269431, 0.918270611, 0.928271722, 0.938272861, 0.948273986, 0.958275153, 0.96827625, 0.978277417, 0.988278597, 0.998279681, 1.008280792, 1.018281958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:44.827" endtime="20201110 08:41:44.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.822" endtime="20201110 08:41:44.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:44.834" endtime="20201110 08:41:44.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:44.838" endtime="20201110 08:41:44.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.836" endtime="20201110 08:41:44.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.831" endtime="20201110 08:41:44.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:42.300" endtime="20201110 08:41:44.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.176" endtime="20201110 08:41:44.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.173" endtime="20201110 08:41:44.861"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:41:44.864" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:44.874" endtime="20201110 08:41:46.978"></status>
</kw>
<msg timestamp="20201110 08:41:46.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13766251, 'start-iter': 1, 'wakeups': [13776262, 13786262, 13796262, 1...</msg>
<status status="PASS" starttime="20201110 08:41:44.872" endtime="20201110 08:41:46.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:46.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13766251, 'start-iter': 1, 'wakeups': [13776262, 13786262, 13796262, 1...</msg>
<status status="PASS" starttime="20201110 08:41:46.982" endtime="20201110 08:41:46.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:46.987" endtime="20201110 08:41:46.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.869" endtime="20201110 08:41:46.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.867" endtime="20201110 08:41:46.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:46.998" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 2, 'start-time': 13766251, 'wakeups': [13776262, 13786262, 13796262, 13806262, 13816262, 13826262, 13836262, 13846262, 13856262, 13866262, 138...</msg>
<status status="PASS" starttime="20201110 08:41:46.994" endtime="20201110 08:41:46.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.007" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:47.005" endtime="20201110 08:41:47.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.011" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:47.009" endtime="20201110 08:41:47.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.000" endtime="20201110 08:41:47.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.021" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:47.019" endtime="20201110 08:41:47.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.025" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:47.023" endtime="20201110 08:41:47.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.014" endtime="20201110 08:41:47.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.038" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:47.035" endtime="20201110 08:41:47.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.042" level="INFO">VALUE: 13766251</msg>
<status status="PASS" starttime="20201110 08:41:47.040" endtime="20201110 08:41:47.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.028" endtime="20201110 08:41:47.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.052" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:47.050" endtime="20201110 08:41:47.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.057" level="INFO">VALUE: [13776262, 13786262, 13796262, 13806262, 13816262, 13826262, 13836262, 13846262, 13856262, 13866262, 13876262, 13886262, 13896262, 13906262, 13916262, 13926262, 13936262, 13946262, 13956262, 13966262, 13976262, 13986262, 13996262, 14006262, 14016262, 14026262, 14036262, 14046262, 14056262, 14066262, 14076262, 14086262, 14096262, 14106262, 14116262, 14126262, 14136262, 14146262, 14156262, 14166262, 14176262, 14186262, 14196262, 14206262, 14216262, 14226262, 14236262, 14246262, 14256262, 14266262, 14276262, 14286262, 14296262, 14306262, 14316262, 14326262, 14336262, 14346262, 14356262, 14366262, 14376262, 14386262, 14396262, 14406262, 14416262, 14426262, 14436262, 14446262, 14456262, 14466262, 14476262, 14486262, 14496262, 14506262, 14516262, 14526262, 14536262, 14546262, 14556262, 14566262, 14576262, 14586262, 14596262, 14606262, 14616262, 14626262, 14636262, 14646262, 14656262, 14666262, 14676262, 14686262, 14696262, 14706262, 14716262, 14726262, 14736262, 14746262, 14756262, 14766262]</msg>
<status status="PASS" starttime="20201110 08:41:47.054" endtime="20201110 08:41:47.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.045" endtime="20201110 08:41:47.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:47.072" endtime="20201110 08:41:47.370"></status>
</kw>
<msg timestamp="20201110 08:41:47.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034348722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:47.069" endtime="20201110 08:41:47.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024336097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034348722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:47.374" endtime="20201110 08:41:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:47.381" endtime="20201110 08:41:47.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.064" endtime="20201110 08:41:47.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.060" endtime="20201110 08:41:47.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:47.408" level="INFO">${RESULT} = {'time': [0.024336097, 0.034348722, 0.044349889, 0.054351, 0.064352236, 0.074353292, 0.084354444, 0.094355556, 0.104356722, 0.114357833, 0.124359014, 0.134360111, 0.144361278, 0.154362417, 0.164363556...</msg>
<status status="PASS" starttime="20201110 08:41:47.385" endtime="20201110 08:41:47.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.412" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:47.411" endtime="20201110 08:41:47.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.415" level="INFO">VALUE: 0.024336097</msg>
<status status="PASS" starttime="20201110 08:41:47.414" endtime="20201110 08:41:47.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.409" endtime="20201110 08:41:47.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.420" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:47.419" endtime="20201110 08:41:47.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:47.422" level="INFO">VALUE: [0.034348722, 0.044349889, 0.054351, 0.064352236, 0.074353292, 0.084354444, 0.094355556, 0.104356722, 0.114357833, 0.124359014, 0.134360111, 0.144361278, 0.154362417, 0.164363556, 0.174364694, 0.184365847, 0.194366972, 0.204368139, 0.214369236, 0.224370417, 0.234371528, 0.244372681, 0.254373819, 0.264375042, 0.274376097, 0.28437725, 0.294378347, 0.3043795, 0.314380611, 0.324381778, 0.334382903, 0.344384056, 0.354385153, 0.364386333, 0.374387431, 0.384388583, 0.394389694, 0.404390847, 0.414391958, 0.424393139, 0.434394264, 0.444395403, 0.4543965, 0.464397681, 0.474398792, 0.484399931, 0.494401042, 0.504402222, 0.514403319, 0.524404472, 0.534405597, 0.544406764, 0.554407861, 0.564409014, 0.574410181, 0.584411292, 0.594412403, 0.604413583, 0.614414667, 0.624415903, 0.634416958, 0.644418111, 0.654419222, 0.664420375, 0.674421486, 0.684422639, 0.69442375, 0.704424917, 0.714426028, 0.724427181, 0.734428306, 0.744429458, 0.754430569, 0.764431722, 0.774432833, 0.784434014, 0.794435111, 0.804436306, 0.814437403, 0.824438569, 0.834439667, 0.844440833, 0.854441931, 0.864443083, 0.874444194, 0.884445375, 0.894446472, 0.904447625, 0.914448736, 0.924449903, 0.934451014, 0.944452167, 0.954453333, 0.964454458, 0.974455597, 0.984456708, 0.994457875, 1.004458986, 1.014460097, 1.024461264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:47.421" endtime="20201110 08:41:47.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.416" endtime="20201110 08:41:47.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:47.425" endtime="20201110 08:41:47.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:47.429" endtime="20201110 08:41:47.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.427" endtime="20201110 08:41:47.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.424" endtime="20201110 08:41:47.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.865" endtime="20201110 08:41:47.455"></status>
</kw>
<msg timestamp="20201110 08:41:47.455" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:47.463" endtime="20201110 08:41:49.567"></status>
</kw>
<msg timestamp="20201110 08:41:49.568" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16355071, 'start-iter': 1, 'wakeups': [16365082, 16375082, 16385082, 1...</msg>
<status status="PASS" starttime="20201110 08:41:47.461" endtime="20201110 08:41:49.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 16355071, 'start-iter': 1, 'wakeups': [16365082, 16375082, 16385082, 1...</msg>
<status status="PASS" starttime="20201110 08:41:49.570" endtime="20201110 08:41:49.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:49.576" endtime="20201110 08:41:49.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.459" endtime="20201110 08:41:49.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.457" endtime="20201110 08:41:49.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:49.587" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 2, 'start-time': 16355071, 'wakeups': [16365082, 16375082, 16385082, 16395082, 16405082, 16415082, 16425082, 16435082, 16445082, 16455082, 164...</msg>
<status status="PASS" starttime="20201110 08:41:49.583" endtime="20201110 08:41:49.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.595" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:49.593" endtime="20201110 08:41:49.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.600" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:49.598" endtime="20201110 08:41:49.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.589" endtime="20201110 08:41:49.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.610" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:49.608" endtime="20201110 08:41:49.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.615" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:49.613" endtime="20201110 08:41:49.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.603" endtime="20201110 08:41:49.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.625" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:49.623" endtime="20201110 08:41:49.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.630" level="INFO">VALUE: 16355071</msg>
<status status="PASS" starttime="20201110 08:41:49.628" endtime="20201110 08:41:49.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.618" endtime="20201110 08:41:49.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.642" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:49.638" endtime="20201110 08:41:49.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.647" level="INFO">VALUE: [16365082, 16375082, 16385082, 16395082, 16405082, 16415082, 16425082, 16435082, 16445082, 16455082, 16465082, 16475082, 16485082, 16495082, 16505082, 16515082, 16525082, 16535082, 16545082, 16555082, 16565082, 16575082, 16585082, 16595082, 16605082, 16615082, 16625082, 16635082, 16645082, 16655082, 16665082, 16675082, 16685082, 16695082, 16705082, 16715082, 16725082, 16735082, 16745082, 16755082, 16765082, 16775082, 16785082, 16795082, 16805082, 16815082, 16825082, 16835082, 16845082, 16855082, 16865082, 16875082, 16885082, 16895082, 16905082, 16915082, 16925082, 16935082, 16945082, 16955082, 16965082, 16975082, 16985082, 16995082, 17005082, 17015082, 17025082, 17035082, 17045082, 17055082, 17065082, 17075082, 17085082, 17095082, 17105082, 17115082, 17125082, 17135082, 17145082, 17155082, 17165082, 17175082, 17185082, 17195082, 17205082, 17215082, 17225082, 17235082, 17245082, 17255082, 17265082, 17275082, 17285082, 17295082, 17305082, 17315082, 17325082, 17335082, 17345082, 17355082]</msg>
<status status="PASS" starttime="20201110 08:41:49.645" endtime="20201110 08:41:49.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.633" endtime="20201110 08:41:49.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:49.663" endtime="20201110 08:41:49.958"></status>
</kw>
<msg timestamp="20201110 08:41:49.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03321375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:49.660" endtime="20201110 08:41:49.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:49.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03321375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:41:49.962" endtime="20201110 08:41:49.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:49.969" endtime="20201110 08:41:49.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.655" endtime="20201110 08:41:49.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.650" endtime="20201110 08:41:49.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:49.995" level="INFO">${RESULT} = {'time': [0.023201083, 0.03321375, 0.043214875, 0.053216014, 0.063217236, 0.073218292, 0.083219458, 0.093220569, 0.103221736, 0.113222861, 0.123224, 0.133225111, 0.143226292, 0.153227403, 0.163228569,...</msg>
<status status="PASS" starttime="20201110 08:41:49.973" endtime="20201110 08:41:49.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:50.000" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:49.999" endtime="20201110 08:41:50.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:50.002" level="INFO">VALUE: 0.023201083</msg>
<status status="PASS" starttime="20201110 08:41:50.001" endtime="20201110 08:41:50.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:49.996" endtime="20201110 08:41:50.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:50.007" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:50.006" endtime="20201110 08:41:50.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:50.009" level="INFO">VALUE: [0.03321375, 0.043214875, 0.053216014, 0.063217236, 0.073218292, 0.083219458, 0.093220569, 0.103221736, 0.113222861, 0.123224, 0.133225111, 0.143226292, 0.153227403, 0.163228569, 0.173229694, 0.183230833, 0.193231972, 0.203233153, 0.213234236, 0.223235472, 0.233236514, 0.243237681, 0.253238806, 0.263239958, 0.273241083, 0.28324225, 0.293243375, 0.303244528, 0.313245681, 0.323246806, 0.333247931, 0.343249097, 0.353250208, 0.363251389, 0.373252486, 0.383253667, 0.393254778, 0.403255944, 0.413257069, 0.423258222, 0.433259375, 0.4432605, 0.453261639, 0.463262819, 0.473263903, 0.483265069, 0.493266181, 0.503267361, 0.513268458, 0.523269625, 0.533270764, 0.543271917, 0.553273028, 0.563274194, 0.573275306, 0.583276458, 0.593277569, 0.603278722, 0.613279847, 0.623281, 0.633282125, 0.643283264, 0.653284403, 0.663285528, 0.673286639, 0.683287819, 0.693288903, 0.703290083, 0.713291181, 0.723292347, 0.733293458, 0.743294611, 0.753295722, 0.763296875, 0.773297986, 0.783299153, 0.793300264, 0.803301431, 0.813302542, 0.823303694, 0.833304833, 0.843305958, 0.853307069, 0.863308236, 0.873309403, 0.883310542, 0.893311667, 0.903312833, 0.913313889, 0.923315042, 0.933316153, 0.943317319, 0.953318431, 0.963319597, 0.973320708, 0.983321875, 0.993322972, 1.003324153, 1.01332525, 1.023326431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:50.008" endtime="20201110 08:41:50.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.003" endtime="20201110 08:41:50.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:50.012" endtime="20201110 08:41:50.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:50.016" endtime="20201110 08:41:50.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.014" endtime="20201110 08:41:50.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.011" endtime="20201110 08:41:50.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:47.455" endtime="20201110 08:41:50.037"></status>
</kw>
<msg timestamp="20201110 08:41:50.038" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:50.045" endtime="20201110 08:41:52.150"></status>
</kw>
<msg timestamp="20201110 08:41:52.151" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18937745, 'start-iter': 1, 'wakeups': [18947756, 18957756, 18967756, 1...</msg>
<status status="PASS" starttime="20201110 08:41:50.044" endtime="20201110 08:41:52.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 18937745, 'start-iter': 1, 'wakeups': [18947756, 18957756, 18967756, 1...</msg>
<status status="PASS" starttime="20201110 08:41:52.154" endtime="20201110 08:41:52.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:52.160" endtime="20201110 08:41:52.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.041" endtime="20201110 08:41:52.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.039" endtime="20201110 08:41:52.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:52.170" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 2, 'start-time': 18937745, 'wakeups': [18947756, 18957756, 18967756, 18977756, 18987756, 18997756, 19007756, 19017756, 19027756, 19037756, 190...</msg>
<status status="PASS" starttime="20201110 08:41:52.166" endtime="20201110 08:41:52.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.179" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:52.177" endtime="20201110 08:41:52.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.183" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:52.181" endtime="20201110 08:41:52.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.172" endtime="20201110 08:41:52.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.193" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:52.191" endtime="20201110 08:41:52.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.197" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:52.195" endtime="20201110 08:41:52.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.186" endtime="20201110 08:41:52.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.207" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:52.205" endtime="20201110 08:41:52.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.212" level="INFO">VALUE: 18937745</msg>
<status status="PASS" starttime="20201110 08:41:52.210" endtime="20201110 08:41:52.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.200" endtime="20201110 08:41:52.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.222" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:52.219" endtime="20201110 08:41:52.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.226" level="INFO">VALUE: [18947756, 18957756, 18967756, 18977756, 18987756, 18997756, 19007756, 19017756, 19027756, 19037756, 19047756, 19057756, 19067756, 19077756, 19087756, 19097756, 19107756, 19117756, 19127756, 19137756, 19147756, 19157756, 19167756, 19177756, 19187756, 19197756, 19207756, 19217756, 19227756, 19237756, 19247756, 19257756, 19267756, 19277756, 19287756, 19297756, 19307756, 19317756, 19327756, 19337756, 19347756, 19357756, 19367756, 19377756, 19387756, 19397756, 19407756, 19417756, 19427756, 19437756, 19447756, 19457756, 19467756, 19477756, 19487756, 19497756, 19507756, 19517756, 19527756, 19537756, 19547756, 19557756, 19567756, 19577756, 19587756, 19597756, 19607756, 19617756, 19627756, 19637756, 19647756, 19657756, 19667756, 19677756, 19687756, 19697756, 19707756, 19717756, 19727756, 19737756, 19747756, 19757756, 19767756, 19777756, 19787756, 19797756, 19807756, 19817756, 19827756, 19837756, 19847756, 19857756, 19867756, 19877756, 19887756, 19897756, 19907756, 19917756, 19927756, 19937756]</msg>
<status status="PASS" starttime="20201110 08:41:52.224" endtime="20201110 08:41:52.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.215" endtime="20201110 08:41:52.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:52.243" endtime="20201110 08:41:52.536"></status>
</kw>
<msg timestamp="20201110 08:41:52.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018117431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028129722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:52.238" endtime="20201110 08:41:52.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018117431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028129722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:52.540" endtime="20201110 08:41:52.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:52.553" endtime="20201110 08:41:52.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.233" endtime="20201110 08:41:52.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.229" endtime="20201110 08:41:52.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:52.580" level="INFO">${RESULT} = {'time': [0.018117431, 0.028129722, 0.038130889, 0.048132, 0.058133181, 0.068134278, 0.0781355, 0.088136556, 0.098137764, 0.108138889, 0.11814, 0.128141194, 0.138142278, 0.148143417, 0.158144583, 0.16...</msg>
<status status="PASS" starttime="20201110 08:41:52.556" endtime="20201110 08:41:52.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.584" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:41:52.583" endtime="20201110 08:41:52.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.586" level="INFO">VALUE: 0.018117431</msg>
<status status="PASS" starttime="20201110 08:41:52.585" endtime="20201110 08:41:52.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.581" endtime="20201110 08:41:52.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.592" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:52.591" endtime="20201110 08:41:52.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:52.594" level="INFO">VALUE: [0.028129722, 0.038130889, 0.048132, 0.058133181, 0.068134278, 0.0781355, 0.088136556, 0.098137764, 0.108138889, 0.11814, 0.128141194, 0.138142278, 0.148143417, 0.158144583, 0.168145681, 0.178146847, 0.188147972, 0.198149125, 0.20815025, 0.218151403, 0.228152528, 0.238153694, 0.248154806, 0.258155972, 0.268157083, 0.27815825, 0.288159389, 0.298160542, 0.308161653, 0.318162861, 0.328163931, 0.338165097, 0.348166222, 0.358167389, 0.3681685, 0.378169667, 0.388170778, 0.398171944, 0.408173069, 0.418174236, 0.428175361, 0.4381765, 0.448177611, 0.458178778, 0.468179875, 0.478181042, 0.488182181, 0.498183319, 0.508184486, 0.518185583, 0.528186708, 0.538187917, 0.548188972, 0.558190125, 0.568191236, 0.578192389, 0.5881935, 0.598194681, 0.608195778, 0.618196931, 0.628198042, 0.638199208, 0.648200319, 0.658201472, 0.668202625, 0.67820375, 0.688204875, 0.698206014, 0.708207125, 0.718208306, 0.728209417, 0.738210569, 0.748211681, 0.758212833, 0.768214014, 0.778215111, 0.788216236, 0.798217375, 0.8082185, 0.818219653, 0.828220778, 0.838221931, 0.848223042, 0.858224208, 0.868225306, 0.878226472, 0.888227583, 0.89822875, 0.908229861, 0.918231014, 0.928232125, 0.938233292, 0.948234417, 0.958235556, 0.968236681, 0.978237833, 0.988238958, 0.998240111, 1.008241208, 1.018242375] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:52.593" endtime="20201110 08:41:52.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.588" endtime="20201110 08:41:52.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:52.597" endtime="20201110 08:41:52.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:52.600" endtime="20201110 08:41:52.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.599" endtime="20201110 08:41:52.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.595" endtime="20201110 08:41:52.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:50.038" endtime="20201110 08:41:52.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.862" endtime="20201110 08:41:52.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:44.861" endtime="20201110 08:41:52.621"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:41:52.624" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:52.633" endtime="20201110 08:41:54.736"></status>
</kw>
<msg timestamp="20201110 08:41:54.737" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21525073, 'start-iter': 1, 'wakeups': [21535091, 21545090, 21555090, 2...</msg>
<status status="PASS" starttime="20201110 08:41:52.630" endtime="20201110 08:41:54.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.743" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21525073, 'start-iter': 1, 'wakeups': [21535091, 21545090, 21555090, 2...</msg>
<status status="PASS" starttime="20201110 08:41:54.739" endtime="20201110 08:41:54.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:54.746" endtime="20201110 08:41:54.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.628" endtime="20201110 08:41:54.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.626" endtime="20201110 08:41:54.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:54.758" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 3, 'start-time': 21525073, 'wakeups': [21535091, 21545090, 21555090, 21565089, 21575090, 21585089, 21595090, 21605089, 21615090, 21625089, 216...</msg>
<status status="PASS" starttime="20201110 08:41:54.754" endtime="20201110 08:41:54.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.767" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:54.765" endtime="20201110 08:41:54.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.771" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:54.769" endtime="20201110 08:41:54.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.760" endtime="20201110 08:41:54.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.781" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:54.779" endtime="20201110 08:41:54.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.785" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:54.783" endtime="20201110 08:41:54.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.774" endtime="20201110 08:41:54.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.791" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:41:54.790" endtime="20201110 08:41:54.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.793" level="INFO">VALUE: 21525073</msg>
<status status="PASS" starttime="20201110 08:41:54.792" endtime="20201110 08:41:54.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.787" endtime="20201110 08:41:54.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.797" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:54.796" endtime="20201110 08:41:54.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:54.800" level="INFO">VALUE: [21535091, 21545090, 21555090, 21565089, 21575090, 21585089, 21595090, 21605089, 21615090, 21625089, 21635090, 21645089, 21655090, 21665089, 21675090, 21685089, 21695090, 21705089, 21715090, 21725089, 21735090, 21745089, 21755090, 21765089, 21775090, 21785089, 21795090, 21805089, 21815090, 21825089, 21835090, 21845089, 21855090, 21865089, 21875090, 21885089, 21895090, 21905089, 21915090, 21925089, 21935090, 21945089, 21955090, 21965089, 21975090, 21985089, 21995090, 22005089, 22015090, 22025089, 22035090, 22045089, 22055090, 22065089, 22075090, 22085089, 22095090, 22105089, 22115090, 22125089, 22135090, 22145089, 22155090, 22165089, 22175090, 22185089, 22195090, 22205089, 22215090, 22225089, 22235090, 22245089, 22255090, 22265089, 22275090, 22285089, 22295090, 22305089, 22315090, 22325089, 22335090, 22345089, 22355090, 22365089, 22375090, 22385089, 22395090, 22405089, 22415090, 22425089, 22435090, 22445089, 22455090, 22465089, 22475090, 22485089, 22495090, 22505089, 22515090, 22525089]</msg>
<status status="PASS" starttime="20201110 08:41:54.799" endtime="20201110 08:41:54.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.794" endtime="20201110 08:41:54.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:54.807" endtime="20201110 08:41:55.098"></status>
</kw>
<msg timestamp="20201110 08:41:55.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031949903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:54.805" endtime="20201110 08:41:55.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:55.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031949903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:55.102" endtime="20201110 08:41:55.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:55.109" endtime="20201110 08:41:55.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.803" endtime="20201110 08:41:55.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:54.801" endtime="20201110 08:41:55.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:55.136" level="INFO">${RESULT} = {'time': [0.021930694, 0.031949903, 0.041949986, 0.051951264, 0.061951431, 0.071953542, 0.081953708, 0.091955889, 0.101956056, 0.111958111, 0.121958278, 0.131960389, 0.141960556, 0.151962667, 0.161962...</msg>
<status status="PASS" starttime="20201110 08:41:55.112" endtime="20201110 08:41:55.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:55.141" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:41:55.140" endtime="20201110 08:41:55.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:55.143" level="INFO">VALUE: 0.021930694</msg>
<status status="PASS" starttime="20201110 08:41:55.142" endtime="20201110 08:41:55.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.137" endtime="20201110 08:41:55.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:55.148" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:55.147" endtime="20201110 08:41:55.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:55.150" level="INFO">VALUE: [0.031949903, 0.041949986, 0.051951264, 0.061951431, 0.071953542, 0.081953708, 0.091955889, 0.101956056, 0.111958111, 0.121958278, 0.131960389, 0.141960556, 0.151962667, 0.161962847, 0.171964944, 0.181965125, 0.191967222, 0.201967389, 0.211969528, 0.221969681, 0.231971806, 0.241971986, 0.251974069, 0.261974236, 0.271976389, 0.281976514, 0.291978653, 0.301978806, 0.311980958, 0.321981111, 0.331983208, 0.341983361, 0.351985472, 0.361985611, 0.371987736, 0.381987889, 0.39199, 0.401990153, 0.411992264, 0.421992431, 0.431994542, 0.441994722, 0.451996819, 0.461996972, 0.471999097, 0.48199925, 0.492001361, 0.502001514, 0.512003625, 0.522003792, 0.532005903, 0.542006111, 0.552008181, 0.562008333, 0.572010444, 0.582010611, 0.592012722, 0.602012917, 0.612015014, 0.622015153, 0.632017264, 0.642017444, 0.652019542, 0.662019708, 0.672021819, 0.682021972, 0.692024083, 0.70202425, 0.712026375, 0.722026528, 0.732028639, 0.742028806, 0.752030917, 0.762031069, 0.772033194, 0.782033347, 0.792035458, 0.802035625, 0.81203775, 0.822037889, 0.832040014, 0.842040167, 0.852042319, 0.862042458, 0.872044556, 0.882044722, 0.892046847, 0.902046986, 0.912049097, 0.922049264, 0.932051389, 0.942051542, 0.952053653, 0.962053806, 0.972055944, 0.982056111, 0.992058194, 1.002058361, 1.012060472, 1.022060667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:55.149" endtime="20201110 08:41:55.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.144" endtime="20201110 08:41:55.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:55.153" endtime="20201110 08:41:55.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:55.157" endtime="20201110 08:41:55.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.155" endtime="20201110 08:41:55.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.151" endtime="20201110 08:41:55.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.624" endtime="20201110 08:41:55.177"></status>
</kw>
<msg timestamp="20201110 08:41:55.178" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:55.186" endtime="20201110 08:41:57.289"></status>
</kw>
<msg timestamp="20201110 08:41:57.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 24077739, 'start-iter': 1, 'wakeups': [24087757, 24097756, 24107756, 2...</msg>
<status status="PASS" starttime="20201110 08:41:55.184" endtime="20201110 08:41:57.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 24077739, 'start-iter': 1, 'wakeups': [24087757, 24097756, 24107756, 2...</msg>
<status status="PASS" starttime="20201110 08:41:57.293" endtime="20201110 08:41:57.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:57.299" endtime="20201110 08:41:57.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.181" endtime="20201110 08:41:57.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.179" endtime="20201110 08:41:57.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:57.309" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 3, 'start-time': 24077739, 'wakeups': [24087757, 24097756, 24107756, 24117755, 24127756, 24137755, 24147756, 24157755, 24167756, 24177755, 241...</msg>
<status status="PASS" starttime="20201110 08:41:57.305" endtime="20201110 08:41:57.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.320" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:57.316" endtime="20201110 08:41:57.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.324" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:57.322" endtime="20201110 08:41:57.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.311" endtime="20201110 08:41:57.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.335" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:57.333" endtime="20201110 08:41:57.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.339" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:57.337" endtime="20201110 08:41:57.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.328" endtime="20201110 08:41:57.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.349" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:41:57.347" endtime="20201110 08:41:57.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.353" level="INFO">VALUE: 24077739</msg>
<status status="PASS" starttime="20201110 08:41:57.352" endtime="20201110 08:41:57.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.342" endtime="20201110 08:41:57.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.363" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:57.361" endtime="20201110 08:41:57.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.367" level="INFO">VALUE: [24087757, 24097756, 24107756, 24117755, 24127756, 24137755, 24147756, 24157755, 24167756, 24177755, 24187756, 24197755, 24207756, 24217755, 24227756, 24237755, 24247756, 24257755, 24267756, 24277755, 24287756, 24297755, 24307756, 24317755, 24327756, 24337755, 24347756, 24357755, 24367756, 24377755, 24387756, 24397755, 24407756, 24417755, 24427756, 24437755, 24447756, 24457755, 24467756, 24477755, 24487756, 24497755, 24507756, 24517755, 24527756, 24537755, 24547756, 24557755, 24567756, 24577755, 24587756, 24597755, 24607756, 24617755, 24627756, 24637755, 24647756, 24657755, 24667756, 24677755, 24687756, 24697755, 24707756, 24717755, 24727756, 24737755, 24747756, 24757755, 24767756, 24777755, 24787756, 24797755, 24807756, 24817755, 24827756, 24837755, 24847756, 24857755, 24867756, 24877755, 24887756, 24897755, 24907756, 24917755, 24927756, 24937755, 24947756, 24957755, 24967756, 24977755, 24987756, 24997755, 25007756, 25017755, 25027756, 25037755, 25047756, 25057755, 25067756, 25077755]</msg>
<status status="PASS" starttime="20201110 08:41:57.365" endtime="20201110 08:41:57.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.357" endtime="20201110 08:41:57.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:57.374" endtime="20201110 08:41:57.666"></status>
</kw>
<msg timestamp="20201110 08:41:57.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:57.372" endtime="20201110 08:41:57.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028198569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:57.670" endtime="20201110 08:41:57.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:57.677" endtime="20201110 08:41:57.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.370" endtime="20201110 08:41:57.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.368" endtime="20201110 08:41:57.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:57.704" level="INFO">${RESULT} = {'time': [0.018179083, 0.028198569, 0.038198653, 0.048199958, 0.058200125, 0.068202236, 0.078202389, 0.0882045, 0.098204681, 0.108206778, 0.118206944, 0.128209069, 0.138209222, 0.148211347, 0.15821151...</msg>
<status status="PASS" starttime="20201110 08:41:57.680" endtime="20201110 08:41:57.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.709" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:41:57.708" endtime="20201110 08:41:57.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.711" level="INFO">VALUE: 0.018179083</msg>
<status status="PASS" starttime="20201110 08:41:57.710" endtime="20201110 08:41:57.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.705" endtime="20201110 08:41:57.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.736" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:57.715" endtime="20201110 08:41:57.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:57.739" level="INFO">VALUE: [0.028198569, 0.038198653, 0.048199958, 0.058200125, 0.068202236, 0.078202389, 0.0882045, 0.098204681, 0.108206778, 0.118206944, 0.128209069, 0.138209222, 0.148211347, 0.158211514, 0.168213639, 0.178213806, 0.188215917, 0.198216083, 0.20821825, 0.218218347, 0.2282205, 0.238220625, 0.24822275, 0.258222986, 0.268225028, 0.278225208, 0.288227375, 0.298227472, 0.308229597, 0.318229764, 0.328231875, 0.338232056, 0.348234153, 0.358234319, 0.368236514, 0.378236639, 0.388238722, 0.398238889, 0.408241, 0.418241181, 0.428243319, 0.438243431, 0.448245597, 0.458245722, 0.468247806, 0.478247986, 0.488250083, 0.498250278, 0.508252347, 0.5182525, 0.528254611, 0.538254792, 0.548256903, 0.558257069, 0.568259153, 0.578259333, 0.588261431, 0.598261583, 0.608263694, 0.618263875, 0.628265972, 0.638266153, 0.648268278, 0.658268403, 0.668270528, 0.678270667, 0.688272792, 0.698272958, 0.708275056, 0.718275222, 0.728277319, 0.738277486, 0.748279597, 0.758279764, 0.768281861, 0.778282028, 0.788284153, 0.798284292, 0.808286403, 0.818286583, 0.828288681, 0.838288833, 0.848290944, 0.858291111, 0.868293222, 0.878293375, 0.888295486, 0.898295653, 0.908297819, 0.918297944, 0.928300042, 0.938300208, 0.948302306, 0.958302486, 0.968304597, 0.97830475, 0.988306861, 0.998307014, 1.008309125, 1.018309292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:57.737" endtime="20201110 08:41:57.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.712" endtime="20201110 08:41:57.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:57.742" endtime="20201110 08:41:57.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:57.745" endtime="20201110 08:41:57.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.744" endtime="20201110 08:41:57.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.740" endtime="20201110 08:41:57.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:55.178" endtime="20201110 08:41:57.766"></status>
</kw>
<msg timestamp="20201110 08:41:57.766" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:57.774" endtime="20201110 08:41:59.878"></status>
</kw>
<msg timestamp="20201110 08:41:59.879" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26666328, 'start-iter': 1, 'wakeups': [26676345, 26686345, 26696345, 2...</msg>
<status status="PASS" starttime="20201110 08:41:57.773" endtime="20201110 08:41:59.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.885" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 26666328, 'start-iter': 1, 'wakeups': [26676345, 26686345, 26696345, 2...</msg>
<status status="PASS" starttime="20201110 08:41:59.882" endtime="20201110 08:41:59.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:59.888" endtime="20201110 08:41:59.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.770" endtime="20201110 08:41:59.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.768" endtime="20201110 08:41:59.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:59.899" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 3, 'start-time': 26666328, 'wakeups': [26676345, 26686345, 26696345, 26706344, 26716345, 26726344, 26736345, 26746344, 26756345, 26766344, 267...</msg>
<status status="PASS" starttime="20201110 08:41:59.895" endtime="20201110 08:41:59.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.907" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:59.905" endtime="20201110 08:41:59.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.911" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:59.909" endtime="20201110 08:41:59.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.901" endtime="20201110 08:41:59.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.921" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:59.919" endtime="20201110 08:41:59.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.926" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:59.924" endtime="20201110 08:41:59.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.914" endtime="20201110 08:41:59.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.939" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:41:59.936" endtime="20201110 08:41:59.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.943" level="INFO">VALUE: 26666328</msg>
<status status="PASS" starttime="20201110 08:41:59.941" endtime="20201110 08:41:59.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.929" endtime="20201110 08:41:59.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.949" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:59.948" endtime="20201110 08:41:59.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:59.951" level="INFO">VALUE: [26676345, 26686345, 26696345, 26706344, 26716345, 26726344, 26736345, 26746344, 26756345, 26766344, 26776345, 26786344, 26796345, 26806344, 26816345, 26826344, 26836345, 26846344, 26856345, 26866344, 26876345, 26886344, 26896345, 26906344, 26916345, 26926344, 26936345, 26946344, 26956345, 26966344, 26976345, 26986344, 26996345, 27006344, 27016345, 27026344, 27036345, 27046344, 27056345, 27066344, 27076345, 27086344, 27096345, 27106344, 27116345, 27126344, 27136345, 27146344, 27156345, 27166344, 27176345, 27186344, 27196345, 27206344, 27216345, 27226344, 27236345, 27246344, 27256345, 27266344, 27276345, 27286344, 27296345, 27306344, 27316345, 27326344, 27336345, 27346344, 27356345, 27366344, 27376345, 27386344, 27396345, 27406344, 27416345, 27426344, 27436345, 27446344, 27456345, 27466344, 27476345, 27486344, 27496345, 27506344, 27516345, 27526344, 27536345, 27546344, 27556345, 27566344, 27576345, 27586344, 27596345, 27606344, 27616345, 27626344, 27636345, 27646344, 27656345, 27666344]</msg>
<status status="PASS" starttime="20201110 08:41:59.950" endtime="20201110 08:41:59.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.945" endtime="20201110 08:41:59.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:59.958" endtime="20201110 08:42:00.250"></status>
</kw>
<msg timestamp="20201110 08:42:00.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028144139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:59.956" endtime="20201110 08:42:00.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:00.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028144139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:00.254" endtime="20201110 08:42:00.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:00.261" endtime="20201110 08:42:00.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.954" endtime="20201110 08:42:00.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:59.952" endtime="20201110 08:42:00.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:00.287" level="INFO">${RESULT} = {'time': [0.018125194, 0.028144139, 0.038145222, 0.048146528, 0.058146653, 0.068148792, 0.078148944, 0.088151097, 0.098151222, 0.108153333, 0.1181535, 0.128155639, 0.138155833, 0.148157889, 0.15815805...</msg>
<status status="PASS" starttime="20201110 08:42:00.264" endtime="20201110 08:42:00.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:00.291" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:42:00.290" endtime="20201110 08:42:00.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:00.294" level="INFO">VALUE: 0.018125194</msg>
<status status="PASS" starttime="20201110 08:42:00.293" endtime="20201110 08:42:00.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.288" endtime="20201110 08:42:00.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:00.300" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:00.298" endtime="20201110 08:42:00.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:00.302" level="INFO">VALUE: [0.028144139, 0.038145222, 0.048146528, 0.058146653, 0.068148792, 0.078148944, 0.088151097, 0.098151222, 0.108153333, 0.1181535, 0.128155639, 0.138155833, 0.148157889, 0.158158056, 0.168160181, 0.178160347, 0.188162458, 0.198162639, 0.208164736, 0.218164903, 0.228167028, 0.238167194, 0.248169306, 0.258169472, 0.268171583, 0.278171764, 0.288173861, 0.298174083, 0.308176153, 0.318176306, 0.328178431, 0.338178597, 0.348180708, 0.358180875, 0.368183, 0.378183139, 0.388185264, 0.398185431, 0.408187528, 0.418187708, 0.428189819, 0.438189972, 0.448192083, 0.458192236, 0.468194347, 0.478194514, 0.488196653, 0.498196792, 0.508198917, 0.518199056, 0.528201181, 0.538201333, 0.548203458, 0.558203611, 0.568205722, 0.578205889, 0.588208, 0.598208167, 0.608210292, 0.618210444, 0.628212569, 0.638212736, 0.648214847, 0.658215, 0.668217111, 0.678217278, 0.688219389, 0.698219542, 0.708221667, 0.718221889, 0.728223986, 0.738224097, 0.748226208, 0.758226375, 0.768228486, 0.778228653, 0.788230764, 0.798230931, 0.808233042, 0.818233208, 0.828235319, 0.838235486, 0.848237597, 0.858237806, 0.868239875, 0.878240042, 0.888242153, 0.898242306, 0.908244431, 0.918244583, 0.928246694, 0.938246861, 0.948248972, 0.958249139, 0.968251264, 0.978251431, 0.988253528, 0.998253722, 1.008255806, 1.018255972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:00.301" endtime="20201110 08:42:00.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.295" endtime="20201110 08:42:00.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:00.305" endtime="20201110 08:42:00.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:00.309" endtime="20201110 08:42:00.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.307" endtime="20201110 08:42:00.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.304" endtime="20201110 08:42:00.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:57.767" endtime="20201110 08:42:00.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.622" endtime="20201110 08:42:00.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:52.622" endtime="20201110 08:42:00.330"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:00.332" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:00.340" endtime="20201110 08:42:02.444"></status>
</kw>
<msg timestamp="20201110 08:42:02.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29232536, 'start-iter': 1, 'wakeups': [29242561, 29252560, 29262561, 2...</msg>
<status status="PASS" starttime="20201110 08:42:00.339" endtime="20201110 08:42:02.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 29232536, 'start-iter': 1, 'wakeups': [29242561, 29252560, 29262561, 2...</msg>
<status status="PASS" starttime="20201110 08:42:02.448" endtime="20201110 08:42:02.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:02.454" endtime="20201110 08:42:02.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.336" endtime="20201110 08:42:02.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.334" endtime="20201110 08:42:02.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:02.464" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 4, 'start-time': 29232536, 'wakeups': [29242561, 29252560, 29262561, 29272560, 29282561, 29292560, 29302561, 29312560, 29322561, 29332560, 293...</msg>
<status status="PASS" starttime="20201110 08:42:02.460" endtime="20201110 08:42:02.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.473" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:02.471" endtime="20201110 08:42:02.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.477" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:02.475" endtime="20201110 08:42:02.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.466" endtime="20201110 08:42:02.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.487" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:02.485" endtime="20201110 08:42:02.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.491" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:02.489" endtime="20201110 08:42:02.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.480" endtime="20201110 08:42:02.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.499" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:02.497" endtime="20201110 08:42:02.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.500" level="INFO">VALUE: 29232536</msg>
<status status="PASS" starttime="20201110 08:42:02.500" endtime="20201110 08:42:02.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.494" endtime="20201110 08:42:02.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.505" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:02.504" endtime="20201110 08:42:02.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.508" level="INFO">VALUE: [29242561, 29252560, 29262561, 29272560, 29282561, 29292560, 29302561, 29312560, 29322561, 29332560, 29342561, 29352560, 29362561, 29372560, 29382561, 29392560, 29402561, 29412560, 29422561, 29432560, 29442561, 29452560, 29462561, 29472560, 29482561, 29492560, 29502561, 29512560, 29522561, 29532560, 29542561, 29552560, 29562561, 29572560, 29582561, 29592560, 29602561, 29612560, 29622561, 29632560, 29642561, 29652560, 29662561, 29672560, 29682561, 29692560, 29702561, 29712560, 29722561, 29732560, 29742561, 29752560, 29762561, 29772560, 29782561, 29792560, 29802561, 29812560, 29822561, 29832560, 29842561, 29852560, 29862561, 29872560, 29882561, 29892560, 29902561, 29912560, 29922561, 29932560, 29942561, 29952560, 29962561, 29972560, 29982561, 29992560, 30002561, 30012560, 30022561, 30032560, 30042561, 30052560, 30062561, 30072560, 30082561, 30092560, 30102561, 30112560, 30122561, 30132560, 30142561, 30152560, 30162561, 30172560, 30182561, 30192560, 30202561, 30212560, 30222561, 30232560]</msg>
<status status="PASS" starttime="20201110 08:42:02.506" endtime="20201110 08:42:02.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.502" endtime="20201110 08:42:02.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:02.516" endtime="20201110 08:42:02.808"></status>
</kw>
<msg timestamp="20201110 08:42:02.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020868056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030894611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:02.515" endtime="20201110 08:42:02.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020868056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030894611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:02.812" endtime="20201110 08:42:02.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:02.819" endtime="20201110 08:42:02.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.511" endtime="20201110 08:42:02.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.509" endtime="20201110 08:42:02.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:02.846" level="INFO">${RESULT} = {'time': [0.020868056, 0.030894611, 0.040894833, 0.050896125, 0.060897097, 0.070898375, 0.080899375, 0.090900667, 0.100901667, 0.110902944, 0.120903931, 0.130905236, 0.140906236, 0.1509075, 0.16090851...</msg>
<status status="PASS" starttime="20201110 08:42:02.823" endtime="20201110 08:42:02.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.850" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:02.849" endtime="20201110 08:42:02.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.852" level="INFO">VALUE: 0.020868056</msg>
<status status="PASS" starttime="20201110 08:42:02.851" endtime="20201110 08:42:02.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.847" endtime="20201110 08:42:02.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.858" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:02.857" endtime="20201110 08:42:02.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:02.860" level="INFO">VALUE: [0.030894611, 0.040894833, 0.050896125, 0.060897097, 0.070898375, 0.080899375, 0.090900667, 0.100901667, 0.110902944, 0.120903931, 0.130905236, 0.140906236, 0.1509075, 0.160908514, 0.170909792, 0.180910778, 0.190912056, 0.200913056, 0.210914375, 0.220915347, 0.230916625, 0.240917625, 0.250918917, 0.260919903, 0.270921181, 0.280922181, 0.290923472, 0.300924486, 0.310925764, 0.320926764, 0.330928028, 0.340929028, 0.350930333, 0.360931333, 0.370932597, 0.380933625, 0.390934875, 0.400935903, 0.410937153, 0.420938181, 0.430939458, 0.440940444, 0.450941722, 0.46094275, 0.470944042, 0.480945014, 0.490946292, 0.500947292, 0.510948583, 0.520949583, 0.530950861, 0.540951861, 0.550953139, 0.560954139, 0.570955417, 0.580956458, 0.590957694, 0.600958694, 0.61096, 0.620961, 0.630962264, 0.640963264, 0.650964556, 0.660965542, 0.670966819, 0.680967875, 0.690969083, 0.700970125, 0.710971361, 0.720972347, 0.730973639, 0.740974625, 0.750975903, 0.760976889, 0.770978167, 0.780979181, 0.790980444, 0.800981514, 0.810982736, 0.820983708, 0.830985, 0.840986, 0.850987306, 0.860988264, 0.870989542, 0.880990542, 0.890991819, 0.900992819, 0.910994083, 0.920995097, 0.930996361, 0.940997375, 0.950998639, 0.960999639, 0.971000917, 0.981001903, 0.991003194, 1.001004236, 1.011005472, 1.021006472] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:02.859" endtime="20201110 08:42:02.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.854" endtime="20201110 08:42:02.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:02.863" endtime="20201110 08:42:02.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:02.866" endtime="20201110 08:42:02.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.865" endtime="20201110 08:42:02.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.861" endtime="20201110 08:42:02.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.333" endtime="20201110 08:42:02.887"></status>
</kw>
<msg timestamp="20201110 08:42:02.888" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:02.897" endtime="20201110 08:42:05.001"></status>
</kw>
<msg timestamp="20201110 08:42:05.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31788699, 'start-iter': 1, 'wakeups': [31798724, 31808723, 31818724, 3...</msg>
<status status="PASS" starttime="20201110 08:42:02.895" endtime="20201110 08:42:05.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31788699, 'start-iter': 1, 'wakeups': [31798724, 31808723, 31818724, 3...</msg>
<status status="PASS" starttime="20201110 08:42:05.005" endtime="20201110 08:42:05.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:05.011" endtime="20201110 08:42:05.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.892" endtime="20201110 08:42:05.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.890" endtime="20201110 08:42:05.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:05.022" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 4, 'start-time': 31788699, 'wakeups': [31798724, 31808723, 31818724, 31828723, 31838724, 31848723, 31858724, 31868723, 31878724, 31888723, 318...</msg>
<status status="PASS" starttime="20201110 08:42:05.018" endtime="20201110 08:42:05.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.031" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:05.029" endtime="20201110 08:42:05.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:05.033" endtime="20201110 08:42:05.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.024" endtime="20201110 08:42:05.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.045" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:05.043" endtime="20201110 08:42:05.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.049" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:05.047" endtime="20201110 08:42:05.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.038" endtime="20201110 08:42:05.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.058" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:05.057" endtime="20201110 08:42:05.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.060" level="INFO">VALUE: 31788699</msg>
<status status="PASS" starttime="20201110 08:42:05.059" endtime="20201110 08:42:05.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.052" endtime="20201110 08:42:05.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.065" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:05.063" endtime="20201110 08:42:05.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.068" level="INFO">VALUE: [31798724, 31808723, 31818724, 31828723, 31838724, 31848723, 31858724, 31868723, 31878724, 31888723, 31898724, 31908723, 31918724, 31928723, 31938724, 31948723, 31958724, 31968723, 31978724, 31988723, 31998724, 32008723, 32018724, 32028723, 32038724, 32048723, 32058724, 32068723, 32078724, 32088723, 32098724, 32108723, 32118724, 32128723, 32138724, 32148723, 32158724, 32168723, 32178724, 32188723, 32198724, 32208723, 32218724, 32228723, 32238724, 32248723, 32258724, 32268723, 32278724, 32288723, 32298724, 32308723, 32318724, 32328723, 32338724, 32348723, 32358724, 32368723, 32378724, 32388723, 32398724, 32408723, 32418724, 32428723, 32438724, 32448723, 32458724, 32468723, 32478724, 32488723, 32498724, 32508723, 32518724, 32528723, 32538724, 32548723, 32558724, 32568723, 32578724, 32588723, 32598724, 32608723, 32618724, 32628723, 32638724, 32648723, 32658724, 32668723, 32678724, 32688723, 32698724, 32708723, 32718724, 32728723, 32738724, 32748723, 32758724, 32768723, 32778724, 32788723]</msg>
<status status="PASS" starttime="20201110 08:42:05.066" endtime="20201110 08:42:05.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.061" endtime="20201110 08:42:05.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:05.077" endtime="20201110 08:42:05.368"></status>
</kw>
<msg timestamp="20201110 08:42:05.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029572264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:05.075" endtime="20201110 08:42:05.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029572264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:05.372" endtime="20201110 08:42:05.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:05.380" endtime="20201110 08:42:05.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.072" endtime="20201110 08:42:05.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.069" endtime="20201110 08:42:05.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:05.407" level="INFO">${RESULT} = {'time': [0.019545792, 0.029572264, 0.039572708, 0.049573986, 0.059575, 0.069576264, 0.079577264, 0.089578569, 0.099579542, 0.109580847, 0.119581847, 0.129583125, 0.139584181, 0.149585403, 0.159586403...</msg>
<status status="PASS" starttime="20201110 08:42:05.383" endtime="20201110 08:42:05.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.411" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:05.410" endtime="20201110 08:42:05.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.413" level="INFO">VALUE: 0.019545792</msg>
<status status="PASS" starttime="20201110 08:42:05.412" endtime="20201110 08:42:05.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.408" endtime="20201110 08:42:05.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.418" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:05.417" endtime="20201110 08:42:05.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:05.420" level="INFO">VALUE: [0.029572264, 0.039572708, 0.049573986, 0.059575, 0.069576264, 0.079577264, 0.089578569, 0.099579542, 0.109580847, 0.119581847, 0.129583125, 0.139584181, 0.149585403, 0.159586403, 0.169587681, 0.179588681, 0.189589972, 0.199590958, 0.209592222, 0.219593208, 0.229594528, 0.2395955, 0.249596764, 0.259597764, 0.269599028, 0.279600042, 0.289601306, 0.299602333, 0.309603625, 0.319604569, 0.329605861, 0.339606903, 0.349608139, 0.359609167, 0.369610389, 0.379611403, 0.389612667, 0.399613667, 0.409614958, 0.419615931, 0.429617236, 0.439618208, 0.4496195, 0.4596205, 0.469621764, 0.479622764, 0.489624056, 0.499625028, 0.509626306, 0.519627306, 0.529628583, 0.539629597, 0.549630861, 0.559631847, 0.569633139, 0.579634125, 0.589635417, 0.599636417, 0.609637681, 0.619638681, 0.629639958, 0.639640944, 0.649642236, 0.659643236, 0.6696445, 0.6796455, 0.689646778, 0.699647764, 0.709649069, 0.719650042, 0.729651319, 0.739652375, 0.749653597, 0.759654639, 0.769655875, 0.779656875, 0.789658153, 0.799659139, 0.809660417, 0.819661431, 0.829662694, 0.839663694, 0.849664986, 0.859665986, 0.869667264, 0.879668236, 0.889669514, 0.899670514, 0.909671792, 0.919672806, 0.929674083, 0.939675056, 0.949676347, 0.959677361, 0.969678611, 0.979679611, 0.989680903, 0.999681944, 1.009683181, 1.019684167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:05.419" endtime="20201110 08:42:05.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.414" endtime="20201110 08:42:05.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:05.424" endtime="20201110 08:42:05.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:05.427" endtime="20201110 08:42:05.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.426" endtime="20201110 08:42:05.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.422" endtime="20201110 08:42:05.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:02.888" endtime="20201110 08:42:05.448"></status>
</kw>
<msg timestamp="20201110 08:42:05.448" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:05.456" endtime="20201110 08:42:07.560"></status>
</kw>
<msg timestamp="20201110 08:42:07.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34348222, 'start-iter': 1, 'wakeups': [34358247, 34368246, 34378247, 3...</msg>
<status status="PASS" starttime="20201110 08:42:05.455" endtime="20201110 08:42:07.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.568" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34348222, 'start-iter': 1, 'wakeups': [34358247, 34368246, 34378247, 3...</msg>
<status status="PASS" starttime="20201110 08:42:07.564" endtime="20201110 08:42:07.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:07.570" endtime="20201110 08:42:07.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.452" endtime="20201110 08:42:07.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.450" endtime="20201110 08:42:07.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:07.581" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 4, 'start-time': 34348222, 'wakeups': [34358247, 34368246, 34378247, 34388246, 34398247, 34408246, 34418247, 34428246, 34438247, 34448246, 344...</msg>
<status status="PASS" starttime="20201110 08:42:07.577" endtime="20201110 08:42:07.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.592" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:07.588" endtime="20201110 08:42:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.596" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:07.594" endtime="20201110 08:42:07.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.583" endtime="20201110 08:42:07.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.606" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:07.604" endtime="20201110 08:42:07.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.610" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:07.608" endtime="20201110 08:42:07.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.599" endtime="20201110 08:42:07.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.620" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:07.618" endtime="20201110 08:42:07.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.624" level="INFO">VALUE: 34348222</msg>
<status status="PASS" starttime="20201110 08:42:07.623" endtime="20201110 08:42:07.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.613" endtime="20201110 08:42:07.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.629" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:07.628" endtime="20201110 08:42:07.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.631" level="INFO">VALUE: [34358247, 34368246, 34378247, 34388246, 34398247, 34408246, 34418247, 34428246, 34438247, 34448246, 34458247, 34468246, 34478247, 34488246, 34498247, 34508246, 34518247, 34528246, 34538247, 34548246, 34558247, 34568246, 34578247, 34588246, 34598247, 34608246, 34618247, 34628246, 34638247, 34648246, 34658247, 34668246, 34678247, 34688246, 34698247, 34708246, 34718247, 34728246, 34738247, 34748246, 34758247, 34768246, 34778247, 34788246, 34798247, 34808246, 34818247, 34828246, 34838247, 34848246, 34858247, 34868246, 34878247, 34888246, 34898247, 34908246, 34918247, 34928246, 34938247, 34948246, 34958247, 34968246, 34978247, 34988246, 34998247, 35008246, 35018247, 35028246, 35038247, 35048246, 35058247, 35068246, 35078247, 35088246, 35098247, 35108246, 35118247, 35128246, 35138247, 35148246, 35158247, 35168246, 35178247, 35188246, 35198247, 35208246, 35218247, 35228246, 35238247, 35248246, 35258247, 35268246, 35278247, 35288246, 35298247, 35308246, 35318247, 35328246, 35338247, 35348246]</msg>
<status status="PASS" starttime="20201110 08:42:07.630" endtime="20201110 08:42:07.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.625" endtime="20201110 08:42:07.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:07.638" endtime="20201110 08:42:07.929"></status>
</kw>
<msg timestamp="20201110 08:42:07.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028283694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:07.637" endtime="20201110 08:42:07.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028283694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:07.933" endtime="20201110 08:42:07.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:07.944" endtime="20201110 08:42:07.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.634" endtime="20201110 08:42:07.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.632" endtime="20201110 08:42:07.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:07.972" level="INFO">${RESULT} = {'time': [0.018257083, 0.028283694, 0.038284278, 0.048285486, 0.058286486, 0.068287764, 0.078288764, 0.088290042, 0.098291042, 0.108292319, 0.118293319, 0.128294611, 0.138295597, 0.148296889, 0.158297...</msg>
<status status="PASS" starttime="20201110 08:42:07.948" endtime="20201110 08:42:07.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.976" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:42:07.975" endtime="20201110 08:42:07.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.978" level="INFO">VALUE: 0.018257083</msg>
<status status="PASS" starttime="20201110 08:42:07.977" endtime="20201110 08:42:07.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.973" endtime="20201110 08:42:07.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.983" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:07.982" endtime="20201110 08:42:07.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:07.986" level="INFO">VALUE: [0.028283694, 0.038284278, 0.048285486, 0.058286486, 0.068287764, 0.078288764, 0.088290042, 0.098291042, 0.108292319, 0.118293319, 0.128294611, 0.138295597, 0.148296889, 0.158297875, 0.168299194, 0.178300167, 0.188301458, 0.198302431, 0.208303736, 0.218304708, 0.228306056, 0.238306986, 0.248308264, 0.25830925, 0.268310528, 0.278311528, 0.288312806, 0.298313792, 0.308315097, 0.318316083, 0.328317347, 0.338318347, 0.348319667, 0.358320611, 0.368321958, 0.378322889, 0.388324181, 0.398325167, 0.408326444, 0.418327444, 0.42832875, 0.438329722, 0.448331014, 0.458331986, 0.468333278, 0.478334278, 0.488335556, 0.498336556, 0.508337819, 0.518338806, 0.528340097, 0.538341083, 0.548342361, 0.558343361, 0.568344653, 0.578345653, 0.588346917, 0.598347917, 0.608349194, 0.618350208, 0.628351486, 0.638352458, 0.648353736, 0.658354736, 0.668356042, 0.678357014, 0.688358292, 0.698359306, 0.708360569, 0.718361556, 0.728362875, 0.738363833, 0.748365125, 0.758366111, 0.768367389, 0.778368403, 0.788369667, 0.798370667, 0.808371958, 0.818372944, 0.828374208, 0.838375208, 0.848376486, 0.858377486, 0.868378806, 0.878379764, 0.888381056, 0.898382042, 0.908383319, 0.918384306, 0.928385583, 0.938386597, 0.948387861, 0.958388861, 0.968390181, 0.978391139, 0.988392417, 0.998393431, 1.008394708, 1.018395708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:07.985" endtime="20201110 08:42:07.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.980" endtime="20201110 08:42:07.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:07.989" endtime="20201110 08:42:07.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:07.992" endtime="20201110 08:42:08.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.991" endtime="20201110 08:42:08.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:07.987" endtime="20201110 08:42:08.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:05.449" endtime="20201110 08:42:08.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.331" endtime="20201110 08:42:08.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:00.330" endtime="20201110 08:42:08.013"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:08.016" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:08.024" endtime="20201110 08:42:10.127"></status>
</kw>
<msg timestamp="20201110 08:42:10.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36915802, 'start-iter': 1, 'wakeups': [36925835, 36935834, 36945834, 3...</msg>
<status status="PASS" starttime="20201110 08:42:08.022" endtime="20201110 08:42:10.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36915802, 'start-iter': 1, 'wakeups': [36925835, 36935834, 36945834, 3...</msg>
<status status="PASS" starttime="20201110 08:42:10.131" endtime="20201110 08:42:10.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:10.137" endtime="20201110 08:42:10.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:08.020" endtime="20201110 08:42:10.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:08.018" endtime="20201110 08:42:10.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:10.149" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 5, 'start-time': 36915802, 'wakeups': [36925835, 36935834, 36945834, 36955834, 36965834, 36975834, 36985834, 36995834, 37005834, 37015834, 370...</msg>
<status status="PASS" starttime="20201110 08:42:10.145" endtime="20201110 08:42:10.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.157" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:10.155" endtime="20201110 08:42:10.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.161" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:10.159" endtime="20201110 08:42:10.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.150" endtime="20201110 08:42:10.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.171" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:10.169" endtime="20201110 08:42:10.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.176" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:10.174" endtime="20201110 08:42:10.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.164" endtime="20201110 08:42:10.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.188" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:10.186" endtime="20201110 08:42:10.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.192" level="INFO">VALUE: 36915802</msg>
<status status="PASS" starttime="20201110 08:42:10.190" endtime="20201110 08:42:10.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.179" endtime="20201110 08:42:10.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.202" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:10.200" endtime="20201110 08:42:10.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.207" level="INFO">VALUE: [36925835, 36935834, 36945834, 36955834, 36965834, 36975834, 36985834, 36995834, 37005834, 37015834, 37025834, 37035834, 37045834, 37055834, 37065834, 37075834, 37085834, 37095834, 37105834, 37115834, 37125834, 37135834, 37145834, 37155834, 37165834, 37175834, 37185834, 37195834, 37205834, 37215834, 37225834, 37235834, 37245834, 37255834, 37265834, 37275834, 37285834, 37295834, 37305834, 37315834, 37325834, 37335834, 37345834, 37355834, 37365834, 37375834, 37385834, 37395834, 37405834, 37415834, 37425834, 37435834, 37445834, 37455834, 37465834, 37475834, 37485834, 37495834, 37505834, 37515834, 37525834, 37535834, 37545834, 37555834, 37565834, 37575834, 37585834, 37595834, 37605834, 37615834, 37625834, 37635834, 37645834, 37655834, 37665834, 37675834, 37685834, 37695834, 37705834, 37715834, 37725834, 37735834, 37745834, 37755834, 37765834, 37775834, 37785834, 37795834, 37805834, 37815834, 37825834, 37835834, 37845834, 37855834, 37865834, 37875834, 37885834, 37895834, 37905834, 37915834]</msg>
<status status="PASS" starttime="20201110 08:42:10.205" endtime="20201110 08:42:10.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.195" endtime="20201110 08:42:10.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:10.222" endtime="20201110 08:42:10.519"></status>
</kw>
<msg timestamp="20201110 08:42:10.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020936819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:10.219" endtime="20201110 08:42:10.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020936819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030971444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:10.523" endtime="20201110 08:42:10.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:10.530" endtime="20201110 08:42:10.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.213" endtime="20201110 08:42:10.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.210" endtime="20201110 08:42:10.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:10.556" level="INFO">${RESULT} = {'time': [0.020936819, 0.030971444, 0.040971917, 0.050972347, 0.060974194, 0.070974625, 0.080976472, 0.090976903, 0.100978778, 0.110979194, 0.120981042, 0.130981472, 0.140983319, 0.15098375, 0.1609855...</msg>
<status status="PASS" starttime="20201110 08:42:10.534" endtime="20201110 08:42:10.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.561" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:10.560" endtime="20201110 08:42:10.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.563" level="INFO">VALUE: 0.020936819</msg>
<status status="PASS" starttime="20201110 08:42:10.562" endtime="20201110 08:42:10.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.558" endtime="20201110 08:42:10.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.569" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:10.568" endtime="20201110 08:42:10.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:10.571" level="INFO">VALUE: [0.030971444, 0.040971917, 0.050972347, 0.060974194, 0.070974625, 0.080976472, 0.090976903, 0.100978778, 0.110979194, 0.120981042, 0.130981472, 0.140983319, 0.15098375, 0.160985597, 0.170986042, 0.180987889, 0.190988347, 0.200990167, 0.210990583, 0.220992444, 0.230992861, 0.240994722, 0.250995167, 0.260996986, 0.270997417, 0.28099925, 0.290999681, 0.301001528, 0.311001944, 0.321003792, 0.331004222, 0.341006056, 0.351006486, 0.361008333, 0.371008778, 0.381010597, 0.391011028, 0.401012875, 0.411013292, 0.421015139, 0.431015569, 0.441017417, 0.451017833, 0.461019694, 0.471020097, 0.481021972, 0.491022375, 0.501024222, 0.511024653, 0.521026486, 0.531026917, 0.541028764, 0.551029181, 0.561031042, 0.571031458, 0.581033306, 0.59103375, 0.601035583, 0.611036014, 0.621037847, 0.631038264, 0.641040125, 0.651040625, 0.661042403, 0.671042833, 0.681044667, 0.691045083, 0.701046931, 0.711047347, 0.721049208, 0.731049625, 0.741051472, 0.751051903, 0.761053764, 0.771054167, 0.781056028, 0.791056444, 0.801058306, 0.811058708, 0.821060556, 0.831060986, 0.841062833, 0.85106325, 0.861065097, 0.871065528, 0.881067375, 0.891067792, 0.901069667, 0.911070083, 0.921071917, 0.931072333, 0.941074222, 0.951074625, 0.961076458, 0.971076889, 0.981078736, 0.991079153, 1.001081, 1.011081444, 1.021083292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:10.570" endtime="20201110 08:42:10.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.565" endtime="20201110 08:42:10.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:10.575" endtime="20201110 08:42:10.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:10.578" endtime="20201110 08:42:10.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.576" endtime="20201110 08:42:10.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.573" endtime="20201110 08:42:10.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:08.017" endtime="20201110 08:42:10.599"></status>
</kw>
<msg timestamp="20201110 08:42:10.599" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:10.607" endtime="20201110 08:42:12.711"></status>
</kw>
<msg timestamp="20201110 08:42:12.712" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39498973, 'start-iter': 1, 'wakeups': [39509006, 39519005, 39529005, 3...</msg>
<status status="PASS" starttime="20201110 08:42:10.605" endtime="20201110 08:42:12.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.718" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39498973, 'start-iter': 1, 'wakeups': [39509006, 39519005, 39529005, 3...</msg>
<status status="PASS" starttime="20201110 08:42:12.714" endtime="20201110 08:42:12.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:12.720" endtime="20201110 08:42:12.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.603" endtime="20201110 08:42:12.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.601" endtime="20201110 08:42:12.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:12.731" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 5, 'start-time': 39498973, 'wakeups': [39509006, 39519005, 39529005, 39539005, 39549005, 39559005, 39569005, 39579005, 39589005, 39599005, 396...</msg>
<status status="PASS" starttime="20201110 08:42:12.727" endtime="20201110 08:42:12.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.739" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:12.737" endtime="20201110 08:42:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.744" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:12.742" endtime="20201110 08:42:12.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.733" endtime="20201110 08:42:12.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.754" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:12.752" endtime="20201110 08:42:12.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.759" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:12.757" endtime="20201110 08:42:12.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.747" endtime="20201110 08:42:12.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.769" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:12.767" endtime="20201110 08:42:12.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.773" level="INFO">VALUE: 39498973</msg>
<status status="PASS" starttime="20201110 08:42:12.771" endtime="20201110 08:42:12.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.762" endtime="20201110 08:42:12.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.785" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:12.781" endtime="20201110 08:42:12.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:12.789" level="INFO">VALUE: [39509006, 39519005, 39529005, 39539005, 39549005, 39559005, 39569005, 39579005, 39589005, 39599005, 39609005, 39619005, 39629005, 39639005, 39649005, 39659005, 39669005, 39679005, 39689005, 39699005, 39709005, 39719005, 39729005, 39739005, 39749005, 39759005, 39769005, 39779005, 39789005, 39799005, 39809005, 39819005, 39829005, 39839005, 39849005, 39859005, 39869005, 39879005, 39889005, 39899005, 39909005, 39919005, 39929005, 39939005, 39949005, 39959005, 39969005, 39979005, 39989005, 39999005, 40009005, 40019005, 40029005, 40039005, 40049005, 40059005, 40069005, 40079005, 40089005, 40099005, 40109005, 40119005, 40129005, 40139005, 40149005, 40159005, 40169005, 40179005, 40189005, 40199005, 40209005, 40219005, 40229005, 40239005, 40249005, 40259005, 40269005, 40279005, 40289005, 40299005, 40309005, 40319005, 40329005, 40339005, 40349005, 40359005, 40369005, 40379005, 40389005, 40399005, 40409005, 40419005, 40429005, 40439005, 40449005, 40459005, 40469005, 40479005, 40489005, 40499005]</msg>
<status status="PASS" starttime="20201110 08:42:12.787" endtime="20201110 08:42:12.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.776" endtime="20201110 08:42:12.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:12.805" endtime="20201110 08:42:13.106"></status>
</kw>
<msg timestamp="20201110 08:42:13.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028246167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:12.801" endtime="20201110 08:42:13.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:13.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018211958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028246167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:13.110" endtime="20201110 08:42:13.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:13.120" endtime="20201110 08:42:13.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.796" endtime="20201110 08:42:13.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:12.793" endtime="20201110 08:42:13.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:13.153" level="INFO">${RESULT} = {'time': [0.018211958, 0.028246167, 0.038246639, 0.048247083, 0.058248917, 0.068249403, 0.07825125, 0.088251639, 0.098253472, 0.108253903, 0.118255764, 0.128256208, 0.138258042, 0.148258472, 0.1582603...</msg>
<status status="PASS" starttime="20201110 08:42:13.125" endtime="20201110 08:42:13.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:13.158" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:13.156" endtime="20201110 08:42:13.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:13.160" level="INFO">VALUE: 0.018211958</msg>
<status status="PASS" starttime="20201110 08:42:13.159" endtime="20201110 08:42:13.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.154" endtime="20201110 08:42:13.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:13.166" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:13.165" endtime="20201110 08:42:13.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:13.169" level="INFO">VALUE: [0.028246167, 0.038246639, 0.048247083, 0.058248917, 0.068249403, 0.07825125, 0.088251639, 0.098253472, 0.108253903, 0.118255764, 0.128256208, 0.138258042, 0.148258472, 0.158260319, 0.16826075, 0.178262597, 0.188263014, 0.198264889, 0.208265375, 0.218267153, 0.228267597, 0.238269458, 0.248269875, 0.258271736, 0.268272139, 0.278274, 0.288274444, 0.298276292, 0.308276722, 0.318278569, 0.328279, 0.338280847, 0.348281292, 0.358283125, 0.368283556, 0.378285458, 0.388285847, 0.398287694, 0.408288139, 0.418289972, 0.428290403, 0.438292278, 0.448292681, 0.458294556, 0.468294958, 0.478296806, 0.488297236, 0.498299069, 0.508299486, 0.518301347, 0.528301764, 0.538303611, 0.548304028, 0.558305917, 0.568306319, 0.578308153, 0.588308583, 0.598310431, 0.608310847, 0.618312708, 0.628313111, 0.638314958, 0.648315389, 0.658317222, 0.668317653, 0.678319514, 0.688319917, 0.698321806, 0.708322236, 0.718324042, 0.728324542, 0.738326375, 0.748326736, 0.758328597, 0.768329, 0.778330861, 0.788331292, 0.798333125, 0.808333542, 0.818335403, 0.828335819, 0.838337708, 0.848338097, 0.858339944, 0.868340361, 0.878342208, 0.888342653, 0.898344514, 0.908344903, 0.918346764, 0.928347181, 0.938349028, 0.948349444, 0.958351306, 0.968351722, 0.978353583, 0.988353986, 0.998355847, 1.008356278, 1.018358111] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:13.168" endtime="20201110 08:42:13.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.162" endtime="20201110 08:42:13.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:13.172" endtime="20201110 08:42:13.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:13.177" endtime="20201110 08:42:13.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.174" endtime="20201110 08:42:13.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.170" endtime="20201110 08:42:13.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:10.600" endtime="20201110 08:42:13.198"></status>
</kw>
<msg timestamp="20201110 08:42:13.198" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:13.207" endtime="20201110 08:42:15.310"></status>
</kw>
<msg timestamp="20201110 08:42:15.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42098448, 'start-iter': 1, 'wakeups': [42108480, 42118480, 42128480, 4...</msg>
<status status="PASS" starttime="20201110 08:42:13.205" endtime="20201110 08:42:15.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.317" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42098448, 'start-iter': 1, 'wakeups': [42108480, 42118480, 42128480, 4...</msg>
<status status="PASS" starttime="20201110 08:42:15.313" endtime="20201110 08:42:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:15.320" endtime="20201110 08:42:15.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.202" endtime="20201110 08:42:15.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.200" endtime="20201110 08:42:15.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:15.331" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 5, 'start-time': 42098448, 'wakeups': [42108480, 42118480, 42128480, 42138480, 42148480, 42158480, 42168480, 42178480, 42188480, 42198480, 422...</msg>
<status status="PASS" starttime="20201110 08:42:15.327" endtime="20201110 08:42:15.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.339" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:15.337" endtime="20201110 08:42:15.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.343" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:15.341" endtime="20201110 08:42:15.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.332" endtime="20201110 08:42:15.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.354" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:15.352" endtime="20201110 08:42:15.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.358" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:15.356" endtime="20201110 08:42:15.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.347" endtime="20201110 08:42:15.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.369" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:15.366" endtime="20201110 08:42:15.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.373" level="INFO">VALUE: 42098448</msg>
<status status="PASS" starttime="20201110 08:42:15.371" endtime="20201110 08:42:15.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.361" endtime="20201110 08:42:15.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.380" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:15.379" endtime="20201110 08:42:15.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.382" level="INFO">VALUE: [42108480, 42118480, 42128480, 42138480, 42148480, 42158480, 42168480, 42178480, 42188480, 42198480, 42208480, 42218480, 42228480, 42238480, 42248480, 42258480, 42268480, 42278480, 42288480, 42298480, 42308480, 42318480, 42328480, 42338480, 42348480, 42358480, 42368480, 42378480, 42388480, 42398480, 42408480, 42418480, 42428480, 42438480, 42448480, 42458480, 42468480, 42478480, 42488480, 42498480, 42508480, 42518480, 42528480, 42538480, 42548480, 42558480, 42568480, 42578480, 42588480, 42598480, 42608480, 42618480, 42628480, 42638480, 42648480, 42658480, 42668480, 42678480, 42688480, 42698480, 42708480, 42718480, 42728480, 42738480, 42748480, 42758480, 42768480, 42778480, 42788480, 42798480, 42808480, 42818480, 42828480, 42838480, 42848480, 42858480, 42868480, 42878480, 42888480, 42898480, 42908480, 42918480, 42928480, 42938480, 42948480, 42958480, 42968480, 42978480, 42988480, 42998480, 43008480, 43018480, 43028480, 43038480, 43048480, 43058480, 43068480, 43078480, 43088480, 43098480]</msg>
<status status="PASS" starttime="20201110 08:42:15.381" endtime="20201110 08:42:15.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.376" endtime="20201110 08:42:15.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:15.389" endtime="20201110 08:42:15.683"></status>
</kw>
<msg timestamp="20201110 08:42:15.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018881667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028915653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:15.388" endtime="20201110 08:42:15.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018881667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028915653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:15.687" endtime="20201110 08:42:15.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:15.694" endtime="20201110 08:42:15.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.385" endtime="20201110 08:42:15.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.384" endtime="20201110 08:42:15.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:15.720" level="INFO">${RESULT} = {'time': [0.018881667, 0.028915653, 0.038917069, 0.0489175, 0.058919347, 0.068919778, 0.078921694, 0.088922069, 0.098923903, 0.108924333, 0.118926194, 0.128926639, 0.138928486, 0.148928889, 0.15893075...</msg>
<status status="PASS" starttime="20201110 08:42:15.698" endtime="20201110 08:42:15.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.725" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:42:15.724" endtime="20201110 08:42:15.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.727" level="INFO">VALUE: 0.018881667</msg>
<status status="PASS" starttime="20201110 08:42:15.726" endtime="20201110 08:42:15.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.721" endtime="20201110 08:42:15.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.732" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:15.731" endtime="20201110 08:42:15.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:15.734" level="INFO">VALUE: [0.028915653, 0.038917069, 0.0489175, 0.058919347, 0.068919778, 0.078921694, 0.088922069, 0.098923903, 0.108924333, 0.118926194, 0.128926639, 0.138928486, 0.148928889, 0.15893075, 0.168931181, 0.178933042, 0.188933458, 0.198935306, 0.208935736, 0.218937611, 0.228938028, 0.238939875, 0.248940306, 0.258942181, 0.268942583, 0.278944431, 0.288944861, 0.298946694, 0.308947111, 0.318948958, 0.328949375, 0.33895125, 0.348951653, 0.358953514, 0.368953931, 0.378955764, 0.388956194, 0.398958042, 0.408958472, 0.418960306, 0.428960736, 0.438962597, 0.448963, 0.458964847, 0.468965278, 0.478967125, 0.488967611, 0.498969403, 0.508969819, 0.518971667, 0.528972111, 0.538973944, 0.548974361, 0.558976222, 0.568976639, 0.5789785, 0.588978931, 0.598980764, 0.608981208, 0.618983042, 0.628983528, 0.638985306, 0.648985778, 0.658987583, 0.668988014, 0.678989847, 0.688990278, 0.698992139, 0.708992542, 0.718994403, 0.728994819, 0.738996667, 0.748997097, 0.758998944, 0.768999361, 0.779001222, 0.789001639, 0.799003486, 0.809003931, 0.819005764, 0.829006181, 0.839008042, 0.849008528, 0.859010347, 0.86901075, 0.879012597, 0.889013, 0.899014861, 0.909015292, 0.919017125, 0.929017556, 0.939019417, 0.949019819, 0.959021681, 0.969022111, 0.979023958, 0.989024403, 0.999026222, 1.009026639, 1.019028486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:15.733" endtime="20201110 08:42:15.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.728" endtime="20201110 08:42:15.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:15.738" endtime="20201110 08:42:15.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:15.741" endtime="20201110 08:42:15.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.740" endtime="20201110 08:42:15.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.736" endtime="20201110 08:42:15.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:13.199" endtime="20201110 08:42:15.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:08.014" endtime="20201110 08:42:15.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:08.014" endtime="20201110 08:42:15.763"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:15.765" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:15.774" endtime="20201110 08:42:17.878"></status>
</kw>
<msg timestamp="20201110 08:42:17.879" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44666156, 'start-iter': 1, 'wakeups': [44676198, 44686197, 44696198, 4...</msg>
<status status="PASS" starttime="20201110 08:42:15.773" endtime="20201110 08:42:17.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.885" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44666156, 'start-iter': 1, 'wakeups': [44676198, 44686197, 44696198, 4...</msg>
<status status="PASS" starttime="20201110 08:42:17.882" endtime="20201110 08:42:17.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:17.888" endtime="20201110 08:42:17.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.769" endtime="20201110 08:42:17.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.767" endtime="20201110 08:42:17.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:17.899" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 6, 'start-time': 44666156, 'wakeups': [44676198, 44686197, 44696198, 44706197, 44716198, 44726197, 44736198, 44746197, 44756198, 44766197, 447...</msg>
<status status="PASS" starttime="20201110 08:42:17.895" endtime="20201110 08:42:17.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.908" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:17.905" endtime="20201110 08:42:17.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.912" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:17.910" endtime="20201110 08:42:17.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.901" endtime="20201110 08:42:17.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.922" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:17.920" endtime="20201110 08:42:17.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.926" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:17.924" endtime="20201110 08:42:17.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.915" endtime="20201110 08:42:17.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.937" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:17.935" endtime="20201110 08:42:17.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.941" level="INFO">VALUE: 44666156</msg>
<status status="PASS" starttime="20201110 08:42:17.939" endtime="20201110 08:42:17.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.929" endtime="20201110 08:42:17.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.951" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:17.949" endtime="20201110 08:42:17.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:17.955" level="INFO">VALUE: [44676198, 44686197, 44696198, 44706197, 44716198, 44726197, 44736198, 44746197, 44756198, 44766197, 44776198, 44786197, 44796198, 44806197, 44816198, 44826197, 44836198, 44846197, 44856198, 44866197, 44876198, 44886197, 44896198, 44906197, 44916198, 44926197, 44936198, 44946197, 44956198, 44966197, 44976198, 44986197, 44996198, 45006197, 45016198, 45026197, 45036198, 45046197, 45056198, 45066197, 45076198, 45086197, 45096198, 45106197, 45116198, 45126197, 45136198, 45146197, 45156198, 45166197, 45176198, 45186197, 45196198, 45206197, 45216198, 45226197, 45236198, 45246197, 45256198, 45266197, 45276198, 45286197, 45296198, 45306197, 45316198, 45326197, 45336198, 45346197, 45356198, 45366197, 45376198, 45386197, 45396198, 45406197, 45416198, 45426197, 45436198, 45446197, 45456198, 45466197, 45476198, 45486197, 45496198, 45506197, 45516198, 45526197, 45536198, 45546197, 45556198, 45566197, 45576198, 45586197, 45596198, 45606197, 45616198, 45626197, 45636198, 45646197, 45656198, 45666197]</msg>
<status status="PASS" starttime="20201110 08:42:17.953" endtime="20201110 08:42:17.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.944" endtime="20201110 08:42:17.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:17.962" endtime="20201110 08:42:18.252"></status>
</kw>
<msg timestamp="20201110 08:42:18.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032160597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:17.961" endtime="20201110 08:42:18.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:18.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032160597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:18.256" endtime="20201110 08:42:18.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:18.264" endtime="20201110 08:42:18.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.958" endtime="20201110 08:42:18.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:17.956" endtime="20201110 08:42:18.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:18.292" level="INFO">${RESULT} = {'time': [0.022117417, 0.032160597, 0.042161028, 0.052162597, 0.062163306, 0.072164889, 0.082165583, 0.092167153, 0.102167903, 0.112169431, 0.122170153, 0.132171708, 0.142172431, 0.152173986, 0.162174...</msg>
<status status="PASS" starttime="20201110 08:42:18.268" endtime="20201110 08:42:18.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:18.296" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:18.295" endtime="20201110 08:42:18.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:18.298" level="INFO">VALUE: 0.022117417</msg>
<status status="PASS" starttime="20201110 08:42:18.297" endtime="20201110 08:42:18.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.292" endtime="20201110 08:42:18.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:18.304" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:18.302" endtime="20201110 08:42:18.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:18.306" level="INFO">VALUE: [0.032160597, 0.042161028, 0.052162597, 0.062163306, 0.072164889, 0.082165583, 0.092167153, 0.102167903, 0.112169431, 0.122170153, 0.132171708, 0.142172431, 0.152173986, 0.162174764, 0.172176278, 0.182176986, 0.192178556, 0.202179264, 0.212180833, 0.222181556, 0.232183125, 0.242183833, 0.252185389, 0.262186111, 0.272187681, 0.282188403, 0.292189958, 0.302190667, 0.312192236, 0.322192986, 0.332194514, 0.342195236, 0.352196847, 0.362197514, 0.372199083, 0.382199806, 0.392201361, 0.402202083, 0.412203653, 0.422204403, 0.432205931, 0.442206639, 0.452208208, 0.462208917, 0.472210486, 0.482211222, 0.492212792, 0.502213514, 0.512215056, 0.522215778, 0.532217333, 0.542218069, 0.552219667, 0.562220389, 0.572221972, 0.582222611, 0.592224181, 0.602224903, 0.612226472, 0.622227194, 0.632228764, 0.642229458, 0.652231028, 0.662231736, 0.672233306, 0.682234028, 0.692235625, 0.702236319, 0.712237889, 0.722238583, 0.732240181, 0.742240861, 0.752242444, 0.762243167, 0.772244694, 0.782245417, 0.792246986, 0.802247681, 0.812249236, 0.822249944, 0.8322515, 0.842252222, 0.852253778, 0.862254486, 0.872256056, 0.88225675, 0.892258347, 0.902259042, 0.912260583, 0.922261292, 0.932262847, 0.942263556, 0.952265139, 0.962265833, 0.972267389, 0.982268125, 0.992269667, 1.002270375, 1.012271944, 1.022272639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:18.305" endtime="20201110 08:42:18.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.300" endtime="20201110 08:42:18.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:18.309" endtime="20201110 08:42:18.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:18.312" endtime="20201110 08:42:18.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.311" endtime="20201110 08:42:18.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.307" endtime="20201110 08:42:18.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.766" endtime="20201110 08:42:18.338"></status>
</kw>
<msg timestamp="20201110 08:42:18.338" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:18.347" endtime="20201110 08:42:20.451"></status>
</kw>
<msg timestamp="20201110 08:42:20.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47238571, 'start-iter': 1, 'wakeups': [47248612, 47258612, 47268613, 4...</msg>
<status status="PASS" starttime="20201110 08:42:18.345" endtime="20201110 08:42:20.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.458" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47238571, 'start-iter': 1, 'wakeups': [47248612, 47258612, 47268613, 4...</msg>
<status status="PASS" starttime="20201110 08:42:20.454" endtime="20201110 08:42:20.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:20.460" endtime="20201110 08:42:20.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.342" endtime="20201110 08:42:20.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.340" endtime="20201110 08:42:20.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:20.473" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 6, 'start-time': 47238571, 'wakeups': [47248612, 47258612, 47268613, 47278612, 47288613, 47298612, 47308613, 47318612, 47328613, 47338612, 473...</msg>
<status status="PASS" starttime="20201110 08:42:20.469" endtime="20201110 08:42:20.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.481" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:20.479" endtime="20201110 08:42:20.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.486" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:20.483" endtime="20201110 08:42:20.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.475" endtime="20201110 08:42:20.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.496" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:20.493" endtime="20201110 08:42:20.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.500" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:20.498" endtime="20201110 08:42:20.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.489" endtime="20201110 08:42:20.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.509" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:20.508" endtime="20201110 08:42:20.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.511" level="INFO">VALUE: 47238571</msg>
<status status="PASS" starttime="20201110 08:42:20.510" endtime="20201110 08:42:20.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.503" endtime="20201110 08:42:20.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.516" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:20.515" endtime="20201110 08:42:20.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.518" level="INFO">VALUE: [47248612, 47258612, 47268613, 47278612, 47288613, 47298612, 47308613, 47318612, 47328613, 47338612, 47348613, 47358612, 47368613, 47378612, 47388613, 47398612, 47408613, 47418612, 47428613, 47438612, 47448613, 47458612, 47468613, 47478612, 47488613, 47498612, 47508613, 47518612, 47528613, 47538612, 47548613, 47558612, 47568613, 47578612, 47588613, 47598612, 47608613, 47618612, 47628613, 47638612, 47648613, 47658612, 47668613, 47678612, 47688613, 47698612, 47708613, 47718612, 47728613, 47738612, 47748613, 47758612, 47768613, 47778612, 47788613, 47798612, 47808613, 47818612, 47828613, 47838612, 47848613, 47858612, 47868613, 47878612, 47888613, 47898612, 47908613, 47918612, 47928613, 47938612, 47948613, 47958612, 47968613, 47978612, 47988613, 47998612, 48008613, 48018612, 48028613, 48038612, 48048613, 48058612, 48068613, 48078612, 48088613, 48098612, 48108613, 48118612, 48128613, 48138612, 48148613, 48158612, 48168613, 48178612, 48188613, 48198612, 48208613, 48218612, 48228613, 48238612]</msg>
<status status="PASS" starttime="20201110 08:42:20.517" endtime="20201110 08:42:20.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.512" endtime="20201110 08:42:20.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:20.526" endtime="20201110 08:42:20.818"></status>
</kw>
<msg timestamp="20201110 08:42:20.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:20.524" endtime="20201110 08:42:20.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:20.822" endtime="20201110 08:42:20.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:20.830" endtime="20201110 08:42:20.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.522" endtime="20201110 08:42:20.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.519" endtime="20201110 08:42:20.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:20.857" level="INFO">${RESULT} = {'time': [0.023283917, 0.033326972, 0.043328222, 0.053329778, 0.063330514, 0.073332056, 0.083332792, 0.093334347, 0.103335056, 0.113336625, 0.123337361, 0.133338958, 0.143339611, 0.153341181, 0.163341...</msg>
<status status="PASS" starttime="20201110 08:42:20.833" endtime="20201110 08:42:20.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.862" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:20.861" endtime="20201110 08:42:20.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.864" level="INFO">VALUE: 0.023283917</msg>
<status status="PASS" starttime="20201110 08:42:20.863" endtime="20201110 08:42:20.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.858" endtime="20201110 08:42:20.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.870" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:20.869" endtime="20201110 08:42:20.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:20.872" level="INFO">VALUE: [0.033326972, 0.043328222, 0.053329778, 0.063330514, 0.073332056, 0.083332792, 0.093334347, 0.103335056, 0.113336625, 0.123337361, 0.133338958, 0.143339611, 0.153341181, 0.163341889, 0.173343458, 0.183344222, 0.19334575, 0.203346458, 0.213348028, 0.223348736, 0.233350306, 0.243351028, 0.253352583, 0.263353292, 0.273354861, 0.283355597, 0.293357167, 0.303357861, 0.313359417, 0.323360125, 0.333361694, 0.343362417, 0.353363958, 0.363364681, 0.373366236, 0.383366944, 0.393368528, 0.403369236, 0.413370806, 0.423371486, 0.433373069, 0.443373764, 0.453375319, 0.463376028, 0.473377597, 0.483378319, 0.493379889, 0.503380583, 0.513382167, 0.523382847, 0.533384417, 0.543385153, 0.553386708, 0.563387403, 0.573388972, 0.583389681, 0.593391236, 0.603391958, 0.613393514, 0.623394222, 0.633395792, 0.6433965, 0.653398056, 0.663398778, 0.673400333, 0.683401042, 0.693402639, 0.703403319, 0.713404889, 0.723405597, 0.733407167, 0.743407889, 0.753409444, 0.763410139, 0.773411708, 0.783412444, 0.793414, 0.803414708, 0.813416278, 0.823416986, 0.833418542, 0.843419236, 0.853420819, 0.863421569, 0.873423083, 0.883423806, 0.893425361, 0.903426083, 0.913427625, 0.923428347, 0.933429917, 0.943430639, 0.953432194, 0.963432903, 0.973434458, 0.983435167, 0.993436722, 1.003437431, 1.013439, 1.023439708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:20.871" endtime="20201110 08:42:20.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.866" endtime="20201110 08:42:20.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:20.876" endtime="20201110 08:42:20.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:20.879" endtime="20201110 08:42:20.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.877" endtime="20201110 08:42:20.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.874" endtime="20201110 08:42:20.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:18.339" endtime="20201110 08:42:20.900"></status>
</kw>
<msg timestamp="20201110 08:42:20.900" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:20.909" endtime="20201110 08:42:23.012"></status>
</kw>
<msg timestamp="20201110 08:42:23.014" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49800648, 'start-iter': 1, 'wakeups': [49810689, 49820689, 49830690, 4...</msg>
<status status="PASS" starttime="20201110 08:42:20.907" endtime="20201110 08:42:23.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 49800648, 'start-iter': 1, 'wakeups': [49810689, 49820689, 49830690, 4...</msg>
<status status="PASS" starttime="20201110 08:42:23.017" endtime="20201110 08:42:23.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:23.023" endtime="20201110 08:42:23.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.904" endtime="20201110 08:42:23.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.902" endtime="20201110 08:42:23.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:23.035" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 6, 'start-time': 49800648, 'wakeups': [49810689, 49820689, 49830690, 49840689, 49850690, 49860689, 49870690, 49880689, 49890690, 49900689, 499...</msg>
<status status="PASS" starttime="20201110 08:42:23.031" endtime="20201110 08:42:23.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.046" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:23.042" endtime="20201110 08:42:23.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.051" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:23.049" endtime="20201110 08:42:23.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.037" endtime="20201110 08:42:23.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.062" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:23.059" endtime="20201110 08:42:23.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.066" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:23.064" endtime="20201110 08:42:23.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.054" endtime="20201110 08:42:23.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.077" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:23.075" endtime="20201110 08:42:23.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.082" level="INFO">VALUE: 49800648</msg>
<status status="PASS" starttime="20201110 08:42:23.080" endtime="20201110 08:42:23.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.070" endtime="20201110 08:42:23.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.092" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:23.090" endtime="20201110 08:42:23.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.096" level="INFO">VALUE: [49810689, 49820689, 49830690, 49840689, 49850690, 49860689, 49870690, 49880689, 49890690, 49900689, 49910690, 49920689, 49930690, 49940689, 49950690, 49960689, 49970690, 49980689, 49990690, 50000689, 50010690, 50020689, 50030690, 50040689, 50050690, 50060689, 50070690, 50080689, 50090690, 50100689, 50110690, 50120689, 50130690, 50140689, 50150690, 50160689, 50170690, 50180689, 50190690, 50200689, 50210690, 50220689, 50230690, 50240689, 50250690, 50260689, 50270690, 50280689, 50290690, 50300689, 50310690, 50320689, 50330690, 50340689, 50350690, 50360689, 50370690, 50380689, 50390690, 50400689, 50410690, 50420689, 50430690, 50440689, 50450690, 50460689, 50470690, 50480689, 50490690, 50500689, 50510690, 50520689, 50530690, 50540689, 50550690, 50560689, 50570690, 50580689, 50590690, 50600689, 50610690, 50620689, 50630690, 50640689, 50650690, 50660689, 50670690, 50680689, 50690690, 50700689, 50710690, 50720689, 50730690, 50740689, 50750690, 50760689, 50770690, 50780689, 50790690, 50800689]</msg>
<status status="PASS" starttime="20201110 08:42:23.095" endtime="20201110 08:42:23.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.085" endtime="20201110 08:42:23.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:23.104" endtime="20201110 08:42:23.396"></status>
</kw>
<msg timestamp="20201110 08:42:23.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028977042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:23.102" endtime="20201110 08:42:23.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018934083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028977042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:23.400" endtime="20201110 08:42:23.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:23.412" endtime="20201110 08:42:23.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.100" endtime="20201110 08:42:23.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.098" endtime="20201110 08:42:23.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:23.440" level="INFO">${RESULT} = {'time': [0.018934083, 0.028977042, 0.038978292, 0.048979875, 0.058980569, 0.068982153, 0.078982875, 0.088984444, 0.098985153, 0.108986722, 0.118987431, 0.128988986, 0.138989694, 0.148991264, 0.158991...</msg>
<status status="PASS" starttime="20201110 08:42:23.415" endtime="20201110 08:42:23.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.445" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:42:23.444" endtime="20201110 08:42:23.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.448" level="INFO">VALUE: 0.018934083</msg>
<status status="PASS" starttime="20201110 08:42:23.447" endtime="20201110 08:42:23.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.441" endtime="20201110 08:42:23.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.454" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:23.453" endtime="20201110 08:42:23.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:23.456" level="INFO">VALUE: [0.028977042, 0.038978292, 0.048979875, 0.058980569, 0.068982153, 0.078982875, 0.088984444, 0.098985153, 0.108986722, 0.118987431, 0.128988986, 0.138989694, 0.148991264, 0.158991972, 0.168993542, 0.178994264, 0.188995847, 0.198996569, 0.208998111, 0.218998819, 0.229000389, 0.239001111, 0.249002667, 0.259003389, 0.269004958, 0.279005667, 0.289007222, 0.299007958, 0.3090095, 0.319010208, 0.329011764, 0.339012472, 0.349014042, 0.359014736, 0.369016306, 0.379017014, 0.389018597, 0.399019278, 0.409020847, 0.419021542, 0.429023125, 0.439023833, 0.449025375, 0.459026125, 0.469027708, 0.479028361, 0.489029958, 0.499030625, 0.509032208, 0.519032903, 0.529034458, 0.539035167, 0.549036736, 0.559037514, 0.569039028, 0.579039722, 0.589041292, 0.599042, 0.609043569, 0.619044264, 0.629045833, 0.639046542, 0.649048111, 0.659048806, 0.669050375, 0.679051069, 0.689052694, 0.699053361, 0.709054903, 0.719055625, 0.729057194, 0.739057903, 0.7490595, 0.759060153, 0.769061722, 0.779062444, 0.789064, 0.799064778, 0.809066264, 0.819067042, 0.829068556, 0.83906925, 0.849070889, 0.859071514, 0.869073097, 0.879073833, 0.889075361, 0.899076125, 0.909077639, 0.919078333, 0.929079903, 0.939080625, 0.949082208, 0.959082875, 0.969084444, 0.979085181, 0.989086708, 0.999087417, 1.009089, 1.019089722] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:23.455" endtime="20201110 08:42:23.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.450" endtime="20201110 08:42:23.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:23.459" endtime="20201110 08:42:23.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:23.463" endtime="20201110 08:42:23.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.461" endtime="20201110 08:42:23.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.458" endtime="20201110 08:42:23.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:20.901" endtime="20201110 08:42:23.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.764" endtime="20201110 08:42:23.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:15.763" endtime="20201110 08:42:23.484"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:23.487" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:23.495" endtime="20201110 08:42:25.600"></status>
</kw>
<msg timestamp="20201110 08:42:25.601" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52387316, 'start-iter': 1, 'wakeups': [52397368, 52407367, 52417367, 5...</msg>
<status status="PASS" starttime="20201110 08:42:23.494" endtime="20201110 08:42:25.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52387316, 'start-iter': 1, 'wakeups': [52397368, 52407367, 52417367, 5...</msg>
<status status="PASS" starttime="20201110 08:42:25.604" endtime="20201110 08:42:25.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:25.610" endtime="20201110 08:42:25.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.491" endtime="20201110 08:42:25.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.489" endtime="20201110 08:42:25.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:25.623" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 7, 'start-time': 52387316, 'wakeups': [52397368, 52407367, 52417367, 52427367, 52437367, 52447367, 52457367, 52467367, 52477367, 52487367, 524...</msg>
<status status="PASS" starttime="20201110 08:42:25.618" endtime="20201110 08:42:25.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.632" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:25.630" endtime="20201110 08:42:25.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.636" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:25.634" endtime="20201110 08:42:25.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.624" endtime="20201110 08:42:25.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.647" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:25.645" endtime="20201110 08:42:25.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.649" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:25.648" endtime="20201110 08:42:25.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.640" endtime="20201110 08:42:25.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.655" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:25.654" endtime="20201110 08:42:25.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.657" level="INFO">VALUE: 52387316</msg>
<status status="PASS" starttime="20201110 08:42:25.656" endtime="20201110 08:42:25.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.650" endtime="20201110 08:42:25.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.662" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:25.661" endtime="20201110 08:42:25.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.665" level="INFO">VALUE: [52397368, 52407367, 52417367, 52427367, 52437367, 52447367, 52457367, 52467367, 52477367, 52487367, 52497367, 52507367, 52517367, 52527367, 52537367, 52547367, 52557367, 52567367, 52577367, 52587367, 52597367, 52607367, 52617367, 52627367, 52637367, 52647367, 52657367, 52667367, 52677367, 52687367, 52697367, 52707367, 52717367, 52727367, 52737367, 52747367, 52757367, 52767367, 52777367, 52787367, 52797367, 52807367, 52817367, 52827367, 52837367, 52847367, 52857367, 52867367, 52877367, 52887367, 52897367, 52907367, 52917367, 52927367, 52937367, 52947367, 52957367, 52967367, 52977367, 52987367, 52997367, 53007367, 53017367, 53027367, 53037367, 53047367, 53057367, 53067367, 53077367, 53087367, 53097367, 53107367, 53117367, 53127367, 53137367, 53147367, 53157367, 53167367, 53177367, 53187367, 53197367, 53207367, 53217367, 53227367, 53237367, 53247367, 53257367, 53267367, 53277367, 53287367, 53297367, 53307367, 53317367, 53327367, 53337367, 53347367, 53357367, 53367367, 53377367, 53387367]</msg>
<status status="PASS" starttime="20201110 08:42:25.664" endtime="20201110 08:42:25.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.659" endtime="20201110 08:42:25.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:25.673" endtime="20201110 08:42:25.965"></status>
</kw>
<msg timestamp="20201110 08:42:25.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031712764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:25.671" endtime="20201110 08:42:25.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:25.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031712764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:25.969" endtime="20201110 08:42:25.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:25.977" endtime="20201110 08:42:25.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.668" endtime="20201110 08:42:25.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:25.666" endtime="20201110 08:42:25.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:26.004" level="INFO">${RESULT} = {'time': [0.021659986, 0.031712764, 0.041713292, 0.051714403, 0.061715569, 0.071716667, 0.081717833, 0.091718958, 0.101720139, 0.111721236, 0.121722403, 0.131723514, 0.141724694, 0.151725819, 0.161726...</msg>
<status status="PASS" starttime="20201110 08:42:25.980" endtime="20201110 08:42:26.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:26.009" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:26.008" endtime="20201110 08:42:26.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:26.011" level="INFO">VALUE: 0.021659986</msg>
<status status="PASS" starttime="20201110 08:42:26.010" endtime="20201110 08:42:26.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.005" endtime="20201110 08:42:26.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:26.017" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:26.016" endtime="20201110 08:42:26.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:26.020" level="INFO">VALUE: [0.031712764, 0.041713292, 0.051714403, 0.061715569, 0.071716667, 0.081717833, 0.091718958, 0.101720139, 0.111721236, 0.121722403, 0.131723514, 0.141724694, 0.151725819, 0.161726972, 0.171728097, 0.181729236, 0.191730361, 0.201731514, 0.211732639, 0.221733819, 0.231734917, 0.241736111, 0.251737208, 0.261738375, 0.271739472, 0.281740639, 0.291741819, 0.301742931, 0.311744083, 0.321745208, 0.331746347, 0.341747514, 0.351748597, 0.361749764, 0.371750903, 0.381752083, 0.39175325, 0.401754333, 0.411755444, 0.421756625, 0.431757764, 0.441758889, 0.451760014, 0.461761153, 0.471762264, 0.481763431, 0.491764542, 0.501765708, 0.511766806, 0.521767958, 0.531769097, 0.541770236, 0.551771389, 0.5617725, 0.571773611, 0.581774792, 0.591775875, 0.601777042, 0.611778153, 0.621779319, 0.631780417, 0.641781597, 0.651782694, 0.661783861, 0.671785014, 0.681786125, 0.691787236, 0.701788403, 0.7117895, 0.721790667, 0.731791778, 0.741792931, 0.751794125, 0.761795208, 0.771796319, 0.781797472, 0.791798583, 0.801799792, 0.811800875, 0.821802014, 0.831803139, 0.841804292, 0.851805417, 0.861806569, 0.871807681, 0.881808833, 0.891809944, 0.901811111, 0.911812264, 0.921813389, 0.9318145, 0.941815653, 0.951816819, 0.961817917, 0.971819056, 0.981820222, 0.991821306, 1.001822458, 1.011823583, 1.02182475] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:26.019" endtime="20201110 08:42:26.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.013" endtime="20201110 08:42:26.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:26.023" endtime="20201110 08:42:26.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:26.026" endtime="20201110 08:42:26.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.025" endtime="20201110 08:42:26.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.021" endtime="20201110 08:42:26.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.488" endtime="20201110 08:42:26.047"></status>
</kw>
<msg timestamp="20201110 08:42:26.048" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:26.056" endtime="20201110 08:42:28.160"></status>
</kw>
<msg timestamp="20201110 08:42:28.162" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54947773, 'start-iter': 1, 'wakeups': [54957825, 54967824, 54977824, 5...</msg>
<status status="PASS" starttime="20201110 08:42:26.054" endtime="20201110 08:42:28.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 54947773, 'start-iter': 1, 'wakeups': [54957825, 54967824, 54977824, 5...</msg>
<status status="PASS" starttime="20201110 08:42:28.164" endtime="20201110 08:42:28.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:28.171" endtime="20201110 08:42:28.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.052" endtime="20201110 08:42:28.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.050" endtime="20201110 08:42:28.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:28.182" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 7, 'start-time': 54947773, 'wakeups': [54957825, 54967824, 54977824, 54987824, 54997824, 55007824, 55017824, 55027824, 55037824, 55047824, 550...</msg>
<status status="PASS" starttime="20201110 08:42:28.178" endtime="20201110 08:42:28.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.191" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:28.189" endtime="20201110 08:42:28.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.197" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:28.195" endtime="20201110 08:42:28.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.184" endtime="20201110 08:42:28.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.208" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:28.206" endtime="20201110 08:42:28.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.212" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:28.210" endtime="20201110 08:42:28.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.200" endtime="20201110 08:42:28.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.224" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:28.221" endtime="20201110 08:42:28.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.228" level="INFO">VALUE: 54947773</msg>
<status status="PASS" starttime="20201110 08:42:28.226" endtime="20201110 08:42:28.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.216" endtime="20201110 08:42:28.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.241" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:28.237" endtime="20201110 08:42:28.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.246" level="INFO">VALUE: [54957825, 54967824, 54977824, 54987824, 54997824, 55007824, 55017824, 55027824, 55037824, 55047824, 55057824, 55067824, 55077824, 55087824, 55097824, 55107824, 55117824, 55127824, 55137824, 55147824, 55157824, 55167824, 55177824, 55187824, 55197824, 55207824, 55217824, 55227824, 55237824, 55247824, 55257824, 55267824, 55277824, 55287824, 55297824, 55307824, 55317824, 55327824, 55337824, 55347824, 55357824, 55367824, 55377824, 55387824, 55397824, 55407824, 55417824, 55427824, 55437824, 55447824, 55457824, 55467824, 55477824, 55487824, 55497824, 55507824, 55517824, 55527824, 55537824, 55547824, 55557824, 55567824, 55577824, 55587824, 55597824, 55607824, 55617824, 55627824, 55637824, 55647824, 55657824, 55667824, 55677824, 55687824, 55697824, 55707824, 55717824, 55727824, 55737824, 55747824, 55757824, 55767824, 55777824, 55787824, 55797824, 55807824, 55817824, 55827824, 55837824, 55847824, 55857824, 55867824, 55877824, 55887824, 55897824, 55907824, 55917824, 55927824, 55937824, 55947824]</msg>
<status status="PASS" starttime="20201110 08:42:28.244" endtime="20201110 08:42:28.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.232" endtime="20201110 08:42:28.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:28.263" endtime="20201110 08:42:28.564"></status>
</kw>
<msg timestamp="20201110 08:42:28.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028764083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:28.259" endtime="20201110 08:42:28.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028764083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:28.568" endtime="20201110 08:42:28.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:28.576" endtime="20201110 08:42:28.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.254" endtime="20201110 08:42:28.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.250" endtime="20201110 08:42:28.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:28.603" level="INFO">${RESULT} = {'time': [0.018711389, 0.028764083, 0.038764569, 0.048765681, 0.058766833, 0.068767944, 0.078769111, 0.08877025, 0.098771389, 0.108772514, 0.118773722, 0.128774792, 0.138775958, 0.148777083, 0.1587782...</msg>
<status status="PASS" starttime="20201110 08:42:28.580" endtime="20201110 08:42:28.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.608" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:28.607" endtime="20201110 08:42:28.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.610" level="INFO">VALUE: 0.018711389</msg>
<status status="PASS" starttime="20201110 08:42:28.609" endtime="20201110 08:42:28.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.604" endtime="20201110 08:42:28.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.620" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:28.619" endtime="20201110 08:42:28.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:28.623" level="INFO">VALUE: [0.028764083, 0.038764569, 0.048765681, 0.058766833, 0.068767944, 0.078769111, 0.08877025, 0.098771389, 0.108772514, 0.118773722, 0.128774792, 0.138775958, 0.148777083, 0.158778236, 0.168779347, 0.178780514, 0.188781639, 0.198782792, 0.208783931, 0.218785083, 0.228786222, 0.238787361, 0.2487885, 0.258789639, 0.268790792, 0.278791944, 0.288793056, 0.298794194, 0.308795333, 0.318796472, 0.328797611, 0.33879875, 0.348799847, 0.358801, 0.368802111, 0.378803292, 0.388804389, 0.398805542, 0.408806667, 0.418807833, 0.428808917, 0.438810097, 0.448811208, 0.458812347, 0.468813458, 0.478814625, 0.488815736, 0.498816903, 0.508818, 0.518819167, 0.528820292, 0.538821444, 0.548822542, 0.558823722, 0.568824819, 0.578825972, 0.588827125, 0.59882825, 0.608829375, 0.618830514, 0.628831639, 0.638832792, 0.648833972, 0.658835069, 0.668836167, 0.678837333, 0.688838444, 0.698839597, 0.708840708, 0.718841889, 0.728842986, 0.738844139, 0.74884525, 0.758846431, 0.768847528, 0.778848694, 0.788849806, 0.798850958, 0.808852083, 0.81885325, 0.828854347, 0.8388555, 0.848856611, 0.858857778, 0.868858889, 0.878860042, 0.888861167, 0.898862319, 0.908863472, 0.918864583, 0.928865722, 0.938866861, 0.948867972, 0.958869125, 0.96887025, 0.978871403, 0.988872556, 0.998873681, 1.008874833, 1.018875958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:28.622" endtime="20201110 08:42:28.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.616" endtime="20201110 08:42:28.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:28.626" endtime="20201110 08:42:28.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:28.631" endtime="20201110 08:42:28.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.628" endtime="20201110 08:42:28.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.624" endtime="20201110 08:42:28.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:26.048" endtime="20201110 08:42:28.652"></status>
</kw>
<msg timestamp="20201110 08:42:28.653" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:28.661" endtime="20201110 08:42:30.766"></status>
</kw>
<msg timestamp="20201110 08:42:30.767" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57552871, 'start-iter': 1, 'wakeups': [57562922, 57572922, 57582922, 5...</msg>
<status status="PASS" starttime="20201110 08:42:28.660" endtime="20201110 08:42:30.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.773" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 57552871, 'start-iter': 1, 'wakeups': [57562922, 57572922, 57582922, 5...</msg>
<status status="PASS" starttime="20201110 08:42:30.769" endtime="20201110 08:42:30.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:30.776" endtime="20201110 08:42:30.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.657" endtime="20201110 08:42:30.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.655" endtime="20201110 08:42:30.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:30.788" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 7, 'start-time': 57552871, 'wakeups': [57562922, 57572922, 57582922, 57592922, 57602922, 57612922, 57622922, 57632922, 57642922, 57652922, 576...</msg>
<status status="PASS" starttime="20201110 08:42:30.783" endtime="20201110 08:42:30.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.797" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:30.794" endtime="20201110 08:42:30.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.801" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:30.799" endtime="20201110 08:42:30.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.789" endtime="20201110 08:42:30.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.812" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:30.810" endtime="20201110 08:42:30.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.817" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:30.815" endtime="20201110 08:42:30.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.805" endtime="20201110 08:42:30.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.829" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:30.826" endtime="20201110 08:42:30.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.833" level="INFO">VALUE: 57552871</msg>
<status status="PASS" starttime="20201110 08:42:30.831" endtime="20201110 08:42:30.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.821" endtime="20201110 08:42:30.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.844" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:30.842" endtime="20201110 08:42:30.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:30.849" level="INFO">VALUE: [57562922, 57572922, 57582922, 57592922, 57602922, 57612922, 57622922, 57632922, 57642922, 57652922, 57662922, 57672922, 57682922, 57692922, 57702922, 57712922, 57722922, 57732922, 57742922, 57752922, 57762922, 57772922, 57782922, 57792922, 57802922, 57812922, 57822922, 57832922, 57842922, 57852922, 57862922, 57872922, 57882922, 57892922, 57902922, 57912922, 57922922, 57932922, 57942922, 57952922, 57962922, 57972922, 57982922, 57992922, 58002922, 58012922, 58022922, 58032922, 58042922, 58052922, 58062922, 58072922, 58082922, 58092922, 58102922, 58112922, 58122922, 58132922, 58142922, 58152922, 58162922, 58172922, 58182922, 58192922, 58202922, 58212922, 58222922, 58232922, 58242922, 58252922, 58262922, 58272922, 58282922, 58292922, 58302922, 58312922, 58322922, 58332922, 58342922, 58352922, 58362922, 58372922, 58382922, 58392922, 58402922, 58412922, 58422922, 58432922, 58442922, 58452922, 58462922, 58472922, 58482922, 58492922, 58502922, 58512922, 58522922, 58532922, 58542922, 58552922]</msg>
<status status="PASS" starttime="20201110 08:42:30.847" endtime="20201110 08:42:30.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.837" endtime="20201110 08:42:30.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:30.861" endtime="20201110 08:42:31.154"></status>
</kw>
<msg timestamp="20201110 08:42:31.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018900639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028953319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:30.859" endtime="20201110 08:42:31.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:31.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018900639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028953319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:31.158" endtime="20201110 08:42:31.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:31.166" endtime="20201110 08:42:31.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.856" endtime="20201110 08:42:31.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:30.852" endtime="20201110 08:42:31.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:31.193" level="INFO">${RESULT} = {'time': [0.018900639, 0.028953319, 0.038954653, 0.048955778, 0.058956944, 0.068958056, 0.078959222, 0.088960347, 0.098961514, 0.108962611, 0.118963778, 0.128964903, 0.138966069, 0.148967167, 0.158968...</msg>
<status status="PASS" starttime="20201110 08:42:31.169" endtime="20201110 08:42:31.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:31.198" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:42:31.196" endtime="20201110 08:42:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:31.200" level="INFO">VALUE: 0.018900639</msg>
<status status="PASS" starttime="20201110 08:42:31.199" endtime="20201110 08:42:31.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.194" endtime="20201110 08:42:31.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:31.205" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:31.204" endtime="20201110 08:42:31.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:31.207" level="INFO">VALUE: [0.028953319, 0.038954653, 0.048955778, 0.058956944, 0.068958056, 0.078959222, 0.088960347, 0.098961514, 0.108962611, 0.118963778, 0.128964903, 0.138966069, 0.148967167, 0.158968347, 0.168969444, 0.178970611, 0.188971736, 0.198972889, 0.208974042, 0.218975181, 0.228976361, 0.238977472, 0.248978569, 0.258979778, 0.268980861, 0.278982014, 0.288983153, 0.298984292, 0.308985389, 0.318986556, 0.328987667, 0.338988819, 0.348989931, 0.358991083, 0.368992208, 0.378993375, 0.388994472, 0.398995639, 0.408996736, 0.418997889, 0.428999069, 0.439000181, 0.449001278, 0.459002431, 0.469003542, 0.479004736, 0.489005819, 0.499006972, 0.509008083, 0.519009264, 0.529010375, 0.539011514, 0.549012639, 0.559013806, 0.569014903, 0.579016069, 0.589017181, 0.599018347, 0.609019472, 0.619020597, 0.629021708, 0.639022875, 0.649023986, 0.659025139, 0.66902625, 0.679027431, 0.689028542, 0.699029694, 0.709030833, 0.719031958, 0.729033069, 0.739034222, 0.749035333, 0.7590365, 0.769037611, 0.779038833, 0.789039903, 0.799041042, 0.809042167, 0.819043319, 0.829044417, 0.839045583, 0.849046694, 0.859047861, 0.869049, 0.879050139, 0.889051264, 0.899052403, 0.9090535, 0.919054667, 0.929055792, 0.939056931, 0.949058097, 0.959059208, 0.969060333, 0.979061472, 0.989062597, 0.999063764, 1.009064931, 1.019066028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:31.206" endtime="20201110 08:42:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.201" endtime="20201110 08:42:31.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:31.211" endtime="20201110 08:42:31.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:31.215" endtime="20201110 08:42:31.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.213" endtime="20201110 08:42:31.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.209" endtime="20201110 08:42:31.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:28.653" endtime="20201110 08:42:31.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.486" endtime="20201110 08:42:31.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:23.485" endtime="20201110 08:42:31.236"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:31.239" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:31.248" endtime="20201110 08:42:33.352"></status>
</kw>
<msg timestamp="20201110 08:42:33.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60140036, 'start-iter': 1, 'wakeups': [60150098, 60160097, 60170098, 6...</msg>
<status status="PASS" starttime="20201110 08:42:31.247" endtime="20201110 08:42:33.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 60140036, 'start-iter': 1, 'wakeups': [60150098, 60160097, 60170098, 6...</msg>
<status status="PASS" starttime="20201110 08:42:33.356" endtime="20201110 08:42:33.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:33.363" endtime="20201110 08:42:33.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.243" endtime="20201110 08:42:33.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.241" endtime="20201110 08:42:33.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:33.374" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 8, 'start-time': 60140036, 'wakeups': [60150098, 60160097, 60170098, 60180097, 60190098, 60200097, 60210098, 60220097, 60230098, 60240097, 602...</msg>
<status status="PASS" starttime="20201110 08:42:33.370" endtime="20201110 08:42:33.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.384" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:33.381" endtime="20201110 08:42:33.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.388" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:33.386" endtime="20201110 08:42:33.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.376" endtime="20201110 08:42:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.399" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:33.397" endtime="20201110 08:42:33.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.403" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:33.401" endtime="20201110 08:42:33.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.391" endtime="20201110 08:42:33.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.414" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:33.412" endtime="20201110 08:42:33.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.417" level="INFO">VALUE: 60140036</msg>
<status status="PASS" starttime="20201110 08:42:33.416" endtime="20201110 08:42:33.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.407" endtime="20201110 08:42:33.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.422" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:33.421" endtime="20201110 08:42:33.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.425" level="INFO">VALUE: [60150098, 60160097, 60170098, 60180097, 60190098, 60200097, 60210098, 60220097, 60230098, 60240097, 60250098, 60260097, 60270098, 60280097, 60290098, 60300097, 60310098, 60320097, 60330098, 60340097, 60350098, 60360097, 60370098, 60380097, 60390098, 60400097, 60410098, 60420097, 60430098, 60440097, 60450098, 60460097, 60470098, 60480097, 60490098, 60500097, 60510098, 60520097, 60530098, 60540097, 60550098, 60560097, 60570098, 60580097, 60590098, 60600097, 60610098, 60620097, 60630098, 60640097, 60650098, 60660097, 60670098, 60680097, 60690098, 60700097, 60710098, 60720097, 60730098, 60740097, 60750098, 60760097, 60770098, 60780097, 60790098, 60800097, 60810098, 60820097, 60830098, 60840097, 60850098, 60860097, 60870098, 60880097, 60890098, 60900097, 60910098, 60920097, 60930098, 60940097, 60950098, 60960097, 60970098, 60980097, 60990098, 61000097, 61010098, 61020097, 61030098, 61040097, 61050098, 61060097, 61070098, 61080097, 61090098, 61100097, 61110098, 61120097, 61130098, 61140097]</msg>
<status status="PASS" starttime="20201110 08:42:33.423" endtime="20201110 08:42:33.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.419" endtime="20201110 08:42:33.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:33.433" endtime="20201110 08:42:33.725"></status>
</kw>
<msg timestamp="20201110 08:42:33.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032705361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:33.431" endtime="20201110 08:42:33.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022642542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032705361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:33.729" endtime="20201110 08:42:33.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:33.737" endtime="20201110 08:42:33.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.428" endtime="20201110 08:42:33.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.427" endtime="20201110 08:42:33.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:33.765" level="INFO">${RESULT} = {'time': [0.022642542, 0.032705361, 0.042706264, 0.052708236, 0.062708528, 0.072710514, 0.082710806, 0.092712792, 0.102713097, 0.112715083, 0.122715361, 0.132717347, 0.142717639, 0.152719625, 0.162719...</msg>
<status status="PASS" starttime="20201110 08:42:33.741" endtime="20201110 08:42:33.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.769" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:33.768" endtime="20201110 08:42:33.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.771" level="INFO">VALUE: 0.022642542</msg>
<status status="PASS" starttime="20201110 08:42:33.770" endtime="20201110 08:42:33.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.766" endtime="20201110 08:42:33.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.777" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:33.776" endtime="20201110 08:42:33.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:33.779" level="INFO">VALUE: [0.032705361, 0.042706264, 0.052708236, 0.062708528, 0.072710514, 0.082710806, 0.092712792, 0.102713097, 0.112715083, 0.122715361, 0.132717347, 0.142717639, 0.152719625, 0.162719917, 0.172721917, 0.182722194, 0.192724181, 0.202724486, 0.212726486, 0.222726778, 0.23272875, 0.242729042, 0.252731042, 0.262731333, 0.272733347, 0.282733611, 0.292735611, 0.302735889, 0.312737875, 0.322738167, 0.332740153, 0.342740472, 0.352742431, 0.362742736, 0.372744722, 0.382745014, 0.392746986, 0.402747278, 0.41274925, 0.422749542, 0.432751542, 0.442751833, 0.452753806, 0.462754097, 0.472756069, 0.482756417, 0.492758347, 0.502758639, 0.512760597, 0.522760889, 0.532762875, 0.542763181, 0.552765153, 0.562765431, 0.572767431, 0.582767708, 0.592769681, 0.602769972, 0.612771958, 0.62277225, 0.632774236, 0.642774514, 0.6527765, 0.662776792, 0.672778764, 0.682779056, 0.692781083, 0.702781347, 0.712783319, 0.722783625, 0.732785597, 0.742785889, 0.752787861, 0.762788153, 0.772790181, 0.782790417, 0.792792389, 0.802792694, 0.812794681, 0.822795014, 0.832796944, 0.84279725, 0.852799222, 0.8627995, 0.8728015, 0.882801792, 0.89280375, 0.902804042, 0.912806028, 0.922806319, 0.932808306, 0.942808597, 0.952810569, 0.962810861, 0.972812875, 0.982813125, 0.992815111, 1.002815403, 1.012817403, 1.022817681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:33.778" endtime="20201110 08:42:33.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.773" endtime="20201110 08:42:33.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:33.783" endtime="20201110 08:42:33.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:33.787" endtime="20201110 08:42:33.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.785" endtime="20201110 08:42:33.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.781" endtime="20201110 08:42:33.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.240" endtime="20201110 08:42:33.814"></status>
</kw>
<msg timestamp="20201110 08:42:33.815" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:33.823" endtime="20201110 08:42:35.929"></status>
</kw>
<msg timestamp="20201110 08:42:35.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62716556, 'start-iter': 1, 'wakeups': [62726618, 62736617, 62746618, 6...</msg>
<status status="PASS" starttime="20201110 08:42:33.821" endtime="20201110 08:42:35.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.937" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 62716556, 'start-iter': 1, 'wakeups': [62726618, 62736617, 62746618, 6...</msg>
<status status="PASS" starttime="20201110 08:42:35.933" endtime="20201110 08:42:35.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:35.940" endtime="20201110 08:42:35.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.819" endtime="20201110 08:42:35.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.817" endtime="20201110 08:42:35.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:35.951" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 8, 'start-time': 62716556, 'wakeups': [62726618, 62736617, 62746618, 62756617, 62766618, 62776617, 62786618, 62796617, 62806618, 62816617, 628...</msg>
<status status="PASS" starttime="20201110 08:42:35.947" endtime="20201110 08:42:35.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.960" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:35.958" endtime="20201110 08:42:35.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:35.963" endtime="20201110 08:42:35.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:35.953" endtime="20201110 08:42:35.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.976" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:35.974" endtime="20201110 08:42:35.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.980" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:35.978" endtime="20201110 08:42:35.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:35.968" endtime="20201110 08:42:35.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.991" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:35.989" endtime="20201110 08:42:35.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:35.996" level="INFO">VALUE: 62716556</msg>
<status status="PASS" starttime="20201110 08:42:35.994" endtime="20201110 08:42:35.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:35.984" endtime="20201110 08:42:35.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.007" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:36.005" endtime="20201110 08:42:36.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.012" level="INFO">VALUE: [62726618, 62736617, 62746618, 62756617, 62766618, 62776617, 62786618, 62796617, 62806618, 62816617, 62826618, 62836617, 62846618, 62856617, 62866618, 62876617, 62886618, 62896617, 62906618, 62916617, 62926618, 62936617, 62946618, 62956617, 62966618, 62976617, 62986618, 62996617, 63006618, 63016617, 63026618, 63036617, 63046618, 63056617, 63066618, 63076617, 63086618, 63096617, 63106618, 63116617, 63126618, 63136617, 63146618, 63156617, 63166618, 63176617, 63186618, 63196617, 63206618, 63216617, 63226618, 63236617, 63246618, 63256617, 63266618, 63276617, 63286618, 63296617, 63306618, 63316617, 63326618, 63336617, 63346618, 63356617, 63366618, 63376617, 63386618, 63396617, 63406618, 63416617, 63426618, 63436617, 63446618, 63456617, 63466618, 63476617, 63486618, 63496617, 63506618, 63516617, 63526618, 63536617, 63546618, 63556617, 63566618, 63576617, 63586618, 63596617, 63606618, 63616617, 63626618, 63636617, 63646618, 63656617, 63666618, 63676617, 63686618, 63696617, 63706618, 63716617]</msg>
<status status="PASS" starttime="20201110 08:42:36.009" endtime="20201110 08:42:36.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:35.999" endtime="20201110 08:42:36.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:36.029" endtime="20201110 08:42:36.325"></status>
</kw>
<msg timestamp="20201110 08:42:36.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0275485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037611389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:42:36.026" endtime="20201110 08:42:36.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0275485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037611389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:42:36.329" endtime="20201110 08:42:36.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:36.337" endtime="20201110 08:42:36.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.020" endtime="20201110 08:42:36.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.015" endtime="20201110 08:42:36.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:36.364" level="INFO">${RESULT} = {'time': [0.0275485, 0.037611389, 0.047612264, 0.05761425, 0.067614542, 0.077616542, 0.087616819, 0.097618806, 0.107619139, 0.117621097, 0.127621389, 0.137623375, 0.147623667, 0.157625653, 0.167625944...</msg>
<status status="PASS" starttime="20201110 08:42:36.340" endtime="20201110 08:42:36.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.369" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:36.368" endtime="20201110 08:42:36.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.371" level="INFO">VALUE: 0.0275485</msg>
<status status="PASS" starttime="20201110 08:42:36.370" endtime="20201110 08:42:36.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.365" endtime="20201110 08:42:36.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.377" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:36.376" endtime="20201110 08:42:36.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:36.379" level="INFO">VALUE: [0.037611389, 0.047612264, 0.05761425, 0.067614542, 0.077616542, 0.087616819, 0.097618806, 0.107619139, 0.117621097, 0.127621389, 0.137623375, 0.147623667, 0.157625653, 0.167625944, 0.177627931, 0.187628222, 0.197630208, 0.207630514, 0.217632486, 0.227632806, 0.237634778, 0.247635069, 0.257637056, 0.267637347, 0.277639333, 0.287639625, 0.297641625, 0.307641917, 0.317643889, 0.327644236, 0.337646181, 0.347646486, 0.357648472, 0.367648764, 0.377650764, 0.387651056, 0.397653028, 0.407653319, 0.417655306, 0.427655611, 0.437657597, 0.447657875, 0.457659861, 0.467660167, 0.477662153, 0.487662417, 0.497664403, 0.507664694, 0.517666667, 0.527666958, 0.537668944, 0.54766925, 0.55767125, 0.567671514, 0.577673472, 0.587673764, 0.59767575, 0.607676056, 0.617678083, 0.627678306, 0.637680361, 0.647680583, 0.657682556, 0.667682847, 0.677684819, 0.687685111, 0.697687125, 0.707687389, 0.717689361, 0.727689653, 0.737691653, 0.747691931, 0.757693917, 0.767694194, 0.77769625, 0.787696472, 0.7976985, 0.807698736, 0.817700722, 0.827701056, 0.837703, 0.847703319, 0.857705278, 0.867705569, 0.877707556, 0.887707833, 0.897709819, 0.907710097, 0.917712083, 0.927712375, 0.937714347, 0.947714653, 0.957716639, 0.967716931, 0.977718903, 0.987719194, 0.997721181, 1.007721458, 1.017723444, 1.027723722] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:36.378" endtime="20201110 08:42:36.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.372" endtime="20201110 08:42:36.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:36.382" endtime="20201110 08:42:36.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:36.386" endtime="20201110 08:42:36.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.384" endtime="20201110 08:42:36.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.380" endtime="20201110 08:42:36.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:33.815" endtime="20201110 08:42:36.407"></status>
</kw>
<msg timestamp="20201110 08:42:36.407" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:36.415" endtime="20201110 08:42:38.520"></status>
</kw>
<msg timestamp="20201110 08:42:38.521" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 65306911, 'start-iter': 1, 'wakeups': [65316972, 65326972, 65336973, 6...</msg>
<status status="PASS" starttime="20201110 08:42:36.414" endtime="20201110 08:42:38.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.528" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 65306911, 'start-iter': 1, 'wakeups': [65316972, 65326972, 65336973, 6...</msg>
<status status="PASS" starttime="20201110 08:42:38.524" endtime="20201110 08:42:38.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:38.530" endtime="20201110 08:42:38.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.411" endtime="20201110 08:42:38.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.409" endtime="20201110 08:42:38.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:38.542" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 8, 'start-time': 65306911, 'wakeups': [65316972, 65326972, 65336973, 65346972, 65356973, 65366972, 65376973, 65386972, 65396973, 65406972, 654...</msg>
<status status="PASS" starttime="20201110 08:42:38.538" endtime="20201110 08:42:38.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.553" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:38.549" endtime="20201110 08:42:38.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.558" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:38.556" endtime="20201110 08:42:38.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.544" endtime="20201110 08:42:38.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.569" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:38.567" endtime="20201110 08:42:38.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.574" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:38.572" endtime="20201110 08:42:38.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.561" endtime="20201110 08:42:38.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.584" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:38.582" endtime="20201110 08:42:38.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.589" level="INFO">VALUE: 65306911</msg>
<status status="PASS" starttime="20201110 08:42:38.587" endtime="20201110 08:42:38.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.577" endtime="20201110 08:42:38.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.600" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:38.598" endtime="20201110 08:42:38.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.605" level="INFO">VALUE: [65316972, 65326972, 65336973, 65346972, 65356973, 65366972, 65376973, 65386972, 65396973, 65406972, 65416973, 65426972, 65436973, 65446972, 65456973, 65466972, 65476973, 65486972, 65496973, 65506972, 65516973, 65526972, 65536973, 65546972, 65556973, 65566972, 65576973, 65586972, 65596973, 65606972, 65616973, 65626972, 65636973, 65646972, 65656973, 65666972, 65676973, 65686972, 65696973, 65706972, 65716973, 65726972, 65736973, 65746972, 65756973, 65766972, 65776973, 65786972, 65796973, 65806972, 65816973, 65826972, 65836973, 65846972, 65856973, 65866972, 65876973, 65886972, 65896973, 65906972, 65916973, 65926972, 65936973, 65946972, 65956973, 65966972, 65976973, 65986972, 65996973, 66006972, 66016973, 66026972, 66036973, 66046972, 66056973, 66066972, 66076973, 66086972, 66096973, 66106972, 66116973, 66126972, 66136973, 66146972, 66156973, 66166972, 66176973, 66186972, 66196973, 66206972, 66216973, 66226972, 66236973, 66246972, 66256973, 66266972, 66276973, 66286972, 66296973, 66306972]</msg>
<status status="PASS" starttime="20201110 08:42:38.602" endtime="20201110 08:42:38.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.593" endtime="20201110 08:42:38.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:38.619" endtime="20201110 08:42:38.911"></status>
</kw>
<msg timestamp="20201110 08:42:38.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028793972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:38.617" endtime="20201110 08:42:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028793972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:38.915" endtime="20201110 08:42:38.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:38.923" endtime="20201110 08:42:38.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.612" endtime="20201110 08:42:38.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.608" endtime="20201110 08:42:38.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:38.950" level="INFO">${RESULT} = {'time': [0.018730958, 0.028793972, 0.038795403, 0.048797389, 0.058797681, 0.068799667, 0.078799958, 0.088801944, 0.098802236, 0.108804222, 0.118804528, 0.128806528, 0.138806833, 0.148808792, 0.158809...</msg>
<status status="PASS" starttime="20201110 08:42:38.926" endtime="20201110 08:42:38.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.954" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:42:38.953" endtime="20201110 08:42:38.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.956" level="INFO">VALUE: 0.018730958</msg>
<status status="PASS" starttime="20201110 08:42:38.955" endtime="20201110 08:42:38.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.951" endtime="20201110 08:42:38.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.962" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:38.961" endtime="20201110 08:42:38.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:38.964" level="INFO">VALUE: [0.028793972, 0.038795403, 0.048797389, 0.058797681, 0.068799667, 0.078799958, 0.088801944, 0.098802236, 0.108804222, 0.118804528, 0.128806528, 0.138806833, 0.148808792, 0.158809083, 0.168811083, 0.178811361, 0.188813347, 0.198813639, 0.208815639, 0.218815931, 0.228817958, 0.238818222, 0.248820208, 0.258820514, 0.268822472, 0.278822778, 0.28882475, 0.298825069, 0.308827042, 0.318827361, 0.328829319, 0.338829625, 0.348831597, 0.358831931, 0.368833875, 0.378834167, 0.388836139, 0.398836431, 0.408838403, 0.418838694, 0.428840681, 0.438840972, 0.448842944, 0.458843236, 0.468845208, 0.4788455, 0.488847542, 0.498847778, 0.508849764, 0.518850069, 0.528852028, 0.538852319, 0.548854292, 0.558854597, 0.568856569, 0.578856847, 0.588858833, 0.598859139, 0.608861097, 0.618861389, 0.628863375, 0.638863681, 0.648865653, 0.658865931, 0.668867931, 0.678868208, 0.688870181, 0.698870486, 0.708872458, 0.71887275, 0.728874736, 0.738875028, 0.748877, 0.758877292, 0.768879278, 0.778879597, 0.788881583, 0.798881847, 0.808883833, 0.818884111, 0.828886097, 0.838886444, 0.848888375, 0.858888681, 0.868890653, 0.878890917, 0.888892903, 0.898893194, 0.908895167, 0.918895486, 0.928897458, 0.938897736, 0.948899708, 0.958900014, 0.968901986, 0.978902278, 0.98890425, 0.998904542, 1.008906542, 1.018906847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:38.963" endtime="20201110 08:42:38.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.958" endtime="20201110 08:42:38.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:38.967" endtime="20201110 08:42:38.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:38.970" endtime="20201110 08:42:38.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.969" endtime="20201110 08:42:38.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.965" endtime="20201110 08:42:38.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:36.408" endtime="20201110 08:42:38.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.237" endtime="20201110 08:42:38.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:31.237" endtime="20201110 08:42:38.991"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:38.994" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:39.002" endtime="20201110 08:42:41.106"></status>
</kw>
<msg timestamp="20201110 08:42:41.107" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67893691, 'start-iter': 1, 'wakeups': [67903763, 67913764, 67923763, 6...</msg>
<status status="PASS" starttime="20201110 08:42:39.001" endtime="20201110 08:42:41.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.113" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67893691, 'start-iter': 1, 'wakeups': [67903763, 67913764, 67923763, 6...</msg>
<status status="PASS" starttime="20201110 08:42:41.110" endtime="20201110 08:42:41.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:41.115" endtime="20201110 08:42:41.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.998" endtime="20201110 08:42:41.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.996" endtime="20201110 08:42:41.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:41.127" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 9, 'start-time': 67893691, 'wakeups': [67903763, 67913764, 67923763, 67933763, 67943763, 67953763, 67963763, 67973763, 67983763, 67993763, 680...</msg>
<status status="PASS" starttime="20201110 08:42:41.123" endtime="20201110 08:42:41.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.136" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:41.134" endtime="20201110 08:42:41.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.140" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:41.138" endtime="20201110 08:42:41.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.129" endtime="20201110 08:42:41.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.150" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:41.148" endtime="20201110 08:42:41.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.155" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:41.153" endtime="20201110 08:42:41.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.143" endtime="20201110 08:42:41.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.167" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:41.166" endtime="20201110 08:42:41.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.169" level="INFO">VALUE: 67893691</msg>
<status status="PASS" starttime="20201110 08:42:41.168" endtime="20201110 08:42:41.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.161" endtime="20201110 08:42:41.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.174" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:41.173" endtime="20201110 08:42:41.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.176" level="INFO">VALUE: [67903763, 67913764, 67923763, 67933763, 67943763, 67953763, 67963763, 67973763, 67983763, 67993763, 68003763, 68013763, 68023763, 68033763, 68043763, 68053763, 68063763, 68073763, 68083763, 68093763, 68103763, 68113763, 68123763, 68133763, 68143763, 68153763, 68163763, 68173763, 68183763, 68193763, 68203763, 68213763, 68223763, 68233763, 68243763, 68253763, 68263763, 68273763, 68283763, 68293763, 68303763, 68313763, 68323763, 68333763, 68343763, 68353763, 68363763, 68373763, 68383763, 68393763, 68403763, 68413763, 68423763, 68433763, 68443763, 68453763, 68463763, 68473763, 68483763, 68493763, 68503763, 68513763, 68523763, 68533763, 68543763, 68553763, 68563763, 68573763, 68583763, 68593763, 68603763, 68613763, 68623763, 68633763, 68643763, 68653763, 68663763, 68673763, 68683763, 68693763, 68703763, 68713763, 68723763, 68733763, 68743763, 68753763, 68763763, 68773763, 68783763, 68793763, 68803763, 68813763, 68823763, 68833763, 68843763, 68853763, 68863763, 68873763, 68883763, 68893763]</msg>
<status status="PASS" starttime="20201110 08:42:41.175" endtime="20201110 08:42:41.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.171" endtime="20201110 08:42:41.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:41.184" endtime="20201110 08:42:41.474"></status>
</kw>
<msg timestamp="20201110 08:42:41.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031183903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:41.182" endtime="20201110 08:42:41.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031183903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:41.478" endtime="20201110 08:42:41.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:41.485" endtime="20201110 08:42:41.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.180" endtime="20201110 08:42:41.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.178" endtime="20201110 08:42:41.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:41.511" level="INFO">${RESULT} = {'time': [0.021110417, 0.031183903, 0.041186417, 0.051186542, 0.061187694, 0.071188847, 0.08119, 0.091191097, 0.101192306, 0.111193361, 0.121194528, 0.131195639, 0.141196806, 0.151197931, 0.161199083,...</msg>
<status status="PASS" starttime="20201110 08:42:41.488" endtime="20201110 08:42:41.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.517" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:41.516" endtime="20201110 08:42:41.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.519" level="INFO">VALUE: 0.021110417</msg>
<status status="PASS" starttime="20201110 08:42:41.518" endtime="20201110 08:42:41.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.512" endtime="20201110 08:42:41.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.524" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:41.523" endtime="20201110 08:42:41.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:41.526" level="INFO">VALUE: [0.031183903, 0.041186417, 0.051186542, 0.061187694, 0.071188847, 0.08119, 0.091191097, 0.101192306, 0.111193361, 0.121194528, 0.131195639, 0.141196806, 0.151197931, 0.161199083, 0.171200208, 0.181201375, 0.191202486, 0.201203653, 0.211204764, 0.221205931, 0.231207042, 0.241208208, 0.251209306, 0.261210514, 0.271211611, 0.281212736, 0.291213833, 0.301215, 0.311216139, 0.321217264, 0.331218389, 0.341219556, 0.351220639, 0.361221806, 0.371222917, 0.381224083, 0.391225181, 0.401226361, 0.411227486, 0.421228611, 0.431229736, 0.441230875, 0.451231986, 0.461233181, 0.471234264, 0.481235417, 0.491236542, 0.501237694, 0.511238806, 0.521239958, 0.531241083, 0.541242264, 0.551243347, 0.5612445, 0.571245611, 0.581246778, 0.591247889, 0.601249111, 0.611250153, 0.621251389, 0.631252444, 0.641253583, 0.651254708, 0.661255875, 0.671256972, 0.681258125, 0.691259306, 0.701260431, 0.711261514, 0.721262681, 0.731263778, 0.741264931, 0.751266042, 0.761267222, 0.771268333, 0.781269486, 0.791270597, 0.801271764, 0.811272875, 0.821274014, 0.831275125, 0.841276292, 0.851277417, 0.861278556, 0.871279667, 0.881280833, 0.891281944, 0.901283111, 0.91128425, 0.921285375, 0.9312865, 0.941287639, 0.95128875, 0.961289917, 0.971291028, 0.981292194, 0.991293306, 1.001294472, 1.011295569, 1.021296736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:41.525" endtime="20201110 08:42:41.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.520" endtime="20201110 08:42:41.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:41.529" endtime="20201110 08:42:41.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:41.533" endtime="20201110 08:42:41.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.531" endtime="20201110 08:42:41.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.528" endtime="20201110 08:42:41.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.995" endtime="20201110 08:42:41.554"></status>
</kw>
<msg timestamp="20201110 08:42:41.554" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:41.562" endtime="20201110 08:42:43.666"></status>
</kw>
<msg timestamp="20201110 08:42:43.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70453291, 'start-iter': 1, 'wakeups': [70463363, 70473364, 70483363, 7...</msg>
<status status="PASS" starttime="20201110 08:42:41.560" endtime="20201110 08:42:43.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 70453291, 'start-iter': 1, 'wakeups': [70463363, 70473364, 70483363, 7...</msg>
<status status="PASS" starttime="20201110 08:42:43.669" endtime="20201110 08:42:43.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:43.675" endtime="20201110 08:42:43.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.558" endtime="20201110 08:42:43.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.556" endtime="20201110 08:42:43.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:43.686" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 9, 'start-time': 70453291, 'wakeups': [70463363, 70473364, 70483363, 70493363, 70503363, 70513363, 70523363, 70533363, 70543363, 70553363, 705...</msg>
<status status="PASS" starttime="20201110 08:42:43.682" endtime="20201110 08:42:43.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.695" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:43.693" endtime="20201110 08:42:43.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.699" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:43.697" endtime="20201110 08:42:43.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.688" endtime="20201110 08:42:43.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.710" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:43.708" endtime="20201110 08:42:43.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.714" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:43.712" endtime="20201110 08:42:43.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.703" endtime="20201110 08:42:43.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.725" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:43.723" endtime="20201110 08:42:43.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.727" level="INFO">VALUE: 70453291</msg>
<status status="PASS" starttime="20201110 08:42:43.726" endtime="20201110 08:42:43.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.718" endtime="20201110 08:42:43.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.733" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:43.731" endtime="20201110 08:42:43.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:43.735" level="INFO">VALUE: [70463363, 70473364, 70483363, 70493363, 70503363, 70513363, 70523363, 70533363, 70543363, 70553363, 70563363, 70573363, 70583363, 70593363, 70603363, 70613363, 70623363, 70633363, 70643363, 70653363, 70663363, 70673363, 70683363, 70693363, 70703363, 70713363, 70723363, 70733363, 70743363, 70753363, 70763363, 70773363, 70783363, 70793363, 70803363, 70813363, 70823363, 70833363, 70843363, 70853363, 70863363, 70873363, 70883363, 70893363, 70903363, 70913363, 70923363, 70933363, 70943363, 70953363, 70963363, 70973363, 70983363, 70993363, 71003363, 71013363, 71023363, 71033363, 71043363, 71053363, 71063363, 71073363, 71083363, 71093363, 71103363, 71113363, 71123363, 71133363, 71143363, 71153363, 71163363, 71173363, 71183363, 71193363, 71203363, 71213363, 71223363, 71233363, 71243363, 71253363, 71263363, 71273363, 71283363, 71293363, 71303363, 71313363, 71323363, 71333363, 71343363, 71353363, 71363363, 71373363, 71383363, 71393363, 71403363, 71413363, 71423363, 71433363, 71443363, 71453363]</msg>
<status status="PASS" starttime="20201110 08:42:43.734" endtime="20201110 08:42:43.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.728" endtime="20201110 08:42:43.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:43.742" endtime="20201110 08:42:44.033"></status>
</kw>
<msg timestamp="20201110 08:42:44.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018281417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028354958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:43.741" endtime="20201110 08:42:44.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:44.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018281417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028354958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:44.036" endtime="20201110 08:42:44.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:44.044" endtime="20201110 08:42:44.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.738" endtime="20201110 08:42:44.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:43.736" endtime="20201110 08:42:44.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:44.070" level="INFO">${RESULT} = {'time': [0.018281417, 0.028354958, 0.038357472, 0.048357639, 0.058358764, 0.068359861, 0.078361028, 0.088362167, 0.098363306, 0.108364431, 0.118365597, 0.128366736, 0.138367875, 0.148368986, 0.158370...</msg>
<status status="PASS" starttime="20201110 08:42:44.047" endtime="20201110 08:42:44.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:44.074" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:44.073" endtime="20201110 08:42:44.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:44.076" level="INFO">VALUE: 0.018281417</msg>
<status status="PASS" starttime="20201110 08:42:44.075" endtime="20201110 08:42:44.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.071" endtime="20201110 08:42:44.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:44.086" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:44.080" endtime="20201110 08:42:44.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:44.088" level="INFO">VALUE: [0.028354958, 0.038357472, 0.048357639, 0.058358764, 0.068359861, 0.078361028, 0.088362167, 0.098363306, 0.108364431, 0.118365597, 0.128366736, 0.138367875, 0.148368986, 0.158370153, 0.168371264, 0.178372431, 0.188373569, 0.198374708, 0.208375819, 0.218376986, 0.228378153, 0.238379278, 0.248380389, 0.258381569, 0.268382667, 0.278383833, 0.288384986, 0.298386111, 0.308387264, 0.318388403, 0.328389514, 0.338390681, 0.348391792, 0.358392986, 0.368394111, 0.378395236, 0.388396361, 0.398397528, 0.408398667, 0.418399806, 0.428400917, 0.438402083, 0.448403208, 0.458404361, 0.468405486, 0.478406653, 0.488407764, 0.498408931, 0.508410056, 0.518411208, 0.528412333, 0.538413514, 0.548414611, 0.558415833, 0.568416889, 0.578418056, 0.588419181, 0.598420347, 0.608421458, 0.618422625, 0.628423736, 0.638424903, 0.648426014, 0.658427194, 0.668428278, 0.678429458, 0.688430542, 0.69843175, 0.708432806, 0.718433972, 0.728435097, 0.738436306, 0.748437361, 0.758438514, 0.768439625, 0.778440778, 0.788441889, 0.798443069, 0.808444167, 0.818445375, 0.828446431, 0.838447583, 0.848448708, 0.858449875, 0.868450986, 0.878452125, 0.888453306, 0.898454403, 0.908455514, 0.918456667, 0.928457778, 0.938458958, 0.948460056, 0.958461208, 0.968462319, 0.978463486, 0.988464611, 0.99846575, 1.008466875, 1.018468056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:44.087" endtime="20201110 08:42:44.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.078" endtime="20201110 08:42:44.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:44.091" endtime="20201110 08:42:44.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:44.095" endtime="20201110 08:42:44.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.093" endtime="20201110 08:42:44.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.089" endtime="20201110 08:42:44.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:41.554" endtime="20201110 08:42:44.116"></status>
</kw>
<msg timestamp="20201110 08:42:44.116" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:44.124" endtime="20201110 08:42:46.228"></status>
</kw>
<msg timestamp="20201110 08:42:46.229" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73015779, 'start-iter': 1, 'wakeups': [73025852, 73035852, 73045851, 7...</msg>
<status status="PASS" starttime="20201110 08:42:44.123" endtime="20201110 08:42:46.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 73015779, 'start-iter': 1, 'wakeups': [73025852, 73035852, 73045851, 7...</msg>
<status status="PASS" starttime="20201110 08:42:46.232" endtime="20201110 08:42:46.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:46.237" endtime="20201110 08:42:46.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.120" endtime="20201110 08:42:46.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.118" endtime="20201110 08:42:46.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:46.248" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 9, 'start-time': 73015779, 'wakeups': [73025852, 73035852, 73045851, 73055851, 73065851, 73075851, 73085851, 73095851, 73105851, 73115851, 731...</msg>
<status status="PASS" starttime="20201110 08:42:46.244" endtime="20201110 08:42:46.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.257" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:46.254" endtime="20201110 08:42:46.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:46.259" endtime="20201110 08:42:46.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.250" endtime="20201110 08:42:46.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.271" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:46.269" endtime="20201110 08:42:46.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.275" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:46.273" endtime="20201110 08:42:46.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.264" endtime="20201110 08:42:46.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.286" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:46.283" endtime="20201110 08:42:46.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.291" level="INFO">VALUE: 73015779</msg>
<status status="PASS" starttime="20201110 08:42:46.288" endtime="20201110 08:42:46.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.278" endtime="20201110 08:42:46.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.296" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:46.295" endtime="20201110 08:42:46.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.298" level="INFO">VALUE: [73025852, 73035852, 73045851, 73055851, 73065851, 73075851, 73085851, 73095851, 73105851, 73115851, 73125851, 73135851, 73145851, 73155851, 73165851, 73175851, 73185851, 73195851, 73205851, 73215851, 73225851, 73235851, 73245851, 73255851, 73265851, 73275851, 73285851, 73295851, 73305851, 73315851, 73325851, 73335851, 73345851, 73355851, 73365851, 73375851, 73385851, 73395851, 73405851, 73415851, 73425851, 73435851, 73445851, 73455851, 73465851, 73475851, 73485851, 73495851, 73505851, 73515851, 73525851, 73535851, 73545851, 73555851, 73565851, 73575851, 73585851, 73595851, 73605851, 73615851, 73625851, 73635851, 73645851, 73655851, 73665851, 73675851, 73685851, 73695851, 73705851, 73715851, 73725851, 73735851, 73745851, 73755851, 73765851, 73775851, 73785851, 73795851, 73805851, 73815851, 73825851, 73835851, 73845851, 73855851, 73865851, 73875851, 73885851, 73895851, 73905851, 73915851, 73925851, 73935851, 73945851, 73955851, 73965851, 73975851, 73985851, 73995851, 74005851, 74015851]</msg>
<status status="PASS" starttime="20201110 08:42:46.297" endtime="20201110 08:42:46.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.293" endtime="20201110 08:42:46.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:46.307" endtime="20201110 08:42:46.599"></status>
</kw>
<msg timestamp="20201110 08:42:46.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028171847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:46.304" endtime="20201110 08:42:46.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028171847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:46.603" endtime="20201110 08:42:46.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:46.610" endtime="20201110 08:42:46.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.301" endtime="20201110 08:42:46.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.300" endtime="20201110 08:42:46.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:46.636" level="INFO">${RESULT} = {'time': [0.018097014, 0.028171847, 0.038172486, 0.048172611, 0.058173764, 0.068174875, 0.078176056, 0.088177194, 0.098178319, 0.108179458, 0.118180639, 0.128181722, 0.138182889, 0.148184, 0.158185167...</msg>
<status status="PASS" starttime="20201110 08:42:46.614" endtime="20201110 08:42:46.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.640" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:42:46.639" endtime="20201110 08:42:46.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.642" level="INFO">VALUE: 0.018097014</msg>
<status status="PASS" starttime="20201110 08:42:46.641" endtime="20201110 08:42:46.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.637" endtime="20201110 08:42:46.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.648" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:46.647" endtime="20201110 08:42:46.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:46.650" level="INFO">VALUE: [0.028171847, 0.038172486, 0.048172611, 0.058173764, 0.068174875, 0.078176056, 0.088177194, 0.098178319, 0.108179458, 0.118180639, 0.128181722, 0.138182889, 0.148184, 0.158185167, 0.168186292, 0.178187458, 0.188188569, 0.198189736, 0.208190847, 0.218192014, 0.228193125, 0.238194292, 0.248195417, 0.258196597, 0.268197694, 0.278198847, 0.288199958, 0.298201125, 0.30820225, 0.318203417, 0.328204542, 0.338205764, 0.348206806, 0.358207986, 0.368209083, 0.378210264, 0.388211389, 0.398212583, 0.408213653, 0.418214819, 0.428215931, 0.438217111, 0.448218222, 0.458219389, 0.468220528, 0.478221681, 0.488222792, 0.498223931, 0.508225056, 0.518226208, 0.528227319, 0.538228472, 0.548229597, 0.558230736, 0.568231847, 0.578233014, 0.588234111, 0.598235292, 0.608236389, 0.618237542, 0.628238653, 0.638239819, 0.648240931, 0.658242083, 0.668243194, 0.678244361, 0.688245472, 0.698246625, 0.708247736, 0.718248903, 0.728250014, 0.738251167, 0.748252347, 0.758253444, 0.768254556, 0.778255708, 0.788256833, 0.798258, 0.808259097, 0.818260264, 0.828261361, 0.838262597, 0.848263667, 0.858264819, 0.868265903, 0.878267069, 0.888268181, 0.898269347, 0.908270444, 0.918271611, 0.928272722, 0.938273903, 0.948275, 0.958276153, 0.968277264, 0.978278431, 0.988279542, 0.998280694, 1.008281806, 1.018282972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:46.649" endtime="20201110 08:42:46.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.644" endtime="20201110 08:42:46.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:46.653" endtime="20201110 08:42:46.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:46.657" endtime="20201110 08:42:46.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.655" endtime="20201110 08:42:46.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.652" endtime="20201110 08:42:46.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:44.117" endtime="20201110 08:42:46.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.993" endtime="20201110 08:42:46.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:38.992" endtime="20201110 08:42:46.678"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:42:46.680" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:46.689" endtime="20201110 08:42:48.792"></status>
</kw>
<msg timestamp="20201110 08:42:48.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75580833, 'start-iter': 1, 'wakeups': [75590917, 75600918, 75610917,...</msg>
<status status="PASS" starttime="20201110 08:42:46.688" endtime="20201110 08:42:48.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75580833, 'start-iter': 1, 'wakeups': [75590917, 75600918, 75610917,...</msg>
<status status="PASS" starttime="20201110 08:42:48.796" endtime="20201110 08:42:48.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:48.802" endtime="20201110 08:42:48.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.684" endtime="20201110 08:42:48.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.682" endtime="20201110 08:42:48.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:48.813" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 10, 'start-time': 75580833, 'wakeups': [75590917, 75600918, 75610917, 75620917, 75630917, 75640917, 75650917, 75660917, 75670917, 75680917, 75...</msg>
<status status="PASS" starttime="20201110 08:42:48.809" endtime="20201110 08:42:48.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.821" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:48.819" endtime="20201110 08:42:48.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.825" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:48.823" endtime="20201110 08:42:48.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.814" endtime="20201110 08:42:48.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.835" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:48.833" endtime="20201110 08:42:48.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.839" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:48.838" endtime="20201110 08:42:48.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.828" endtime="20201110 08:42:48.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.849" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:48.847" endtime="20201110 08:42:48.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.854" level="INFO">VALUE: 75580833</msg>
<status status="PASS" starttime="20201110 08:42:48.852" endtime="20201110 08:42:48.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.842" endtime="20201110 08:42:48.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.862" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:48.861" endtime="20201110 08:42:48.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:48.865" level="INFO">VALUE: [75590917, 75600918, 75610917, 75620917, 75630917, 75640917, 75650917, 75660917, 75670917, 75680917, 75690917, 75700917, 75710917, 75720917, 75730917, 75740917, 75750917, 75760917, 75770917, 75780917, 75790917, 75800917, 75810917, 75820917, 75830917, 75840917, 75850917, 75860917, 75870917, 75880917, 75890917, 75900917, 75910917, 75920917, 75930917, 75940917, 75950917, 75960917, 75970917, 75980917, 75990917, 76000917, 76010917, 76020917, 76030917, 76040917, 76050917, 76060917, 76070917, 76080917, 76090917, 76100917, 76110917, 76120917, 76130917, 76140917, 76150917, 76160917, 76170917, 76180917, 76190917, 76200917, 76210917, 76220917, 76230917, 76240917, 76250917, 76260917, 76270917, 76280917, 76290917, 76300917, 76310917, 76320917, 76330917, 76340917, 76350917, 76360917, 76370917, 76380917, 76390917, 76400917, 76410917, 76420917, 76430917, 76440917, 76450917, 76460917, 76470917, 76480917, 76490917, 76500917, 76510917, 76520917, 76530917, 76540917, 76550917, 76560917, 76570917, 76580917]</msg>
<status status="PASS" starttime="20201110 08:42:48.863" endtime="20201110 08:42:48.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.857" endtime="20201110 08:42:48.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:48.872" endtime="20201110 08:42:49.163"></status>
</kw>
<msg timestamp="20201110 08:42:49.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031937361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:48.871" endtime="20201110 08:42:49.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:49.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031937361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:49.167" endtime="20201110 08:42:49.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:49.174" endtime="20201110 08:42:49.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.868" endtime="20201110 08:42:49.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:48.866" endtime="20201110 08:42:49.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:49.201" level="INFO">${RESULT} = {'time': [0.021851236, 0.031937361, 0.041938694, 0.051938792, 0.061939958, 0.071941083, 0.081942236, 0.091943347, 0.101944514, 0.111945625, 0.121946792, 0.131947917, 0.141949069, 0.151950194, 0.161951...</msg>
<status status="PASS" starttime="20201110 08:42:49.177" endtime="20201110 08:42:49.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:49.205" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:49.204" endtime="20201110 08:42:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:49.207" level="INFO">VALUE: 0.021851236</msg>
<status status="PASS" starttime="20201110 08:42:49.206" endtime="20201110 08:42:49.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.201" endtime="20201110 08:42:49.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:49.212" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:49.211" endtime="20201110 08:42:49.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:49.214" level="INFO">VALUE: [0.031937361, 0.041938694, 0.051938792, 0.061939958, 0.071941083, 0.081942236, 0.091943347, 0.101944514, 0.111945625, 0.121946792, 0.131947917, 0.141949069, 0.151950194, 0.161951361, 0.171952472, 0.181953653, 0.19195475, 0.201955931, 0.211957042, 0.221958194, 0.231959319, 0.241960486, 0.251961639, 0.26196275, 0.271963861, 0.281965014, 0.291966125, 0.301967292, 0.311968403, 0.321969556, 0.331970667, 0.341971819, 0.351972931, 0.361974097, 0.371975208, 0.381976375, 0.391977486, 0.401978681, 0.411979736, 0.421980903, 0.431982014, 0.441983208, 0.451984278, 0.461985444, 0.471986569, 0.481987736, 0.491988833, 0.501989986, 0.511991111, 0.521992278, 0.531993361, 0.541994542, 0.551995639, 0.561996806, 0.571997931, 0.581999069, 0.592000181, 0.602001347, 0.612002458, 0.622003611, 0.632004722, 0.642005917, 0.652007, 0.662008153, 0.672009264, 0.682010431, 0.692011569, 0.702012694, 0.712013806, 0.722014986, 0.732016097, 0.742017236, 0.752018347, 0.762019514, 0.772020639, 0.782021792, 0.792022903, 0.802024069, 0.812025167, 0.822026319, 0.832027486, 0.842028611, 0.852029708, 0.862030875, 0.872032, 0.882033139, 0.89203425, 0.902035417, 0.912036528, 0.922037681, 0.932038819, 0.942039958, 0.952041069, 0.962042236, 0.972043347, 0.982044514, 0.992045611, 1.002046764, 1.012047875, 1.022049056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:49.213" endtime="20201110 08:42:49.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.208" endtime="20201110 08:42:49.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:49.218" endtime="20201110 08:42:49.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:49.221" endtime="20201110 08:42:49.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.219" endtime="20201110 08:42:49.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.216" endtime="20201110 08:42:49.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.681" endtime="20201110 08:42:49.247"></status>
</kw>
<msg timestamp="20201110 08:42:49.247" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:49.255" endtime="20201110 08:42:51.358"></status>
</kw>
<msg timestamp="20201110 08:42:51.359" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78146313, 'start-iter': 1, 'wakeups': [78156397, 78166398, 78176397,...</msg>
<status status="PASS" starttime="20201110 08:42:49.253" endtime="20201110 08:42:51.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.365" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78146313, 'start-iter': 1, 'wakeups': [78156397, 78166398, 78176397,...</msg>
<status status="PASS" starttime="20201110 08:42:51.362" endtime="20201110 08:42:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:51.368" endtime="20201110 08:42:51.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.251" endtime="20201110 08:42:51.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.249" endtime="20201110 08:42:51.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:51.380" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 10, 'start-time': 78146313, 'wakeups': [78156397, 78166398, 78176397, 78186397, 78196397, 78206397, 78216397, 78226397, 78236397, 78246397, 78...</msg>
<status status="PASS" starttime="20201110 08:42:51.374" endtime="20201110 08:42:51.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.389" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:51.387" endtime="20201110 08:42:51.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.393" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:51.391" endtime="20201110 08:42:51.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.382" endtime="20201110 08:42:51.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.403" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:51.401" endtime="20201110 08:42:51.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.407" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:51.405" endtime="20201110 08:42:51.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.396" endtime="20201110 08:42:51.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.417" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:51.415" endtime="20201110 08:42:51.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.422" level="INFO">VALUE: 78146313</msg>
<status status="PASS" starttime="20201110 08:42:51.420" endtime="20201110 08:42:51.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.410" endtime="20201110 08:42:51.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.431" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:51.429" endtime="20201110 08:42:51.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.436" level="INFO">VALUE: [78156397, 78166398, 78176397, 78186397, 78196397, 78206397, 78216397, 78226397, 78236397, 78246397, 78256397, 78266397, 78276397, 78286397, 78296397, 78306397, 78316397, 78326397, 78336397, 78346397, 78356397, 78366397, 78376397, 78386397, 78396397, 78406397, 78416397, 78426397, 78436397, 78446397, 78456397, 78466397, 78476397, 78486397, 78496397, 78506397, 78516397, 78526397, 78536397, 78546397, 78556397, 78566397, 78576397, 78586397, 78596397, 78606397, 78616397, 78626397, 78636397, 78646397, 78656397, 78666397, 78676397, 78686397, 78696397, 78706397, 78716397, 78726397, 78736397, 78746397, 78756397, 78766397, 78776397, 78786397, 78796397, 78806397, 78816397, 78826397, 78836397, 78846397, 78856397, 78866397, 78876397, 78886397, 78896397, 78906397, 78916397, 78926397, 78936397, 78946397, 78956397, 78966397, 78976397, 78986397, 78996397, 79006397, 79016397, 79026397, 79036397, 79046397, 79056397, 79066397, 79076397, 79086397, 79096397, 79106397, 79116397, 79126397, 79136397, 79146397]</msg>
<status status="PASS" starttime="20201110 08:42:51.434" endtime="20201110 08:42:51.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.425" endtime="20201110 08:42:51.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:51.446" endtime="20201110 08:42:51.738"></status>
</kw>
<msg timestamp="20201110 08:42:51.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033371403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:51.445" endtime="20201110 08:42:51.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023285264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033371403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:51.742" endtime="20201110 08:42:51.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:51.749" endtime="20201110 08:42:51.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.442" endtime="20201110 08:42:51.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.439" endtime="20201110 08:42:51.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:51.776" level="INFO">${RESULT} = {'time': [0.023285264, 0.033371403, 0.043372722, 0.053372819, 0.063373986, 0.073375097, 0.083376278, 0.093377389, 0.103378542, 0.113379667, 0.123380833, 0.133381944, 0.143383111, 0.153384222, 0.163385...</msg>
<status status="PASS" starttime="20201110 08:42:51.753" endtime="20201110 08:42:51.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.780" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:51.779" endtime="20201110 08:42:51.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.782" level="INFO">VALUE: 0.023285264</msg>
<status status="PASS" starttime="20201110 08:42:51.782" endtime="20201110 08:42:51.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.777" endtime="20201110 08:42:51.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.788" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:51.787" endtime="20201110 08:42:51.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:51.790" level="INFO">VALUE: [0.033371403, 0.043372722, 0.053372819, 0.063373986, 0.073375097, 0.083376278, 0.093377389, 0.103378542, 0.113379667, 0.123380833, 0.133381944, 0.143383111, 0.153384222, 0.163385431, 0.1733865, 0.183387667, 0.193388792, 0.203389972, 0.213391111, 0.223392236, 0.233393389, 0.243394514, 0.253395625, 0.263396806, 0.273397931, 0.283399069, 0.293400181, 0.303401347, 0.313402458, 0.323403625, 0.333404736, 0.343405875, 0.353407, 0.363408153, 0.373409264, 0.383410417, 0.393411542, 0.403412681, 0.413413792, 0.423414958, 0.433416069, 0.443417222, 0.453418333, 0.4634195, 0.473420611, 0.483421792, 0.493422889, 0.503424069, 0.513425153, 0.523426347, 0.533427458, 0.543428653, 0.553429681, 0.563430847, 0.573431986, 0.583433139, 0.593434264, 0.603435403, 0.613436514, 0.623437667, 0.633438792, 0.643439944, 0.653441069, 0.663442208, 0.673443333, 0.683444472, 0.693445583, 0.70344675, 0.713447861, 0.723449028, 0.733450125, 0.743451292, 0.753452403, 0.763453556, 0.773454681, 0.783455833, 0.793456944, 0.803458097, 0.813459208, 0.823460389, 0.833461486, 0.843462639, 0.853463764, 0.863464917, 0.873466028, 0.883467181, 0.893468292, 0.903469458, 0.913470569, 0.923471736, 0.933472861, 0.943474, 0.953475111, 0.963476292, 0.973477431, 0.983478542, 0.993479653, 1.003480819, 1.013481986, 1.023483097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:51.789" endtime="20201110 08:42:51.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.784" endtime="20201110 08:42:51.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:51.793" endtime="20201110 08:42:51.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:51.796" endtime="20201110 08:42:51.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.795" endtime="20201110 08:42:51.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.791" endtime="20201110 08:42:51.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:49.248" endtime="20201110 08:42:51.817"></status>
</kw>
<msg timestamp="20201110 08:42:51.817" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:51.825" endtime="20201110 08:42:53.929"></status>
</kw>
<msg timestamp="20201110 08:42:53.930" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80716773, 'start-iter': 1, 'wakeups': [80726857, 80736858, 80746857,...</msg>
<status status="PASS" starttime="20201110 08:42:51.824" endtime="20201110 08:42:53.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.937" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80716773, 'start-iter': 1, 'wakeups': [80726857, 80736858, 80746857,...</msg>
<status status="PASS" starttime="20201110 08:42:53.933" endtime="20201110 08:42:53.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:53.939" endtime="20201110 08:42:53.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.821" endtime="20201110 08:42:53.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.819" endtime="20201110 08:42:53.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:53.950" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-iter': 1, 'timer-count': 10, 'start-time': 80716773, 'wakeups': [80726857, 80736858, 80746857, 80756857, 80766857, 80776857, 80786857, 80796857, 80806857, 80816857, 80...</msg>
<status status="PASS" starttime="20201110 08:42:53.946" endtime="20201110 08:42:53.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.958" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:42:53.956" endtime="20201110 08:42:53.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.962" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:42:53.960" endtime="20201110 08:42:53.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:53.951" endtime="20201110 08:42:53.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.974" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:42:53.972" endtime="20201110 08:42:53.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.979" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:42:53.977" endtime="20201110 08:42:53.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:53.965" endtime="20201110 08:42:53.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.987" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:53.986" endtime="20201110 08:42:53.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.989" level="INFO">VALUE: 80716773</msg>
<status status="PASS" starttime="20201110 08:42:53.989" endtime="20201110 08:42:53.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:53.982" endtime="20201110 08:42:53.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.994" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:53.993" endtime="20201110 08:42:53.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:53.996" level="INFO">VALUE: [80726857, 80736858, 80746857, 80756857, 80766857, 80776857, 80786857, 80796857, 80806857, 80816857, 80826857, 80836857, 80846857, 80856857, 80866857, 80876857, 80886857, 80896857, 80906857, 80916857, 80926857, 80936857, 80946857, 80956857, 80966857, 80976857, 80986857, 80996857, 81006857, 81016857, 81026857, 81036857, 81046857, 81056857, 81066857, 81076857, 81086857, 81096857, 81106857, 81116857, 81126857, 81136857, 81146857, 81156857, 81166857, 81176857, 81186857, 81196857, 81206857, 81216857, 81226857, 81236857, 81246857, 81256857, 81266857, 81276857, 81286857, 81296857, 81306857, 81316857, 81326857, 81336857, 81346857, 81356857, 81366857, 81376857, 81386857, 81396857, 81406857, 81416857, 81426857, 81436857, 81446857, 81456857, 81466857, 81476857, 81486857, 81496857, 81506857, 81516857, 81526857, 81536857, 81546857, 81556857, 81566857, 81576857, 81586857, 81596857, 81606857, 81616857, 81626857, 81636857, 81646857, 81656857, 81666857, 81676857, 81686857, 81696857, 81706857, 81716857]</msg>
<status status="PASS" starttime="20201110 08:42:53.995" endtime="20201110 08:42:53.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:53.991" endtime="20201110 08:42:53.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:54.004" endtime="20201110 08:42:54.294"></status>
</kw>
<msg timestamp="20201110 08:42:54.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028340556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:54.002" endtime="20201110 08:42:54.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:42:54.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028340556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:42:54.298" endtime="20201110 08:42:54.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:54.310" endtime="20201110 08:42:54.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:54.000" endtime="20201110 08:42:54.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:53.998" endtime="20201110 08:42:54.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:42:54.336" level="INFO">${RESULT} = {'time': [0.018254653, 0.028340556, 0.038342167, 0.048342292, 0.058343486, 0.068344583, 0.078345764, 0.088346847, 0.098348014, 0.108349125, 0.118350292, 0.128351403, 0.138352569, 0.148353708, 0.158354...</msg>
<status status="PASS" starttime="20201110 08:42:54.313" endtime="20201110 08:42:54.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:54.340" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:42:54.339" endtime="20201110 08:42:54.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:54.342" level="INFO">VALUE: 0.018254653</msg>
<status status="PASS" starttime="20201110 08:42:54.341" endtime="20201110 08:42:54.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:54.337" endtime="20201110 08:42:54.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:42:54.348" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:42:54.347" endtime="20201110 08:42:54.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:42:54.350" level="INFO">VALUE: [0.028340556, 0.038342167, 0.048342292, 0.058343486, 0.068344583, 0.078345764, 0.088346847, 0.098348014, 0.108349125, 0.118350292, 0.128351403, 0.138352569, 0.148353708, 0.158354861, 0.168355972, 0.178357139, 0.18835825, 0.198359417, 0.208360542, 0.218361708, 0.228362806, 0.238363986, 0.248365111, 0.25836625, 0.268367361, 0.278368514, 0.288369625, 0.298370806, 0.308371903, 0.318373069, 0.328374167, 0.338375319, 0.348376431, 0.358377597, 0.368378708, 0.378379875, 0.388380986, 0.398382139, 0.40838325, 0.418384403, 0.428385542, 0.438386736, 0.448387819, 0.458388986, 0.468390056, 0.478391208, 0.488392375, 0.4983935, 0.508394653, 0.518395778, 0.528396861, 0.538398028, 0.548399153, 0.558400292, 0.568401431, 0.578402569, 0.588403681, 0.598404833, 0.608405944, 0.618407111, 0.628408222, 0.638409389, 0.6484105, 0.658411653, 0.668412792, 0.678413931, 0.688415042, 0.698416194, 0.708417306, 0.718418486, 0.728419597, 0.738420736, 0.748421861, 0.758423014, 0.768424139, 0.778425278, 0.788426389, 0.798427597, 0.808428681, 0.818429819, 0.828430944, 0.838432097, 0.848433236, 0.858434375, 0.868435472, 0.878436639, 0.88843775, 0.898438903, 0.908440028, 0.918441181, 0.928442306, 0.938443458, 0.948444569, 0.958445736, 0.968446833, 0.978448014, 0.988449111, 0.998450278, 1.008451375, 1.018452542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:42:54.349" endtime="20201110 08:42:54.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:54.344" endtime="20201110 08:42:54.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:42:54.353" endtime="20201110 08:42:54.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:42:54.356" endtime="20201110 08:42:54.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:54.355" endtime="20201110 08:42:54.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:54.351" endtime="20201110 08:42:54.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:51.818" endtime="20201110 08:42:54.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.679" endtime="20201110 08:42:54.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:42:46.678" endtime="20201110 08:42:54.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:37.171" endtime="20201110 08:42:54.378"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:41:34.042" endtime="20201110 08:42:54.378" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:41:26.509" endtime="20201110 08:42:54.381"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="FAIL" starttime="20201110 08:38:24.338" endtime="20201110 08:42:54.398"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="3">Critical Tests</stat>
<stat pass="9" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="9" fail="3">APP_tests_ztimer_benchmarks</stat>
<stat pass="9" fail="3">BOARD_arduino-due</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="9" fail="3" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="5" fail="3" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
